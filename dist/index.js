var DevCustomBlock = (function (exports, React__default) {
  'use strict';

  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

  function _interopNamespace(e) {
    if (e && e.__esModule) return e;
    var n = Object.create(null);
    if (e) {
      Object.keys(e).forEach(function (k) {
        if (k !== 'default') {
          var d = Object.getOwnPropertyDescriptor(e, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: true,
            get: function () { return e[k]; }
          });
        }
      });
    }
    n["default"] = e;
    return Object.freeze(n);
  }

  var React__default__default = /*#__PURE__*/_interopDefaultLegacy(React__default);
  var React__default__namespace = /*#__PURE__*/_interopNamespace(React__default);

  var __create = Object.create;
  var __defProp$1 = Object.defineProperty;
  var __getOwnPropDesc$1 = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames$1 = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp$1 = Object.prototype.hasOwnProperty;
  var __markAsModule$1 = (target) => __defProp$1(target, "__esModule", { value: true });
  var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
    get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
  }) : x)(function(x) {
    if (typeof require !== "undefined")
      return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + x + '" is not supported');
  });
  var __commonJS = (cb, mod) => function __require2() {
    return mod || (0, cb[__getOwnPropNames$1(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __reExport$1 = (target, module, copyDefault, desc) => {
    if (module && typeof module === "object" || typeof module === "function") {
      for (let key of __getOwnPropNames$1(module))
        if (!__hasOwnProp$1.call(target, key) && (copyDefault || key !== "default"))
          __defProp$1(target, key, { get: () => module[key], enumerable: !(desc = __getOwnPropDesc$1(module, key)) || desc.enumerable });
    }
    return target;
  };
  var __toESM = (module, isNodeMode) => {
    return __reExport$1(__markAsModule$1(__defProp$1(module != null ? __create(__getProtoOf(module)) : {}, "default", !isNodeMode && module && module.__esModule ? { get: () => module.default, enumerable: true } : { value: module, enumerable: true })), module);
  };

  // custom_block/node_modules/@typeform/embed-react/build/index.js
  var require_build = __commonJS({
    "custom_block/node_modules/@typeform/embed-react/build/index.js"(exports, module) {
      !function(e, t) {
        typeof exports == "object" && typeof module == "object" ? module.exports = t(__require("react")) : typeof define == "function" && define.amd ? define(["react"], t) : typeof exports == "object" ? exports["embed-react"] = t(__require("react")) : e["embed-react"] = t(e.react);
      }(exports, function(e) {
        return function() {
          var t = { 378: function(e2) {
            e2.exports = function e3(t2, o2) {
              if (t2 === o2)
                return true;
              if (t2 && o2 && typeof t2 == "object" && typeof o2 == "object") {
                if (t2.constructor !== o2.constructor)
                  return false;
                var n2, r, i;
                if (Array.isArray(t2)) {
                  if ((n2 = t2.length) != o2.length)
                    return false;
                  for (r = n2; r-- != 0; )
                    if (!e3(t2[r], o2[r]))
                      return false;
                  return true;
                }
                if (t2.constructor === RegExp)
                  return t2.source === o2.source && t2.flags === o2.flags;
                if (t2.valueOf !== Object.prototype.valueOf)
                  return t2.valueOf() === o2.valueOf();
                if (t2.toString !== Object.prototype.toString)
                  return t2.toString() === o2.toString();
                if ((n2 = (i = Object.keys(t2)).length) !== Object.keys(o2).length)
                  return false;
                for (r = n2; r-- != 0; )
                  if (!Object.prototype.hasOwnProperty.call(o2, i[r]))
                    return false;
                for (r = n2; r-- != 0; ) {
                  var a = i[r];
                  if (!e3(t2[a], o2[a]))
                    return false;
                }
                return true;
              }
              return t2 != t2 && o2 != o2;
            };
          }, 145: function(e2, t2, o2) {
            o2.r(t2), t2.default = "@keyframes spin{to{transform:rotate(360deg)}}.typeform-popover{bottom:96px;position:fixed;right:16px;z-index:10001}.typeform-popover.open{max-width:100%;min-height:360px;min-width:360px}.typeform-popover-wrapper{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%;opacity:0;transition:opacity 0.25s ease-in-out;border-radius:4px;box-shadow:rgba(0,0,0,0.08) 0 2px 4px,rgba(0,0,0,0.06) 0 2px 12px}.typeform-popover-wrapper iframe{width:100%;height:100%;border:none;overflow:hidden;border-radius:8px}.typeform-popover-close{display:none}.typeform-popover-button{width:54px;height:54px;position:fixed;box-shadow:0 2px 12px rgba(0,0,0,0.06),0 2px 4px rgba(0,0,0,0.08);color:white;right:26px;bottom:26px;border-radius:50%;display:flex;align-items:center;justify-content:center;cursor:pointer;background:#3a7685;line-height:0;border:none;padding:0}.typeform-popover-button-icon{width:54px;height:54px;font-size:24px;border-radius:50%;overflow:hidden;display:flex;justify-content:center;align-items:center}.typeform-popover-button-icon svg{margin-top:6px}.typeform-popover-button-icon svg,.typeform-popover-button-icon img{max-width:54px;max-height:54px}.typeform-popover-button-icon img{width:100%;height:100%;object-fit:cover;border-radius:50%}.typeform-popover-tooltip{position:fixed;right:94px;bottom:33px;max-width:240px;padding:10px 25px 10px 10px;border-radius:8px;background:#ffffff;box-shadow:0 2px 4px rgba(0,0,0,0.08),0 2px 12px rgba(0,0,0,0.06);font-size:14px;font-family:Helvetica, Arial, sans-serif;line-height:22px}.typeform-popover-tooltip::before{background-color:#ffffff;content:'';display:block;width:12px;height:12px;position:absolute;right:-4px;bottom:15px;transform:rotate(45deg);box-shadow:2px -2px 2px 0 rgba(0,0,0,0.06)}.typeform-popover-tooltip-text{overflow:hidden}.typeform-popover-tooltip-close{color:rgba(0,0,0,0.2);cursor:pointer;margin-left:4px;display:inline-block;width:20px;height:20px;font-size:18px;text-align:center;position:absolute;top:8px;right:6px}.typeform-popover-tooltip-close:hover{color:rgba(0,0,0,0.3)}.typeform-popover-tooltip.closing{transition:opacity 0.25s ease-in-out;opacity:0}.typeform-popover-unread-dot{width:8px;height:8px;border-radius:50%;background-color:#fa6b05;border:2px solid #fff;position:absolute;top:2px;right:2px}.typeform-popover-unread-dot.closing{transition:opacity 0.25s ease-in-out;opacity:0}.typeform-spinner{border:3px solid #aaa;font-size:40px;width:1em;height:1em;border-radius:0.5em;box-sizing:border-box;animation:spin 1s linear infinite;border-top-color:#fff;position:absolute;top:50%;left:50%;margin:-20px 0 0 -20px}@media (max-width: 480px){.typeform-popover.open{top:0;left:0;bottom:0;right:0;width:100% !important;height:100% !important;width:100vw !important;height:100vh !important;max-height:-webkit-fill-available;max-height:-moz-fill-available}.typeform-popover.open .typeform-popover-close{display:block}.typeform-popover-wrapper{border-radius:0;box-shadow:none}.typeform-popover-wrapper iframe{border-radius:0}.typeform-popover-close{position:absolute;color:#737373;font-size:24px;line-height:24px;width:14px;height:14px;text-align:center;cursor:pointer;opacity:0.75;transition:opacity 0.25s ease-in-out;text-decoration:none;top:6px;right:8px;z-index:1;opacity:0}.typeform-popover-close:hover{opacity:1}.typeform-popover-button{width:44px;height:44px;right:8px;bottom:8px}.typeform-popover-button-icon{font-size:20px}.typeform-popover-button-icon svg{margin-top:4px;max-height:24px;max-width:24px}.typeform-popover-button-icon img{max-width:44px;max-height:44px}.typeform-popover-tooltip{position:fixed;right:66px;bottom:8px;left:auto;font-size:12px}.typeform-popover-tooltip::before{bottom:14px}.typeform-popover-unread-dot{top:0;right:0}.typeform-spinner{border:3px solid #aaa;font-size:32px;width:1em;height:1em;border-radius:0.5em;box-sizing:border-box;animation:spin 1s linear infinite;border-top-color:#fff;position:absolute;top:50%;left:50%;margin:-16px 0 0 -16px}}\n";
          }, 792: function(e2, t2, o2) {
            o2.r(t2), t2.default = "@keyframes spin{to{transform:rotate(360deg)}}.typeform-popup{position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.75);transition:opacity 0.25s ease-in-out;z-index:10001;display:flex;align-items:center;justify-content:center}.typeform-popup .typeform-iframe-wrapper{position:relative;transition:opacity 0.25s ease-in-out;min-width:360px;min-height:360px}.typeform-popup .typeform-iframe-wrapper iframe{width:100%;height:100%;border:none;overflow:hidden;border-radius:8px}.typeform-popup .typeform-close{position:absolute;color:#fff;font-size:24px;line-height:24px;width:14px;height:14px;text-align:center;cursor:pointer;opacity:0.75;transition:opacity 0.25s ease-in-out;text-decoration:none;top:-34px;right:0}.typeform-popup .typeform-close:hover{opacity:1}.typeform-popup .typeform-spinner{border:3px solid #aaa;font-size:40px;width:1em;height:1em;border-radius:0.5em;box-sizing:border-box;animation:spin 1s linear infinite;border-top-color:#fff;position:absolute;top:50%;left:50%;margin:-20px 0 0 -20px}@media (max-width: 480px){.typeform-popup{width:100% !important;height:100% !important;width:100vw !important;height:100vh !important;max-height:-webkit-fill-available;max-height:-moz-fill-available}.typeform-popup .typeform-iframe-wrapper{position:relative;transition:opacity 0.25s ease-in-out;min-width:100%;min-height:100%}.typeform-popup .typeform-iframe-wrapper iframe{border-radius:0}.typeform-popup .typeform-close{position:absolute;color:#737373;font-size:24px;line-height:24px;width:14px;height:14px;text-align:center;cursor:pointer;opacity:0.75;transition:opacity 0.25s ease-in-out;text-decoration:none;top:6px;right:8px}.typeform-popup .typeform-close:hover{opacity:1}}\n";
          }, 838: function(e2, t2, o2) {
            o2.r(t2), t2.default = "@keyframes spin{to{transform:rotate(360deg)}}.typeform-sidetab{position:fixed;top:50%;right:0;width:400px;height:580px;transform:translate(100%, -50%);box-shadow:0 2px 4px rgba(0,0,0,0.08),0 2px 12px rgba(0,0,0,0.06);z-index:10001;will-change:transform}.typeform-sidetab.ready{transition:transform 250ms ease-in-out}.typeform-sidetab iframe{width:100%;height:100%;border:none;overflow:hidden;border-radius:8px 0 0 8px}.typeform-sidetab.open{transform:translate(0, -50%)}.typeform-sidetab-wrapper{height:100%}.typeform-sidetab-button{position:absolute;top:50%;transform:rotate(-90deg);transform-origin:bottom left;width:200px;height:48px;display:flex;align-items:center;padding:0 16px;border-radius:8px 8px 0 0;color:white;box-shadow:0 2px 4px rgba(0,0,0,0.08),0 2px 12px rgba(0,0,0,0.06);background-color:#3a7685;cursor:pointer;border:0;text-decoration:none;outline:none}.typeform-sidetab-button-text{flex:1;font-size:18px;font-family:Helvetica, Arial, sans-serif;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.typeform-sidetab-button-icon{width:24px;height:24px;font-size:24px;transform:rotate(90deg);margin-right:12px;position:relative;order:-1}.typeform-sidetab-close{display:none}.typeform-sidetab .typeform-spinner{border:3px solid #aaa;font-size:24px;width:1em;height:1em;border-radius:0.5em;box-sizing:border-box;animation:spin 1s linear infinite;border-top-color:#fff;position:absolute;top:50%;left:50%;margin:-12px 0 0 -12px;top:0;left:0;margin:0}@media (max-width: 480px){.typeform-sidetab{transition:unset}.typeform-sidetab.ready{transition:unset}.typeform-sidetab.open{top:0;left:0;right:0;bottom:0;transform:translate(0, 0);width:100% !important;height:100% !important;width:100vw !important;height:100vh !important;max-height:-webkit-fill-available;max-height:-moz-fill-available}.typeform-sidetab-close{position:absolute;color:#737373;font-size:24px;line-height:24px;width:14px;height:14px;text-align:center;cursor:pointer;opacity:0.75;transition:opacity 0.25s ease-in-out;text-decoration:none;display:block;top:6px;right:8px;z-index:1}.typeform-sidetab-close:hover{opacity:1}}\n";
          }, 630: function(e2, t2, o2) {
            o2.r(t2), t2.default = "@keyframes spin{to{transform:rotate(360deg)}}.typeform-slider{position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.75);transition:opacity 0.25s ease-in-out;z-index:10001}.typeform-slider .typeform-iframe-wrapper{height:100%;position:absolute;top:0;transition:right 0.5s ease-in-out, left 0.5s ease-in-out}.typeform-slider .typeform-iframe-wrapper iframe{width:100%;height:100%;border:none;overflow:hidden;border-radius:8px 0 0 8px}.typeform-slider .typeform-close{position:absolute;color:#fff;font-size:24px;line-height:24px;width:14px;height:14px;text-align:center;cursor:pointer;opacity:0.75;transition:opacity 0.25s ease-in-out;text-decoration:none;top:4px;left:-24px}.typeform-slider .typeform-close:hover{opacity:1}.typeform-slider .typeform-close:hover{opacity:1}.typeform-slider .typeform-spinner{border:3px solid #aaa;font-size:40px;width:1em;height:1em;border-radius:0.5em;box-sizing:border-box;animation:spin 1s linear infinite;border-top-color:#fff;position:absolute;top:50%;left:50%;margin:-20px 0 0 -20px}.typeform-slider.left .typeform-iframe-wrapper iframe{border-radius:0 8px 8px 0}.typeform-slider.left .typeform-close{left:auto;right:-24px}@media (max-width: 480px){.typeform-slider{width:100% !important;height:100% !important;width:100vw !important;height:100vh !important;max-height:-webkit-fill-available;max-height:-moz-fill-available}.typeform-slider .typeform-iframe-wrapper{width:100% !important;height:100%;transition:unset}.typeform-slider .typeform-iframe-wrapper iframe{border-radius:none}.typeform-slider .typeform-close{position:absolute;color:#737373;font-size:24px;line-height:24px;width:14px;height:14px;text-align:center;cursor:pointer;opacity:0.75;transition:opacity 0.25s ease-in-out;text-decoration:none;top:6px;right:8px;left:auto}.typeform-slider .typeform-close:hover{opacity:1}}\n";
          }, 684: function(e2, t2, o2) {
            o2.r(t2), t2.default = ".typeform-widget{width:100%;height:100%}.typeform-widget iframe{width:100%;height:100%;border:none;overflow:hidden;border-radius:8px}.typeform-widget-close{display:none}.typeform-widget-fullscreen{position:fixed;top:0;left:0;right:0;bottom:0;z-index:10001;width:100% !important;height:100% !important;width:100vw !important;height:100vh !important;max-height:-webkit-fill-available;max-height:-moz-fill-available}.typeform-widget-fullscreen .typeform-widget-close{display:block;position:absolute;color:#737373;font-size:24px;line-height:24px;width:14px;height:14px;text-align:center;cursor:pointer;opacity:0.75;transition:opacity 0.25s ease-in-out;text-decoration:none;top:4px;right:6px}.typeform-widget-fullscreen .typeform-widget-close:hover{opacity:1}.typeform-widget-fullscreen iframe{border-radius:0}\n";
          }, 281: function(e2, t2, o2) {
            var n2 = this && this.__createBinding || (Object.create ? function(e3, t3, o3, n3) {
              n3 === void 0 && (n3 = o3), Object.defineProperty(e3, n3, { enumerable: true, get: function() {
                return t3[o3];
              } });
            } : function(e3, t3, o3, n3) {
              n3 === void 0 && (n3 = o3), e3[n3] = t3[o3];
            }), r = this && this.__exportStar || function(e3, t3) {
              for (var o3 in e3)
                o3 === "default" || Object.prototype.hasOwnProperty.call(t3, o3) || n2(t3, e3, o3);
            };
            Object.defineProperty(t2, "__esModule", { value: true }), r(o2(11), t2), r(o2(739), t2), r(o2(860), t2);
          }, 794: function(e2, t2, o2) {
            var n2 = this && this.__importDefault || function(e3) {
              return e3 && e3.__esModule ? e3 : { default: e3 };
            };
            Object.defineProperty(t2, "__esModule", { value: true }), t2.InlineStyle = void 0;
            var r = n2(o2(297));
            t2.InlineStyle = function(e3) {
              var t3 = e3.filename, n3 = o2(367)("./" + t3 + ".css");
              return r.default.createElement("style", null, n3.default);
            };
          }, 11: function(e2, t2, o2) {
            var n2 = this && this.__assign || function() {
              return (n2 = Object.assign || function(e3) {
                for (var t3, o3 = 1, n3 = arguments.length; o3 < n3; o3++)
                  for (var r2 in t3 = arguments[o3])
                    Object.prototype.hasOwnProperty.call(t3, r2) && (e3[r2] = t3[r2]);
                return e3;
              }).apply(this, arguments);
            }, r = this && this.__createBinding || (Object.create ? function(e3, t3, o3, n3) {
              n3 === void 0 && (n3 = o3), Object.defineProperty(e3, n3, { enumerable: true, get: function() {
                return t3[o3];
              } });
            } : function(e3, t3, o3, n3) {
              n3 === void 0 && (n3 = o3), e3[n3] = t3[o3];
            }), i = this && this.__setModuleDefault || (Object.create ? function(e3, t3) {
              Object.defineProperty(e3, "default", { enumerable: true, value: t3 });
            } : function(e3, t3) {
              e3.default = t3;
            }), a = this && this.__importStar || function(e3) {
              if (e3 && e3.__esModule)
                return e3;
              var t3 = {};
              if (e3 != null)
                for (var o3 in e3)
                  o3 !== "default" && Object.prototype.hasOwnProperty.call(e3, o3) && r(t3, e3, o3);
              return i(t3, e3), t3;
            }, u = this && this.__rest || function(e3, t3) {
              var o3 = {};
              for (var n3 in e3)
                Object.prototype.hasOwnProperty.call(e3, n3) && t3.indexOf(n3) < 0 && (o3[n3] = e3[n3]);
              if (e3 != null && typeof Object.getOwnPropertySymbols == "function") {
                var r2 = 0;
                for (n3 = Object.getOwnPropertySymbols(e3); r2 < n3.length; r2++)
                  t3.indexOf(n3[r2]) < 0 && Object.prototype.propertyIsEnumerable.call(e3, n3[r2]) && (o3[n3[r2]] = e3[n3[r2]]);
              }
              return o3;
            };
            Object.defineProperty(t2, "__esModule", { value: true }), t2.makeButtonComponent = void 0;
            var p = a(o2(297)), s = o2(794), c = { unmount: function() {
            }, open: function() {
            } };
            t2.makeButtonComponent = function(e3, t3) {
              return function(o3) {
                var r2 = o3.id, i2 = o3.children, a2 = o3.as, d = a2 === void 0 ? "button" : a2, l = o3.style, f = l === void 0 ? {} : l, m = o3.className, h = m === void 0 ? "" : m, v = o3.buttonProps, y = u(o3, ["id", "children", "as", "style", "className", "buttonProps"]), b = p.useRef(c);
                p.useEffect(function() {
                  return b.current = e3(r2, y), function() {
                    return b.current.unmount();
                  };
                }, [r2, y]);
                var g = p.useMemo(function() {
                  return function() {
                    return b.current.open();
                  };
                }, []), x = p.default.createElement(d, n2({ style: f, className: h, onClick: g, children: i2 }, v));
                return p.default.createElement(p.default.Fragment, null, p.default.createElement(s.InlineStyle, { filename: t3 }), x);
              };
            };
          }, 739: function(e2, t2, o2) {
            var n2 = this && this.__createBinding || (Object.create ? function(e3, t3, o3, n3) {
              n3 === void 0 && (n3 = o3), Object.defineProperty(e3, n3, { enumerable: true, get: function() {
                return t3[o3];
              } });
            } : function(e3, t3, o3, n3) {
              n3 === void 0 && (n3 = o3), e3[n3] = t3[o3];
            }), r = this && this.__setModuleDefault || (Object.create ? function(e3, t3) {
              Object.defineProperty(e3, "default", { enumerable: true, value: t3 });
            } : function(e3, t3) {
              e3.default = t3;
            }), i = this && this.__importStar || function(e3) {
              if (e3 && e3.__esModule)
                return e3;
              var t3 = {};
              if (e3 != null)
                for (var o3 in e3)
                  o3 !== "default" && Object.prototype.hasOwnProperty.call(e3, o3) && n2(t3, e3, o3);
              return r(t3, e3), t3;
            }, a = this && this.__rest || function(e3, t3) {
              var o3 = {};
              for (var n3 in e3)
                Object.prototype.hasOwnProperty.call(e3, n3) && t3.indexOf(n3) < 0 && (o3[n3] = e3[n3]);
              if (e3 != null && typeof Object.getOwnPropertySymbols == "function") {
                var r2 = 0;
                for (n3 = Object.getOwnPropertySymbols(e3); r2 < n3.length; r2++)
                  t3.indexOf(n3[r2]) < 0 && Object.prototype.propertyIsEnumerable.call(e3, n3[r2]) && (o3[n3[r2]] = e3[n3[r2]]);
              }
              return o3;
            };
            Object.defineProperty(t2, "__esModule", { value: true }), t2.makeInitializerComponent = void 0;
            var u = i(o2(297)), p = o2(794);
            t2.makeInitializerComponent = function(e3, t3) {
              return function(o3) {
                var n3 = o3.id, r2 = a(o3, ["id"]);
                return u.useEffect(function() {
                  var t4 = e3(n3, r2);
                  return function() {
                    t4.unmount();
                  };
                }, [n3, r2]), u.default.createElement(p.InlineStyle, { filename: t3 });
              };
            };
          }, 860: function(e2, t2, o2) {
            var n2 = this && this.__assign || function() {
              return (n2 = Object.assign || function(e3) {
                for (var t3, o3 = 1, n3 = arguments.length; o3 < n3; o3++)
                  for (var r2 in t3 = arguments[o3])
                    Object.prototype.hasOwnProperty.call(t3, r2) && (e3[r2] = t3[r2]);
                return e3;
              }).apply(this, arguments);
            }, r = this && this.__createBinding || (Object.create ? function(e3, t3, o3, n3) {
              n3 === void 0 && (n3 = o3), Object.defineProperty(e3, n3, { enumerable: true, get: function() {
                return t3[o3];
              } });
            } : function(e3, t3, o3, n3) {
              n3 === void 0 && (n3 = o3), e3[n3] = t3[o3];
            }), i = this && this.__setModuleDefault || (Object.create ? function(e3, t3) {
              Object.defineProperty(e3, "default", { enumerable: true, value: t3 });
            } : function(e3, t3) {
              e3.default = t3;
            }), a = this && this.__importStar || function(e3) {
              if (e3 && e3.__esModule)
                return e3;
              var t3 = {};
              if (e3 != null)
                for (var o3 in e3)
                  o3 !== "default" && Object.prototype.hasOwnProperty.call(e3, o3) && r(t3, e3, o3);
              return i(t3, e3), t3;
            }, u = this && this.__rest || function(e3, t3) {
              var o3 = {};
              for (var n3 in e3)
                Object.prototype.hasOwnProperty.call(e3, n3) && t3.indexOf(n3) < 0 && (o3[n3] = e3[n3]);
              if (e3 != null && typeof Object.getOwnPropertySymbols == "function") {
                var r2 = 0;
                for (n3 = Object.getOwnPropertySymbols(e3); r2 < n3.length; r2++)
                  t3.indexOf(n3[r2]) < 0 && Object.prototype.propertyIsEnumerable.call(e3, n3[r2]) && (o3[n3[r2]] = e3[n3[r2]]);
              }
              return o3;
            };
            Object.defineProperty(t2, "__esModule", { value: true }), t2.Widget = void 0;
            var p = a(o2(297)), s = o2(611), c = o2(794);
            t2.Widget = function(e3) {
              var t3 = e3.id, o3 = e3.style, r2 = o3 === void 0 ? {} : o3, i2 = e3.className, a2 = i2 === void 0 ? "" : i2, d = u(e3, ["id", "style", "className"]), l = p.useRef(null);
              return p.useEffect(function() {
                if (l.current) {
                  var e4 = s.createWidget(t3, n2(n2({}, d), { container: l.current }));
                  return function() {
                    e4.unmount();
                  };
                }
              }, [t3, d]), p.default.createElement(p.default.Fragment, null, p.default.createElement(c.InlineStyle, { filename: "widget" }), p.default.createElement("div", { style: r2, className: a2, ref: l }));
            };
          }, 582: function(e2, t2, o2) {
            Object.defineProperty(t2, "__esModule", { value: true }), t2.Sidetab = t2.Popover = t2.SliderButton = t2.PopupButton = t2.Widget = void 0;
            var n2 = o2(611), r = o2(281), i = o2(797), a = i.memoComponent(r.Widget);
            t2.Widget = a;
            var u = i.memoComponent(r.makeButtonComponent(n2.createPopup, "popup"));
            t2.PopupButton = u;
            var p = i.memoComponent(r.makeButtonComponent(n2.createSlider, "slider"));
            t2.SliderButton = p;
            var s = i.memoComponent(r.makeInitializerComponent(n2.createPopover, "popover"));
            t2.Popover = s;
            var c = i.memoComponent(r.makeInitializerComponent(n2.createSidetab, "sidetab"));
            t2.Sidetab = c;
          }, 797: function(e2, t2, o2) {
            var n2 = this && this.__createBinding || (Object.create ? function(e3, t3, o3, n3) {
              n3 === void 0 && (n3 = o3), Object.defineProperty(e3, n3, { enumerable: true, get: function() {
                return t3[o3];
              } });
            } : function(e3, t3, o3, n3) {
              n3 === void 0 && (n3 = o3), e3[n3] = t3[o3];
            }), r = this && this.__exportStar || function(e3, t3) {
              for (var o3 in e3)
                o3 === "default" || Object.prototype.hasOwnProperty.call(t3, o3) || n2(t3, e3, o3);
            };
            Object.defineProperty(t2, "__esModule", { value: true }), r(o2(553), t2);
          }, 553: function(e2, t2, o2) {
            var n2 = this && this.__importDefault || function(e3) {
              return e3 && e3.__esModule ? e3 : { default: e3 };
            };
            Object.defineProperty(t2, "__esModule", { value: true }), t2.memoComponent = t2.propsAreEqual = void 0;
            var r = o2(297), i = n2(o2(378));
            t2.propsAreEqual = function(e3, t3) {
              return i.default(e3, t3);
            }, t2.memoComponent = function(e3) {
              return r.memo(e3, t2.propsAreEqual);
            };
          }, 367: function(e2, t2, o2) {
            var n2 = { "./popover.css": 145, "./popup.css": 792, "./sidetab.css": 838, "./slider.css": 630, "./widget.css": 684 };
            function r(e3) {
              var t3 = i(e3);
              return o2(t3);
            }
            function i(e3) {
              if (!o2.o(n2, e3)) {
                var t3 = new Error("Cannot find module '" + e3 + "'");
                throw t3.code = "MODULE_NOT_FOUND", t3;
              }
              return n2[e3];
            }
            r.keys = function() {
              return Object.keys(n2);
            }, r.resolve = i, e2.exports = r, r.id = 367;
          }, 611: function(e2) {
            e2.exports = function() {
              var e3 = { 27: function(e4, t3) {
                Object.defineProperty(t3, "__esModule", { value: true }), t3.FORM_BASE_URL = t3.POPUP_SIZE = t3.SLIDER_WIDTH = t3.SLIDER_POSITION = t3.SIDETAB_ATTRIBUTE = t3.WIDGET_ATTRIBUTE = t3.SLIDER_ATTRIBUTE = t3.POPUP_ATTRIBUTE = t3.POPOVER_ATTRIBUTE = void 0, t3.POPOVER_ATTRIBUTE = "data-tf-popover", t3.POPUP_ATTRIBUTE = "data-tf-popup", t3.SLIDER_ATTRIBUTE = "data-tf-slider", t3.WIDGET_ATTRIBUTE = "data-tf-widget", t3.SIDETAB_ATTRIBUTE = "data-tf-sidetab", t3.SLIDER_POSITION = "right", t3.SLIDER_WIDTH = 800, t3.POPUP_SIZE = 100, t3.FORM_BASE_URL = "https://form.typeform.com";
              }, 528: function(e4, t3, o2) {
                var n2 = this && this.__assign || function() {
                  return (n2 = Object.assign || function(e5) {
                    for (var t4, o3 = 1, n3 = arguments.length; o3 < n3; o3++)
                      for (var r2 in t4 = arguments[o3])
                        Object.prototype.hasOwnProperty.call(t4, r2) && (e5[r2] = t4[r2]);
                    return e5;
                  }).apply(this, arguments);
                };
                Object.defineProperty(t3, "__esModule", { value: true }), t3.createPopover = void 0;
                var r = o2(747), i = o2(320), a = function(e5) {
                  return !!e5.parentNode;
                }, u = function(e5, t4) {
                  var o3 = e5.parentNode;
                  o3 && (o3.removeChild(e5), o3.appendChild(t4));
                }, p = function(e5, t4) {
                  e5 === void 0 && (e5 = "div"), t4 === void 0 && (t4 = "typeform-popover-button-icon");
                  var o3 = document.createElement(e5);
                  return o3.className = t4, o3.innerHTML = "&times;", o3.dataset.testid = t4, o3;
                }, s = { buttonColor: "#3a7685" };
                t3.createPopover = function(e5, t4) {
                  t4 === void 0 && (t4 = {});
                  var o3, c, d, l, f, m, h = n2(n2({}, s), t4), v = r.createIframe(e5, "popover", h), y = v.iframe, b = v.embedId, g = function(e6, t5) {
                    var o4 = document.createElement("div");
                    return o4.className = "typeform-popover", o4.dataset.testid = "typeform-popover", r.setElementSize(o4, { width: e6, height: t5 });
                  }(h.width, h.height), x = function() {
                    var e6 = document.createElement("div");
                    return e6.className = "typeform-popover-wrapper", e6.dataset.testid = "typeform-popover-wrapper", e6;
                  }(), w = (o3 = h.customIcon, c = h.buttonColor || s.buttonColor, d = r.getTextColor(c), (l = document.createElement("div")).className = "typeform-popover-button-icon", l.innerHTML = o3 ? "<img alt='popover trigger icon button' src='" + o3 + "'/>" : '<svg width="24" height="24" viewBox="0 0 24 24" fill="none"\n    xmlns="http://www.w3.org/2000/svg">\n      <path d="M21 0H0V9L10.5743 24V16.5H21C22.6567 16.5 24 15.1567 24 13.5V3C24 1.34325 22.6567 0 21 0ZM7.5\n    9.75C6.672 9.75 6 9.07875 6 8.25C6 7.42125 6.672 6.75 7.5 6.75C8.328 6.75 9 7.42125 9 8.25C9 9.07875 8.328 9.75\n    7.5 9.75ZM12.75 9.75C11.922 9.75 11.25 9.07875 11.25 8.25C11.25 7.42125 11.922 6.75 12.75 6.75C13.578 6.75 14.25\n    7.42125 14.25 8.25C14.25 9.07875 13.578 9.75 12.75 9.75ZM18 9.75C17.172 9.75 16.5 9.07875 16.5 8.25C16.5 7.42125\n    17.172 6.75 18 6.75C18.828 6.75 19.5 7.42125 19.5 8.25C19.5 9.07875 18.828 9.75 18 9.75Z" fill="' + d + '"></path>\n    </svg>', l.dataset.testid = "default-icon", l), O = function() {
                    var e6 = document.createElement("div");
                    e6.className = "typeform-spinner";
                    var t5 = document.createElement("div");
                    return t5.className = "typeform-popover-button-icon", t5.dataset.testid = "spinner-icon", t5.append(e6), t5;
                  }(), _ = p(), j = p("a", "typeform-popover-close"), P = function(e6) {
                    var t5 = r.getTextColor(e6), o4 = document.createElement("button");
                    return o4.className = "typeform-popover-button", o4.dataset.testid = "typeform-popover-button", o4.style.backgroundColor = e6, o4.style.color = t5, o4;
                  }(h.buttonColor || s.buttonColor);
                  (h.container || document.body).append(g), x.append(y), g.append(P), g.append(j), P.append(w);
                  var E = function() {
                    f && f.parentNode && (f.classList.add("closing"), setTimeout(function() {
                      r.unmountElement(f);
                    }, 250));
                  };
                  h.tooltip && h.tooltip.length > 0 && (f = function(e6, t5) {
                    var o4 = document.createElement("span");
                    o4.className = "typeform-popover-tooltip-close", o4.dataset.testid = "typeform-popover-tooltip-close", o4.innerHTML = "&times;", o4.onclick = t5;
                    var n3 = document.createElement("div");
                    n3.className = "typeform-popover-tooltip-text", n3.innerHTML = e6;
                    var r2 = document.createElement("div");
                    return r2.className = "typeform-popover-tooltip", r2.dataset.testid = "typeform-popover-tooltip", r2.appendChild(n3), r2.appendChild(o4), r2;
                  }(h.tooltip, E), g.append(f)), h.notificationDays && (h.enableSandbox || i.canBuildNotificationDot(e5)) && (m = i.buildNotificationDot(), P.append(m)), y.onload = function() {
                    g.classList.add("open"), x.style.opacity = "1", j.style.opacity = "1", u(O, _), r.addCustomKeyboardListener(S);
                  };
                  var C = function() {
                    a(x) || (E(), m && (m.classList.add("closing"), h.notificationDays && !h.enableSandbox && i.saveNotificationDotHideUntilTime(e5, h.notificationDays), setTimeout(function() {
                      r.unmountElement(m);
                    }, 250)), setTimeout(function() {
                      g.append(x), x.style.opacity = "0", j.style.opacity = "0", u(w, O);
                    }));
                  }, S = function() {
                    var e6;
                    a(g) && ((e6 = t4.onClose) === null || e6 === void 0 || e6.call(t4), setTimeout(function() {
                      r.unmountElement(x), g.classList.remove("open"), u(_, w);
                    }, 250));
                  };
                  r.setAutoClose(b, h.autoClose, S);
                  var I = function() {
                    a(x) ? S() : C();
                  };
                  return P.onclick = I, j.onclick = S, h.open && !a(x) && r.handleCustomOpen(C, h.open, h.openValue), { open: C, close: S, toggle: I, refresh: function() {
                    var e6;
                    (e6 = y.contentWindow) === null || e6 === void 0 || e6.location.reload();
                  }, unmount: function() {
                    r.unmountElement(g);
                  } };
                };
              }, 797: function(e4, t3, o2) {
                var n2 = this && this.__createBinding || (Object.create ? function(e5, t4, o3, n3) {
                  n3 === void 0 && (n3 = o3), Object.defineProperty(e5, n3, { enumerable: true, get: function() {
                    return t4[o3];
                  } });
                } : function(e5, t4, o3, n3) {
                  n3 === void 0 && (n3 = o3), e5[n3] = t4[o3];
                }), r = this && this.__exportStar || function(e5, t4) {
                  for (var o3 in e5)
                    o3 === "default" || Object.prototype.hasOwnProperty.call(t4, o3) || n2(t4, e5, o3);
                };
                Object.defineProperty(t3, "__esModule", { value: true }), r(o2(528), t3), r(o2(100), t3);
              }, 320: function(e4, t3) {
                var o2 = this && this.__assign || function() {
                  return (o2 = Object.assign || function(e5) {
                    for (var t4, o3 = 1, n3 = arguments.length; o3 < n3; o3++)
                      for (var r2 in t4 = arguments[o3])
                        Object.prototype.hasOwnProperty.call(t4, r2) && (e5[r2] = t4[r2]);
                    return e5;
                  }).apply(this, arguments);
                };
                Object.defineProperty(t3, "__esModule", { value: true }), t3.buildNotificationDot = t3.canBuildNotificationDot = t3.saveNotificationDotHideUntilTime = void 0;
                var n2 = "tfNotificationData", r = function() {
                  var e5 = localStorage.getItem(n2);
                  return e5 ? JSON.parse(e5) : {};
                }, i = function(e5) {
                  e5 && localStorage.setItem(n2, JSON.stringify(e5));
                };
                t3.saveNotificationDotHideUntilTime = function(e5, t4) {
                  var n3, a = new Date();
                  a.setDate(a.getDate() + t4), i(o2(o2({}, r()), ((n3 = {})[e5] = { hideUntilTime: a.getTime() }, n3)));
                }, t3.canBuildNotificationDot = function(e5) {
                  var t4 = function(e6) {
                    var t5;
                    return ((t5 = r()[e6]) === null || t5 === void 0 ? void 0 : t5.hideUntilTime) || 0;
                  }(e5);
                  return new Date().getTime() > t4 && (t4 && function(e6) {
                    var t5 = r();
                    delete t5[e6], i(t5);
                  }(e5), true);
                }, t3.buildNotificationDot = function() {
                  var e5 = document.createElement("span");
                  return e5.className = "typeform-popover-unread-dot", e5.dataset.testid = "typeform-popover-unread-dot", e5;
                };
              }, 100: function(e4, t3) {
                Object.defineProperty(t3, "__esModule", { value: true });
              }, 630: function(e4, t3, o2) {
                var n2 = this && this.__rest || function(e5, t4) {
                  var o3 = {};
                  for (var n3 in e5)
                    Object.prototype.hasOwnProperty.call(e5, n3) && t4.indexOf(n3) < 0 && (o3[n3] = e5[n3]);
                  if (e5 != null && typeof Object.getOwnPropertySymbols == "function") {
                    var r2 = 0;
                    for (n3 = Object.getOwnPropertySymbols(e5); r2 < n3.length; r2++)
                      t4.indexOf(n3[r2]) < 0 && Object.prototype.propertyIsEnumerable.call(e5, n3[r2]) && (o3[n3[r2]] = e5[n3[r2]]);
                  }
                  return o3;
                };
                Object.defineProperty(t3, "__esModule", { value: true }), t3.createPopup = void 0;
                var r = o2(747), i = o2(27), a = function(e5) {
                  return !!e5.parentNode;
                };
                t3.createPopup = function(e5, t4) {
                  if (t4 === void 0 && (t4 = {}), !r.hasDom())
                    return { open: function() {
                    }, close: function() {
                    }, toggle: function() {
                    }, refresh: function() {
                    }, unmount: function() {
                    } };
                  var o3 = t4.width, u = t4.height, p = t4.size, s = p === void 0 ? i.POPUP_SIZE : p, c = t4.onClose, d = n2(t4, ["width", "height", "size", "onClose"]), l = r.createIframe(e5, "popup", d), f = l.iframe, m = l.embedId, h = document.body.style.overflow, v = function() {
                    var e6 = document.createElement("div");
                    return e6.className = "typeform-popup", e6.style.opacity = "0", e6;
                  }(), y = function() {
                    var e6 = document.createElement("div");
                    return e6.className = "typeform-spinner", e6;
                  }(), b = function(e6, t5, o4) {
                    var n3 = document.createElement("div");
                    return n3.className = "typeform-iframe-wrapper", n3.style.opacity = "0", r.isDefined(e6) && r.isDefined(t5) ? r.setElementSize(n3, { width: e6, height: t5 }) : (n3.style.width = "calc(" + o4 + "% - 80px)", n3.style.height = "calc(" + o4 + "% - 80px)", n3);
                  }(o3, u, s);
                  b.append(f), v.append(y), v.append(b);
                  var g = d.container || document.body;
                  f.onload = function() {
                    b.style.opacity = "1", setTimeout(function() {
                      y.style.display = "none";
                    }, 250), r.addCustomKeyboardListener(w);
                  };
                  var x = function() {
                    a(v) || (g.append(v), document.body.style.overflow = "hidden", setTimeout(function() {
                      v.style.opacity = "1";
                    }));
                  }, w = function() {
                    a(v) && (c == null || c(), v.style.opacity = "0", b.style.opacity = "0", document.body.style.overflow = h, setTimeout(function() {
                      O(), y.style.display = "block";
                    }, 250));
                  };
                  b.append(function(e6) {
                    var t5 = document.createElement("a");
                    return t5.className = "typeform-close", t5.innerHTML = "&times;", t5.onclick = e6, t5;
                  }(w)), r.setAutoClose(m, d.autoClose, w);
                  var O = function() {
                    r.unmountElement(v);
                  };
                  return d.open && !a(v) && r.handleCustomOpen(x, d.open, d.openValue), { open: x, close: w, toggle: function() {
                    a(v) ? w() : x();
                  }, refresh: function() {
                    var e6;
                    (e6 = f.contentWindow) === null || e6 === void 0 || e6.location.reload();
                  }, unmount: O };
                };
              }, 970: function(e4, t3, o2) {
                var n2 = this && this.__createBinding || (Object.create ? function(e5, t4, o3, n3) {
                  n3 === void 0 && (n3 = o3), Object.defineProperty(e5, n3, { enumerable: true, get: function() {
                    return t4[o3];
                  } });
                } : function(e5, t4, o3, n3) {
                  n3 === void 0 && (n3 = o3), e5[n3] = t4[o3];
                }), r = this && this.__exportStar || function(e5, t4) {
                  for (var o3 in e5)
                    o3 === "default" || Object.prototype.hasOwnProperty.call(t4, o3) || n2(t4, e5, o3);
                };
                Object.defineProperty(t3, "__esModule", { value: true }), r(o2(630), t3), r(o2(394), t3);
              }, 394: function(e4, t3) {
                Object.defineProperty(t3, "__esModule", { value: true });
              }, 382: function(e4, t3, o2) {
                var n2 = this && this.__assign || function() {
                  return (n2 = Object.assign || function(e5) {
                    for (var t4, o3 = 1, n3 = arguments.length; o3 < n3; o3++)
                      for (var r2 in t4 = arguments[o3])
                        Object.prototype.hasOwnProperty.call(t4, r2) && (e5[r2] = t4[r2]);
                    return e5;
                  }).apply(this, arguments);
                };
                Object.defineProperty(t3, "__esModule", { value: true }), t3.createSidetab = void 0;
                var r = o2(747), i = { buttonColor: "#3a7685", buttonText: "Launch me" }, a = function(e5) {
                  return !!e5.parentNode;
                }, u = function(e5, t4) {
                  e5 === void 0 && (e5 = "div"), t4 === void 0 && (t4 = "typeform-sidetab-button-icon");
                  var o3 = document.createElement(e5);
                  return o3.className = t4, o3.innerHTML = "&times;", o3.dataset.testid = t4, o3;
                }, p = function(e5, t4) {
                  var o3 = e5.parentNode;
                  o3 && (o3.removeChild(e5), o3.appendChild(t4));
                };
                t3.createSidetab = function(e5, t4) {
                  t4 === void 0 && (t4 = {});
                  var o3, s, c, d, l, f, m, h = n2(n2({}, i), t4), v = r.createIframe(e5, "side-tab", h), y = v.iframe, b = v.embedId, g = (o3 = h.width, s = h.height, (c = document.createElement("div")).className = "typeform-sidetab", c.dataset.testid = "typeform-sidetab", r.setElementSize(c, { width: o3, height: s })), x = function() {
                    var e6 = document.createElement("div");
                    return e6.className = "typeform-sidetab-wrapper", e6.dataset.testid = "typeform-sidetab-wrapper", e6;
                  }(), w = function() {
                    var e6 = document.createElement("div");
                    e6.className = "typeform-spinner";
                    var t5 = document.createElement("div");
                    return t5.className = "typeform-sidetab-button-icon", t5.dataset.testid = "spinner-icon", t5.append(e6), t5;
                  }(), O = function(e6) {
                    var t5 = r.getTextColor(e6), o4 = document.createElement("button");
                    return o4.className = "typeform-sidetab-button", o4.style.backgroundColor = e6, o4.style.color = t5, o4;
                  }(h.buttonColor || i.buttonColor), _ = function(e6) {
                    var t5 = document.createElement("span");
                    return t5.className = "typeform-sidetab-button-text", t5.innerHTML = e6, t5;
                  }(h.buttonText || i.buttonText), j = (d = h.customIcon, l = h.buttonColor || i.buttonColor, f = r.getTextColor(l), (m = document.createElement("div")).className = "typeform-sidetab-button-icon", m.innerHTML = d ? "<img alt='sidetab trigger icon button' src='" + d + `' style="max-width: 100%; max-height: 100%" />` : '<svg width="32" height="32" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <path d="M21 0H0V9L10.5743 24V16.5H21C22.6567 16.5 24 15.1567 24 13.5V3C24 1.34325 22.6567 0 21 0ZM7.5 9.75C6.672 9.75 6 9.07875 6 8.25C6 7.42125 6.672 6.75 7.5 6.75C8.328 6.75 9 7.42125 9 8.25C9 9.07875 8.328 9.75 7.5 9.75ZM12.75 9.75C11.922 9.75 11.25 9.07875 11.25 8.25C11.25 7.42125 11.922 6.75 12.75 6.75C13.578 6.75 14.25 7.42125 14.25 8.25C14.25 9.07875 13.578 9.75 12.75 9.75ZM18 9.75C17.172 9.75 16.5 9.07875 16.5 8.25C16.5 7.42125 17.172 6.75 18 6.75C18.828 6.75 19.5 7.42125 19.5 8.25C19.5 9.07875 18.828 9.75 18 9.75Z" fill="' + f + '"></path>\n</svg>', m.dataset.testid = "default-icon", m), P = u(), E = u("a", "typeform-sidetab-close");
                  document.body.append(g), x.append(y), g.append(O), g.append(E), O.append(j), O.append(_), setTimeout(function() {
                    g.classList.add("ready");
                  }, 250), y.onload = function() {
                    g.classList.add("open"), p(w, P), r.addCustomKeyboardListener(S);
                  };
                  var C = function() {
                    a(x) || (g.append(x), p(j, w));
                  }, S = function() {
                    var e6;
                    a(x) && ((e6 = h.onClose) === null || e6 === void 0 || e6.call(h), g.classList.remove("open"), setTimeout(function() {
                      r.unmountElement(x), p(P, j);
                    }, 250));
                  };
                  r.setAutoClose(b, h.autoClose, S);
                  var I = function() {
                    a(x) ? S() : C();
                  };
                  return O.onclick = I, E.onclick = S, h.open && !a(x) && r.handleCustomOpen(C, h.open, h.openValue), { open: C, close: S, toggle: I, refresh: function() {
                    var e6;
                    (e6 = y.contentWindow) === null || e6 === void 0 || e6.location.reload();
                  }, unmount: function() {
                    r.unmountElement(g);
                  } };
                };
              }, 434: function(e4, t3, o2) {
                var n2 = this && this.__createBinding || (Object.create ? function(e5, t4, o3, n3) {
                  n3 === void 0 && (n3 = o3), Object.defineProperty(e5, n3, { enumerable: true, get: function() {
                    return t4[o3];
                  } });
                } : function(e5, t4, o3, n3) {
                  n3 === void 0 && (n3 = o3), e5[n3] = t4[o3];
                }), r = this && this.__exportStar || function(e5, t4) {
                  for (var o3 in e5)
                    o3 === "default" || Object.prototype.hasOwnProperty.call(t4, o3) || n2(t4, e5, o3);
                };
                Object.defineProperty(t3, "__esModule", { value: true }), r(o2(382), t3), r(o2(668), t3);
              }, 668: function(e4, t3) {
                Object.defineProperty(t3, "__esModule", { value: true });
              }, 603: function(e4, t3, o2) {
                var n2 = this && this.__rest || function(e5, t4) {
                  var o3 = {};
                  for (var n3 in e5)
                    Object.prototype.hasOwnProperty.call(e5, n3) && t4.indexOf(n3) < 0 && (o3[n3] = e5[n3]);
                  if (e5 != null && typeof Object.getOwnPropertySymbols == "function") {
                    var r2 = 0;
                    for (n3 = Object.getOwnPropertySymbols(e5); r2 < n3.length; r2++)
                      t4.indexOf(n3[r2]) < 0 && Object.prototype.propertyIsEnumerable.call(e5, n3[r2]) && (o3[n3[r2]] = e5[n3[r2]]);
                  }
                  return o3;
                };
                Object.defineProperty(t3, "__esModule", { value: true }), t3.createSlider = void 0;
                var r = o2(747), i = o2(27), a = function(e5) {
                  return !!e5.parentNode;
                };
                t3.createSlider = function(e5, t4) {
                  if (t4 === void 0 && (t4 = {}), !r.hasDom())
                    return { open: function() {
                    }, close: function() {
                    }, toggle: function() {
                    }, refresh: function() {
                    }, unmount: function() {
                    } };
                  var o3 = t4.position, u = o3 === void 0 ? i.SLIDER_POSITION : o3, p = t4.width, s = p === void 0 ? i.SLIDER_WIDTH : p, c = t4.onClose, d = n2(t4, ["position", "width", "onClose"]), l = r.createIframe(e5, "slider", d), f = l.iframe, m = l.embedId, h = document.body.style.overflow, v = function(e6) {
                    var t5 = document.createElement("div");
                    return t5.className = "typeform-slider " + e6, t5.style.opacity = "0", t5;
                  }(u), y = function() {
                    var e6 = document.createElement("div");
                    return e6.className = "typeform-spinner", e6;
                  }(), b = function(e6, t5) {
                    var o4 = document.createElement("div");
                    return o4.className = "typeform-iframe-wrapper", o4.style[e6] = "-100%", r.setElementSize(o4, { width: t5 });
                  }(u, s);
                  b.append(f), v.append(y), v.append(b);
                  var g = d.container || document.body;
                  f.onload = function() {
                    b.style[u] = "0", setTimeout(function() {
                      y.style.display = "none";
                    }, 500), r.addCustomKeyboardListener(w);
                  };
                  var x = function() {
                    a(v) || (g.append(v), document.body.style.overflow = "hidden", setTimeout(function() {
                      v.style.opacity = "1";
                    }));
                  }, w = function() {
                    a(v) && (c == null || c(), v.style.opacity = "0", b.style[u] = "-100%", document.body.style.overflow = h, setTimeout(function() {
                      v.parentNode.removeChild(v), y.style.display = "block";
                    }, 500));
                  };
                  return r.setAutoClose(m, d.autoClose, w), b.append(function(e6) {
                    var t5 = document.createElement("a");
                    return t5.className = "typeform-close", t5.innerHTML = "&times;", t5.onclick = e6, t5;
                  }(w)), d.open && !a(v) && r.handleCustomOpen(x, d.open, d.openValue), { open: x, close: w, toggle: function() {
                    a(v) ? w() : x();
                  }, refresh: function() {
                    var e6;
                    (e6 = f.contentWindow) === null || e6 === void 0 || e6.location.reload();
                  }, unmount: function() {
                    r.unmountElement(v);
                  } };
                };
              }, 331: function(e4, t3, o2) {
                var n2 = this && this.__createBinding || (Object.create ? function(e5, t4, o3, n3) {
                  n3 === void 0 && (n3 = o3), Object.defineProperty(e5, n3, { enumerable: true, get: function() {
                    return t4[o3];
                  } });
                } : function(e5, t4, o3, n3) {
                  n3 === void 0 && (n3 = o3), e5[n3] = t4[o3];
                }), r = this && this.__exportStar || function(e5, t4) {
                  for (var o3 in e5)
                    o3 === "default" || Object.prototype.hasOwnProperty.call(t4, o3) || n2(t4, e5, o3);
                };
                Object.defineProperty(t3, "__esModule", { value: true }), r(o2(603), t3), r(o2(162), t3);
              }, 162: function(e4, t3) {
                Object.defineProperty(t3, "__esModule", { value: true });
              }, 718: function(e4, t3, o2) {
                Object.defineProperty(t3, "__esModule", { value: true }), t3.createWidget = void 0;
                var n2 = o2(747), r = o2(554), i = o2(313);
                t3.createWidget = function(e5, t4) {
                  if (!n2.hasDom())
                    return { refresh: function() {
                    }, unmount: function() {
                    } };
                  var o3 = t4;
                  t4.inlineOnMobile || !t4.forceTouch && !n2.isFullscreen() || (o3.enableFullscreen = true, o3.forceTouch = true);
                  var a, u = n2.createIframe(e5, "widget", o3), p = u.embedId, s = u.iframe, c = i.buildWidget(s, t4.width, t4.height);
                  if (t4.container.innerHTML = "", t4.container.append(c), o3.enableFullscreen) {
                    var d = t4.container;
                    window.addEventListener("message", r.getWelcomeScreenHiddenHandler(p, d));
                    var l = ((a = document.createElement("a")).className = "typeform-widget-close", a.innerHTML = "&times;", a);
                    l.onclick = function() {
                      var e6;
                      (e6 = t4.onClose) === null || e6 === void 0 || e6.call(t4), d.classList.remove("typeform-widget-fullscreen"), t4.container.innerHTML = "", t4.container.append(c), d.append(l);
                    }, d.append(l);
                  }
                  return { refresh: function() {
                    var e6;
                    return (e6 = s.contentWindow) === null || e6 === void 0 ? void 0 : e6.location.reload();
                  }, unmount: function() {
                    return n2.unmountElement(c);
                  } };
                };
              }, 419: function(e4, t3, o2) {
                Object.defineProperty(t3, "__esModule", { value: true }), t3.buildWidget = void 0;
                var n2 = o2(747);
                t3.buildWidget = function(e5, t4, o3) {
                  var r = document.createElement("div");
                  return r.className = "typeform-widget", r.append(e5), n2.setElementSize(r, { width: t4, height: o3 });
                };
              }, 313: function(e4, t3, o2) {
                var n2 = this && this.__createBinding || (Object.create ? function(e5, t4, o3, n3) {
                  n3 === void 0 && (n3 = o3), Object.defineProperty(e5, n3, { enumerable: true, get: function() {
                    return t4[o3];
                  } });
                } : function(e5, t4, o3, n3) {
                  n3 === void 0 && (n3 = o3), e5[n3] = t4[o3];
                }), r = this && this.__exportStar || function(e5, t4) {
                  for (var o3 in e5)
                    o3 === "default" || Object.prototype.hasOwnProperty.call(t4, o3) || n2(t4, e5, o3);
                };
                Object.defineProperty(t3, "__esModule", { value: true }), r(o2(419), t3);
              }, 321: function(e4, t3, o2) {
                var n2 = this && this.__createBinding || (Object.create ? function(e5, t4, o3, n3) {
                  n3 === void 0 && (n3 = o3), Object.defineProperty(e5, n3, { enumerable: true, get: function() {
                    return t4[o3];
                  } });
                } : function(e5, t4, o3, n3) {
                  n3 === void 0 && (n3 = o3), e5[n3] = t4[o3];
                }), r = this && this.__exportStar || function(e5, t4) {
                  for (var o3 in e5)
                    o3 === "default" || Object.prototype.hasOwnProperty.call(t4, o3) || n2(t4, e5, o3);
                };
                Object.defineProperty(t3, "__esModule", { value: true }), r(o2(718), t3), r(o2(58), t3);
              }, 58: function(e4, t3) {
                Object.defineProperty(t3, "__esModule", { value: true });
              }, 920: function(e4, t3, o2) {
                var n2 = this && this.__createBinding || (Object.create ? function(e5, t4, o3, n3) {
                  n3 === void 0 && (n3 = o3), Object.defineProperty(e5, n3, { enumerable: true, get: function() {
                    return t4[o3];
                  } });
                } : function(e5, t4, o3, n3) {
                  n3 === void 0 && (n3 = o3), e5[n3] = t4[o3];
                }), r = this && this.__exportStar || function(e5, t4) {
                  for (var o3 in e5)
                    o3 === "default" || Object.prototype.hasOwnProperty.call(t4, o3) || n2(t4, e5, o3);
                };
                Object.defineProperty(t3, "__esModule", { value: true }), r(o2(797), t3), r(o2(970), t3), r(o2(331), t3), r(o2(321), t3), r(o2(434), t3);
              }, 626: function(e4, t3, o2) {
                var n2 = this && this.__assign || function() {
                  return (n2 = Object.assign || function(e5) {
                    for (var t4, o3 = 1, n3 = arguments.length; o3 < n3; o3++)
                      for (var r2 in t4 = arguments[o3])
                        Object.prototype.hasOwnProperty.call(t4, r2) && (e5[r2] = t4[r2]);
                    return e5;
                  }).apply(this, arguments);
                };
                Object.defineProperty(t3, "__esModule", { value: true }), t3.buildIframeSrc = void 0;
                var r = o2(27), i = o2(527), a = o2(346), u = o2(698), p = { widget: "embed-widget", popup: "popup-blank", slider: "popup-drawer", popover: "popup-popover", "side-tab": "popup-side-panel" };
                t3.buildIframeSrc = function(e5) {
                  var t4 = e5.formId, o3 = e5.type, s = e5.embedId, c = e5.options, d = function(e6, t5, o4) {
                    var r2 = o4.transitiveSearchParams, i2 = o4.source, a2 = o4.medium, s2 = o4.mediumVersion, c2 = o4.hideFooter, d2 = o4.hideHeaders, l2 = o4.opacity, f2 = o4.disableTracking, m2 = o4.enableSandbox, h = o4.disableAutoFocus, v = o4.shareGaInstance, y = o4.forceTouch, b = o4.enableFullscreen, g = o4.tracking, x = u.getTransitiveSearchParams(r2);
                    return n2(n2(n2({}, { "typeform-embed-id": t5, "typeform-embed": p[e6], "typeform-source": i2, "typeform-medium": a2, "typeform-medium-version": s2, "embed-hide-footer": c2 ? "true" : void 0, "embed-hide-headers": d2 ? "true" : void 0, "embed-opacity": l2, "disable-tracking": f2 || m2 ? "true" : void 0, "disable-auto-focus": h ? "true" : void 0, "__dangerous-disable-submissions": m2 ? "true" : void 0, "share-ga-instance": v ? "true" : void 0, "force-touch": y ? "true" : void 0, "add-placeholder-ws": e6 === "widget" && b ? "true" : void 0 }), x), g);
                  }(o3, s, function(e6) {
                    return n2(n2({}, { source: (t5 = window === null || window === void 0 ? void 0 : window.location) === null || t5 === void 0 ? void 0 : t5.hostname.replace(/^www\./, ""), medium: "embed-sdk", mediumVersion: "next" }), i.removeUndefinedKeys(e6));
                    var t5;
                  }(c)), l = function(e6, t5) {
                    t5 === void 0 && (t5 = false);
                    var o4 = t5 ? "c" : "to";
                    return new URL(r.FORM_BASE_URL + "/" + o4 + "/" + e6);
                  }(t4, c.chat);
                  if (Object.entries(d).filter(function(e6) {
                    var t5 = e6[1];
                    return a.isDefined(t5);
                  }).forEach(function(e6) {
                    var t5 = e6[0], o4 = e6[1];
                    l.searchParams.set(t5, o4);
                  }), c.hidden) {
                    var f = new URL(r.FORM_BASE_URL);
                    Object.entries(c.hidden).filter(function(e6) {
                      var t5 = e6[1];
                      return a.isDefined(t5);
                    }).forEach(function(e6) {
                      var t5 = e6[0], o4 = e6[1];
                      f.searchParams.set(t5, o4);
                    });
                    var m = f.searchParams.toString();
                    m && (l.hash = m);
                  }
                  return l.href;
                };
              }, 972: function(e4, t3) {
                Object.defineProperty(t3, "__esModule", { value: true }), t3.handleCustomOpen = void 0, t3.handleCustomOpen = function(e5, t4, o2) {
                  switch (t4) {
                    case "load":
                      e5();
                      break;
                    case "exit":
                      o2 && function(e6, t5) {
                        var o3 = 0, n2 = function(r) {
                          r.clientY < e6 && r.clientY < o3 ? (document.removeEventListener("mousemove", n2), t5()) : o3 = r.clientY;
                        };
                        document.addEventListener("mousemove", n2);
                      }(o2, e5);
                      break;
                    case "time":
                      setTimeout(function() {
                        e5();
                      }, o2);
                      break;
                    case "scroll":
                      o2 && function(e6, t5) {
                        var o3 = function() {
                          var n2 = window.pageYOffset || document.documentElement.scrollTop, r = document.documentElement.clientTop || 0, i = document.documentElement.scrollHeight, a = n2 - r, u = a / i * 100, p = a + window.innerHeight >= i;
                          (u >= e6 || p) && (t5(), document.removeEventListener("scroll", o3));
                        };
                        document.addEventListener("scroll", o3);
                      }(o2, e5);
                  }
                };
              }, 553: function(e4, t3, o2) {
                Object.defineProperty(t3, "__esModule", { value: true }), t3.createIframe = void 0;
                var n2 = o2(626), r = o2(747), i = o2(866), a = o2(554), u = o2(256), p = o2(144);
                t3.createIframe = function(e5, t4, o3) {
                  var s = i.generateEmbedId(), c = o3.iframeProps, d = c === void 0 ? {} : c, l = o3.onReady, f = o3.onQuestionChanged, m = o3.onSubmit, h = o3.shareGaInstance, v = n2.buildIframeSrc({ formId: e5, embedId: s, type: t4, options: o3 }), y = document.createElement("iframe");
                  return y.src = v, y.dataset.testid = "iframe", Object.keys(d).forEach(function(e6) {
                    y.setAttribute(e6, d[e6]);
                  }), y.addEventListener("load", u.triggerIframeRedraw, { once: true }), window.addEventListener("message", a.getFormReadyHandler(s, l)), window.addEventListener("message", a.getFormQuestionChangedHandler(s, f)), window.addEventListener("message", a.getFormSubmitHandler(s, m)), t4 !== "widget" && window.addEventListener("message", p.dispatchCustomKeyEventFromIframe), h && window.addEventListener("message", a.getFormReadyHandler(s, function() {
                    r.setupGaInstance(y, s, h);
                  })), { iframe: y, embedId: s };
                };
              }, 866: function(e4, t3) {
                Object.defineProperty(t3, "__esModule", { value: true }), t3.generateEmbedId = void 0, t3.generateEmbedId = function() {
                  var e5 = Math.random();
                  return String(e5).split(".")[1];
                };
              }, 554: function(e4, t3) {
                var o2 = this && this.__rest || function(e5, t4) {
                  var o3 = {};
                  for (var n3 in e5)
                    Object.prototype.hasOwnProperty.call(e5, n3) && t4.indexOf(n3) < 0 && (o3[n3] = e5[n3]);
                  if (e5 != null && typeof Object.getOwnPropertySymbols == "function") {
                    var r = 0;
                    for (n3 = Object.getOwnPropertySymbols(e5); r < n3.length; r++)
                      t4.indexOf(n3[r]) < 0 && Object.prototype.propertyIsEnumerable.call(e5, n3[r]) && (o3[n3[r]] = e5[n3[r]]);
                  }
                  return o3;
                };
                function n2(e5, t4, n3) {
                  return function(r) {
                    var i = r.data, a = i.type, u = i.embedId, p = o2(i, ["type", "embedId"]);
                    a === e5 && u === t4 && (n3 == null || n3(p));
                  };
                }
                Object.defineProperty(t3, "__esModule", { value: true }), t3.getFormEventHandler = t3.getWelcomeScreenHiddenHandler = t3.getFormSubmitHandler = t3.getFormQuestionChangedHandler = t3.getFormReadyHandler = void 0, t3.getFormReadyHandler = function(e5, t4) {
                  return n2("form-ready", e5, t4);
                }, t3.getFormQuestionChangedHandler = function(e5, t4) {
                  return n2("form-screen-changed", e5, t4);
                }, t3.getFormSubmitHandler = function(e5, t4) {
                  return n2("form-submit", e5, t4);
                }, t3.getWelcomeScreenHiddenHandler = function(e5, t4) {
                  return n2("welcome-screen-hidden", e5, function() {
                    t4.classList.add("typeform-widget-fullscreen");
                  });
                }, t3.getFormEventHandler = n2;
              }, 339: function(e4, t3, o2) {
                var n2 = this && this.__createBinding || (Object.create ? function(e5, t4, o3, n3) {
                  n3 === void 0 && (n3 = o3), Object.defineProperty(e5, n3, { enumerable: true, get: function() {
                    return t4[o3];
                  } });
                } : function(e5, t4, o3, n3) {
                  n3 === void 0 && (n3 = o3), e5[n3] = t4[o3];
                }), r = this && this.__exportStar || function(e5, t4) {
                  for (var o3 in e5)
                    o3 === "default" || Object.prototype.hasOwnProperty.call(t4, o3) || n2(t4, e5, o3);
                };
                Object.defineProperty(t3, "__esModule", { value: true }), r(o2(553), t3), r(o2(144), t3);
              }, 144: function(e4, t3) {
                var o2 = this && this.__awaiter || function(e5, t4, o3, n3) {
                  return new (o3 || (o3 = Promise))(function(r2, i2) {
                    function a(e6) {
                      try {
                        p(n3.next(e6));
                      } catch (e7) {
                        i2(e7);
                      }
                    }
                    function u(e6) {
                      try {
                        p(n3.throw(e6));
                      } catch (e7) {
                        i2(e7);
                      }
                    }
                    function p(e6) {
                      var t5;
                      e6.done ? r2(e6.value) : (t5 = e6.value, t5 instanceof o3 ? t5 : new o3(function(e7) {
                        e7(t5);
                      })).then(a, u);
                    }
                    p((n3 = n3.apply(e5, t4 || [])).next());
                  });
                }, n2 = this && this.__generator || function(e5, t4) {
                  var o3, n3, r2, i2, a = { label: 0, sent: function() {
                    if (1 & r2[0])
                      throw r2[1];
                    return r2[1];
                  }, trys: [], ops: [] };
                  return i2 = { next: u(0), throw: u(1), return: u(2) }, typeof Symbol == "function" && (i2[Symbol.iterator] = function() {
                    return this;
                  }), i2;
                  function u(i3) {
                    return function(u2) {
                      return function(i4) {
                        if (o3)
                          throw new TypeError("Generator is already executing.");
                        for (; a; )
                          try {
                            if (o3 = 1, n3 && (r2 = 2 & i4[0] ? n3.return : i4[0] ? n3.throw || ((r2 = n3.return) && r2.call(n3), 0) : n3.next) && !(r2 = r2.call(n3, i4[1])).done)
                              return r2;
                            switch (n3 = 0, r2 && (i4 = [2 & i4[0], r2.value]), i4[0]) {
                              case 0:
                              case 1:
                                r2 = i4;
                                break;
                              case 4:
                                return a.label++, { value: i4[1], done: false };
                              case 5:
                                a.label++, n3 = i4[1], i4 = [0];
                                continue;
                              case 7:
                                i4 = a.ops.pop(), a.trys.pop();
                                continue;
                              default:
                                if (!((r2 = (r2 = a.trys).length > 0 && r2[r2.length - 1]) || i4[0] !== 6 && i4[0] !== 2)) {
                                  a = 0;
                                  continue;
                                }
                                if (i4[0] === 3 && (!r2 || i4[1] > r2[0] && i4[1] < r2[3])) {
                                  a.label = i4[1];
                                  break;
                                }
                                if (i4[0] === 6 && a.label < r2[1]) {
                                  a.label = r2[1], r2 = i4;
                                  break;
                                }
                                if (r2 && a.label < r2[2]) {
                                  a.label = r2[2], a.ops.push(i4);
                                  break;
                                }
                                r2[2] && a.ops.pop(), a.trys.pop();
                                continue;
                            }
                            i4 = t4.call(e5, a);
                          } catch (e6) {
                            i4 = [6, e6], n3 = 0;
                          } finally {
                            o3 = r2 = 0;
                          }
                        if (5 & i4[0])
                          throw i4[1];
                        return { value: i4[0] ? i4[1] : void 0, done: true };
                      }([i3, u2]);
                    };
                  }
                };
                Object.defineProperty(t3, "__esModule", { value: true }), t3.dispatchCustomKeyEventFromIframe = t3.removeCustomKeyboardListener = t3.addCustomKeyboardListener = void 0;
                var r = "Escape", i = function(e5, i2) {
                  return o2(void 0, void 0, void 0, function() {
                    return n2(this, function(o3) {
                      return e5.code === r && typeof i2 == "function" && (i2(), t3.removeCustomKeyboardListener()), [2];
                    });
                  });
                };
                t3.addCustomKeyboardListener = function(e5) {
                  return window.document.addEventListener("keydown", function(t4) {
                    return i(t4, e5);
                  });
                }, t3.removeCustomKeyboardListener = function() {
                  return window.document.removeEventListener("keydown", i);
                }, t3.dispatchCustomKeyEventFromIframe = function(e5) {
                  e5.data.type === "form-close" && window.document.dispatchEvent(new KeyboardEvent("keydown", { code: r }));
                };
              }, 256: function(e4, t3) {
                Object.defineProperty(t3, "__esModule", { value: true }), t3.triggerIframeRedraw = void 0, t3.triggerIframeRedraw = function() {
                  this.style.transform = "translateZ(0)";
                };
              }, 939: function(e4, t3, o2) {
                Object.defineProperty(t3, "__esModule", { value: true }), t3.getTextColor = void 0;
                var n2 = o2(938);
                t3.getTextColor = function(e5) {
                  if (!e5)
                    return "#FFFFFF";
                  var t4 = e5.startsWith("#") ? n2.hexRgb(e5) : function(e6) {
                    var t5 = { red: 0, green: 0, blue: 0 }, o4 = e6.match(/\d+/g);
                    return o4 && (t5.red = parseInt(o4[0], 10), t5.green = parseInt(o4[0], 10), t5.blue = parseInt(o4[0], 10)), t5;
                  }(e5), o3 = t4.red, r = t4.green, i = t4.blue;
                  return Math.round((299 * o3 + 587 * r + 114 * i) / 1e3) > 125 ? "#000000" : "#FFFFFF";
                };
              }, 698: function(e4, t3) {
                Object.defineProperty(t3, "__esModule", { value: true }), t3.getTransitiveSearchParams = void 0, t3.getTransitiveSearchParams = function(e5) {
                  var t4 = new URL(window.location.href), o2 = {};
                  return e5 && e5.length > 0 && e5.forEach(function(e6) {
                    t4.searchParams.has(e6) && (o2[e6] = t4.searchParams.get(e6));
                  }), o2;
                };
              }, 252: function(e4, t3) {
                Object.defineProperty(t3, "__esModule", { value: true }), t3.hasDom = void 0, t3.hasDom = function() {
                  return typeof document != "undefined" && typeof window != "undefined";
                };
              }, 938: function(e4, t3) {
                Object.defineProperty(t3, "__esModule", { value: true }), t3.hexRgb = void 0;
                var o2 = new RegExp("[^#a-f\\d]", "gi"), n2 = new RegExp("^#?[a-f\\d]{3}[a-f\\d]?$|^#?[a-f\\d]{6}([a-f\\d]{2})?$", "i");
                t3.hexRgb = function(e5) {
                  if (typeof e5 != "string" || o2.test(e5) || !n2.test(e5))
                    throw new TypeError("Expected a valid hex string");
                  (e5 = e5.replace(/^#/, "")).length === 8 && (e5 = e5.slice(0, 6)), e5.length === 4 && (e5 = e5.slice(0, 3)), e5.length === 3 && (e5 = e5[0] + e5[0] + e5[1] + e5[1] + e5[2] + e5[2]);
                  var t4 = Number.parseInt(e5, 16);
                  return { red: t4 >> 16, green: t4 >> 8 & 255, blue: 255 & t4 };
                };
              }, 71: function(e4, t3) {
                Object.defineProperty(t3, "__esModule", { value: true }), t3.includeCss = void 0, t3.includeCss = function(e5) {
                  var t4 = function(e6) {
                    return "https://embed.typeform.com/next/css/" + e6;
                  }(e5);
                  if (!document.querySelector('link[href="' + t4 + '"]')) {
                    var o2 = document.createElement("link");
                    o2.rel = "stylesheet", o2.href = t4, document.head.append(o2);
                  }
                };
              }, 747: function(e4, t3, o2) {
                var n2 = this && this.__createBinding || (Object.create ? function(e5, t4, o3, n3) {
                  n3 === void 0 && (n3 = o3), Object.defineProperty(e5, n3, { enumerable: true, get: function() {
                    return t4[o3];
                  } });
                } : function(e5, t4, o3, n3) {
                  n3 === void 0 && (n3 = o3), e5[n3] = t4[o3];
                }), r = this && this.__exportStar || function(e5, t4) {
                  for (var o3 in e5)
                    o3 === "default" || Object.prototype.hasOwnProperty.call(t4, o3) || n2(t4, e5, o3);
                };
                Object.defineProperty(t3, "__esModule", { value: true }), r(o2(626), t3), r(o2(339), t3), r(o2(252), t3), r(o2(71), t3), r(o2(346), t3), r(o2(377), t3), r(o2(563), t3), r(o2(527), t3), r(o2(533), t3), r(o2(451), t3), r(o2(972), t3), r(o2(748), t3), r(o2(392), t3), r(o2(939), t3);
              }, 346: function(e4, t3) {
                Object.defineProperty(t3, "__esModule", { value: true }), t3.isDefined = void 0, t3.isDefined = function(e5) {
                  return e5 != null;
                };
              }, 377: function(e4, t3) {
                var o2 = this && this.__assign || function() {
                  return (o2 = Object.assign || function(e5) {
                    for (var t4, o3 = 1, n3 = arguments.length; o3 < n3; o3++)
                      for (var r2 in t4 = arguments[o3])
                        Object.prototype.hasOwnProperty.call(t4, r2) && (e5[r2] = t4[r2]);
                    return e5;
                  }).apply(this, arguments);
                };
                Object.defineProperty(t3, "__esModule", { value: true }), t3.loadOptionsFromAttributes = t3.transformAttributeValue = t3.camelCaseToKebabCase = void 0, t3.camelCaseToKebabCase = function(e5) {
                  return e5.split("").map(function(e6, t4) {
                    return e6.toUpperCase() === e6 ? (t4 !== 0 ? "-" : "") + e6.toLowerCase() : e6;
                  }).join("");
                };
                var n2 = function(e5) {
                  return e5 || void 0;
                }, r = function(e5) {
                  return e5 === "" || e5 === "yes" || e5 === "true";
                }, i = function(e5) {
                  var t4 = e5 ? parseInt(e5, 10) : NaN;
                  return isNaN(t4) ? void 0 : t4;
                }, a = "%ESCAPED_COMMA%";
                t3.transformAttributeValue = function(e5, t4) {
                  var u, p;
                  switch (t4) {
                    case "string":
                      return n2(e5);
                    case "boolean":
                      return r(e5);
                    case "integer":
                      return i(e5);
                    case "function":
                      return function(e6) {
                        var t5 = e6 && e6 in window ? window[e6] : void 0;
                        return typeof t5 == "function" ? t5 : void 0;
                      }(e5);
                    case "array":
                      return function(e6) {
                        if (e6)
                          return e6.replace(/\s/g, "").replace(/\\,/g, a).split(",").filter(function(e7) {
                            return !!e7;
                          }).map(function(e7) {
                            return e7.replace(a, ",");
                          });
                      }(e5);
                    case "record":
                      return function(e6) {
                        if (e6)
                          return e6.replace(/\\,/g, a).split(",").filter(function(e7) {
                            return !!e7;
                          }).map(function(e7) {
                            return e7.replace(a, ",");
                          }).reduce(function(e7, t5) {
                            var n3, r2 = t5.match(/^([^=]+)=(.*)$/);
                            if (r2) {
                              var i2 = r2[1], a2 = r2[2];
                              return o2(o2({}, e7), ((n3 = {})[i2.trim()] = a2, n3));
                            }
                            return e7;
                          }, {});
                      }(e5);
                    case "integerOrBoolean":
                      return (u = i(e5)) !== null && u !== void 0 ? u : r(e5);
                    case "stringOrBoolean":
                      return (p = n2(e5)) !== null && p !== void 0 ? p : r(e5);
                    default:
                      throw new Error("Invalid attribute transformation " + t4);
                  }
                }, t3.loadOptionsFromAttributes = function(e5, n3) {
                  return Object.keys(n3).reduce(function(r2, i2) {
                    var a2;
                    return o2(o2({}, r2), ((a2 = {})[i2] = t3.transformAttributeValue(e5.getAttribute("data-tf-" + t3.camelCaseToKebabCase(i2)), n3[i2]), a2));
                  }, {});
                };
              }, 563: function(e4, t3) {
                Object.defineProperty(t3, "__esModule", { value: true }), t3.isFullscreen = t3.isMobile = t3.isBigScreen = void 0, t3.isBigScreen = function() {
                  return window.screen.width >= 1024 && window.screen.height >= 768;
                }, t3.isMobile = function() {
                  return /mobile|tablet|android/i.test(navigator.userAgent.toLowerCase());
                }, t3.isFullscreen = function() {
                  return t3.isMobile() && !t3.isBigScreen();
                };
              }, 527: function(e4, t3, o2) {
                var n2 = this && this.__assign || function() {
                  return (n2 = Object.assign || function(e5) {
                    for (var t4, o3 = 1, n3 = arguments.length; o3 < n3; o3++)
                      for (var r2 in t4 = arguments[o3])
                        Object.prototype.hasOwnProperty.call(t4, r2) && (e5[r2] = t4[r2]);
                    return e5;
                  }).apply(this, arguments);
                };
                Object.defineProperty(t3, "__esModule", { value: true }), t3.removeUndefinedKeys = void 0;
                var r = o2(346);
                t3.removeUndefinedKeys = function(e5) {
                  return Object.entries(e5).filter(function(e6) {
                    var t4 = e6[1];
                    return r.isDefined(t4);
                  }).reduce(function(e6, t4) {
                    var o3, r2 = t4[0], i = t4[1];
                    return n2(n2({}, e6), ((o3 = {})[r2] = i, o3));
                  }, {});
                };
              }, 748: function(e4, t3, o2) {
                Object.defineProperty(t3, "__esModule", { value: true }), t3.setAutoClose = void 0;
                var n2 = o2(554);
                t3.setAutoClose = function(e5, t4, o3) {
                  if (t4 && o3) {
                    var r = typeof t4 == "number" ? t4 : 0;
                    window.addEventListener("message", n2.getFormSubmitHandler(e5, function() {
                      return setTimeout(o3, r);
                    }));
                  }
                };
              }, 533: function(e4, t3) {
                Object.defineProperty(t3, "__esModule", { value: true }), t3.setElementSize = void 0, t3.setElementSize = function(e5, t4) {
                  var o2 = t4.width, n2 = t4.height;
                  return o2 && (e5.style.width = o2 + "px"), n2 && (e5.style.height = n2 + "px"), e5;
                };
              }, 392: function(e4, t3) {
                Object.defineProperty(t3, "__esModule", { value: true }), t3.setupGaInstance = t3.sendGaIdMessage = void 0, t3.sendGaIdMessage = function(e5, t4, o3) {
                  var n2 = { embedId: e5, gaClientId: t4 };
                  setTimeout(function() {
                    o3 && o3.contentWindow && o3.contentWindow.postMessage({ type: "ga-client-id", data: n2 }, "*");
                  }, 0);
                };
                var o2 = function(e5) {
                  console.error(e5);
                };
                t3.setupGaInstance = function(e5, n2, r) {
                  try {
                    var i = window[window.GoogleAnalyticsObject], a = typeof r == "string" ? r : void 0, u = function(e6, t4) {
                      return t4 ? e6.find(function(e7) {
                        return e7.get("trackingId") === t4;
                      }) : e6[0];
                    }(i.getAll(), a);
                    u ? t3.sendGaIdMessage(n2, u.get("clientId"), e5) : o2("Whoops! You enabled the shareGaInstance feature in your typeform embed but the tracker with ID " + a + " was not found. Make sure to include Google Analytics Javascript code before the Typeform Embed Javascript code in your page and use correct tracker ID. ");
                  } catch (e6) {
                    o2("Whoops! You enabled the shareGaInstance feature in your typeform embed but the Google Analytics object has not been found. Make sure to include Google Analytics Javascript code before the Typeform Embed Javascript code in your page. "), o2(e6);
                  }
                };
              }, 451: function(e4, t3) {
                Object.defineProperty(t3, "__esModule", { value: true }), t3.unmountElement = void 0, t3.unmountElement = function(e5) {
                  var t4;
                  (t4 = e5.parentNode) === null || t4 === void 0 || t4.removeChild(e5);
                };
              } }, t2 = {};
              return function o2(n2) {
                if (t2[n2])
                  return t2[n2].exports;
                var r = t2[n2] = { exports: {} };
                return e3[n2].call(r.exports, r, r.exports, o2), r.exports;
              }(920);
            }();
          }, 297: function(t2) {
            t2.exports = e;
          } }, o = {};
          function n(e2) {
            if (o[e2])
              return o[e2].exports;
            var r = o[e2] = { exports: {} };
            return t[e2].call(r.exports, r, r.exports, n), r.exports;
          }
          return n.o = function(e2, t2) {
            return Object.prototype.hasOwnProperty.call(e2, t2);
          }, n.r = function(e2) {
            typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(e2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e2, "__esModule", { value: true });
          }, n(582);
        }();
      });
    }
  });

  // custom_block/node_modules/@frontify/app-bridge/dist/index.js
  var require_dist = __commonJS({
    "custom_block/node_modules/@frontify/app-bridge/dist/index.js"(exports, module) {
      !function(t, e) {
        if (typeof exports == "object" && typeof module == "object")
          module.exports = e(__require("react"));
        else if (typeof define == "function" && define.amd)
          define(["react"], e);
        else {
          var n = typeof exports == "object" ? e(__require("react")) : e(t.react);
          for (var r in n)
            (typeof exports == "object" ? exports : t)[r] = n[r];
        }
      }(self, function(t) {
        return function() {
          var e = { 70: function(t2, e2, n2) {
            n2.d(e2, { X: function() {
              return l;
            } });
            var r2 = n2(168), o2 = n2(148);
            function i(t3, e3) {
              var n3 = Object.keys(t3);
              if (Object.getOwnPropertySymbols) {
                var r3 = Object.getOwnPropertySymbols(t3);
                e3 && (r3 = r3.filter(function(e4) {
                  return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
                })), n3.push.apply(n3, r3);
              }
              return n3;
            }
            function a(t3) {
              for (var e3 = 1; e3 < arguments.length; e3++) {
                var n3 = arguments[e3] != null ? arguments[e3] : {};
                e3 % 2 ? i(Object(n3), true).forEach(function(e4) {
                  c(t3, e4, n3[e4]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(n3)) : i(Object(n3)).forEach(function(e4) {
                  Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(n3, e4));
                });
              }
              return t3;
            }
            function c(t3, e3, n3) {
              return e3 in t3 ? Object.defineProperty(t3, e3, { value: n3, enumerable: true, configurable: true, writable: true }) : t3[e3] = n3, t3;
            }
            function u(t3, e3, n3, r3, o3, i2, a2) {
              try {
                var c2 = t3[i2](a2), u2 = c2.value;
              } catch (t4) {
                return void n3(t4);
              }
              c2.done ? e3(u2) : Promise.resolve(u2).then(r3, o3);
            }
            function s(t3) {
              return function() {
                var e3 = this, n3 = arguments;
                return new Promise(function(r3, o3) {
                  var i2 = t3.apply(e3, n3);
                  function a2(t4) {
                    u(i2, r3, o3, a2, c2, "next", t4);
                  }
                  function c2(t4) {
                    u(i2, r3, o3, a2, c2, "throw", t4);
                  }
                  a2(void 0);
                });
              };
            }
            function p(t3, e3) {
              for (var n3 = 0; n3 < e3.length; n3++) {
                var r3 = e3[n3];
                r3.enumerable = r3.enumerable || false, r3.configurable = true, "value" in r3 && (r3.writable = true), Object.defineProperty(t3, r3.key, r3);
              }
            }
            var l = function() {
              function t3(e4, n4) {
                !function(t4, e5) {
                  if (!(t4 instanceof e5))
                    throw new TypeError("Cannot call a class as a function");
                }(this, t3), this.blockId = e4, this.sectionId = n4, this.registerAppBridgeSubscriberInTerrificContext();
              }
              var e3, n3, i2, c2, u2, l2, f, m, d;
              return e3 = t3, n3 = [{ key: "registerAppBridgeSubscriberInTerrificContext", value: function() {
                window.application.connectors.events.components.appBridge || window.application.connectors.events.registerComponent({ id: "appBridge" });
              } }, { key: "getAssetById", value: (d = s(regeneratorRuntime.mark(function t4(e4) {
                var n4, r3, o3;
                return regeneratorRuntime.wrap(function(t5) {
                  for (; ; )
                    switch (t5.prev = t5.next) {
                      case 0:
                        return n4 = window.application.sandbox.config.context.project.id, t5.next = 3, window.fetch("/api/screen/styleguide/".concat(e4).concat(n4 ? "/".concat(n4) : ""), { method: "GET", headers: { "x-csrf-token": document.getElementsByName("x-csrf-token")[0].content, "Content-Type": "application/json" } });
                      case 3:
                        return r3 = t5.sent, t5.next = 6, r3.json();
                      case 6:
                        if ((o3 = t5.sent).success) {
                          t5.next = 9;
                          break;
                        }
                        throw new Error("Could not get the asset with id ".concat(e4, "."));
                      case 9:
                        return t5.abrupt("return", o3.data);
                      case 10:
                      case "end":
                        return t5.stop();
                    }
                }, t4);
              })), function(t4) {
                return d.apply(this, arguments);
              }) }, { key: "getColorsByIds", value: (m = s(regeneratorRuntime.mark(function t4(e4) {
                var n4, r3;
                return regeneratorRuntime.wrap(function(t5) {
                  for (; ; )
                    switch (t5.prev = t5.next) {
                      case 0:
                        return t5.next = 2, window.fetch("/api/color/library/".concat(window.application.config.context.project.id), { method: "GET", headers: { "x-csrf-token": document.getElementsByName("x-csrf-token")[0].content, "Content-Type": "application/json" } });
                      case 2:
                        return n4 = t5.sent, t5.next = 5, n4.json();
                      case 5:
                        return r3 = t5.sent, t5.abrupt("return", r3.palettes.reduce(function(t6, e5) {
                          return t6.concat(e5.colors);
                        }, []).filter(function(t6) {
                          return e4.includes(Number(t6.id));
                        }));
                      case 7:
                      case "end":
                        return t5.stop();
                    }
                }, t4);
              })), function(t4) {
                return m.apply(this, arguments);
              }) }, { key: "getAvailableColors", value: (f = s(regeneratorRuntime.mark(function t4() {
                var e4;
                return regeneratorRuntime.wrap(function(t5) {
                  for (; ; )
                    switch (t5.prev = t5.next) {
                      case 0:
                        return t5.next = 2, this.getAvailablePalettes();
                      case 2:
                        return e4 = t5.sent, t5.abrupt("return", e4.reduce(function(t6, e5) {
                          return t6.concat(e5.colors);
                        }, []));
                      case 4:
                      case "end":
                        return t5.stop();
                    }
                }, t4, this);
              })), function() {
                return f.apply(this, arguments);
              }) }, { key: "getAvailablePalettes", value: (l2 = s(regeneratorRuntime.mark(function t4() {
                var e4, n4;
                return regeneratorRuntime.wrap(function(t5) {
                  for (; ; )
                    switch (t5.prev = t5.next) {
                      case 0:
                        return t5.next = 2, window.fetch("/api/color/library/".concat(window.application.config.context.project.id), { method: "GET", headers: { "x-csrf-token": document.getElementsByName("x-csrf-token")[0].content, "Content-Type": "application/json" } });
                      case 2:
                        return e4 = t5.sent, t5.next = 5, e4.json();
                      case 5:
                        if ((n4 = t5.sent).success) {
                          t5.next = 8;
                          break;
                        }
                        throw new Error("Could not get the available palettes");
                      case 8:
                        return t5.abrupt("return", n4.palettes);
                      case 9:
                      case "end":
                        return t5.stop();
                    }
                }, t4);
              })), function() {
                return l2.apply(this, arguments);
              }) }, { key: "getBlockSettings", value: (u2 = s(regeneratorRuntime.mark(function t4() {
                var e4, n4, r3, i3;
                return regeneratorRuntime.wrap(function(t5) {
                  for (; ; )
                    switch (t5.prev = t5.next) {
                      case 0:
                        if (this.blockId) {
                          t5.next = 2;
                          break;
                        }
                        throw new Error("You need to instanciate the App Bridge with a block id.");
                      case 2:
                        return e4 = (0, o2.b)(document.body).translationLanguage, n4 = e4 ? "&lang=".concat(e4) : "", t5.next = 6, window.fetch("/api/document/block/".concat(this.blockId, "?settings_only=true").concat(n4), { headers: { "x-csrf-token": document.getElementsByName("x-csrf-token")[0].content, "Content-Type": "application/json" } });
                      case 6:
                        return r3 = t5.sent, t5.next = 9, r3.json();
                      case 9:
                        if ((i3 = t5.sent).success) {
                          t5.next = 12;
                          break;
                        }
                        throw new Error("Could not get the block settings");
                      case 12:
                        return t5.abrupt("return", i3.settings);
                      case 13:
                      case "end":
                        return t5.stop();
                    }
                }, t4, this);
              })), function() {
                return u2.apply(this, arguments);
              }) }, { key: "updateBlockSettings", value: (c2 = s(regeneratorRuntime.mark(function t4(e4) {
                var n4, r3, i3, c3;
                return regeneratorRuntime.wrap(function(t5) {
                  for (; ; )
                    switch (t5.prev = t5.next) {
                      case 0:
                        if (this.blockId) {
                          t5.next = 2;
                          break;
                        }
                        throw new Error("You need to instanciate the App Bridge with a block id.");
                      case 2:
                        if (n4 = (0, o2.f)("page").id) {
                          t5.next = 5;
                          break;
                        }
                        throw new Error("Page ID not found");
                      case 5:
                        return r3 = (0, o2.b)(document.body), i3 = r3.translationLanguage, t5.next = 8, window.fetch("/api/document/block/".concat(n4, "/").concat(this.sectionId, "/").concat(this.blockId), { method: "POST", headers: { "x-csrf-token": document.getElementsByName("x-csrf-token")[0].content, "Content-Type": "application/json" }, body: JSON.stringify(a({ settings: e4 }, i3 ? { language: i3 } : {})) });
                      case 8:
                        return c3 = t5.sent, t5.next = 11, c3.json();
                      case 11:
                        if (t5.sent.success) {
                          t5.next = 14;
                          break;
                        }
                        throw new Error("Could not update the block settings");
                      case 14:
                      case "end":
                        return t5.stop();
                    }
                }, t4, this);
              })), function(t4) {
                return c2.apply(this, arguments);
              }) }, { key: "getEditorState", value: function() {
                return document.body.classList.contains("editor-enabled");
              } }, { key: "getProjectId", value: function() {
                return window.application.config.context.project.id;
              } }, { key: "openAssetChooser", value: function(t4) {
                window.application.connectors.events.components.appBridge.component.onAssetChooserAssetChosen = t4;
                var e4 = window.application.sandbox.config.tpl.render("c-assetchooser", {});
                window.application.connectors.events.notify(null, r2.VY.OpenModal, { modifier: "flex", $content: e4 });
              } }, { key: "closeAssetChooser", value: function() {
                window.application.connectors.events.notify(null, r2.VY.CloseModal, {});
              } }, { key: "getCurrentLoggedUser", value: (i2 = s(regeneratorRuntime.mark(function t4() {
                var e4, n4;
                return regeneratorRuntime.wrap(function(t5) {
                  for (; ; )
                    switch (t5.prev = t5.next) {
                      case 0:
                        return t5.next = 2, window.fetch("/api/user/info", { headers: { "x-csrf-token": document.getElementsByName("x-csrf-token")[0].content, "Content-Type": "application/json" } });
                      case 2:
                        return e4 = t5.sent, t5.next = 5, e4.json();
                      case 5:
                        if ((n4 = t5.sent).success) {
                          t5.next = 8;
                          break;
                        }
                        throw new Error("Could not get the current logged user");
                      case 8:
                        return delete n4.success, t5.abrupt("return", n4);
                      case 10:
                      case "end":
                        return t5.stop();
                    }
                }, t4);
              })), function() {
                return i2.apply(this, arguments);
              }) }], n3 && p(e3.prototype, n3), t3;
            }();
          }, 275: function(t2, e2, n2) {
            n2.d(e2, { UploadFileType: function() {
              return v;
            }, useAssetChooser: function() {
              return o2;
            }, useBlockSettings: function() {
              return l;
            }, useEditorState: function() {
              return d;
            }, useFileInput: function() {
              return y;
            }, useFileUpload: function() {
              return S;
            }, useTemplateChooser: function() {
              return O;
            } });
            var r2 = n2(39), o2 = function() {
              return { openAssetChooser: function(t3) {
                window.application.connectors.events.components.appBridge.component.onAssetChooserAssetChosen = t3;
                var e3 = window.application.sandbox.config.tpl.render("c-assetchooser", {});
                window.application.connectors.events.notify(null, r2.V.OpenModal, { modifier: "flex", $content: e3 });
              }, closeAssetChooser: function() {
                window.application.connectors.events.notify(null, r2.V.CloseModal, {});
              } };
            }, i = n2(156);
            function a(t3, e3, n3, r3, o3, i2, a2) {
              try {
                var c2 = t3[i2](a2), u2 = c2.value;
              } catch (t4) {
                return void n3(t4);
              }
              c2.done ? e3(u2) : Promise.resolve(u2).then(r3, o3);
            }
            function c(t3, e3) {
              (e3 == null || e3 > t3.length) && (e3 = t3.length);
              for (var n3 = 0, r3 = new Array(e3); n3 < e3; n3++)
                r3[n3] = t3[n3];
              return r3;
            }
            function u(t3, e3) {
              var n3 = Object.keys(t3);
              if (Object.getOwnPropertySymbols) {
                var r3 = Object.getOwnPropertySymbols(t3);
                e3 && (r3 = r3.filter(function(e4) {
                  return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
                })), n3.push.apply(n3, r3);
              }
              return n3;
            }
            function s(t3) {
              for (var e3 = 1; e3 < arguments.length; e3++) {
                var n3 = arguments[e3] != null ? arguments[e3] : {};
                e3 % 2 ? u(Object(n3), true).forEach(function(e4) {
                  p(t3, e4, n3[e4]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(n3)) : u(Object(n3)).forEach(function(e4) {
                  Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(n3, e4));
                });
              }
              return t3;
            }
            function p(t3, e3, n3) {
              return e3 in t3 ? Object.defineProperty(t3, e3, { value: n3, enumerable: true, configurable: true, writable: true }) : t3[e3] = n3, t3;
            }
            var l = function(t3) {
              if (t3.blockId === void 0)
                throw new Error("You need to instanciate the App Bridge with a block id.");
              window.blockSettings[t3.blockId].__isProxy || (window.blockSettings[t3.blockId] = new Proxy(window.blockSettings[t3.blockId], { get: function(t4, e4, n4) {
                return e4 === "__isProxy" || Reflect.get(t4, e4, n4);
              }, set: function(t4, e4, n4) {
                return u2(s(s({}, t4), {}, p({}, e4, n4))), t4[e4] = n4, true;
              } }));
              var e3, n3, r3 = (e3 = (0, i.useState)(window.blockSettings[t3.blockId]), n3 = 2, function(t4) {
                if (Array.isArray(t4))
                  return t4;
              }(e3) || function(t4, e4) {
                var n4 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
                if (n4 != null) {
                  var r4, o4, i2 = [], a2 = true, c2 = false;
                  try {
                    for (n4 = n4.call(t4); !(a2 = (r4 = n4.next()).done) && (i2.push(r4.value), !e4 || i2.length !== e4); a2 = true)
                      ;
                  } catch (t5) {
                    c2 = true, o4 = t5;
                  } finally {
                    try {
                      a2 || n4.return == null || n4.return();
                    } finally {
                      if (c2)
                        throw o4;
                    }
                  }
                  return i2;
                }
              }(e3, n3) || function(t4, e4) {
                if (t4) {
                  if (typeof t4 == "string")
                    return c(t4, e4);
                  var n4 = Object.prototype.toString.call(t4).slice(8, -1);
                  return n4 === "Object" && t4.constructor && (n4 = t4.constructor.name), n4 === "Map" || n4 === "Set" ? Array.from(t4) : n4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n4) ? c(t4, e4) : void 0;
                }
              }(e3, n3) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
              }()), o3 = r3[0], u2 = r3[1], l2 = function() {
                var e4, n4 = (e4 = regeneratorRuntime.mark(function e5(n5) {
                  var r4;
                  return regeneratorRuntime.wrap(function(e6) {
                    for (; ; )
                      switch (e6.prev = e6.next) {
                        case 0:
                          if (t3.blockId !== void 0) {
                            e6.next = 2;
                            break;
                          }
                          throw new Error("You need to instanciate the App Bridge with a block id.");
                        case 2:
                          for (r4 in n5)
                            window.blockSettings[t3.blockId][r4] = n5[r4];
                          return e6.next = 5, t3.updateBlockSettings(s({}, n5));
                        case 5:
                        case "end":
                          return e6.stop();
                      }
                  }, e5);
                }), function() {
                  var t4 = this, n5 = arguments;
                  return new Promise(function(r4, o4) {
                    var i2 = e4.apply(t4, n5);
                    function c2(t5) {
                      a(i2, r4, o4, c2, u3, "next", t5);
                    }
                    function u3(t5) {
                      a(i2, r4, o4, c2, u3, "throw", t5);
                    }
                    c2(void 0);
                  });
                });
                return function(t4) {
                  return n4.apply(this, arguments);
                };
              }();
              return [o3, l2];
            }, f = n2(70);
            function m(t3, e3) {
              (e3 == null || e3 > t3.length) && (e3 = t3.length);
              for (var n3 = 0, r3 = new Array(e3); n3 < e3; n3++)
                r3[n3] = t3[n3];
              return r3;
            }
            var d = function() {
              var t3, e3, n3 = new f.X(0, 0), r3 = (t3 = (0, i.useState)(n3.getEditorState()), e3 = 2, function(t4) {
                if (Array.isArray(t4))
                  return t4;
              }(t3) || function(t4, e4) {
                var n4 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
                if (n4 != null) {
                  var r4, o4, i2 = [], a3 = true, c2 = false;
                  try {
                    for (n4 = n4.call(t4); !(a3 = (r4 = n4.next()).done) && (i2.push(r4.value), !e4 || i2.length !== e4); a3 = true)
                      ;
                  } catch (t5) {
                    c2 = true, o4 = t5;
                  } finally {
                    try {
                      a3 || n4.return == null || n4.return();
                    } finally {
                      if (c2)
                        throw o4;
                    }
                  }
                  return i2;
                }
              }(t3, e3) || function(t4, e4) {
                if (t4) {
                  if (typeof t4 == "string")
                    return m(t4, e4);
                  var n4 = Object.prototype.toString.call(t4).slice(8, -1);
                  return n4 === "Object" && t4.constructor && (n4 = t4.constructor.name), n4 === "Map" || n4 === "Set" ? Array.from(t4) : n4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n4) ? m(t4, e4) : void 0;
                }
              }(t3, e3) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
              }()), o3 = r3[0], a2 = r3[1];
              return (0, i.useEffect)(function() {
                var t4 = new MutationObserver(function(t5) {
                  t5.forEach(function(t6) {
                    t6.attributeName === "class" && a2(n3.getEditorState());
                  });
                });
                return t4.observe(document.body, { attributes: true }), function() {
                  t4.disconnect();
                };
              }, []), o3;
            };
            function b(t3, e3) {
              (e3 == null || e3 > t3.length) && (e3 = t3.length);
              for (var n3 = 0, r3 = new Array(e3); n3 < e3; n3++)
                r3[n3] = t3[n3];
              return r3;
            }
            var v, g, y = function(t3) {
              var e3, n3, r3 = t3.accept, o3 = t3.multiple, a2 = (e3 = (0, i.useState)(null), n3 = 2, function(t4) {
                if (Array.isArray(t4))
                  return t4;
              }(e3) || function(t4, e4) {
                var n4 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
                if (n4 != null) {
                  var r4, o4, i2 = [], a3 = true, c3 = false;
                  try {
                    for (n4 = n4.call(t4); !(a3 = (r4 = n4.next()).done) && (i2.push(r4.value), !e4 || i2.length !== e4); a3 = true)
                      ;
                  } catch (t5) {
                    c3 = true, o4 = t5;
                  } finally {
                    try {
                      a3 || n4.return == null || n4.return();
                    } finally {
                      if (c3)
                        throw o4;
                    }
                  }
                  return i2;
                }
              }(e3, n3) || function(t4, e4) {
                if (t4) {
                  if (typeof t4 == "string")
                    return b(t4, e4);
                  var n4 = Object.prototype.toString.call(t4).slice(8, -1);
                  return n4 === "Object" && t4.constructor && (n4 = t4.constructor.name), n4 === "Map" || n4 === "Set" ? Array.from(t4) : n4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n4) ? b(t4, e4) : void 0;
                }
              }(e3, n3) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
              }()), c2 = a2[0], u2 = a2[1], s2 = function(t4) {
                if (t4.target) {
                  var e4 = t4.target.files;
                  u2(e4);
                }
              };
              return [function() {
                var t4 = document.createElement("input");
                t4.type = "file", r3 && (t4.accept = r3), t4.multiple = !!o3, t4.addEventListener("change", s2), t4.dispatchEvent(new MouseEvent("click"));
              }, { selectedFiles: c2 }];
            };
            function h(t3) {
              return function(t4) {
                if (Array.isArray(t4))
                  return w(t4);
              }(t3) || function(t4) {
                if (typeof Symbol != "undefined" && t4[Symbol.iterator] != null || t4["@@iterator"] != null)
                  return Array.from(t4);
              }(t3) || x(t3) || function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
              }();
            }
            function x(t3, e3) {
              if (t3) {
                if (typeof t3 == "string")
                  return w(t3, e3);
                var n3 = Object.prototype.toString.call(t3).slice(8, -1);
                return n3 === "Object" && t3.constructor && (n3 = t3.constructor.name), n3 === "Map" || n3 === "Set" ? Array.from(t3) : n3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3) ? w(t3, e3) : void 0;
              }
            }
            function w(t3, e3) {
              (e3 == null || e3 > t3.length) && (e3 = t3.length);
              for (var n3 = 0, r3 = new Array(e3); n3 < e3; n3++)
                r3[n3] = t3[n3];
              return r3;
            }
            !function(t3) {
              t3.Asset = "ASSET", t3.AssetPreview = "ASSET_PREVIEW";
            }(v || (v = {})), function(t3) {
              t3.OnProgress = "onProgress", t3.OnProgressAll = "onProgressAll", t3.OnDone = "onDone", t3.OnDoneAll = "onDoneAll", t3.OnFail = "onFail", t3.OnAssetFail = "onAssetFail", t3.OnLog = "onLog";
            }(g || (g = {}));
            var S = function(t3) {
              var e3, n3, r3 = t3.options, o3 = r3 === void 0 ? { fileType: v.Asset } : r3, a2 = t3.onUploadProgress, c2 = t3.onUploadProgressAll, u2 = t3.onUploadDone, s2 = t3.onUploadDoneAll, p2 = t3.onUploadFail, l2 = t3.onUploadAssetFail, f2 = (0, i.useRef)([]), m2 = (e3 = (0, i.useState)(false), n3 = 2, function(t4) {
                if (Array.isArray(t4))
                  return t4;
              }(e3) || function(t4, e4) {
                var n4 = t4 == null ? null : typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
                if (n4 != null) {
                  var r4, o4, i2 = [], a3 = true, c3 = false;
                  try {
                    for (n4 = n4.call(t4); !(a3 = (r4 = n4.next()).done) && (i2.push(r4.value), !e4 || i2.length !== e4); a3 = true)
                      ;
                  } catch (t5) {
                    c3 = true, o4 = t5;
                  } finally {
                    try {
                      a3 || n4.return == null || n4.return();
                    } finally {
                      if (c3)
                        throw o4;
                    }
                  }
                  return i2;
                }
              }(e3, n3) || x(e3, n3) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
              }()), d2 = m2[0], b2 = m2[1], y2 = (0, i.useRef)();
              (0, i.useEffect)(function() {
                var t4 = new Worker(window.APPLICATION_CONFIG.webworker.upload);
                return y2.current = t4, t4.addEventListener("message", function(t5) {
                  switch (t5.data.event) {
                    case g.OnProgress:
                      w2(t5);
                      break;
                    case g.OnProgressAll:
                      S2(t5);
                      break;
                    case g.OnDone:
                      O2(t5);
                      break;
                    case g.OnDoneAll:
                      P(t5);
                      break;
                    case g.OnFail:
                      A();
                      break;
                    case g.OnAssetFail:
                      k(t5);
                      break;
                    case g.OnLog:
                      j(t5);
                      break;
                    default:
                      throw new Error("".concat(t5.data.event, " is not handled"));
                  }
                }), function() {
                  t4.terminate();
                };
              }, []);
              var w2 = function(t4) {
                a2 && a2(t4);
              }, S2 = function(t4) {
                c2 && c2(t4);
              }, O2 = function(t4) {
                u2 && u2(t4), f2.current = [].concat(h(f2.current), [t4.data]);
              }, P = function(t4) {
                s2 && s2(t4), b2(true);
              }, A = function() {
                throw p2 && p2(), new Error("Asset upload failed");
              }, k = function(t4) {
                l2 && l2(t4);
              }, j = function(t4) {
                var e4;
                console.log((e4 = t4.data) === null || e4 === void 0 ? void 0 : e4.message);
              };
              return [function(t4) {
                b2(false), f2.current = [];
                var e4 = function(t5) {
                  var e5 = [];
                  return t5 instanceof File && e5.push(t5), t5 instanceof FileList && e5.push.apply(e5, h(Array.from(t5))), e5;
                }(t4);
                if (e4.length) {
                  var n4 = window.application.sandbox.config.context.project.id, r4 = { files: e4, fileType: o3.fileType, formData: n4 ? [{ project_id: n4 }] : null };
                  y2 != null && y2.current && y2.current.postMessage(r4);
                }
              }, { results: f2.current, doneAll: d2 }];
            }, O = function() {
              return { openTemplateChooser: function(t3) {
                window.application.connectors.events.components.appBridge.component.onTemplateChooserTemplateChosen = t3;
                var e3 = window.application.sandbox.config.tpl.render("c-templatechooser", {});
                window.application.connectors.events.notify(null, r2.V.OpenModal, { modifier: "flex", $content: e3 });
              }, closeTemplateChooser: function() {
                window.application.connectors.events.notify(null, r2.V.CloseModal, {});
              } };
            };
          }, 258: function(t2, e2, n2) {
            var r2;
            n2.d(e2, { b: function() {
              return r2;
            } }), function(t3) {
              t3.Aac = "aac", t3.Ac3 = "ac3", t3.Ai = "ai", t3.Aif = "aif", t3.Aifc = "aifc", t3.Aiff = "aiff", t3.Asc = "asc", t3.Atom = "atom", t3.Au = "au", t3.Avi = "avi", t3.Bcpio = "bcpio", t3.Bin = "bin", t3.Bmp = "bmp", t3.Cdf = "cdf", t3.Cgm = "cgm", t3.Class = "class", t3.Cpio = "cpio", t3.Cpt = "cpt", t3.Csh = "csh", t3.Css = "css", t3.Dcr = "dcr", t3.Dif = "dif", t3.Dir = "dir", t3.Djv = "djv", t3.Djvu = "djvu", t3.Dll = "dll", t3.Dmg = "dmg", t3.Dms = "dms", t3.Dng = "dng", t3.Doc = "doc", t3.Docx = "docx", t3.Dotx = "dotx", t3.Docm = "docm", t3.Dotm = "dotm", t3.Dtd = "dtd", t3.Dv = "dv", t3.Dvi = "dvi", t3.Dxr = "dxr", t3.Eps = "eps", t3.Etx = "etx", t3.Exe = "exe", t3.Ez = "ez", t3.Flac = "flac", t3.Flv = "flv", t3.Gif = "gif", t3.Gram = "gram", t3.Grxml = "grxml", t3.Gtar = "gtar", t3.Hdf = "hdf", t3.Heif = "heif", t3.Hqx = "hqx", t3.Htm = "htm", t3.Html = "html", t3.Ice = "ice", t3.Ico = "ico", t3.Ics = "ics", t3.Ief = "ief", t3.Ifb = "ifb", t3.Iges = "iges", t3.Igs = "igs", t3.Jnlp = "jnlp", t3.Jp2 = "jp2", t3.Jpe = "jpe", t3.Jpeg = "jpeg", t3.Jpg = "jpg", t3.Js = "js", t3.Kar = "kar", t3.Latex = "latex", t3.Lha = "lha", t3.Lzh = "lzh", t3.M3u = "m3u", t3.M4a = "m4a", t3.M4b = "m4b", t3.M4p = "m4p", t3.M4r = "m4r", t3.M4u = "m4u", t3.M4v = "m4v", t3.Mac = "mac", t3.Man = "man", t3.Mathml = "mathml", t3.Me = "me", t3.Mesh = "mesh", t3.Mid = "mid", t3.Midi = "midi", t3.Mif = "mif", t3.Mkv = "mkv", t3.Mov = "mov", t3.Movie = "movie", t3.Mp2 = "mp2", t3.Mp3 = "mp3", t3.Mp4 = "mp4", t3.Mpe = "mpe", t3.Mpeg = "mpeg", t3.Mpg = "mpg", t3.Mpga = "mpga", t3.Ms = "ms", t3.Msh = "msh", t3.Mts = "mts", t3.Mxu = "mxu", t3.Nc = "nc", t3.Oda = "oda", t3.Ogg = "ogg", t3.Pbm = "pbm", t3.Pct = "pct", t3.Pdb = "pdb", t3.Pdf = "pdf", t3.Pgm = "pgm", t3.Pgn = "pgn", t3.Pic = "pic", t3.Pict = "pict", t3.Png = "png", t3.Pnm = "pnm", t3.Pnt = "pnt", t3.Pntg = "pntg", t3.Ppm = "ppm", t3.Ppt = "ppt", t3.Pptx = "pptx", t3.Potx = "potx", t3.Ppsx = "ppsx", t3.Ppam = "ppam", t3.Pptm = "pptm", t3.Potm = "potm", t3.Ppsm = "ppsm", t3.Ps = "ps", t3.Psd = "psd", t3.Qt = "qt", t3.Qti = "qti", t3.Qtif = "qtif", t3.Ra = "ra", t3.Ram = "ram", t3.Ras = "ras", t3.Rdf = "rdf", t3.Rgb = "rgb", t3.Rm = "rm", t3.Roff = "roff", t3.Rtf = "rtf", t3.Rtx = "rtx", t3.Sgm = "sgm", t3.Sgml = "sgml", t3.Sh = "sh", t3.Shar = "shar", t3.Silo = "silo", t3.Sit = "sit", t3.Skd = "skd", t3.Skm = "skm", t3.Skp = "skp", t3.Skt = "skt", t3.Smi = "smi", t3.Smil = "smil", t3.Snd = "snd", t3.So = "so", t3.Spl = "spl", t3.Src = "src", t3.Sv4cpio = "sv4cpio", t3.Sv4crc = "sv4crc", t3.Svg = "svg", t3.Swf = "swf", t3.T = "t", t3.Tar = "tar", t3.Tcl = "tcl", t3.Tex = "tex", t3.Texi = "texi", t3.Texinfo = "texinfo", t3.Tif = "tif", t3.Tiff = "tiff", t3.Tr = "tr", t3.Tsv = "tsv", t3.Txt = "txt", t3.Ustar = "ustar", t3.Vcd = "vcd", t3.Vrml = "vrml", t3.Vxml = "vxml", t3.Wav = "wav", t3.Wbmp = "wbmp", t3.Wbmxl = "wbmxl", t3.Webm = "webm", t3.Webp = "webp", t3.Wml = "wml", t3.Wmlc = "wmlc", t3.Wmls = "wmls", t3.Wmlsc = "wmlsc", t3.Wmv = "wmv", t3.Wrl = "wrl", t3.Xbm = "xbm", t3.Xht = "xht", t3.Xhtml = "xhtml", t3.Xls = "xls", t3.Xml = "xml", t3.Xpm = "xpm", t3.Xsl = "xsl", t3.Xlsx = "xlsx", t3.Xltx = "xltx", t3.Xlsm = "xlsm", t3.Xltm = "xltm", t3.Xlam = "xlam", t3.Xlsb = "xlsb", t3.Xslt = "xslt", t3.Xul = "xul", t3.Xwd = "xwd", t3.Xyz = "xyz", t3.Zip = "zip", t3.Tpl = "tpl";
            }(r2 || (r2 = {}));
          }, 39: function(t2, e2, n2) {
            var r2;
            n2.d(e2, { V: function() {
              return r2;
            } }), function(t3) {
              t3.OpenModal = "onOpenModal", t3.CloseModal = "onCloseModal";
            }(r2 || (r2 = {}));
          }, 168: function(t2, e2, n2) {
            n2.d(e2, { b9: function() {
              return o2.b;
            }, XE: function() {
              return i;
            }, Tv: function() {
              return r2;
            }, VY: function() {
              return c.V;
            }, Zf: function() {
              return a;
            } });
            var r2, o2 = n2(258), i = { audio: [o2.b.Aac, o2.b.Ac3, o2.b.Aif, o2.b.Aifc, o2.b.Aiff, o2.b.Flac, o2.b.M4a, o2.b.M4r, o2.b.Mp3, o2.b.Ogg, o2.b.Wav], documents: [o2.b.Doc, o2.b.Docx, o2.b.Dotx, o2.b.Pdf, o2.b.Potx, o2.b.Ppt, o2.b.Pptx, o2.b.Xls, o2.b.Xlsx, o2.b.Xltx], images: [o2.b.Ai, o2.b.Bmp, o2.b.Dng, o2.b.Eps, o2.b.Gif, o2.b.Heif, o2.b.Ico, o2.b.Jpeg, o2.b.Jpg, o2.b.Png, o2.b.Psd, o2.b.Svg, o2.b.Tif, o2.b.Tiff, o2.b.Webp], videos: [o2.b.Avi, o2.b.Flv, o2.b.M4v, o2.b.Mkv, o2.b.Mov, o2.b.Mp4, o2.b.Mpg, o2.b.Mts, o2.b.Webm, o2.b.Wmv] };
            !function(t3) {
              t3.Audio = "audio", t3.Documents = "documents", t3.Images = "images", t3.Videos = "videos";
            }(r2 || (r2 = {}));
            var a, c = n2(39);
            !function(t3) {
              t3.CloseApp = "closeApp", t3.DeleteAppState = "deleteAppState", t3.GetAppState = "getAppState", t3.GetAssetById = "getAssetById", t3.GetProjectId = "getProjectId", t3.GetRefreshedThirdpartyOauth2Token = "getRefreshedThirdpartyOauth2Token", t3.GetThirdPartyOauth2Tokens = "getThirdPartyOauth2Tokens", t3.OpenAssetChooser = "openAssetChooser", t3.PostExternalAssets = "postExternalAssets", t3.PutAppState = "putAppState";
            }(a || (a = {}));
          }, 636: function(t2, e2, n2) {
            n2.d(e2, { z: function() {
              return r2;
            } });
            var r2 = function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 6;
              return Math.random().toString(20).substr(2, t3);
            };
          }, 494: function(t2, e2, n2) {
            n2.d(e2, { SUBSCRIBE_TIMEOUT: function() {
              return l.C;
            }, generateRandomString: function() {
              return u.z;
            }, getJqueryDataByElement: function() {
              return s.b;
            }, getJqueryDatasetByClassName: function() {
              return s.f;
            }, getMimeType: function() {
              return c;
            }, mimeTypes: function() {
              return a;
            }, notify: function() {
              return p.h;
            }, subscribe: function() {
              return l.L;
            } });
            var r2, o2 = n2(258);
            function i(t3, e3, n3) {
              return e3 in t3 ? Object.defineProperty(t3, e3, { value: n3, enumerable: true, configurable: true, writable: true }) : t3[e3] = n3, t3;
            }
            var a = (i(r2 = {}, o2.b.Aac, "audio/aac"), i(r2, o2.b.Ac3, "audio/ac3"), i(r2, o2.b.Ai, "application/postscript"), i(r2, o2.b.Aif, "audio/x-aiff"), i(r2, o2.b.Aifc, "audio/x-aiff"), i(r2, o2.b.Aiff, "audio/x-aiff"), i(r2, o2.b.Asc, "text/plain"), i(r2, o2.b.Atom, "application/atom+xml"), i(r2, o2.b.Au, "audio/basic"), i(r2, o2.b.Avi, "video/x-msvideo"), i(r2, o2.b.Bcpio, "application/x-bcpio"), i(r2, o2.b.Bin, "application/octet-stream"), i(r2, o2.b.Bmp, "image/bmp"), i(r2, o2.b.Cdf, "application/x-netcdf"), i(r2, o2.b.Cgm, "image/cgm"), i(r2, o2.b.Class, "application/octet-stream"), i(r2, o2.b.Cpio, "application/x-cpio"), i(r2, o2.b.Cpt, "application/mac-compactpro"), i(r2, o2.b.Csh, "application/x-csh"), i(r2, o2.b.Css, "text/css"), i(r2, o2.b.Dcr, "application/x-director"), i(r2, o2.b.Dif, "video/x-dv"), i(r2, o2.b.Dir, "application/x-director"), i(r2, o2.b.Djv, "image/vnd.djvu"), i(r2, o2.b.Djvu, "image/vnd.djvu"), i(r2, o2.b.Dll, "application/octet-stream"), i(r2, o2.b.Dmg, "application/octet-stream"), i(r2, o2.b.Dms, "application/octet-stream"), i(r2, o2.b.Dng, "image/dng"), i(r2, o2.b.Doc, "application/msword"), i(r2, o2.b.Docm, "application/vnd.ms-word.document.macroEnabled.12"), i(r2, o2.b.Docx, "application/vnd.openxmlformats-officedocument.wordprocessingml.document"), i(r2, o2.b.Dotm, "application/vnd.ms-word.template.macroEnabled.12"), i(r2, o2.b.Dotx, "application/vnd.openxmlformats-officedocument.wordprocessingml.template"), i(r2, o2.b.Dtd, "application/xml-dtd"), i(r2, o2.b.Dv, "video/x-dv"), i(r2, o2.b.Dvi, "application/x-dvi"), i(r2, o2.b.Dxr, "application/x-director"), i(r2, o2.b.Eps, "application/postscript"), i(r2, o2.b.Etx, "text/x-setext"), i(r2, o2.b.Exe, "application/octet-stream"), i(r2, o2.b.Ez, "application/andrew-inset"), i(r2, o2.b.Flac, "audio/x-flac"), i(r2, o2.b.Flv, "video/x-flv"), i(r2, o2.b.Gif, "image/gif"), i(r2, o2.b.Gram, "application/srgs"), i(r2, o2.b.Grxml, "application/srgs+xml"), i(r2, o2.b.Gtar, "application/x-gtar"), i(r2, o2.b.Hdf, "application/x-hdf"), i(r2, o2.b.Heif, "mage/heif"), i(r2, o2.b.Hqx, "application/mac-binhex40"), i(r2, o2.b.Htm, "text/html"), i(r2, o2.b.Html, "text/html"), i(r2, o2.b.Ice, "x-conference/x-cooltalk"), i(r2, o2.b.Ico, "image/x-icon"), i(r2, o2.b.Ics, "text/calendar"), i(r2, o2.b.Ief, "image/ief"), i(r2, o2.b.Ifb, "text/calendar"), i(r2, o2.b.Iges, "model/iges"), i(r2, o2.b.Igs, "model/iges"), i(r2, o2.b.Jnlp, "application/x-java-jnlp-file"), i(r2, o2.b.Jp2, "image/jp2"), i(r2, o2.b.Jpe, "image/jpeg"), i(r2, o2.b.Jpeg, "image/jpeg"), i(r2, o2.b.Jpg, "image/jpeg"), i(r2, o2.b.Js, "application/x-javascript"), i(r2, o2.b.Kar, "audio/midi"), i(r2, o2.b.Latex, "application/x-latex"), i(r2, o2.b.Lha, "application/octet-stream"), i(r2, o2.b.Lzh, "application/octet-stream"), i(r2, o2.b.M3u, "audio/x-mpegurl"), i(r2, o2.b.M4a, "audio/mp4a-latm"), i(r2, o2.b.M4b, "audio/mp4a-latm"), i(r2, o2.b.M4p, "audio/mp4a-latm"), i(r2, o2.b.M4r, "audio/x-m4r"), i(r2, o2.b.M4u, "video/vnd.mpegurl"), i(r2, o2.b.M4v, "video/x-m4v"), i(r2, o2.b.Mac, "image/x-macpaint"), i(r2, o2.b.Man, "application/x-troff-man"), i(r2, o2.b.Mathml, "application/mathml+xml"), i(r2, o2.b.Me, "application/x-troff-me"), i(r2, o2.b.Mesh, "model/mesh"), i(r2, o2.b.Mid, "audio/midi"), i(r2, o2.b.Midi, "audio/midi"), i(r2, o2.b.Mif, "application/vnd.mif"), i(r2, o2.b.Mkv, "video/x-matroska"), i(r2, o2.b.Mov, "video/quicktime"), i(r2, o2.b.Movie, "video/x-sgi-movie"), i(r2, o2.b.Mp2, "audio/mpeg"), i(r2, o2.b.Mp3, "audio/mpeg"), i(r2, o2.b.Mp4, "video/mp4"), i(r2, o2.b.Mpe, "video/mpeg"), i(r2, o2.b.Mpeg, "video/mpeg"), i(r2, o2.b.Mpg, "video/mpeg"), i(r2, o2.b.Mpga, "audio/mpeg"), i(r2, o2.b.Ms, "application/x-troff-ms"), i(r2, o2.b.Msh, "model/mesh"), i(r2, o2.b.Mts, "model/vnd.mts"), i(r2, o2.b.Mxu, "video/vnd.mpegurl"), i(r2, o2.b.Nc, "application/x-netcdf"), i(r2, o2.b.Oda, "application/oda"), i(r2, o2.b.Ogg, "application/ogg"), i(r2, o2.b.Pbm, "image/x-portable-bitmap"), i(r2, o2.b.Pct, "image/pict"), i(r2, o2.b.Pdb, "chemical/x-pdb"), i(r2, o2.b.Pdf, "application/pdf"), i(r2, o2.b.Pgm, "image/x-portable-graymap"), i(r2, o2.b.Pgn, "application/x-chess-pgn"), i(r2, o2.b.Pic, "image/pict"), i(r2, o2.b.Pict, "image/pict"), i(r2, o2.b.Png, "image/png"), i(r2, o2.b.Pnm, "image/x-portable-anymap"), i(r2, o2.b.Pnt, "image/x-macpaint"), i(r2, o2.b.Pntg, "image/x-macpaint"), i(r2, o2.b.Potm, "application/vnd.ms-powerpoint.template.macroEnabled.12"), i(r2, o2.b.Potx, "application/vnd.openxmlformats-officedocument.presentationml.template"), i(r2, o2.b.Ppam, "application/vnd.ms-powerpoint.addin.macroEnabled.12"), i(r2, o2.b.Ppm, "image/x-portable-pixmap"), i(r2, o2.b.Ppsm, "application/vnd.ms-powerpoint.slideshow.macroEnabled.12"), i(r2, o2.b.Ppsx, "application/vnd.openxmlformats-officedocument.presentationml.slideshow"), i(r2, o2.b.Ppt, "application/vnd.ms-powerpoint"), i(r2, o2.b.Pptm, "application/vnd.ms-powerpoint.presentation.macroEnabled.12"), i(r2, o2.b.Pptx, "application/vnd.openxmlformats-officedocument.presentationml.presentation"), i(r2, o2.b.Ps, "application/postscript"), i(r2, o2.b.Psd, "image/vnd.adobe.photoshop"), i(r2, o2.b.Qt, "video/quicktime"), i(r2, o2.b.Qti, "image/x-quicktime"), i(r2, o2.b.Qtif, "image/x-quicktime"), i(r2, o2.b.Ra, "audio/x-pn-realaudio"), i(r2, o2.b.Ram, "audio/x-pn-realaudio"), i(r2, o2.b.Ras, "image/x-cmu-raster"), i(r2, o2.b.Rdf, "application/rdf+xml"), i(r2, o2.b.Rgb, "image/x-rgb"), i(r2, o2.b.Rm, "application/vnd.rn-realmedia"), i(r2, o2.b.Roff, "application/x-troff"), i(r2, o2.b.Rtf, "text/rtf"), i(r2, o2.b.Rtx, "text/richtext"), i(r2, o2.b.Sgm, "text/sgml"), i(r2, o2.b.Sgml, "text/sgml"), i(r2, o2.b.Sh, "application/x-sh"), i(r2, o2.b.Shar, "application/x-shar"), i(r2, o2.b.Silo, "model/mesh"), i(r2, o2.b.Sit, "application/x-stuffit"), i(r2, o2.b.Skd, "application/x-koan"), i(r2, o2.b.Skm, "application/x-koan"), i(r2, o2.b.Skp, "application/x-koan"), i(r2, o2.b.Skt, "application/x-koan"), i(r2, o2.b.Smi, "application/smil"), i(r2, o2.b.Smil, "application/smil"), i(r2, o2.b.Snd, "audio/basic"), i(r2, o2.b.So, "application/octet-stream"), i(r2, o2.b.Spl, "application/x-futuresplash"), i(r2, o2.b.Src, "application/x-wais-source"), i(r2, o2.b.Sv4cpio, "application/x-sv4cpio"), i(r2, o2.b.Sv4crc, "application/x-sv4crc"), i(r2, o2.b.Svg, "image/svg+xml"), i(r2, o2.b.Swf, "application/x-shockwave-flash"), i(r2, o2.b.T, "application/x-troff"), i(r2, o2.b.Tar, "application/x-tar"), i(r2, o2.b.Tcl, "application/x-tcl"), i(r2, o2.b.Tex, "application/x-tex"), i(r2, o2.b.Texi, "application/x-texinfo"), i(r2, o2.b.Texinfo, "application/x-texinfo"), i(r2, o2.b.Tif, "image/tiff"), i(r2, o2.b.Tiff, "image/tiff"), i(r2, o2.b.Tpl, "text/xml"), i(r2, o2.b.Tr, "application/x-troff"), i(r2, o2.b.Tsv, "text/tab-separated-values"), i(r2, o2.b.Txt, "text/plain"), i(r2, o2.b.Ustar, "application/x-ustar"), i(r2, o2.b.Vcd, "application/x-cdlink"), i(r2, o2.b.Vrml, "model/vrml"), i(r2, o2.b.Vxml, "application/voicexml+xml"), i(r2, o2.b.Wav, "audio/x-wav"), i(r2, o2.b.Wbmp, "image/vnd.wap.wbmp"), i(r2, o2.b.Wbmxl, "application/vnd.wap.wbxml"), i(r2, o2.b.Webm, "video/webm"), i(r2, o2.b.Webp, "image/webp"), i(r2, o2.b.Wml, "text/vnd.wap.wml"), i(r2, o2.b.Wmlc, "application/vnd.wap.wmlc"), i(r2, o2.b.Wmls, "text/vnd.wap.wmlscript"), i(r2, o2.b.Wmlsc, "application/vnd.wap.wmlscriptc"), i(r2, o2.b.Wmv, "video/x-ms-wmv"), i(r2, o2.b.Wrl, "model/vrml"), i(r2, o2.b.Xbm, "image/x-xbitmap"), i(r2, o2.b.Xht, "application/xhtml+xml"), i(r2, o2.b.Xhtml, "application/xhtml+xml"), i(r2, o2.b.Xlam, "application/vnd.ms-excel.addin.macroEnabled.12"), i(r2, o2.b.Xls, "application/vnd.ms-excel"), i(r2, o2.b.Xlsb, "application/vnd.ms-excel.sheet.binary.macroEnabled.12"), i(r2, o2.b.Xlsm, "application/vnd.ms-excel.sheet.macroEnabled.12"), i(r2, o2.b.Xlsx, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"), i(r2, o2.b.Xltm, "application/vnd.ms-excel.template.macroEnabled.12"), i(r2, o2.b.Xltx, "application/vnd.openxmlformats-officedocument.spreadsheetml.template"), i(r2, o2.b.Xml, "application/xml"), i(r2, o2.b.Xpm, "image/x-xpixmap"), i(r2, o2.b.Xsl, "application/xml"), i(r2, o2.b.Xslt, "application/xslt+xml"), i(r2, o2.b.Xul, "application/vnd.mozilla.xul+xml"), i(r2, o2.b.Xwd, "image/x-xwindowdump"), i(r2, o2.b.Xyz, "chemical/x-xyz"), i(r2, o2.b.Zip, "application/zip"), r2), c = function(t3) {
              return t3.map(function(t4) {
                return a[t4];
              }).filter(function(t4) {
                return t4 !== void 0;
              });
            }, u = n2(636), s = n2(148), p = n2(299), l = n2(152);
          }, 148: function(t2, e2, n2) {
            function r2(t3, e3) {
              var n3 = Object.keys(t3);
              if (Object.getOwnPropertySymbols) {
                var r3 = Object.getOwnPropertySymbols(t3);
                e3 && (r3 = r3.filter(function(e4) {
                  return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
                })), n3.push.apply(n3, r3);
              }
              return n3;
            }
            function o2(t3) {
              for (var e3 = 1; e3 < arguments.length; e3++) {
                var n3 = arguments[e3] != null ? arguments[e3] : {};
                e3 % 2 ? r2(Object(n3), true).forEach(function(e4) {
                  i(t3, e4, n3[e4]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(n3)) : r2(Object(n3)).forEach(function(e4) {
                  Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(n3, e4));
                });
              }
              return t3;
            }
            function i(t3, e3, n3) {
              return e3 in t3 ? Object.defineProperty(t3, e3, { value: n3, enumerable: true, configurable: true, writable: true }) : t3[e3] = n3, t3;
            }
            n2.d(e2, { b: function() {
              return a;
            }, f: function() {
              return c;
            } });
            var a = function(t3) {
              return Object.keys(t3).reduce(function(e3, n3) {
                return o2(o2({}, e3), t3[n3]);
              }, {});
            }, c = function(t3) {
              var e3 = document.getElementsByClassName(t3)[0];
              if (!e3)
                throw new Error("Could not find the DOM node via class name");
              return a(e3);
            };
          }, 299: function(t2, e2, n2) {
            function r2(t3, e3, n3, r3) {
              var o2 = window.top;
              o2 == null || o2.postMessage({ topic: t3, token: e3, data: n3 }, (r3 == null ? void 0 : r3.origin) || "*");
            }
            n2.d(e2, { h: function() {
              return r2;
            } });
          }, 152: function(t2, e2, n2) {
            function r2(t3) {
              return r2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
                return typeof t4;
              } : function(t4) {
                return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
              }, r2(t3);
            }
            function o2(t3, e3) {
              if (e3 && (r2(e3) === "object" || typeof e3 == "function"))
                return e3;
              if (e3 !== void 0)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t4) {
                if (t4 === void 0)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t4;
              }(t3);
            }
            function i(t3) {
              var e3 = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
              return i = function(t4) {
                if (t4 === null || (n3 = t4, Function.toString.call(n3).indexOf("[native code]") === -1))
                  return t4;
                var n3;
                if (typeof t4 != "function")
                  throw new TypeError("Super expression must either be null or a function");
                if (e3 !== void 0) {
                  if (e3.has(t4))
                    return e3.get(t4);
                  e3.set(t4, r3);
                }
                function r3() {
                  return a(t4, arguments, s(this).constructor);
                }
                return r3.prototype = Object.create(t4.prototype, { constructor: { value: r3, enumerable: false, writable: true, configurable: true } }), u(r3, t4);
              }, i(t3);
            }
            function a(t3, e3, n3) {
              return a = c() ? Reflect.construct : function(t4, e4, n4) {
                var r3 = [null];
                r3.push.apply(r3, e4);
                var o3 = new (Function.bind.apply(t4, r3))();
                return n4 && u(o3, n4.prototype), o3;
              }, a.apply(null, arguments);
            }
            function c() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }
            function u(t3, e3) {
              return u = Object.setPrototypeOf || function(t4, e4) {
                return t4.__proto__ = e4, t4;
              }, u(t3, e3);
            }
            function s(t3) {
              return s = Object.setPrototypeOf ? Object.getPrototypeOf : function(t4) {
                return t4.__proto__ || Object.getPrototypeOf(t4);
              }, s(t3);
            }
            n2.d(e2, { C: function() {
              return h;
            }, L: function() {
              return x;
            } });
            var p = function(t3) {
              !function(t4, e4) {
                if (typeof e4 != "function" && e4 !== null)
                  throw new TypeError("Super expression must either be null or a function");
                t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), e4 && u(t4, e4);
              }(i2, t3);
              var e3, n3, r3 = (e3 = i2, n3 = c(), function() {
                var t4, r4 = s(e3);
                if (n3) {
                  var i3 = s(this).constructor;
                  t4 = Reflect.construct(r4, arguments, i3);
                } else
                  t4 = r4.apply(this, arguments);
                return o2(this, t4);
              });
              function i2(t4) {
                return function(t5, e4) {
                  if (!(t5 instanceof e4))
                    throw new TypeError("Cannot call a class as a function");
                }(this, i2), r3.call(this, "Call with topic ".concat(t4, " failed."));
              }
              return i2;
            }(i(Error));
            function l(t3) {
              return l = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
                return typeof t4;
              } : function(t4) {
                return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
              }, l(t3);
            }
            function f(t3, e3) {
              if (e3 && (l(e3) === "object" || typeof e3 == "function"))
                return e3;
              if (e3 !== void 0)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t4) {
                if (t4 === void 0)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t4;
              }(t3);
            }
            function m(t3) {
              var e3 = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
              return m = function(t4) {
                if (t4 === null || (n3 = t4, Function.toString.call(n3).indexOf("[native code]") === -1))
                  return t4;
                var n3;
                if (typeof t4 != "function")
                  throw new TypeError("Super expression must either be null or a function");
                if (e3 !== void 0) {
                  if (e3.has(t4))
                    return e3.get(t4);
                  e3.set(t4, r3);
                }
                function r3() {
                  return d(t4, arguments, g(this).constructor);
                }
                return r3.prototype = Object.create(t4.prototype, { constructor: { value: r3, enumerable: false, writable: true, configurable: true } }), v(r3, t4);
              }, m(t3);
            }
            function d(t3, e3, n3) {
              return d = b() ? Reflect.construct : function(t4, e4, n4) {
                var r3 = [null];
                r3.push.apply(r3, e4);
                var o3 = new (Function.bind.apply(t4, r3))();
                return n4 && v(o3, n4.prototype), o3;
              }, d.apply(null, arguments);
            }
            function b() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }
            function v(t3, e3) {
              return v = Object.setPrototypeOf || function(t4, e4) {
                return t4.__proto__ = e4, t4;
              }, v(t3, e3);
            }
            function g(t3) {
              return g = Object.setPrototypeOf ? Object.getPrototypeOf : function(t4) {
                return t4.__proto__ || Object.getPrototypeOf(t4);
              }, g(t3);
            }
            var y = function(t3) {
              !function(t4, e4) {
                if (typeof e4 != "function" && e4 !== null)
                  throw new TypeError("Super expression must either be null or a function");
                t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), e4 && v(t4, e4);
              }(o3, t3);
              var e3, n3, r3 = (e3 = o3, n3 = b(), function() {
                var t4, r4 = g(e3);
                if (n3) {
                  var o4 = g(this).constructor;
                  t4 = Reflect.construct(r4, arguments, o4);
                } else
                  t4 = r4.apply(this, arguments);
                return f(this, t4);
              });
              function o3(t4) {
                return function(t5, e4) {
                  if (!(t5 instanceof e4))
                    throw new TypeError("Cannot call a class as a function");
                }(this, o3), r3.call(this, 'Timeout for call with topic "'.concat(t4, '" expired. Call was aborted.'));
              }
              return o3;
            }(m(Error)), h = 3e3;
            function x(t3, e3, n3) {
              return new Promise(function(r3, o3) {
                window.addEventListener("message", function n4(i2) {
                  var a2 = i2.data;
                  a2.token === e3 && a2.topic === t3 && a2.success ? r3(a2.data || true) : o3(new p(t3)), window.removeEventListener("message", n4);
                }), setTimeout(function() {
                  o3(new y(t3));
                }, (n3 == null ? void 0 : n3.timeout) || h);
              });
            }
          }, 156: function(e2) {
            e2.exports = t;
          } }, n = {};
          function r(t2) {
            var o2 = n[t2];
            if (o2 !== void 0)
              return o2.exports;
            var i = n[t2] = { exports: {} };
            return e[t2](i, i.exports, r), i.exports;
          }
          r.d = function(t2, e2) {
            for (var n2 in e2)
              r.o(e2, n2) && !r.o(t2, n2) && Object.defineProperty(t2, n2, { enumerable: true, get: e2[n2] });
          }, r.o = function(t2, e2) {
            return Object.prototype.hasOwnProperty.call(t2, e2);
          }, r.r = function(t2) {
            typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(t2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t2, "__esModule", { value: true });
          };
          var o = {};
          return function() {
            r.r(o), r.d(o, { AppBridgeNative: function() {
              return l.X;
            }, FileExtension: function() {
              return i.b9;
            }, FileExtensionSets: function() {
              return i.XE;
            }, FileType: function() {
              return i.Tv;
            }, SUBSCRIBE_TIMEOUT: function() {
              return m.SUBSCRIBE_TIMEOUT;
            }, TerrificEvent: function() {
              return i.VY;
            }, Topic: function() {
              return i.Zf;
            }, UploadFileType: function() {
              return f.UploadFileType;
            }, createIframeAppBridge: function() {
              return d;
            }, generateRandomString: function() {
              return m.generateRandomString;
            }, getJqueryDataByElement: function() {
              return m.getJqueryDataByElement;
            }, getJqueryDatasetByClassName: function() {
              return m.getJqueryDatasetByClassName;
            }, getMimeType: function() {
              return m.getMimeType;
            }, mimeTypes: function() {
              return m.mimeTypes;
            }, notify: function() {
              return m.notify;
            }, subscribe: function() {
              return m.subscribe;
            }, useAssetChooser: function() {
              return f.useAssetChooser;
            }, useBlockSettings: function() {
              return f.useBlockSettings;
            }, useEditorState: function() {
              return f.useEditorState;
            }, useFileInput: function() {
              return f.useFileInput;
            }, useFileUpload: function() {
              return f.useFileUpload;
            }, useTemplateChooser: function() {
              return f.useTemplateChooser;
            } });
            var t2 = r(636), e2 = r(299), n2 = r(152), i = r(168);
            function a(t3, e3, n3, r2, o2, i2, a2) {
              try {
                var c2 = t3[i2](a2), u2 = c2.value;
              } catch (t4) {
                return void n3(t4);
              }
              c2.done ? e3(u2) : Promise.resolve(u2).then(r2, o2);
            }
            function c(t3) {
              return function() {
                var e3 = this, n3 = arguments;
                return new Promise(function(r2, o2) {
                  var i2 = t3.apply(e3, n3);
                  function c2(t4) {
                    a(i2, r2, o2, c2, u2, "next", t4);
                  }
                  function u2(t4) {
                    a(i2, r2, o2, c2, u2, "throw", t4);
                  }
                  c2(void 0);
                });
              };
            }
            var u = (0, t2.z)(), s = 3e5, p = { appState: { getAppState: function() {
              return (0, e2.h)(i.Zf.GetAppState, u), (0, n2.L)(i.Zf.GetAppState, u);
            }, putAppState: function(t3) {
              return c(regeneratorRuntime.mark(function r2() {
                return regeneratorRuntime.wrap(function(r3) {
                  for (; ; )
                    switch (r3.prev = r3.next) {
                      case 0:
                        return (0, e2.h)(i.Zf.PutAppState, u, t3), r3.abrupt("return", (0, n2.L)(i.Zf.PutAppState, u));
                      case 2:
                      case "end":
                        return r3.stop();
                    }
                }, r2);
              }))();
            }, deleteAppState: function() {
              return c(regeneratorRuntime.mark(function t3() {
                return regeneratorRuntime.wrap(function(t4) {
                  for (; ; )
                    switch (t4.prev = t4.next) {
                      case 0:
                        return (0, e2.h)(i.Zf.DeleteAppState, u), t4.abrupt("return", (0, n2.L)(i.Zf.DeleteAppState, u));
                      case 2:
                      case "end":
                        return t4.stop();
                    }
                }, t3);
              }))();
            } }, assets: { getAssetById: function(t3) {
              return (0, e2.h)(i.Zf.GetAssetById, u, { assetId: t3 }), (0, n2.L)(i.Zf.GetAssetById, u);
            }, postExternalAssets: function(t3) {
              return c(regeneratorRuntime.mark(function r2() {
                var o2, a2;
                return regeneratorRuntime.wrap(function(r3) {
                  for (; ; )
                    switch (r3.prev = r3.next) {
                      case 0:
                        return o2 = t3.filter(function(t4) {
                          return t4.previewUrl;
                        }), a2 = o2.length ? s : 3e3, (0, e2.h)(i.Zf.PostExternalAssets, u, t3), r3.abrupt("return", (0, n2.L)(i.Zf.PostExternalAssets, u, { timeout: a2 }));
                      case 4:
                      case "end":
                        return r3.stop();
                    }
                }, r2);
              }))();
            } }, auth: { getThirdPartyOauth2Tokens: function() {
              return (0, e2.h)(i.Zf.GetThirdPartyOauth2Tokens, u), (0, n2.L)(i.Zf.GetThirdPartyOauth2Tokens, u, { timeout: s });
            }, getRefreshedThirdpartyOauth2Tokens: function(t3) {
              return (0, e2.h)(i.Zf.GetRefreshedThirdpartyOauth2Token, u, { refreshToken: t3 }), (0, n2.L)(i.Zf.GetRefreshedThirdpartyOauth2Token, u);
            } }, utilities: { closeApp: function() {
              (0, e2.h)(i.Zf.CloseApp, u);
            }, openAssetChooser: function() {
              (0, e2.h)(i.Zf.OpenAssetChooser, u);
            } } }, l = r(70), f = r(275), m = r(494), d = function() {
              return p;
            };
          }(), o;
        }();
      });
    }
  });

  // custom_block/src/index.tsx
  var import_embed_react = __toESM(require_build());
  var import_app_bridge = __toESM(require_dist());

  // node_modules/style-inject/dist/style-inject.es.js
  function styleInject(css, ref) {
    if (ref === void 0)
      ref = {};
    var insertAt = ref.insertAt;
    if (!css || typeof document === "undefined") {
      return;
    }
    var head = document.head || document.getElementsByTagName("head")[0];
    var style = document.createElement("style");
    style.type = "text/css";
    if (insertAt === "top") {
      if (head.firstChild) {
        head.insertBefore(style, head.firstChild);
      } else {
        head.appendChild(style);
      }
    } else {
      head.appendChild(style);
    }
    if (style.styleSheet) {
      style.styleSheet.cssText = css;
    } else {
      style.appendChild(document.createTextNode(css));
    }
  }
  var style_inject_es_default = styleInject;

  // custom_block/src/style.module.css
  var css_248z = ".style-module_placeholder__CtMIb {\n    color: #ddd;\n}\n\n.style-module_container__nuIMy {\n    overflow: hidden;\n}\n";
  var style_module_default = { "placeholder": "style-module_placeholder__CtMIb", "container": "style-module_container__nuIMy" };
  style_inject_es_default(css_248z);

  // custom_block/src/index.tsx
  var Placeholder = () => /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("p", {
    className: style_module_default.placeholder
  }, "Please enter a Typeform form id in the block settings."));
  var SettingsPlaceholder = () => /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("p", {
    className: style_module_default.placeholder
  }, "Please use the settings to modify this block."));
  function TypeformBlock({ appBridge }) {
    const isEditing = (0, import_app_bridge.useEditorState)();
    const [blockSettings] = (0, import_app_bridge.useBlockSettings)(appBridge);
    if (!blockSettings["form-id"]) {
      return /* @__PURE__ */ React.createElement(Placeholder, null);
    }
    const renderEmbed = () => {
      switch (blockSettings["embed-style"]) {
        case "standard":
          return /* @__PURE__ */ React.createElement(import_embed_react.Widget, {
            style: { height: blockSettings.isHeightCustom ? blockSettings.heightCustom : blockSettings.heightSimple },
            id: blockSettings["form-id"],
            enableSandbox: !isEditing
          });
        case "popupButton":
          return /* @__PURE__ */ React.createElement(import_embed_react.PopupButton, {
            size: 100,
            opacity: 100,
            className: "tw-outline-none tw-relative tw-flex tw-items-center tw-justify-center tw-border-0 tw-rounded tw-cursor-pointer tw-font-sans tw-transition-colors tw-px-4 tw-h-9 tw-text-s tw-text-white tw-bg-black-90 hover:tw-bg-black-100 active:tw-bg-black-superdark dark:tw-text-black dark:tw-bg-white dark:hover:tw-bg-black-10 dark:active:tw-bg-black-20",
            id: blockSettings["form-id"],
            enableSandbox: !isEditing
          }, blockSettings.buttonText);
        case "sliderButton":
          return /* @__PURE__ */ React.createElement(import_embed_react.SliderButton, {
            className: "tw-outline-none tw-relative tw-flex tw-items-center tw-justify-center tw-border-0 tw-rounded tw-cursor-pointer tw-font-sans tw-transition-colors tw-px-4 tw-h-9 tw-text-s tw-text-white tw-bg-black-90 hover:tw-bg-black-100 active:tw-bg-black-superdark dark:tw-text-black dark:tw-bg-white dark:hover:tw-bg-black-10 dark:active:tw-bg-black-20",
            id: blockSettings["form-id"],
            enableSandbox: !isEditing
          }, blockSettings.buttonText);
        case "slider":
          if (isEditing) {
            return /* @__PURE__ */ React.createElement(SettingsPlaceholder, null);
          }
          return /* @__PURE__ */ React.createElement(import_embed_react.Sidetab, {
            id: blockSettings["form-id"],
            enableSandbox: !isEditing,
            buttonText: "Yolo"
          }, blockSettings.buttonText);
        default:
          return /* @__PURE__ */ React.createElement(Placeholder, null);
      }
    };
    return /* @__PURE__ */ React.createElement("div", {
      className: style_module_default.container
    }, renderEmbed());
  }

  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
  var __esm = (fn3, res) => function __init() {
    return fn3 && (res = (0, fn3[__getOwnPropNames(fn3)[0]])(fn3 = 0)), res;
  };
  var __export = (target, all) => {
    for (var name in all)
      __defProp(target, name, { get: all[name], enumerable: true });
  };
  var __reExport = (target, module, copyDefault, desc) => {
    if (module && typeof module === "object" || typeof module === "function") {
      for (let key of __getOwnPropNames(module))
        if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
          __defProp(target, key, { get: () => module[key], enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable });
    }
    return target;
  };
  var __toCommonJS = /* @__PURE__ */ ((cache) => {
    return (module, temp) => {
      return cache && cache.get(module) || (temp = __reExport(__markAsModule({}), module, 1), cache && cache.set(module, temp), temp);
    };
  })(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);

  // custom_block/node_modules/@emotion/memoize/dist/memoize.esm.js
  function memoize(fn3) {
    var cache = {};
    return function(arg) {
      if (cache[arg] === void 0)
        cache[arg] = fn3(arg);
      return cache[arg];
    };
  }
  var memoize_esm_default;
  var init_memoize_esm = __esm({
    "custom_block/node_modules/@emotion/memoize/dist/memoize.esm.js"() {
      memoize_esm_default = memoize;
    }
  });

  // custom_block/node_modules/@emotion/is-prop-valid/dist/is-prop-valid.esm.js
  var is_prop_valid_esm_exports = {};
  __export(is_prop_valid_esm_exports, {
    default: () => is_prop_valid_esm_default
  });
  var reactPropsRegex, index, is_prop_valid_esm_default;
  var init_is_prop_valid_esm = __esm({
    "custom_block/node_modules/@emotion/is-prop-valid/dist/is-prop-valid.esm.js"() {
      init_memoize_esm();
      reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;
      index = memoize_esm_default(function(prop) {
        return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111 && prop.charCodeAt(1) === 110 && prop.charCodeAt(2) < 91;
      });
      is_prop_valid_esm_default = index;
    }
  });
  var __defProp2 = Object.defineProperty;
  var __defProps = Object.defineProperties;
  var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
  var __getOwnPropSymbols = Object.getOwnPropertySymbols;
  var __hasOwnProp2 = Object.prototype.hasOwnProperty;
  var __propIsEnum = Object.prototype.propertyIsEnumerable;
  var __defNormalProp = (obj, key, value) => key in obj ? __defProp2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
  var __spreadValues = (a2, b2) => {
    for (var prop in b2 || (b2 = {}))
      if (__hasOwnProp2.call(b2, prop))
        __defNormalProp(a2, prop, b2[prop]);
    if (__getOwnPropSymbols)
      for (var prop of __getOwnPropSymbols(b2)) {
        if (__propIsEnum.call(b2, prop))
          __defNormalProp(a2, prop, b2[prop]);
      }
    return a2;
  };
  var __spreadProps = (a2, b2) => __defProps(a2, __getOwnPropDescs(b2));
  var __objRest = (source, exclude) => {
    var target = {};
    for (var prop in source)
      if (__hasOwnProp2.call(source, prop) && exclude.indexOf(prop) < 0)
        target[prop] = source[prop];
    if (source != null && __getOwnPropSymbols)
      for (var prop of __getOwnPropSymbols(source)) {
        if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
          target[prop] = source[prop];
      }
    return target;
  };
  var ColorFormat;
  (function(ColorFormat2) {
    ColorFormat2["Hex"] = "Hex";
    ColorFormat2["Rgba"] = "Rgba";
  })(ColorFormat || (ColorFormat = {}));
  var IconSize;
  (function(IconSize2) {
    IconSize2["Size8"] = "Size8";
    IconSize2["Size12"] = "Size12";
    IconSize2["Size16"] = "Size16";
    IconSize2["Size20"] = "Size20";
    IconSize2["Size24"] = "Size24";
    IconSize2["Size32"] = "Size32";
  })(IconSize || (IconSize = {}));
  var IconSizeMap = {
    [IconSize.Size8]: "tw-h-2 tw-w-2",
    [IconSize.Size12]: "tw-h-3 tw-w-3",
    [IconSize.Size16]: "tw-h-4 tw-w-4",
    [IconSize.Size20]: "tw-h-5 tw-w-5",
    [IconSize.Size24]: "tw-h-6 tw-w-6",
    [IconSize.Size32]: "tw-h-8 tw-w-8"
  };
  function IconAddSimple(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconAddSimple"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M13.065 13.065l.002 4.739c0 .588-.476 1.067-1.064 1.069a1.061 1.061 0 01-1.066-1.062l-.002-4.746-4.746-.002a1.061 1.061 0 01-1.062-1.066 1.069 1.069 0 011.069-1.064l4.739.002-.002-4.739c0-.588.476-1.067 1.064-1.069a1.061 1.061 0 011.066 1.062l.002 4.746 4.746.002c.588 0 1.063.477 1.062 1.066a1.069 1.069 0 01-1.069 1.064l-4.739-.002z"
    }));
  }
  var MemoIconAddSimple = React__default__default["default"].memo(IconAddSimple);
  function IconCaretDown(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconCaretDown"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M18.862 8.48a.83.83 0 01.576-.23.83.83 0 01.576.23.751.751 0 010 1.093L11.98 17.25 3.945 9.573a.75.75 0 01.043-1.053.84.84 0 011.101-.04l6.89 6.575 6.883-6.576z"
    }));
  }
  var MemoIconCaretDown = React__default__default["default"].memo(IconCaretDown);
  function IconMinus(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 16 16",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconMinus"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M4.126 8.708a.707.707 0 01-.708-.71.713.713 0 01.712-.71l7.744.003c.392 0 .709.318.707.71a.713.713 0 01-.712.71l-7.743-.003z"
    }));
  }
  var MemoIconMinus = React__default__default["default"].memo(IconMinus);
  var merge$1 = (classNames) => classNames.filter(Boolean).join(" ");
  function _objectWithoutPropertiesLoose$2(source, excluded) {
    if (source == null)
      return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i2;
    for (i2 = 0; i2 < sourceKeys.length; i2++) {
      key = sourceKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      target[key] = source[key];
    }
    return target;
  }
  function toVal(mix2) {
    var k2, y2, str = "";
    if (typeof mix2 === "string" || typeof mix2 === "number") {
      str += mix2;
    } else if (typeof mix2 === "object") {
      if (Array.isArray(mix2)) {
        for (k2 = 0; k2 < mix2.length; k2++) {
          if (mix2[k2]) {
            if (y2 = toVal(mix2[k2])) {
              str && (str += " ");
              str += y2;
            }
          }
        }
      } else {
        for (k2 in mix2) {
          if (mix2[k2]) {
            str && (str += " ");
            str += k2;
          }
        }
      }
    }
    return str;
  }
  function _clsx() {
    var i2 = 0, tmp, x2, str = "";
    while (i2 < arguments.length) {
      if (tmp = arguments[i2++]) {
        if (x2 = toVal(tmp)) {
          str && (str += " ");
          str += x2;
        }
      }
    }
    return str;
  }
  function _extends$a() {
    _extends$a = Object.assign || function(target) {
      for (var i2 = 1; i2 < arguments.length; i2++) {
        var source = arguments[i2];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends$a.apply(this, arguments);
  }
  function useControlledState(value, defaultValue, onChange) {
    let [stateValue, setStateValue] = React__default.useState(value || defaultValue);
    let ref = React__default.useRef(value !== void 0);
    let wasControlled = ref.current;
    let isControlled = value !== void 0;
    let stateRef = React__default.useRef(stateValue);
    if (wasControlled !== isControlled) {
      console.warn("WARN: A component changed from " + (wasControlled ? "controlled" : "uncontrolled") + " to " + (isControlled ? "controlled" : "uncontrolled") + ".");
    }
    ref.current = isControlled;
    let setValue = React__default.useCallback(function(value2) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      let onChangeCaller = function onChangeCaller2(value3) {
        if (onChange) {
          if (!Object.is(stateRef.current, value3)) {
            for (var _len2 = arguments.length, onChangeArgs = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
              onChangeArgs[_key2 - 1] = arguments[_key2];
            }
            onChange(value3, ...onChangeArgs);
          }
        }
        if (!isControlled) {
          stateRef.current = value3;
        }
      };
      if (typeof value2 === "function") {
        let updateFunction = function updateFunction2(oldValue) {
          for (var _len3 = arguments.length, functionArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
            functionArgs[_key3 - 1] = arguments[_key3];
          }
          let interceptedValue = value2(isControlled ? stateRef.current : oldValue, ...functionArgs);
          onChangeCaller(interceptedValue, ...args);
          if (!isControlled) {
            return interceptedValue;
          }
          return oldValue;
        };
        setStateValue(updateFunction);
      } else {
        if (!isControlled) {
          setStateValue(value2);
        }
        onChangeCaller(value2, ...args);
      }
    }, [isControlled, onChange]);
    if (isControlled) {
      stateRef.current = value;
    } else {
      value = stateValue;
    }
    return [value, setValue];
  }
  var $f01a183cc7bdff77849e49ad26eb904$var$defaultContext = {
    prefix: String(Math.round(Math.random() * 1e10)),
    current: 0
  };
  var $f01a183cc7bdff77849e49ad26eb904$var$SSRContext = /* @__PURE__ */ React__default__default["default"].createContext($f01a183cc7bdff77849e49ad26eb904$var$defaultContext);
  var $f01a183cc7bdff77849e49ad26eb904$var$canUseDOM = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
  function useSSRSafeId(defaultId) {
    let ctx = React__default.useContext($f01a183cc7bdff77849e49ad26eb904$var$SSRContext);
    if (ctx === $f01a183cc7bdff77849e49ad26eb904$var$defaultContext && !$f01a183cc7bdff77849e49ad26eb904$var$canUseDOM) {
      console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");
    }
    return React__default.useMemo(() => defaultId || "react-aria" + ctx.prefix + "-" + ++ctx.current, [defaultId]);
  }
  function useIsSSR() {
    let cur = React__default.useContext($f01a183cc7bdff77849e49ad26eb904$var$SSRContext);
    let isInSSRContext = cur !== $f01a183cc7bdff77849e49ad26eb904$var$defaultContext;
    let [isSSR, setIsSSR] = React__default.useState(isInSSRContext);
    if (typeof window !== "undefined" && isInSSRContext) {
      React__default.useLayoutEffect(() => {
        setIsSSR(false);
      }, []);
    }
    return isSSR;
  }
  var useLayoutEffect2 = typeof window !== "undefined" ? React__default__default["default"].useLayoutEffect : () => {
  };
  var $f8b5fdd96fb429d7102983f777c41307$var$idsUpdaterMap = /* @__PURE__ */ new Map();
  function useId(defaultId) {
    let isRendering = React__default.useRef(true);
    isRendering.current = true;
    let [value, setValue] = React__default.useState(defaultId);
    let nextId = React__default.useRef(null);
    let res = useSSRSafeId(value);
    let updateValue = (val) => {
      if (!isRendering.current) {
        setValue(val);
      } else {
        nextId.current = val;
      }
    };
    $f8b5fdd96fb429d7102983f777c41307$var$idsUpdaterMap.set(res, updateValue);
    useLayoutEffect2(() => {
      isRendering.current = false;
    }, [updateValue]);
    useLayoutEffect2(() => {
      let r2 = res;
      return () => {
        $f8b5fdd96fb429d7102983f777c41307$var$idsUpdaterMap.delete(r2);
      };
    }, [res]);
    React__default.useEffect(() => {
      let newId = nextId.current;
      if (newId) {
        setValue(newId);
        nextId.current = null;
      }
    }, [setValue, updateValue]);
    return res;
  }
  function mergeIds(idA, idB) {
    if (idA === idB) {
      return idA;
    }
    let setIdA = $f8b5fdd96fb429d7102983f777c41307$var$idsUpdaterMap.get(idA);
    if (setIdA) {
      setIdA(idB);
      return idB;
    }
    let setIdB = $f8b5fdd96fb429d7102983f777c41307$var$idsUpdaterMap.get(idB);
    if (setIdB) {
      setIdB(idA);
      return idA;
    }
    return idB;
  }
  function useSlotId() {
    let id2 = useId();
    let [resolvedId, setResolvedId] = React__default.useState(id2);
    useLayoutEffect2(() => {
      let setCurr = $f8b5fdd96fb429d7102983f777c41307$var$idsUpdaterMap.get(id2);
      if (setCurr && !document.getElementById(id2)) {
        setResolvedId(null);
      } else {
        setResolvedId(id2);
      }
    }, [id2]);
    return resolvedId;
  }
  function chain() {
    for (var _len = arguments.length, callbacks = new Array(_len), _key = 0; _key < _len; _key++) {
      callbacks[_key] = arguments[_key];
    }
    return function() {
      for (let callback of callbacks) {
        if (typeof callback === "function") {
          callback(...arguments);
        }
      }
    };
  }
  function mergeProps() {
    let result = _extends$a({}, arguments.length <= 0 ? void 0 : arguments[0]);
    for (let i2 = 1; i2 < arguments.length; i2++) {
      let props = i2 < 0 || arguments.length <= i2 ? void 0 : arguments[i2];
      for (let key in props) {
        let a2 = result[key];
        let b2 = props[key];
        if (typeof a2 === "function" && typeof b2 === "function" && key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= 65 && key.charCodeAt(2) <= 90) {
          result[key] = chain(a2, b2);
        } else if ((key === "className" || key === "UNSAFE_className") && typeof a2 === "string" && typeof b2 === "string") {
          result[key] = _clsx(a2, b2);
        } else if (key === "id" && a2 && b2) {
          result.id = mergeIds(a2, b2);
        } else {
          result[key] = b2 !== void 0 ? b2 : a2;
        }
      }
    }
    return result;
  }
  var $f6a965352cabf1a7c37e8c1337e5eab$var$DOMPropNames = /* @__PURE__ */ new Set(["id"]);
  var $f6a965352cabf1a7c37e8c1337e5eab$var$labelablePropNames = /* @__PURE__ */ new Set(["aria-label", "aria-labelledby", "aria-describedby", "aria-details"]);
  var $f6a965352cabf1a7c37e8c1337e5eab$var$propRe = /^(data-.*)$/;
  function filterDOMProps(props, opts) {
    if (opts === void 0) {
      opts = {};
    }
    let {
      labelable,
      propNames
    } = opts;
    let filteredProps = {};
    for (const prop in props) {
      if (Object.prototype.hasOwnProperty.call(props, prop) && ($f6a965352cabf1a7c37e8c1337e5eab$var$DOMPropNames.has(prop) || labelable && $f6a965352cabf1a7c37e8c1337e5eab$var$labelablePropNames.has(prop) || propNames != null && propNames.has(prop) || $f6a965352cabf1a7c37e8c1337e5eab$var$propRe.test(prop))) {
        filteredProps[prop] = props[prop];
      }
    }
    return filteredProps;
  }
  function focusWithoutScrolling(element) {
    if ($bc7c9c3af78f5218ff72cecce15730$var$supportsPreventScroll()) {
      element.focus({
        preventScroll: true
      });
    } else {
      let scrollableElements = $bc7c9c3af78f5218ff72cecce15730$var$getScrollableElements(element);
      element.focus();
      $bc7c9c3af78f5218ff72cecce15730$var$restoreScrollPosition(scrollableElements);
    }
  }
  var $bc7c9c3af78f5218ff72cecce15730$var$supportsPreventScrollCached = null;
  function $bc7c9c3af78f5218ff72cecce15730$var$supportsPreventScroll() {
    if ($bc7c9c3af78f5218ff72cecce15730$var$supportsPreventScrollCached == null) {
      $bc7c9c3af78f5218ff72cecce15730$var$supportsPreventScrollCached = false;
      try {
        var focusElem = document.createElement("div");
        focusElem.focus({
          get preventScroll() {
            $bc7c9c3af78f5218ff72cecce15730$var$supportsPreventScrollCached = true;
            return true;
          }
        });
      } catch (e2) {
      }
    }
    return $bc7c9c3af78f5218ff72cecce15730$var$supportsPreventScrollCached;
  }
  function $bc7c9c3af78f5218ff72cecce15730$var$getScrollableElements(element) {
    var parent = element.parentNode;
    var scrollableElements = [];
    var rootScrollingElement = document.scrollingElement || document.documentElement;
    while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
      if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth) {
        scrollableElements.push({
          element: parent,
          scrollTop: parent.scrollTop,
          scrollLeft: parent.scrollLeft
        });
      }
      parent = parent.parentNode;
    }
    if (rootScrollingElement instanceof HTMLElement) {
      scrollableElements.push({
        element: rootScrollingElement,
        scrollTop: rootScrollingElement.scrollTop,
        scrollLeft: rootScrollingElement.scrollLeft
      });
    }
    return scrollableElements;
  }
  function $bc7c9c3af78f5218ff72cecce15730$var$restoreScrollPosition(scrollableElements) {
    for (let {
      element,
      scrollTop: scrollTop2,
      scrollLeft: scrollLeft2
    } of scrollableElements) {
      element.scrollTop = scrollTop2;
      element.scrollLeft = scrollLeft2;
    }
  }
  var $b3e8d5c5f32fa26afa6df1b81f09b6b8$var$transitionsByElement = /* @__PURE__ */ new Map();
  var $b3e8d5c5f32fa26afa6df1b81f09b6b8$var$transitionCallbacks = /* @__PURE__ */ new Set();
  function $b3e8d5c5f32fa26afa6df1b81f09b6b8$var$setupGlobalEvents() {
    if (typeof window === "undefined") {
      return;
    }
    let onTransitionStart = (e2) => {
      let transitions = $b3e8d5c5f32fa26afa6df1b81f09b6b8$var$transitionsByElement.get(e2.target);
      if (!transitions) {
        transitions = /* @__PURE__ */ new Set();
        $b3e8d5c5f32fa26afa6df1b81f09b6b8$var$transitionsByElement.set(e2.target, transitions);
        e2.target.addEventListener("transitioncancel", onTransitionEnd);
      }
      transitions.add(e2.propertyName);
    };
    let onTransitionEnd = (e2) => {
      let properties2 = $b3e8d5c5f32fa26afa6df1b81f09b6b8$var$transitionsByElement.get(e2.target);
      if (!properties2) {
        return;
      }
      properties2.delete(e2.propertyName);
      if (properties2.size === 0) {
        e2.target.removeEventListener("transitioncancel", onTransitionEnd);
        $b3e8d5c5f32fa26afa6df1b81f09b6b8$var$transitionsByElement.delete(e2.target);
      }
      if ($b3e8d5c5f32fa26afa6df1b81f09b6b8$var$transitionsByElement.size === 0) {
        for (let cb2 of $b3e8d5c5f32fa26afa6df1b81f09b6b8$var$transitionCallbacks) {
          cb2();
        }
        $b3e8d5c5f32fa26afa6df1b81f09b6b8$var$transitionCallbacks.clear();
      }
    };
    document.body.addEventListener("transitionrun", onTransitionStart);
    document.body.addEventListener("transitionend", onTransitionEnd);
  }
  if (typeof document !== "undefined") {
    if (document.readyState !== "loading") {
      $b3e8d5c5f32fa26afa6df1b81f09b6b8$var$setupGlobalEvents();
    } else {
      document.addEventListener("DOMContentLoaded", $b3e8d5c5f32fa26afa6df1b81f09b6b8$var$setupGlobalEvents);
    }
  }
  function runAfterTransition(fn3) {
    requestAnimationFrame(() => {
      if ($b3e8d5c5f32fa26afa6df1b81f09b6b8$var$transitionsByElement.size === 0) {
        fn3();
      } else {
        $b3e8d5c5f32fa26afa6df1b81f09b6b8$var$transitionCallbacks.add(fn3);
      }
    });
  }
  function useGlobalListeners() {
    let globalListeners = React__default.useRef(/* @__PURE__ */ new Map());
    let addGlobalListener = React__default.useCallback((eventTarget, type, listener, options) => {
      globalListeners.current.set(listener, {
        type,
        eventTarget,
        options
      });
      eventTarget.addEventListener(type, listener, options);
    }, []);
    let removeGlobalListener = React__default.useCallback((eventTarget, type, listener, options) => {
      eventTarget.removeEventListener(type, listener, options);
      globalListeners.current.delete(listener);
    }, []);
    let removeAllGlobalListeners = React__default.useCallback(() => {
      globalListeners.current.forEach((value, key) => {
        removeGlobalListener(value.eventTarget, value.type, key, value.options);
      });
    }, [removeGlobalListener]);
    React__default.useEffect(() => {
      return removeAllGlobalListeners;
    }, [removeAllGlobalListeners]);
    return {
      addGlobalListener,
      removeGlobalListener,
      removeAllGlobalListeners
    };
  }
  function useSyncRef(context, ref) {
    useLayoutEffect2(() => {
      if (context && context.ref && ref) {
        context.ref.current = ref.current;
        return () => {
          context.ref.current = null;
        };
      }
    }, [context, ref]);
  }
  function $b0986c1243f71db8e992f67117a1ed9$var$testPlatform(re) {
    return typeof window !== "undefined" && window.navigator != null ? re.test(window.navigator.platform) : false;
  }
  function isMac() {
    return $b0986c1243f71db8e992f67117a1ed9$var$testPlatform(/^Mac/);
  }
  var $e17c9db826984f8ab8e5d837bf0b8$var$state = "default";
  var $e17c9db826984f8ab8e5d837bf0b8$var$savedUserSelect = "";
  function $e17c9db826984f8ab8e5d837bf0b8$export$disableTextSelection() {
    if ($e17c9db826984f8ab8e5d837bf0b8$var$state === "default") {
      $e17c9db826984f8ab8e5d837bf0b8$var$savedUserSelect = document.documentElement.style.webkitUserSelect;
      document.documentElement.style.webkitUserSelect = "none";
    }
    $e17c9db826984f8ab8e5d837bf0b8$var$state = "disabled";
  }
  function $e17c9db826984f8ab8e5d837bf0b8$export$restoreTextSelection() {
    if ($e17c9db826984f8ab8e5d837bf0b8$var$state !== "disabled") {
      return;
    }
    $e17c9db826984f8ab8e5d837bf0b8$var$state = "restoring";
    setTimeout(() => {
      runAfterTransition(() => {
        if ($e17c9db826984f8ab8e5d837bf0b8$var$state === "restoring") {
          if (document.documentElement.style.webkitUserSelect === "none") {
            document.documentElement.style.webkitUserSelect = $e17c9db826984f8ab8e5d837bf0b8$var$savedUserSelect || "";
          }
          $e17c9db826984f8ab8e5d837bf0b8$var$savedUserSelect = "";
          $e17c9db826984f8ab8e5d837bf0b8$var$state = "default";
        }
      });
    }, 300);
  }
  function $f67ef9f1b8ed09b4b00fd0840cd8b94b$export$isVirtualClick(event) {
    if (event.mozInputSource === 0 && event.isTrusted) {
      return true;
    }
    return event.detail === 0 && !event.pointerType;
  }
  var $a3ff51240de6f955c79cf17a88e349$export$PressResponderContext = /* @__PURE__ */ React__default__default["default"].createContext(null);
  $a3ff51240de6f955c79cf17a88e349$export$PressResponderContext.displayName = "PressResponderContext";
  function $ffc54430b1dbeee65879852feaaff07d$var$usePressResponderContext(props) {
    let context = React__default.useContext($a3ff51240de6f955c79cf17a88e349$export$PressResponderContext);
    if (context) {
      let {
        register
      } = context, contextProps = _objectWithoutPropertiesLoose$2(context, ["register"]);
      props = mergeProps(contextProps, props);
      register();
    }
    useSyncRef(context, props.ref);
    return props;
  }
  function usePress(props) {
    let _usePressResponderCon = $ffc54430b1dbeee65879852feaaff07d$var$usePressResponderContext(props), {
      onPress,
      onPressChange,
      onPressStart,
      onPressEnd,
      onPressUp,
      isDisabled,
      isPressed: isPressedProp,
      preventFocusOnPress,
      shouldCancelOnPointerExit
    } = _usePressResponderCon, domProps = _objectWithoutPropertiesLoose$2(_usePressResponderCon, ["onPress", "onPressChange", "onPressStart", "onPressEnd", "onPressUp", "isDisabled", "isPressed", "preventFocusOnPress", "shouldCancelOnPointerExit", "ref"]);
    let propsRef = React__default.useRef(null);
    propsRef.current = {
      onPress,
      onPressChange,
      onPressStart,
      onPressEnd,
      onPressUp,
      isDisabled,
      shouldCancelOnPointerExit
    };
    let [isPressed, setPressed] = React__default.useState(false);
    let ref = React__default.useRef({
      isPressed: false,
      ignoreEmulatedMouseEvents: false,
      ignoreClickAfterPress: false,
      didFirePressStart: false,
      activePointerId: null,
      target: null,
      isOverTarget: false,
      pointerType: null
    });
    let {
      addGlobalListener,
      removeAllGlobalListeners
    } = useGlobalListeners();
    let pressProps = React__default.useMemo(() => {
      let state = ref.current;
      let triggerPressStart = (originalEvent, pointerType) => {
        let {
          onPressStart: onPressStart2,
          onPressChange: onPressChange2,
          isDisabled: isDisabled2
        } = propsRef.current;
        if (isDisabled2 || state.didFirePressStart) {
          return;
        }
        if (onPressStart2) {
          onPressStart2({
            type: "pressstart",
            pointerType,
            target: originalEvent.currentTarget,
            shiftKey: originalEvent.shiftKey,
            metaKey: originalEvent.metaKey,
            ctrlKey: originalEvent.ctrlKey,
            altKey: originalEvent.altKey
          });
        }
        if (onPressChange2) {
          onPressChange2(true);
        }
        state.didFirePressStart = true;
        setPressed(true);
      };
      let triggerPressEnd = function triggerPressEnd2(originalEvent, pointerType, wasPressed) {
        if (wasPressed === void 0) {
          wasPressed = true;
        }
        let {
          onPressEnd: onPressEnd2,
          onPressChange: onPressChange2,
          onPress: onPress2,
          isDisabled: isDisabled2
        } = propsRef.current;
        if (!state.didFirePressStart) {
          return;
        }
        state.ignoreClickAfterPress = true;
        state.didFirePressStart = false;
        if (onPressEnd2) {
          onPressEnd2({
            type: "pressend",
            pointerType,
            target: originalEvent.currentTarget,
            shiftKey: originalEvent.shiftKey,
            metaKey: originalEvent.metaKey,
            ctrlKey: originalEvent.ctrlKey,
            altKey: originalEvent.altKey
          });
        }
        if (onPressChange2) {
          onPressChange2(false);
        }
        setPressed(false);
        if (onPress2 && wasPressed && !isDisabled2) {
          onPress2({
            type: "press",
            pointerType,
            target: originalEvent.currentTarget,
            shiftKey: originalEvent.shiftKey,
            metaKey: originalEvent.metaKey,
            ctrlKey: originalEvent.ctrlKey,
            altKey: originalEvent.altKey
          });
        }
      };
      let triggerPressUp = (originalEvent, pointerType) => {
        let {
          onPressUp: onPressUp2,
          isDisabled: isDisabled2
        } = propsRef.current;
        if (isDisabled2) {
          return;
        }
        if (onPressUp2) {
          onPressUp2({
            type: "pressup",
            pointerType,
            target: originalEvent.currentTarget,
            shiftKey: originalEvent.shiftKey,
            metaKey: originalEvent.metaKey,
            ctrlKey: originalEvent.ctrlKey,
            altKey: originalEvent.altKey
          });
        }
      };
      let cancel2 = (e2) => {
        if (state.isPressed) {
          if (state.isOverTarget) {
            triggerPressEnd($ffc54430b1dbeee65879852feaaff07d$var$createEvent(state.target, e2), state.pointerType, false);
          }
          state.isPressed = false;
          state.isOverTarget = false;
          state.activePointerId = null;
          state.pointerType = null;
          removeAllGlobalListeners();
          $e17c9db826984f8ab8e5d837bf0b8$export$restoreTextSelection();
        }
      };
      let pressProps2 = {
        onKeyDown(e2) {
          if ($ffc54430b1dbeee65879852feaaff07d$var$isValidKeyboardEvent(e2.nativeEvent) && e2.currentTarget.contains(e2.target)) {
            e2.preventDefault();
            e2.stopPropagation();
            if (!state.isPressed && !e2.repeat) {
              state.target = e2.currentTarget;
              state.isPressed = true;
              triggerPressStart(e2, "keyboard");
              addGlobalListener(document, "keyup", onKeyUp, false);
            }
          }
        },
        onKeyUp(e2) {
          if ($ffc54430b1dbeee65879852feaaff07d$var$isValidKeyboardEvent(e2.nativeEvent) && !e2.repeat && e2.currentTarget.contains(e2.target)) {
            triggerPressUp($ffc54430b1dbeee65879852feaaff07d$var$createEvent(state.target, e2), "keyboard");
          }
        },
        onClick(e2) {
          if (e2 && !e2.currentTarget.contains(e2.target)) {
            return;
          }
          if (e2 && e2.button === 0) {
            e2.stopPropagation();
            if (isDisabled) {
              e2.preventDefault();
            }
            if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && $f67ef9f1b8ed09b4b00fd0840cd8b94b$export$isVirtualClick(e2.nativeEvent)) {
              if (!isDisabled && !preventFocusOnPress) {
                focusWithoutScrolling(e2.currentTarget);
              }
              triggerPressStart(e2, "virtual");
              triggerPressUp(e2, "virtual");
              triggerPressEnd(e2, "virtual");
            }
            state.ignoreEmulatedMouseEvents = false;
            state.ignoreClickAfterPress = false;
          }
        }
      };
      let onKeyUp = (e2) => {
        if (state.isPressed && $ffc54430b1dbeee65879852feaaff07d$var$isValidKeyboardEvent(e2)) {
          e2.preventDefault();
          e2.stopPropagation();
          state.isPressed = false;
          triggerPressEnd($ffc54430b1dbeee65879852feaaff07d$var$createEvent(state.target, e2), "keyboard", e2.target === state.target);
          removeAllGlobalListeners();
          if (e2.target === state.target && $ffc54430b1dbeee65879852feaaff07d$var$isHTMLAnchorLink(state.target) || state.target.getAttribute("role") === "link") {
            state.target.click();
          }
        }
      };
      if (typeof PointerEvent !== "undefined") {
        pressProps2.onPointerDown = (e2) => {
          if (e2.button !== 0 || !e2.currentTarget.contains(e2.target)) {
            return;
          }
          if ($ffc54430b1dbeee65879852feaaff07d$var$shouldPreventDefault(e2.target)) {
            e2.preventDefault();
          }
          state.pointerType = $ffc54430b1dbeee65879852feaaff07d$var$isVirtualPointerEvent(e2.nativeEvent) ? "virtual" : e2.pointerType;
          e2.stopPropagation();
          if (!state.isPressed) {
            state.isPressed = true;
            state.isOverTarget = true;
            state.activePointerId = e2.pointerId;
            state.target = e2.currentTarget;
            if (!isDisabled && !preventFocusOnPress) {
              focusWithoutScrolling(e2.currentTarget);
            }
            $e17c9db826984f8ab8e5d837bf0b8$export$disableTextSelection();
            triggerPressStart(e2, state.pointerType);
            addGlobalListener(document, "pointermove", onPointerMove, false);
            addGlobalListener(document, "pointerup", onPointerUp, false);
            addGlobalListener(document, "pointercancel", onPointerCancel, false);
          }
        };
        pressProps2.onMouseDown = (e2) => {
          if (!e2.currentTarget.contains(e2.target)) {
            return;
          }
          if (e2.button === 0) {
            if ($ffc54430b1dbeee65879852feaaff07d$var$shouldPreventDefault(e2.target)) {
              e2.preventDefault();
            }
            e2.stopPropagation();
          }
        };
        pressProps2.onPointerUp = (e2) => {
          if (!e2.currentTarget.contains(e2.target)) {
            return;
          }
          if (e2.button === 0 && $ffc54430b1dbeee65879852feaaff07d$var$isOverTarget(e2, e2.currentTarget)) {
            triggerPressUp(e2, state.pointerType || ($ffc54430b1dbeee65879852feaaff07d$var$isVirtualPointerEvent(e2.nativeEvent) ? "virtual" : e2.pointerType));
          }
        };
        let onPointerMove = (e2) => {
          if (e2.pointerId !== state.activePointerId) {
            return;
          }
          if ($ffc54430b1dbeee65879852feaaff07d$var$isOverTarget(e2, state.target)) {
            if (!state.isOverTarget) {
              state.isOverTarget = true;
              triggerPressStart($ffc54430b1dbeee65879852feaaff07d$var$createEvent(state.target, e2), state.pointerType);
            }
          } else if (state.isOverTarget) {
            state.isOverTarget = false;
            triggerPressEnd($ffc54430b1dbeee65879852feaaff07d$var$createEvent(state.target, e2), state.pointerType, false);
            if (propsRef.current.shouldCancelOnPointerExit) {
              cancel2(e2);
            }
          }
        };
        let onPointerUp = (e2) => {
          if (e2.pointerId === state.activePointerId && state.isPressed && e2.button === 0) {
            if ($ffc54430b1dbeee65879852feaaff07d$var$isOverTarget(e2, state.target)) {
              triggerPressEnd($ffc54430b1dbeee65879852feaaff07d$var$createEvent(state.target, e2), state.pointerType);
            } else if (state.isOverTarget) {
              triggerPressEnd($ffc54430b1dbeee65879852feaaff07d$var$createEvent(state.target, e2), state.pointerType, false);
            }
            state.isPressed = false;
            state.isOverTarget = false;
            state.activePointerId = null;
            state.pointerType = null;
            removeAllGlobalListeners();
            $e17c9db826984f8ab8e5d837bf0b8$export$restoreTextSelection();
          }
        };
        let onPointerCancel = (e2) => {
          cancel2(e2);
        };
        pressProps2.onDragStart = (e2) => {
          if (!e2.currentTarget.contains(e2.target)) {
            return;
          }
          cancel2(e2);
        };
      } else {
        pressProps2.onMouseDown = (e2) => {
          if (e2.button !== 0 || !e2.currentTarget.contains(e2.target)) {
            return;
          }
          if ($ffc54430b1dbeee65879852feaaff07d$var$shouldPreventDefault(e2.target)) {
            e2.preventDefault();
          }
          e2.stopPropagation();
          if (state.ignoreEmulatedMouseEvents) {
            return;
          }
          state.isPressed = true;
          state.isOverTarget = true;
          state.target = e2.currentTarget;
          state.pointerType = $f67ef9f1b8ed09b4b00fd0840cd8b94b$export$isVirtualClick(e2.nativeEvent) ? "virtual" : "mouse";
          if (!isDisabled && !preventFocusOnPress) {
            focusWithoutScrolling(e2.currentTarget);
          }
          triggerPressStart(e2, state.pointerType);
          addGlobalListener(document, "mouseup", onMouseUp, false);
        };
        pressProps2.onMouseEnter = (e2) => {
          if (!e2.currentTarget.contains(e2.target)) {
            return;
          }
          e2.stopPropagation();
          if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
            state.isOverTarget = true;
            triggerPressStart(e2, state.pointerType);
          }
        };
        pressProps2.onMouseLeave = (e2) => {
          if (!e2.currentTarget.contains(e2.target)) {
            return;
          }
          e2.stopPropagation();
          if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
            state.isOverTarget = false;
            triggerPressEnd(e2, state.pointerType, false);
            if (propsRef.current.shouldCancelOnPointerExit) {
              cancel2(e2);
            }
          }
        };
        pressProps2.onMouseUp = (e2) => {
          if (!e2.currentTarget.contains(e2.target)) {
            return;
          }
          if (!state.ignoreEmulatedMouseEvents && e2.button === 0) {
            triggerPressUp(e2, state.pointerType);
          }
        };
        let onMouseUp = (e2) => {
          if (e2.button !== 0) {
            return;
          }
          state.isPressed = false;
          removeAllGlobalListeners();
          if (state.ignoreEmulatedMouseEvents) {
            state.ignoreEmulatedMouseEvents = false;
            return;
          }
          if ($ffc54430b1dbeee65879852feaaff07d$var$isOverTarget(e2, state.target)) {
            triggerPressEnd($ffc54430b1dbeee65879852feaaff07d$var$createEvent(state.target, e2), state.pointerType);
          } else if (state.isOverTarget) {
            triggerPressEnd($ffc54430b1dbeee65879852feaaff07d$var$createEvent(state.target, e2), state.pointerType, false);
          }
          state.isOverTarget = false;
        };
        pressProps2.onTouchStart = (e2) => {
          if (!e2.currentTarget.contains(e2.target)) {
            return;
          }
          e2.stopPropagation();
          let touch = $ffc54430b1dbeee65879852feaaff07d$var$getTouchFromEvent(e2.nativeEvent);
          if (!touch) {
            return;
          }
          state.activePointerId = touch.identifier;
          state.ignoreEmulatedMouseEvents = true;
          state.isOverTarget = true;
          state.isPressed = true;
          state.target = e2.currentTarget;
          state.pointerType = "touch";
          if (!isDisabled && !preventFocusOnPress) {
            focusWithoutScrolling(e2.currentTarget);
          }
          $e17c9db826984f8ab8e5d837bf0b8$export$disableTextSelection();
          triggerPressStart(e2, state.pointerType);
          addGlobalListener(window, "scroll", onScroll, true);
        };
        pressProps2.onTouchMove = (e2) => {
          if (!e2.currentTarget.contains(e2.target)) {
            return;
          }
          e2.stopPropagation();
          if (!state.isPressed) {
            return;
          }
          let touch = $ffc54430b1dbeee65879852feaaff07d$var$getTouchById(e2.nativeEvent, state.activePointerId);
          if (touch && $ffc54430b1dbeee65879852feaaff07d$var$isOverTarget(touch, e2.currentTarget)) {
            if (!state.isOverTarget) {
              state.isOverTarget = true;
              triggerPressStart(e2, state.pointerType);
            }
          } else if (state.isOverTarget) {
            state.isOverTarget = false;
            triggerPressEnd(e2, state.pointerType, false);
            if (propsRef.current.shouldCancelOnPointerExit) {
              cancel2(e2);
            }
          }
        };
        pressProps2.onTouchEnd = (e2) => {
          if (!e2.currentTarget.contains(e2.target)) {
            return;
          }
          e2.stopPropagation();
          if (!state.isPressed) {
            return;
          }
          let touch = $ffc54430b1dbeee65879852feaaff07d$var$getTouchById(e2.nativeEvent, state.activePointerId);
          if (touch && $ffc54430b1dbeee65879852feaaff07d$var$isOverTarget(touch, e2.currentTarget)) {
            triggerPressUp(e2, state.pointerType);
            triggerPressEnd(e2, state.pointerType);
          } else if (state.isOverTarget) {
            triggerPressEnd(e2, state.pointerType, false);
          }
          state.isPressed = false;
          state.activePointerId = null;
          state.isOverTarget = false;
          state.ignoreEmulatedMouseEvents = true;
          $e17c9db826984f8ab8e5d837bf0b8$export$restoreTextSelection();
          removeAllGlobalListeners();
        };
        pressProps2.onTouchCancel = (e2) => {
          if (!e2.currentTarget.contains(e2.target)) {
            return;
          }
          e2.stopPropagation();
          if (state.isPressed) {
            cancel2(e2);
          }
        };
        let onScroll = (e2) => {
          if (state.isPressed && e2.target.contains(state.target)) {
            cancel2({
              currentTarget: state.target,
              shiftKey: false,
              ctrlKey: false,
              metaKey: false,
              altKey: false
            });
          }
        };
        pressProps2.onDragStart = (e2) => {
          if (!e2.currentTarget.contains(e2.target)) {
            return;
          }
          cancel2(e2);
        };
      }
      return pressProps2;
    }, [addGlobalListener, isDisabled, preventFocusOnPress, removeAllGlobalListeners]);
    React__default.useEffect(() => {
      return () => $e17c9db826984f8ab8e5d837bf0b8$export$restoreTextSelection();
    }, []);
    return {
      isPressed: isPressedProp || isPressed,
      pressProps: mergeProps(domProps, pressProps)
    };
  }
  function $ffc54430b1dbeee65879852feaaff07d$var$isHTMLAnchorLink(target) {
    return target.tagName === "A" && target.hasAttribute("href");
  }
  function $ffc54430b1dbeee65879852feaaff07d$var$isValidKeyboardEvent(event) {
    const {
      key,
      target
    } = event;
    const element = target;
    const {
      tagName,
      isContentEditable
    } = element;
    const role = element.getAttribute("role");
    return (key === "Enter" || key === " " || key === "Spacebar") && tagName !== "INPUT" && tagName !== "TEXTAREA" && isContentEditable !== true && (!$ffc54430b1dbeee65879852feaaff07d$var$isHTMLAnchorLink(element) || role === "button" && key !== "Enter") && !(role === "link" && key !== "Enter");
  }
  function $ffc54430b1dbeee65879852feaaff07d$var$getTouchFromEvent(event) {
    const {
      targetTouches
    } = event;
    if (targetTouches.length > 0) {
      return targetTouches[0];
    }
    return null;
  }
  function $ffc54430b1dbeee65879852feaaff07d$var$getTouchById(event, pointerId) {
    const changedTouches = event.changedTouches;
    for (let i2 = 0; i2 < changedTouches.length; i2++) {
      const touch = changedTouches[i2];
      if (touch.identifier === pointerId) {
        return touch;
      }
    }
    return null;
  }
  function $ffc54430b1dbeee65879852feaaff07d$var$createEvent(target, e2) {
    return {
      currentTarget: target,
      shiftKey: e2.shiftKey,
      ctrlKey: e2.ctrlKey,
      metaKey: e2.metaKey,
      altKey: e2.altKey
    };
  }
  function $ffc54430b1dbeee65879852feaaff07d$var$getPointClientRect(point) {
    let offsetX = point.width / 2 || point.radiusX || 0;
    let offsetY = point.height / 2 || point.radiusY || 0;
    return {
      top: point.clientY - offsetY,
      right: point.clientX + offsetX,
      bottom: point.clientY + offsetY,
      left: point.clientX - offsetX
    };
  }
  function $ffc54430b1dbeee65879852feaaff07d$var$areRectanglesOverlapping(a2, b2) {
    if (a2.left > b2.right || b2.left > a2.right) {
      return false;
    }
    if (a2.top > b2.bottom || b2.top > a2.bottom) {
      return false;
    }
    return true;
  }
  function $ffc54430b1dbeee65879852feaaff07d$var$isOverTarget(point, target) {
    let rect = target.getBoundingClientRect();
    let pointRect = $ffc54430b1dbeee65879852feaaff07d$var$getPointClientRect(point);
    return $ffc54430b1dbeee65879852feaaff07d$var$areRectanglesOverlapping(rect, pointRect);
  }
  function $ffc54430b1dbeee65879852feaaff07d$var$shouldPreventDefault(target) {
    return !target.closest('[draggable="true"]');
  }
  function $ffc54430b1dbeee65879852feaaff07d$var$isVirtualPointerEvent(event) {
    return event.width === 0 && event.height === 0;
  }
  function useFocus(props) {
    if (props.isDisabled) {
      return {
        focusProps: {}
      };
    }
    let onFocus, onBlur;
    if (props.onFocus || props.onFocusChange) {
      onFocus = (e2) => {
        if (e2.target === e2.currentTarget) {
          if (props.onFocus) {
            props.onFocus(e2);
          }
          if (props.onFocusChange) {
            props.onFocusChange(true);
          }
        }
      };
    }
    if (props.onBlur || props.onFocusChange) {
      onBlur = (e2) => {
        if (e2.target === e2.currentTarget) {
          if (props.onBlur) {
            props.onBlur(e2);
          }
          if (props.onFocusChange) {
            props.onFocusChange(false);
          }
        }
      };
    }
    return {
      focusProps: {
        onFocus,
        onBlur
      }
    };
  }
  var $d01f69bb2ab5f70dfd0005370a2a2cbc$var$currentModality = null;
  var $d01f69bb2ab5f70dfd0005370a2a2cbc$var$changeHandlers = /* @__PURE__ */ new Set();
  var $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasSetupGlobalListeners = false;
  var $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasEventBeforeFocus = false;
  var $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasBlurredWindowRecently = false;
  var $d01f69bb2ab5f70dfd0005370a2a2cbc$var$FOCUS_VISIBLE_INPUT_KEYS = {
    Tab: true,
    Escape: true
  };
  function $d01f69bb2ab5f70dfd0005370a2a2cbc$var$triggerChangeHandlers(modality, e2) {
    for (let handler of $d01f69bb2ab5f70dfd0005370a2a2cbc$var$changeHandlers) {
      handler(modality, e2);
    }
  }
  function $d01f69bb2ab5f70dfd0005370a2a2cbc$var$isValidKey(e2) {
    return !(e2.metaKey || !isMac() && e2.altKey || e2.ctrlKey || e2.type === "keyup" && (e2.key === "Control" || e2.key === "Shift"));
  }
  function $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handleKeyboardEvent(e2) {
    $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasEventBeforeFocus = true;
    if ($d01f69bb2ab5f70dfd0005370a2a2cbc$var$isValidKey(e2)) {
      $d01f69bb2ab5f70dfd0005370a2a2cbc$var$currentModality = "keyboard";
      $d01f69bb2ab5f70dfd0005370a2a2cbc$var$triggerChangeHandlers("keyboard", e2);
    }
  }
  function $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handlePointerEvent(e2) {
    $d01f69bb2ab5f70dfd0005370a2a2cbc$var$currentModality = "pointer";
    if (e2.type === "mousedown" || e2.type === "pointerdown") {
      $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasEventBeforeFocus = true;
      $d01f69bb2ab5f70dfd0005370a2a2cbc$var$triggerChangeHandlers("pointer", e2);
    }
  }
  function $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handleClickEvent(e2) {
    if ($f67ef9f1b8ed09b4b00fd0840cd8b94b$export$isVirtualClick(e2)) {
      $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasEventBeforeFocus = true;
      $d01f69bb2ab5f70dfd0005370a2a2cbc$var$currentModality = "virtual";
    }
  }
  function $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handleFocusEvent(e2) {
    if (e2.target === window || e2.target === document) {
      return;
    }
    if (!$d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasEventBeforeFocus && !$d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasBlurredWindowRecently) {
      $d01f69bb2ab5f70dfd0005370a2a2cbc$var$currentModality = "virtual";
      $d01f69bb2ab5f70dfd0005370a2a2cbc$var$triggerChangeHandlers("virtual", e2);
    }
    $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasEventBeforeFocus = false;
    $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasBlurredWindowRecently = false;
  }
  function $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handleWindowBlur() {
    $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasEventBeforeFocus = false;
    $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasBlurredWindowRecently = true;
  }
  function $d01f69bb2ab5f70dfd0005370a2a2cbc$var$setupGlobalFocusEvents() {
    if (typeof window === "undefined" || $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasSetupGlobalListeners) {
      return;
    }
    let focus = HTMLElement.prototype.focus;
    HTMLElement.prototype.focus = function() {
      $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasEventBeforeFocus = true;
      focus.apply(this, arguments);
    };
    document.addEventListener("keydown", $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handleKeyboardEvent, true);
    document.addEventListener("keyup", $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handleKeyboardEvent, true);
    document.addEventListener("click", $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handleClickEvent, true);
    window.addEventListener("focus", $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handleFocusEvent, true);
    window.addEventListener("blur", $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handleWindowBlur, false);
    if (typeof PointerEvent !== "undefined") {
      document.addEventListener("pointerdown", $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handlePointerEvent, true);
      document.addEventListener("pointermove", $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handlePointerEvent, true);
      document.addEventListener("pointerup", $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handlePointerEvent, true);
    } else {
      document.addEventListener("mousedown", $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handlePointerEvent, true);
      document.addEventListener("mousemove", $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handlePointerEvent, true);
      document.addEventListener("mouseup", $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handlePointerEvent, true);
    }
    $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasSetupGlobalListeners = true;
  }
  if (typeof document !== "undefined") {
    if (document.readyState !== "loading") {
      $d01f69bb2ab5f70dfd0005370a2a2cbc$var$setupGlobalFocusEvents();
    } else {
      document.addEventListener("DOMContentLoaded", $d01f69bb2ab5f70dfd0005370a2a2cbc$var$setupGlobalFocusEvents);
    }
  }
  function isFocusVisible() {
    return $d01f69bb2ab5f70dfd0005370a2a2cbc$var$currentModality !== "pointer";
  }
  function getInteractionModality() {
    return $d01f69bb2ab5f70dfd0005370a2a2cbc$var$currentModality;
  }
  function $d01f69bb2ab5f70dfd0005370a2a2cbc$var$isKeyboardFocusEvent(isTextInput, modality, e2) {
    return !(isTextInput && modality === "keyboard" && e2 instanceof KeyboardEvent && !$d01f69bb2ab5f70dfd0005370a2a2cbc$var$FOCUS_VISIBLE_INPUT_KEYS[e2.key]);
  }
  function useFocusVisible(props) {
    if (props === void 0) {
      props = {};
    }
    let {
      isTextInput,
      autoFocus
    } = props;
    let [isFocusVisibleState, setFocusVisible] = React__default.useState(autoFocus || isFocusVisible());
    useFocusVisibleListener((isFocusVisible2) => {
      setFocusVisible(isFocusVisible2);
    }, [isTextInput], {
      isTextInput
    });
    return {
      isFocusVisible: isFocusVisibleState
    };
  }
  function useFocusVisibleListener(fn3, deps, opts) {
    $d01f69bb2ab5f70dfd0005370a2a2cbc$var$setupGlobalFocusEvents();
    React__default.useEffect(() => {
      let handler = (modality, e2) => {
        if (!$d01f69bb2ab5f70dfd0005370a2a2cbc$var$isKeyboardFocusEvent(opts == null ? void 0 : opts.isTextInput, modality, e2)) {
          return;
        }
        fn3(isFocusVisible());
      };
      $d01f69bb2ab5f70dfd0005370a2a2cbc$var$changeHandlers.add(handler);
      return () => $d01f69bb2ab5f70dfd0005370a2a2cbc$var$changeHandlers.delete(handler);
    }, deps);
  }
  function useFocusWithin(props) {
    let state = React__default.useRef({
      isFocusWithin: false
    }).current;
    if (props.isDisabled) {
      return {
        focusWithinProps: {}
      };
    }
    let onFocus = (e2) => {
      if (!state.isFocusWithin) {
        if (props.onFocusWithin) {
          props.onFocusWithin(e2);
        }
        if (props.onFocusWithinChange) {
          props.onFocusWithinChange(true);
        }
        state.isFocusWithin = true;
      }
    };
    let onBlur = (e2) => {
      if (state.isFocusWithin && !e2.currentTarget.contains(e2.relatedTarget)) {
        if (props.onBlurWithin) {
          props.onBlurWithin(e2);
        }
        if (props.onFocusWithinChange) {
          props.onFocusWithinChange(false);
        }
        state.isFocusWithin = false;
      }
    };
    return {
      focusWithinProps: {
        onFocus,
        onBlur
      }
    };
  }
  var $b1a784c66b81d90efa4f74e05b$var$globalIgnoreEmulatedMouseEvents = false;
  var $b1a784c66b81d90efa4f74e05b$var$hoverCount = 0;
  function $b1a784c66b81d90efa4f74e05b$var$setGlobalIgnoreEmulatedMouseEvents() {
    $b1a784c66b81d90efa4f74e05b$var$globalIgnoreEmulatedMouseEvents = true;
    setTimeout(() => {
      $b1a784c66b81d90efa4f74e05b$var$globalIgnoreEmulatedMouseEvents = false;
    }, 50);
  }
  function $b1a784c66b81d90efa4f74e05b$var$handleGlobalPointerEvent(e2) {
    if (e2.pointerType === "touch") {
      $b1a784c66b81d90efa4f74e05b$var$setGlobalIgnoreEmulatedMouseEvents();
    }
  }
  function $b1a784c66b81d90efa4f74e05b$var$setupGlobalTouchEvents() {
    if (typeof document === "undefined") {
      return;
    }
    if (typeof PointerEvent !== "undefined") {
      document.addEventListener("pointerup", $b1a784c66b81d90efa4f74e05b$var$handleGlobalPointerEvent);
    } else {
      document.addEventListener("touchend", $b1a784c66b81d90efa4f74e05b$var$setGlobalIgnoreEmulatedMouseEvents);
    }
    $b1a784c66b81d90efa4f74e05b$var$hoverCount++;
    return () => {
      $b1a784c66b81d90efa4f74e05b$var$hoverCount--;
      if ($b1a784c66b81d90efa4f74e05b$var$hoverCount > 0) {
        return;
      }
      if (typeof PointerEvent !== "undefined") {
        document.removeEventListener("pointerup", $b1a784c66b81d90efa4f74e05b$var$handleGlobalPointerEvent);
      } else {
        document.removeEventListener("touchend", $b1a784c66b81d90efa4f74e05b$var$setGlobalIgnoreEmulatedMouseEvents);
      }
    };
  }
  function useHover(props) {
    let {
      onHoverStart,
      onHoverChange,
      onHoverEnd,
      isDisabled
    } = props;
    let [isHovered, setHovered] = React__default.useState(false);
    let state = React__default.useRef({
      isHovered: false,
      ignoreEmulatedMouseEvents: false,
      pointerType: "",
      target: null
    }).current;
    React__default.useEffect($b1a784c66b81d90efa4f74e05b$var$setupGlobalTouchEvents, []);
    let {
      hoverProps,
      triggerHoverEnd
    } = React__default.useMemo(() => {
      let triggerHoverStart = (event, pointerType) => {
        state.pointerType = pointerType;
        if (isDisabled || pointerType === "touch" || state.isHovered || !event.currentTarget.contains(event.target)) {
          return;
        }
        state.isHovered = true;
        let target = event.target;
        state.target = target;
        if (onHoverStart) {
          onHoverStart({
            type: "hoverstart",
            target,
            pointerType
          });
        }
        if (onHoverChange) {
          onHoverChange(true);
        }
        setHovered(true);
      };
      let triggerHoverEnd2 = (event, pointerType) => {
        state.pointerType = "";
        state.target = null;
        if (pointerType === "touch" || !state.isHovered) {
          return;
        }
        state.isHovered = false;
        let target = event.target;
        if (onHoverEnd) {
          onHoverEnd({
            type: "hoverend",
            target,
            pointerType
          });
        }
        if (onHoverChange) {
          onHoverChange(false);
        }
        setHovered(false);
      };
      let hoverProps2 = {};
      if (typeof PointerEvent !== "undefined") {
        hoverProps2.onPointerEnter = (e2) => {
          if ($b1a784c66b81d90efa4f74e05b$var$globalIgnoreEmulatedMouseEvents && e2.pointerType === "mouse") {
            return;
          }
          triggerHoverStart(e2, e2.pointerType);
        };
        hoverProps2.onPointerLeave = (e2) => {
          if (!isDisabled && e2.currentTarget.contains(e2.target)) {
            triggerHoverEnd2(e2, e2.pointerType);
          }
        };
      } else {
        hoverProps2.onTouchStart = () => {
          state.ignoreEmulatedMouseEvents = true;
        };
        hoverProps2.onMouseEnter = (e2) => {
          if (!state.ignoreEmulatedMouseEvents && !$b1a784c66b81d90efa4f74e05b$var$globalIgnoreEmulatedMouseEvents) {
            triggerHoverStart(e2, "mouse");
          }
          state.ignoreEmulatedMouseEvents = false;
        };
        hoverProps2.onMouseLeave = (e2) => {
          if (!isDisabled && e2.currentTarget.contains(e2.target)) {
            triggerHoverEnd2(e2, "mouse");
          }
        };
      }
      return {
        hoverProps: hoverProps2,
        triggerHoverEnd: triggerHoverEnd2
      };
    }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]);
    React__default.useEffect(() => {
      if (isDisabled) {
        triggerHoverEnd({
          target: state.target
        }, state.pointerType);
      }
    }, [isDisabled]);
    return {
      hoverProps,
      isHovered
    };
  }
  function useInteractOutside(props) {
    let {
      ref,
      onInteractOutside,
      isDisabled,
      onInteractOutsideStart
    } = props;
    let stateRef = React__default.useRef({
      isPointerDown: false,
      ignoreEmulatedMouseEvents: false,
      onInteractOutside,
      onInteractOutsideStart
    });
    let state = stateRef.current;
    state.onInteractOutside = onInteractOutside;
    state.onInteractOutsideStart = onInteractOutsideStart;
    React__default.useEffect(() => {
      if (isDisabled) {
        return;
      }
      let onPointerDown = (e2) => {
        if ($e415bb64ab27cb8fbfac2f417412022f$var$isValidEvent(e2, ref) && state.onInteractOutside) {
          if (state.onInteractOutsideStart) {
            state.onInteractOutsideStart(e2);
          }
          state.isPointerDown = true;
        }
      };
      if (typeof PointerEvent !== "undefined") {
        let onPointerUp = (e2) => {
          if (state.isPointerDown && state.onInteractOutside && $e415bb64ab27cb8fbfac2f417412022f$var$isValidEvent(e2, ref)) {
            state.isPointerDown = false;
            state.onInteractOutside(e2);
          }
        };
        document.addEventListener("pointerdown", onPointerDown, true);
        document.addEventListener("pointerup", onPointerUp, true);
        return () => {
          document.removeEventListener("pointerdown", onPointerDown, true);
          document.removeEventListener("pointerup", onPointerUp, true);
        };
      } else {
        let onMouseUp = (e2) => {
          if (state.ignoreEmulatedMouseEvents) {
            state.ignoreEmulatedMouseEvents = false;
          } else if (state.isPointerDown && state.onInteractOutside && $e415bb64ab27cb8fbfac2f417412022f$var$isValidEvent(e2, ref)) {
            state.isPointerDown = false;
            state.onInteractOutside(e2);
          }
        };
        let onTouchEnd = (e2) => {
          state.ignoreEmulatedMouseEvents = true;
          if (state.onInteractOutside && state.isPointerDown && $e415bb64ab27cb8fbfac2f417412022f$var$isValidEvent(e2, ref)) {
            state.isPointerDown = false;
            state.onInteractOutside(e2);
          }
        };
        document.addEventListener("mousedown", onPointerDown, true);
        document.addEventListener("mouseup", onMouseUp, true);
        document.addEventListener("touchstart", onPointerDown, true);
        document.addEventListener("touchend", onTouchEnd, true);
        return () => {
          document.removeEventListener("mousedown", onPointerDown, true);
          document.removeEventListener("mouseup", onMouseUp, true);
          document.removeEventListener("touchstart", onPointerDown, true);
          document.removeEventListener("touchend", onTouchEnd, true);
        };
      }
    }, [ref, state, isDisabled]);
  }
  function $e415bb64ab27cb8fbfac2f417412022f$var$isValidEvent(event, ref) {
    if (event.button > 0) {
      return false;
    }
    if (event.target) {
      const ownerDocument2 = event.target.ownerDocument;
      if (!ownerDocument2 || !ownerDocument2.documentElement.contains(event.target)) {
        return false;
      }
    }
    return ref.current && !ref.current.contains(event.target);
  }
  function $dc0d75166de722fbf58eb6c3552$export$createEventHandler(handler) {
    if (!handler) {
      return;
    }
    let shouldStopPropagation = true;
    return (e2) => {
      let event = _extends$a({}, e2, {
        preventDefault() {
          e2.preventDefault();
        },
        isDefaultPrevented() {
          return e2.isDefaultPrevented();
        },
        stopPropagation() {
          console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.");
        },
        continuePropagation() {
          shouldStopPropagation = false;
        }
      });
      handler(event);
      if (shouldStopPropagation) {
        e2.stopPropagation();
      }
    };
  }
  function useKeyboard(props) {
    return {
      keyboardProps: props.isDisabled ? {} : {
        onKeyDown: $dc0d75166de722fbf58eb6c3552$export$createEventHandler(props.onKeyDown),
        onKeyUp: $dc0d75166de722fbf58eb6c3552$export$createEventHandler(props.onKeyUp)
      }
    };
  }
  function focusSafely(element) {
    if (getInteractionModality() === "virtual") {
      let lastFocusedElement = document.activeElement;
      runAfterTransition(() => {
        if (document.activeElement === lastFocusedElement && document.contains(element)) {
          focusWithoutScrolling(element);
        }
      });
    } else {
      focusWithoutScrolling(element);
    }
  }
  function useFocusRing(props) {
    if (props === void 0) {
      props = {};
    }
    let {
      autoFocus = false,
      isTextInput,
      within: within2
    } = props;
    let state = React__default.useRef({
      isFocused: false,
      isFocusVisible: autoFocus || isFocusVisible()
    }).current;
    let [isFocused, setFocused] = React__default.useState(false);
    let [isFocusVisibleState, setFocusVisible] = React__default.useState(() => state.isFocused && state.isFocusVisible);
    let updateState = () => setFocusVisible(state.isFocused && state.isFocusVisible);
    let onFocusChange = (isFocused2) => {
      state.isFocused = isFocused2;
      setFocused(isFocused2);
      updateState();
    };
    useFocusVisibleListener((isFocusVisible2) => {
      state.isFocusVisible = isFocusVisible2;
      updateState();
    }, [], {
      isTextInput
    });
    let {
      focusProps
    } = useFocus({
      isDisabled: within2,
      onFocusChange
    });
    let {
      focusWithinProps
    } = useFocusWithin({
      isDisabled: !within2,
      onFocusWithinChange: onFocusChange
    });
    return {
      isFocused,
      isFocusVisible: state.isFocused && isFocusVisibleState,
      focusProps: within2 ? focusWithinProps : focusProps
    };
  }
  var $e11539c8317b2d21639df611cb5658f$var$FocusableContext = /* @__PURE__ */ React__default__default["default"].createContext(null);
  function $e11539c8317b2d21639df611cb5658f$var$useFocusableContext(ref) {
    let context = React__default.useContext($e11539c8317b2d21639df611cb5658f$var$FocusableContext) || {};
    useSyncRef(context, ref);
    let otherProps = _objectWithoutPropertiesLoose$2(context, ["ref"]);
    return otherProps;
  }
  function useFocusable(props, domRef) {
    let {
      focusProps
    } = useFocus(props);
    let {
      keyboardProps
    } = useKeyboard(props);
    let interactions = mergeProps(focusProps, keyboardProps);
    let domProps = $e11539c8317b2d21639df611cb5658f$var$useFocusableContext(domRef);
    let interactionProps = props.isDisabled ? {} : domProps;
    let autoFocusRef = React__default.useRef(props.autoFocus);
    React__default.useEffect(() => {
      if (autoFocusRef.current && domRef.current) {
        domRef.current.focus();
      }
      autoFocusRef.current = false;
    }, []);
    return {
      focusableProps: mergeProps(_extends$a({}, interactions, {
        tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : void 0
      }), interactionProps)
    };
  }
  var FOCUS_STYLE = "tw-ring-4 tw-ring-blue tw-ring-offset-2 dark:tw-ring-offset-black tw-outline-none";
  var FOCUS_STYLE_INSET = merge$1([FOCUS_STYLE, "tw-ring-inset"]);
  var generateRandomId = () => {
    return `id-${window.crypto.getRandomValues(new Uint32Array(1))}`;
  };
  var useMemoizedId = (id2) => React__default.useMemo(() => id2 || generateRandomId(), [id2]);
  function useButton(props, ref) {
    let {
      elementType = "button",
      isDisabled,
      onPress,
      onPressStart,
      onPressEnd,
      onPressChange,
      preventFocusOnPress,
      onClick: deprecatedOnClick,
      href,
      target,
      rel,
      type = "button"
    } = props;
    let additionalProps;
    if (elementType === "button") {
      additionalProps = {
        type,
        disabled: isDisabled
      };
    } else {
      additionalProps = {
        role: "button",
        tabIndex: isDisabled ? void 0 : 0,
        href: elementType === "a" && isDisabled ? void 0 : href,
        target: elementType === "a" ? target : void 0,
        type: elementType === "input" ? type : void 0,
        disabled: elementType === "input" ? isDisabled : void 0,
        "aria-disabled": !isDisabled || elementType === "input" ? void 0 : isDisabled,
        rel: elementType === "a" ? rel : void 0
      };
    }
    let {
      pressProps,
      isPressed
    } = usePress({
      onPressStart,
      onPressEnd,
      onPressChange,
      onPress,
      isDisabled,
      preventFocusOnPress,
      ref
    });
    let {
      focusableProps
    } = useFocusable(props, ref);
    let buttonProps = mergeProps(focusableProps, pressProps);
    buttonProps = mergeProps(buttonProps, filterDOMProps(props, {
      labelable: true
    }));
    return {
      isPressed,
      buttonProps: mergeProps(additionalProps, buttonProps, {
        "aria-haspopup": props["aria-haspopup"],
        "aria-expanded": props["aria-expanded"],
        "aria-controls": props["aria-controls"],
        "aria-pressed": props["aria-pressed"],
        onClick: (e2) => {
          if (deprecatedOnClick) {
            deprecatedOnClick(e2);
            console.warn("onClick is deprecated, please use onPress");
          }
        }
      })
    };
  }
  var ButtonStyle;
  (function(ButtonStyle2) {
    ButtonStyle2["Secondary"] = "Secondary";
    ButtonStyle2["Primary"] = "Primary";
    ButtonStyle2["Danger"] = "Danger";
    ButtonStyle2["Positive"] = "Positive";
  })(ButtonStyle || (ButtonStyle = {}));
  var ButtonSize;
  (function(ButtonSize2) {
    ButtonSize2["Small"] = "Small";
    ButtonSize2["Medium"] = "Medium";
    ButtonSize2["Large"] = "Large";
  })(ButtonSize || (ButtonSize = {}));
  var sizeClasses = {
    [ButtonSize.Small]: "tw-px-3 tw-h-6 tw-text-xs",
    [ButtonSize.Medium]: "tw-px-4 tw-h-9 tw-text-s",
    [ButtonSize.Large]: "tw-px-6 tw-h-12 tw-text-m"
  };
  var iconOnlySizeClasses = {
    [ButtonSize.Small]: "tw-p-1",
    [ButtonSize.Medium]: "tw-p-2",
    [ButtonSize.Large]: "tw-p-3"
  };
  var iconSpacing = {
    [ButtonSize.Small]: "tw--ml-0.5 tw-mr-1",
    [ButtonSize.Medium]: "tw--ml-1 tw-mr-1.5",
    [ButtonSize.Large]: "tw--ml-1 tw-mr-2"
  };
  var styles = {
    solid: {
      [ButtonStyle.Primary]: "tw-text-white tw-bg-black-90 hover:tw-bg-black-100 active:tw-bg-black-superdark dark:tw-text-black dark:tw-bg-white dark:hover:tw-bg-black-10 dark:active:tw-bg-black-20",
      [ButtonStyle.Secondary]: "tw-text-black tw-bg-black-10 hover:tw-bg-black-20 active:tw-bg-black-30 dark:tw-text-white dark:tw-bg-black-80 dark:hover:tw-bg-black-95 dark:active:tw-bg-black-superdark",
      [ButtonStyle.Danger]: "tw-text-black tw-bg-red-50 hover:tw-bg-red-65 active:tw-bg-red-70",
      [ButtonStyle.Positive]: "tw-text-black tw-bg-green-60 hover:tw-bg-green-70 active:tw-bg-green-75 dark:active:tw-bg-green-90"
    },
    inverted: {
      [ButtonStyle.Primary]: "tw-text-black tw-bg-white hover:tw-bg-black-10 active:tw-bg-black-20 dark:tw-text-white dark:tw-bg-black-90 dark:hover:tw-bg-black-100 dark:active:tw-bg-black-superdark",
      [ButtonStyle.Secondary]: "tw-text-white tw-bg-black-80 hover:tw-bg-black-95 active:tw-bg-black-superdark dark:tw-text-black dark:tw-bg-black-10 dark:hover:tw-bg-black-20 dark:active:tw-bg-black-30",
      [ButtonStyle.Danger]: "tw-text-black tw-bg-red-50 hover:tw-bg-red-65 active:tw-bg-red-70",
      [ButtonStyle.Positive]: "tw-text-black tw-bg-green-60 hover:tw-bg-green-70 active:tw-bg-green-75 dark:active:tw-bg-green-90"
    },
    translucent: {
      [ButtonStyle.Primary]: "tw-text-white tw-bg-black-90 hover:tw-bg-black-100 active:tw-bg-black-superdark",
      [ButtonStyle.Secondary]: "tw-text-black-80 tw-bg-transparent hover:tw-bg-black-10 hover:tw-text-black active:tw-bg-black-20 active:tw-text-black dark:tw-text-white dark:hover:tw-bg-black-95 dark:active:tw-bg-black-superdark dark:hover:tw-text-white",
      [ButtonStyle.Danger]: "tw-text-red-65 tw-bg-transparent hover:tw-bg-black-10 active:tw-bg-black-20 dark:tw-text-red-50 dark:hover:tw-bg-black-95 dark:active:tw-bg-black-superdark",
      [ButtonStyle.Positive]: "tw-text-green-75 tw-bg-transparent hover:tw-bg-black-10 active:tw-bg-black-20 dark:tw-text-green-60 dark:hover:tw-bg-black-95 dark:active:tw-bg-black-superdark"
    }
  };
  var iconSizes = {
    [ButtonSize.Small]: IconSize.Size16,
    [ButtonSize.Medium]: IconSize.Size20,
    [ButtonSize.Large]: IconSize.Size24
  };
  var Button = ({
    style: style2 = ButtonStyle.Primary,
    size = ButtonSize.Medium,
    solid = true,
    inverted = false,
    disabled = false,
    icon,
    children: children2,
    onClick
  }) => {
    const wrap = (child) => children2 ? /* @__PURE__ */ React__default__default["default"].createElement("span", {
      className: iconSpacing[size]
    }, child) : child;
    const { isFocusVisible: isFocusVisible2, focusProps } = useFocusRing();
    const ref = React__default.useRef(null);
    const { buttonProps } = useButton({ onPress: () => onClick && onClick(), isDisabled: disabled }, ref);
    const getButtonTheme = React__default.useCallback(() => {
      if (inverted) {
        return "inverted";
      }
      return solid ? "solid" : "translucent";
    }, [solid, inverted]);
    return /* @__PURE__ */ React__default__default["default"].createElement("button", __spreadProps(__spreadValues({}, mergeProps(buttonProps, focusProps)), {
      ref,
      className: merge$1([
        "tw-outline-none tw-relative tw-flex tw-items-center tw-justify-center tw-border-0 tw-rounded tw-cursor-pointer tw-font-sans tw-transition-colors",
        icon && !children2 ? iconOnlySizeClasses[size] : sizeClasses[size],
        merge$1(disabled ? [
          "tw-not-allowed tw-pointer-events-none tw-text-black-40 dark:tw-text-black-60",
          solid ? "tw-bg-black-5 dark:tw-bg-black-90" : "tw-bg-transparent"
        ] : [isFocusVisible2 && FOCUS_STYLE, styles[getButtonTheme()][style2]])
      ]),
      disabled,
      "data-test-id": "button"
    }), icon && wrap(React__default.cloneElement(icon, { size: iconSizes[size] })), children2);
  };
  function useLink(props, ref) {
    let {
      elementType = "a",
      onPress,
      onPressStart,
      onPressEnd,
      onClick: deprecatedOnClick,
      isDisabled
    } = props, otherProps = _objectWithoutPropertiesLoose$2(props, ["elementType", "onPress", "onPressStart", "onPressEnd", "onClick", "isDisabled"]);
    let linkProps;
    if (elementType !== "a") {
      linkProps = {
        role: "link",
        tabIndex: !isDisabled ? 0 : void 0
      };
    }
    let {
      pressProps,
      isPressed
    } = usePress({
      onPress,
      onPressStart,
      onPressEnd,
      isDisabled,
      ref
    });
    let domProps = filterDOMProps(otherProps, {
      labelable: true
    });
    return {
      isPressed,
      linkProps: mergeProps(domProps, _extends$a({}, pressProps, linkProps, {
        "aria-disabled": isDisabled || void 0,
        onClick: (e2) => {
          pressProps.onClick(e2);
          if (deprecatedOnClick) {
            deprecatedOnClick(e2);
            console.warn("onClick is deprecated, please use onPress");
          }
        }
      }))
    };
  }
  function useTooltip(props, state) {
    let domProps = filterDOMProps(props, {
      labelable: true
    });
    let {
      hoverProps
    } = useHover({
      onHoverStart: () => state == null ? void 0 : state.open(true),
      onHoverEnd: () => state == null ? void 0 : state.close()
    });
    return {
      tooltipProps: mergeProps(domProps, hoverProps, {
        role: "tooltip"
      })
    };
  }
  function useTooltipTrigger(props, state, ref) {
    let {
      isDisabled,
      trigger
    } = props;
    let tooltipId = useId();
    let isHovered = React__default.useRef(false);
    let isFocused = React__default.useRef(false);
    let handleShow = () => {
      if (isHovered.current || isFocused.current) {
        state.open(isFocused.current);
      }
    };
    let handleHide = (immediate) => {
      if (!isHovered.current && !isFocused.current) {
        state.close(immediate);
      }
    };
    React__default.useEffect(() => {
      let onKeyDown = (e2) => {
        if (ref && ref.current) {
          if (e2.key === "Escape") {
            state.close(true);
          }
        }
      };
      if (state.isOpen) {
        document.addEventListener("keydown", onKeyDown, true);
        return () => {
          document.removeEventListener("keydown", onKeyDown, true);
        };
      }
    }, [ref, state]);
    let onHoverStart = () => {
      if (trigger === "focus") {
        return;
      }
      if (getInteractionModality() === "pointer") {
        isHovered.current = true;
      } else {
        isHovered.current = false;
      }
      handleShow();
    };
    let onHoverEnd = () => {
      if (trigger === "focus") {
        return;
      }
      isFocused.current = false;
      isHovered.current = false;
      handleHide();
    };
    let onPressStart = () => {
      isFocused.current = false;
      isHovered.current = false;
      handleHide(true);
    };
    let onFocus = () => {
      let isVisible = isFocusVisible();
      if (isVisible) {
        isFocused.current = true;
        handleShow();
      }
    };
    let onBlur = () => {
      isFocused.current = false;
      isHovered.current = false;
      handleHide(true);
    };
    let {
      hoverProps
    } = useHover({
      isDisabled,
      onHoverStart,
      onHoverEnd
    });
    let {
      pressProps
    } = usePress({
      onPressStart
    });
    let {
      focusableProps
    } = useFocusable({
      isDisabled,
      onFocus,
      onBlur
    }, ref);
    return {
      triggerProps: _extends$a({
        "aria-describedby": state.isOpen ? tooltipId : void 0
      }, mergeProps(focusableProps, hoverProps, pressProps)),
      tooltipProps: {
        id: tooltipId
      }
    };
  }
  function IconInfo(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconInfo"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M14.127 2c.472 0 .821.156 1.048.467.227.312.283.733.17 1.261a2.13 2.13 0 01-.652 1.204c-.34.312-.746.467-1.218.467-.453 0-.789-.155-1.005-.467-.217-.312-.28-.712-.185-1.204.114-.528.34-.949.68-1.26A1.67 1.67 0 0114.127 2zm-3.655 11.841c.209-.718.355-1.279.44-1.685.085-.407.089-.713.014-.92-.075-.21-.241-.34-.496-.397-.255-.057-.619-.085-1.09-.085a2.386 2.386 0 01.176-1.092l-.007.015c.227-.018.492-.07.793-.156.708-.2 1.306-.422 1.88-.685l-.08.034c.273-.124.495-.241.665-.354.585.245.94.655 1.062 1.232.124.576.025 1.449-.297 2.62l-1.558 5.468c-.132.453-.227.825-.283 1.119-.057.293-.075.514-.057.665.018.152.07.255.156.312a.577.577 0 00.325.085c.189 0 .411-.067.666-.198.255-.132.524-.34.808-.624.283.189.453.492.51.907-.549.605-1.091 1.072-1.63 1.402-.538.33-1.072.496-1.6.496-.945 0-1.525-.373-1.742-1.119-.217-.746-.156-1.732.184-2.96l1.161-4.08z"
    }));
  }
  var MemoIconInfo = React__default__default["default"].memo(IconInfo);
  function IconCheck(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconCheck"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M18.103 5.324a1.115 1.115 0 011.572 0 1.102 1.102 0 010 1.564L8.505 19 4.28 14.109a1.102 1.102 0 01.096-1.561 1.115 1.115 0 011.569.096l2.662 3.129 9.497-10.45z"
    }));
  }
  var MemoIconCheck = React__default__default["default"].memo(IconCheck);
  function IconCallout(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 28 25",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconCallout"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M14 20.74a1.975 1.975 0 100-3.95 1.975 1.975 0 000 3.95zm0-14.814c-.818 0-1.481.663-1.481 1.481 0 .044.008.084.012.125h-.008l.591 7.176h.005a.888.888 0 00.88.816c.467 0 .844-.36.883-.816h.005l.59-7.176h-.008c.004-.041.012-.081.012-.125 0-.818-.663-1.481-1.482-1.481zm12.543 12.227L17.735 2.59C16.79.92 15.463 0 14.001 0c-1.464 0-2.79.92-3.736 2.59L1.457 18.153c-.94 1.664-1.045 3.283-.294 4.56.75 1.276 2.223 1.978 4.144 1.978h17.387c1.921 0 3.392-.702 4.143-1.978.752-1.276.647-2.896-.294-4.56zm-1.395 3.588c-.366.62-1.237.975-2.391.975H5.244c-1.154 0-2.026-.356-2.391-.975-.367-.621-.251-1.55.313-2.548l8.871-15.658c.563-.991 1.278-1.56 1.964-1.56.685 0 1.4.569 1.961 1.56l8.87 15.658c.566.998.681 1.927.316 2.548z"
    }));
  }
  var MemoIconCallout = React__default__default["default"].memo(IconCallout);
  function IconDocument(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconDocument"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M3.5 5.081A3.089 3.089 0 016.587 2h6.765c.427 0 1.023.235 1.339.532l5.243 4.936c.313.294.566.878.566 1.305v10.155c0 1.696-1.391 3.072-3.098 3.072H6.598A3.087 3.087 0 013.5 18.919V5.08zm15.455 5.38h-6.186A.767.767 0 0112 9.693V3.538H6.596c-.853 0-1.55.686-1.55 1.532v13.86c0 .847.69 1.532 1.541 1.532h10.826c.852 0 1.542-.686 1.542-1.532v-8.468zm0-1.538v-.177l-5.41-5.063v5.24h5.41zm-10.889 9.44a.911.911 0 01-.913-.908c0-.503.409-.91.913-.91h8.22c.503 0 .912.407.912.91 0 .502-.409.909-.913.909H8.066zm0-3.636a.911.911 0 01-.913-.909c0-.502.409-.909.913-.909h8.22c.503 0 .912.407.912.91 0 .501-.409.908-.913.908H8.066zm0-3.636a.911.911 0 01-.913-.91c0-.501.409-.908.913-.908h1.37c.504 0 .913.407.913.909s-.409.909-.913.909h-1.37z"
    }));
  }
  var MemoIconDocument = React__default__default["default"].memo(IconDocument);
  var BrightHeaderStyle;
  (function(BrightHeaderStyle2) {
    BrightHeaderStyle2["Information"] = "Information";
    BrightHeaderStyle2["Warning"] = "Warning";
    BrightHeaderStyle2["Tip"] = "Tip";
    BrightHeaderStyle2["Note"] = "Note";
  })(BrightHeaderStyle || (BrightHeaderStyle = {}));
  var brightHeaderBackgroundColors = {
    [BrightHeaderStyle.Information]: "tw-bg-violet-60",
    [BrightHeaderStyle.Warning]: "tw-bg-red-60",
    [BrightHeaderStyle.Tip]: "tw-bg-green-60",
    [BrightHeaderStyle.Note]: "tw-bg-yellow-60"
  };
  var brightHeaderIcon = {
    [BrightHeaderStyle.Information]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconInfo, null),
    [BrightHeaderStyle.Warning]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCallout, null),
    [BrightHeaderStyle.Tip]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCheck, null),
    [BrightHeaderStyle.Note]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconDocument, null)
  };
  var BrightHeader = ({ headerStyle }) => {
    return /* @__PURE__ */ React__default__default["default"].createElement("div", {
      "data-test-id": "bright-header",
      className: merge$1([
        "tw-h-9 tw-relative tw-z-10 tw-flex tw-justify-center tw-items-center tw-rounded-t-md tw-text-white",
        brightHeaderBackgroundColors[headerStyle]
      ])
    }, React__default.cloneElement(brightHeaderIcon[headerStyle], { size: IconSize.Size20 }));
  };
  var Tooltip = React__default.forwardRef(({
    content,
    tooltipIcon,
    heading,
    headingIcon,
    linkUrl,
    linkLabel,
    brightHeader,
    buttons,
    tooltipAriaProps = {},
    style: style2,
    children: children2,
    popperAttributes
  }, tooltipContainerRef) => {
    const linkRef = React__default.useRef(null);
    const { linkProps } = useLink({}, linkRef);
    const { isFocusVisible: isFocusVisible2, focusProps } = useFocusRing();
    const { tooltipProps } = useTooltip(tooltipAriaProps);
    return /* @__PURE__ */ React__default__default["default"].createElement(React__default__default["default"].Fragment, null, /* @__PURE__ */ React__default__default["default"].createElement("div", __spreadValues(__spreadValues({
      ref: tooltipContainerRef,
      className: "tw-popper-container tw-inline-block tw-max-w-[200px] tw-bg-black-100 dark:tw-bg-white tw-rounded-md tw-shadow-mid tw-text-white dark:tw-text-black-100 tw-z-20",
      style: style2,
      "data-test-id": "tooltip"
    }, popperAttributes), tooltipProps), brightHeader && /* @__PURE__ */ React__default__default["default"].createElement(BrightHeader, {
      headerStyle: brightHeader
    }), /* @__PURE__ */ React__default__default["default"].createElement("div", {
      className: merge$1([
        "tw-px-4",
        linkUrl || brightHeader || buttons || heading || headingIcon ? "tw-pt-3.5" : "tw-pt-4",
        linkUrl ? "tw-pb-3.5" : "tw-pb-4"
      ])
    }, heading && /* @__PURE__ */ React__default__default["default"].createElement("h4", {
      className: "tw-flex tw-text-m tw-font-bold tw-mb-1"
    }, headingIcon && /* @__PURE__ */ React__default__default["default"].createElement("span", {
      className: "tw-mr-1.5"
    }, React__default.cloneElement(headingIcon, { size: IconSize.Size20 })), heading), /* @__PURE__ */ React__default__default["default"].createElement("div", {
      className: "tw-flex"
    }, tooltipIcon && /* @__PURE__ */ React__default__default["default"].createElement("span", {
      className: "tw-flex-shrink-0 tw-mr-1"
    }, React__default.cloneElement(tooltipIcon, { size: IconSize.Size16 })), /* @__PURE__ */ React__default__default["default"].createElement("p", {
      className: "tw-text-s"
    }, content)), linkUrl && /* @__PURE__ */ React__default__default["default"].createElement("a", __spreadProps(__spreadValues({}, mergeProps(linkProps, focusProps)), {
      "data-test-id": "tooltip-link",
      ref: linkRef,
      href: linkUrl,
      target: "_blank",
      rel: "noopener noreferrer",
      className: merge$1([
        "tw-text-xs tw-text-black-40 dark:tw-text-black-80 tw-underline tw-mt-1",
        isFocusVisible2 && FOCUS_STYLE
      ])
    }), linkLabel != null ? linkLabel : "Click here to learn more."), buttons && /* @__PURE__ */ React__default__default["default"].createElement("div", {
      className: "tw-flex tw-flex-row-reverse tw-gap-x-1 tw-mt-4"
    }, buttons.length > 0 && /* @__PURE__ */ React__default__default["default"].createElement(Button, {
      style: ButtonStyle.Primary,
      size: ButtonSize.Small,
      inverted: true,
      onClick: buttons[0].action
    }, buttons[0].label), buttons.length === 2 && /* @__PURE__ */ React__default__default["default"].createElement(Button, {
      style: ButtonStyle.Secondary,
      size: ButtonSize.Small,
      inverted: true,
      onClick: buttons[1].action
    }, buttons[1].label))), children2));
  });
  var TooltipArrow = React__default.forwardRef(({ style: style2, headerColor, placement }, ref) => {
    const arrowFill = headerColor && placement === "bottom" ? `before:${brightHeaderBackgroundColors[headerColor]}` : "before:tw-bg-black-100 dark:before:tw-bg-white";
    return /* @__PURE__ */ React__default__default["default"].createElement("div", {
      ref,
      className: merge$1([
        "tw-popper-arrow tw-absolute tw-w-3 tw-h-3 tw-pointer-events-none before:tw-absolute before:tw-w-3 before:tw-h-3 before:tw-rotate-45",
        arrowFill
      ]),
      style: style2
    });
  });
  TooltipArrow.displayName = "TooltipArrow";
  function IconQuestion(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 16 16",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconQuestion"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      clipRule: "evenodd",
      d: "M5.403 14.146c.812.348 1.678.521 2.598.521.92 0 1.786-.173 2.597-.52a6.69 6.69 0 002.123-1.426 6.69 6.69 0 001.425-2.123c.348-.811.521-1.677.521-2.597 0-.92-.173-1.786-.52-2.598a6.69 6.69 0 00-1.426-2.122 6.69 6.69 0 00-2.123-1.426 6.534 6.534 0 00-2.597-.521c-.92 0-1.786.174-2.598.52a6.69 6.69 0 00-2.122 1.427 6.69 6.69 0 00-1.426 2.122 6.534 6.534 0 00-.521 2.598c0 .92.174 1.786.52 2.597a6.69 6.69 0 001.427 2.123 6.69 6.69 0 002.122 1.425zm4.824-.878c-.694.3-1.436.449-2.226.449s-1.532-.15-2.227-.45c-.694-.299-1.3-.707-1.816-1.223a5.775 5.775 0 01-1.224-1.817 5.562 5.562 0 01-.45-2.226c0-.79.15-1.532.45-2.227.3-.694.707-1.3 1.224-1.816a5.775 5.775 0 011.816-1.224c.695-.3 1.437-.45 2.227-.45.79 0 1.532.15 2.226.45.695.3 1.3.707 1.817 1.224a5.776 5.776 0 011.224 1.816c.3.695.449 1.437.449 2.227 0 .79-.15 1.532-.45 2.226-.299.695-.707 1.3-1.223 1.817a5.775 5.775 0 01-1.817 1.224zM7.39 10.266c0-.182.063-.336.188-.462a.629.629 0 01.463-.189c.173 0 .323.063.449.189s.189.28.189.462a.65.65 0 01-.19.469.604.604 0 01-.448.195.618.618 0 01-.463-.195.65.65 0 01-.188-.469zm2.207-2.734c.212-.26.319-.569.319-.925 0-.52-.165-.933-.495-1.237-.33-.303-.786-.455-1.367-.455-.547 0-.996.171-1.348.514-.351.343-.558.788-.618 1.335h1.028c.026-.278.115-.51.267-.697.152-.187.376-.28.67-.28.279 0 .496.078.652.234a.811.811 0 01.234.6.88.88 0 01-.254.637c-.169.174-.336.352-.501.534a2.718 2.718 0 00-.436.586 1.545 1.545 0 00-.137.638h.925c0-.095.026-.202.078-.319.052-.117.16-.262.325-.436.226-.226.445-.469.658-.73z"
    }));
  }
  var MemoIconQuestion = React__default__default["default"].memo(IconQuestion);
  function useOverlayTriggerState(props) {
    let [isOpen, setOpen] = useControlledState(props.isOpen, props.defaultOpen || false, props.onOpenChange);
    return {
      isOpen,
      open() {
        setOpen(true);
      },
      close() {
        setOpen(false);
      },
      toggle() {
        setOpen(!isOpen);
      }
    };
  }
  var $af9cde49ea815e766aeca6386e9$var$TOOLTIP_DELAY = 1500;
  var $af9cde49ea815e766aeca6386e9$var$TOOLTIP_COOLDOWN = 500;
  var $af9cde49ea815e766aeca6386e9$var$tooltips = {};
  var $af9cde49ea815e766aeca6386e9$var$tooltipId = 0;
  var $af9cde49ea815e766aeca6386e9$var$globalWarmedUp = false;
  var $af9cde49ea815e766aeca6386e9$var$globalWarmUpTimeout = null;
  var $af9cde49ea815e766aeca6386e9$var$globalCooldownTimeout = null;
  function useTooltipTriggerState(props) {
    if (props === void 0) {
      props = {};
    }
    let {
      delay = $af9cde49ea815e766aeca6386e9$var$TOOLTIP_DELAY
    } = props;
    let {
      isOpen,
      open,
      close: close2
    } = useOverlayTriggerState(props);
    let id2 = React__default.useMemo(() => "" + ++$af9cde49ea815e766aeca6386e9$var$tooltipId, []);
    let closeTimeout = React__default.useRef();
    let ensureTooltipEntry = () => {
      $af9cde49ea815e766aeca6386e9$var$tooltips[id2] = hideTooltip;
    };
    let closeOpenTooltips = () => {
      for (let hideTooltipId in $af9cde49ea815e766aeca6386e9$var$tooltips) {
        if (hideTooltipId !== id2) {
          $af9cde49ea815e766aeca6386e9$var$tooltips[hideTooltipId](true);
          delete $af9cde49ea815e766aeca6386e9$var$tooltips[hideTooltipId];
        }
      }
    };
    let showTooltip = () => {
      clearTimeout(closeTimeout.current);
      closeTimeout.current = null;
      closeOpenTooltips();
      ensureTooltipEntry();
      $af9cde49ea815e766aeca6386e9$var$globalWarmedUp = true;
      open();
      if ($af9cde49ea815e766aeca6386e9$var$globalWarmUpTimeout) {
        clearTimeout($af9cde49ea815e766aeca6386e9$var$globalWarmUpTimeout);
        $af9cde49ea815e766aeca6386e9$var$globalWarmUpTimeout = null;
      }
      if ($af9cde49ea815e766aeca6386e9$var$globalCooldownTimeout) {
        clearTimeout($af9cde49ea815e766aeca6386e9$var$globalCooldownTimeout);
        $af9cde49ea815e766aeca6386e9$var$globalCooldownTimeout = null;
      }
    };
    let hideTooltip = (immediate) => {
      if (immediate) {
        clearTimeout(closeTimeout.current);
        closeTimeout.current = null;
        close2();
      } else if (!closeTimeout.current) {
        closeTimeout.current = setTimeout(() => {
          closeTimeout.current = null;
          close2();
        }, $af9cde49ea815e766aeca6386e9$var$TOOLTIP_COOLDOWN);
      }
      if ($af9cde49ea815e766aeca6386e9$var$globalWarmUpTimeout) {
        clearTimeout($af9cde49ea815e766aeca6386e9$var$globalWarmUpTimeout);
        $af9cde49ea815e766aeca6386e9$var$globalWarmUpTimeout = null;
      }
      if ($af9cde49ea815e766aeca6386e9$var$globalWarmedUp) {
        if ($af9cde49ea815e766aeca6386e9$var$globalCooldownTimeout) {
          clearTimeout($af9cde49ea815e766aeca6386e9$var$globalCooldownTimeout);
        }
        $af9cde49ea815e766aeca6386e9$var$globalCooldownTimeout = setTimeout(() => {
          delete $af9cde49ea815e766aeca6386e9$var$tooltips[id2];
          $af9cde49ea815e766aeca6386e9$var$globalCooldownTimeout = null;
          $af9cde49ea815e766aeca6386e9$var$globalWarmedUp = false;
        }, $af9cde49ea815e766aeca6386e9$var$TOOLTIP_COOLDOWN);
      }
    };
    let warmupTooltip = () => {
      closeOpenTooltips();
      ensureTooltipEntry();
      if (!isOpen && !$af9cde49ea815e766aeca6386e9$var$globalWarmUpTimeout && !$af9cde49ea815e766aeca6386e9$var$globalWarmedUp) {
        $af9cde49ea815e766aeca6386e9$var$globalWarmUpTimeout = setTimeout(() => {
          $af9cde49ea815e766aeca6386e9$var$globalWarmUpTimeout = null;
          $af9cde49ea815e766aeca6386e9$var$globalWarmedUp = true;
          showTooltip();
        }, delay);
      } else if (!isOpen) {
        showTooltip();
      }
    };
    React__default.useEffect(() => {
      return () => {
        clearTimeout(closeTimeout.current);
        let tooltip = $af9cde49ea815e766aeca6386e9$var$tooltips[id2];
        if (tooltip) {
          delete $af9cde49ea815e766aeca6386e9$var$tooltips[id2];
        }
      };
    }, [id2]);
    return {
      isOpen,
      open: (immediate) => {
        if (!immediate && delay > 0 && !closeTimeout.current) {
          warmupTooltip();
        } else {
          showTooltip();
        }
      },
      close: hideTooltip
    };
  }
  var fromEntries$1 = function fromEntries(entries) {
    return entries.reduce(function(acc, _ref) {
      var key = _ref[0], value = _ref[1];
      acc[key] = value;
      return acc;
    }, {});
  };
  var useIsomorphicLayoutEffect$2 = typeof window !== "undefined" && window.document && window.document.createElement ? React__default__namespace.useLayoutEffect : React__default__namespace.useEffect;
  var top = "top";
  var bottom = "bottom";
  var right = "right";
  var left = "left";
  var auto$1 = "auto";
  var basePlacements = [top, bottom, right, left];
  var start$2 = "start";
  var end = "end";
  var clippingParents = "clippingParents";
  var viewport = "viewport";
  var popper = "popper";
  var reference = "reference";
  var variationPlacements = /* @__PURE__ */ basePlacements.reduce(function(acc, placement) {
    return acc.concat([placement + "-" + start$2, placement + "-" + end]);
  }, []);
  var placements = /* @__PURE__ */ [].concat(basePlacements, [auto$1]).reduce(function(acc, placement) {
    return acc.concat([placement, placement + "-" + start$2, placement + "-" + end]);
  }, []);
  var beforeRead = "beforeRead";
  var read = "read";
  var afterRead = "afterRead";
  var beforeMain = "beforeMain";
  var main = "main";
  var afterMain = "afterMain";
  var beforeWrite = "beforeWrite";
  var write = "write";
  var afterWrite = "afterWrite";
  var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];
  function getNodeName(element) {
    return element ? (element.nodeName || "").toLowerCase() : null;
  }
  function getWindow(node) {
    if (node == null) {
      return window;
    }
    if (node.toString() !== "[object Window]") {
      var ownerDocument2 = node.ownerDocument;
      return ownerDocument2 ? ownerDocument2.defaultView || window : window;
    }
    return node;
  }
  function isElement$1(node) {
    var OwnElement = getWindow(node).Element;
    return node instanceof OwnElement || node instanceof Element;
  }
  function isHTMLElement(node) {
    var OwnElement = getWindow(node).HTMLElement;
    return node instanceof OwnElement || node instanceof HTMLElement;
  }
  function isShadowRoot(node) {
    if (typeof ShadowRoot === "undefined") {
      return false;
    }
    var OwnElement = getWindow(node).ShadowRoot;
    return node instanceof OwnElement || node instanceof ShadowRoot;
  }
  function applyStyles(_ref) {
    var state = _ref.state;
    Object.keys(state.elements).forEach(function(name) {
      var style2 = state.styles[name] || {};
      var attributes = state.attributes[name] || {};
      var element = state.elements[name];
      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      }
      Object.assign(element.style, style2);
      Object.keys(attributes).forEach(function(name2) {
        var value = attributes[name2];
        if (value === false) {
          element.removeAttribute(name2);
        } else {
          element.setAttribute(name2, value === true ? "" : value);
        }
      });
    });
  }
  function effect$2(_ref2) {
    var state = _ref2.state;
    var initialStyles = {
      popper: {
        position: state.options.strategy,
        left: "0",
        top: "0",
        margin: "0"
      },
      arrow: {
        position: "absolute"
      },
      reference: {}
    };
    Object.assign(state.elements.popper.style, initialStyles.popper);
    state.styles = initialStyles;
    if (state.elements.arrow) {
      Object.assign(state.elements.arrow.style, initialStyles.arrow);
    }
    return function() {
      Object.keys(state.elements).forEach(function(name) {
        var element = state.elements[name];
        var attributes = state.attributes[name] || {};
        var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]);
        var style2 = styleProperties.reduce(function(style3, property2) {
          style3[property2] = "";
          return style3;
        }, {});
        if (!isHTMLElement(element) || !getNodeName(element)) {
          return;
        }
        Object.assign(element.style, style2);
        Object.keys(attributes).forEach(function(attribute) {
          element.removeAttribute(attribute);
        });
      });
    };
  }
  var applyStyles$1 = {
    name: "applyStyles",
    enabled: true,
    phase: "write",
    fn: applyStyles,
    effect: effect$2,
    requires: ["computeStyles"]
  };
  function getBasePlacement(placement) {
    return placement.split("-")[0];
  }
  function getBoundingClientRect(element, includeScale) {
    var rect = element.getBoundingClientRect();
    var scaleX = 1;
    var scaleY = 1;
    return {
      width: rect.width / scaleX,
      height: rect.height / scaleY,
      top: rect.top / scaleY,
      right: rect.right / scaleX,
      bottom: rect.bottom / scaleY,
      left: rect.left / scaleX,
      x: rect.left / scaleX,
      y: rect.top / scaleY
    };
  }
  function getLayoutRect(element) {
    var clientRect = getBoundingClientRect(element);
    var width = element.offsetWidth;
    var height = element.offsetHeight;
    if (Math.abs(clientRect.width - width) <= 1) {
      width = clientRect.width;
    }
    if (Math.abs(clientRect.height - height) <= 1) {
      height = clientRect.height;
    }
    return {
      x: element.offsetLeft,
      y: element.offsetTop,
      width,
      height
    };
  }
  function contains$1(parent, child) {
    var rootNode = child.getRootNode && child.getRootNode();
    if (parent.contains(child)) {
      return true;
    } else if (rootNode && isShadowRoot(rootNode)) {
      var next = child;
      do {
        if (next && parent.isSameNode(next)) {
          return true;
        }
        next = next.parentNode || next.host;
      } while (next);
    }
    return false;
  }
  function getComputedStyle$3(element) {
    return getWindow(element).getComputedStyle(element);
  }
  function isTableElement(element) {
    return ["table", "td", "th"].indexOf(getNodeName(element)) >= 0;
  }
  function getDocumentElement(element) {
    return ((isElement$1(element) ? element.ownerDocument : element.document) || window.document).documentElement;
  }
  function getParentNode(element) {
    if (getNodeName(element) === "html") {
      return element;
    }
    return element.assignedSlot || element.parentNode || (isShadowRoot(element) ? element.host : null) || getDocumentElement(element);
  }
  function getTrueOffsetParent(element) {
    if (!isHTMLElement(element) || getComputedStyle$3(element).position === "fixed") {
      return null;
    }
    return element.offsetParent;
  }
  function getContainingBlock(element) {
    var isFirefox = navigator.userAgent.toLowerCase().indexOf("firefox") !== -1;
    var isIE = navigator.userAgent.indexOf("Trident") !== -1;
    if (isIE && isHTMLElement(element)) {
      var elementCss = getComputedStyle$3(element);
      if (elementCss.position === "fixed") {
        return null;
      }
    }
    var currentNode = getParentNode(element);
    while (isHTMLElement(currentNode) && ["html", "body"].indexOf(getNodeName(currentNode)) < 0) {
      var css = getComputedStyle$3(currentNode);
      if (css.transform !== "none" || css.perspective !== "none" || css.contain === "paint" || ["transform", "perspective"].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === "filter" || isFirefox && css.filter && css.filter !== "none") {
        return currentNode;
      } else {
        currentNode = currentNode.parentNode;
      }
    }
    return null;
  }
  function getOffsetParent(element) {
    var window2 = getWindow(element);
    var offsetParent2 = getTrueOffsetParent(element);
    while (offsetParent2 && isTableElement(offsetParent2) && getComputedStyle$3(offsetParent2).position === "static") {
      offsetParent2 = getTrueOffsetParent(offsetParent2);
    }
    if (offsetParent2 && (getNodeName(offsetParent2) === "html" || getNodeName(offsetParent2) === "body" && getComputedStyle$3(offsetParent2).position === "static")) {
      return window2;
    }
    return offsetParent2 || getContainingBlock(element) || window2;
  }
  function getMainAxisFromPlacement(placement) {
    return ["top", "bottom"].indexOf(placement) >= 0 ? "x" : "y";
  }
  var max = Math.max;
  var min = Math.min;
  var round = Math.round;
  function within(min$1, value, max$1) {
    return max(min$1, min(value, max$1));
  }
  function getFreshSideObject() {
    return {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    };
  }
  function mergePaddingObject(paddingObject) {
    return Object.assign({}, getFreshSideObject(), paddingObject);
  }
  function expandToHashMap(value, keys2) {
    return keys2.reduce(function(hashMap, key) {
      hashMap[key] = value;
      return hashMap;
    }, {});
  }
  var toPaddingObject = function toPaddingObject2(padding, state) {
    padding = typeof padding === "function" ? padding(Object.assign({}, state.rects, {
      placement: state.placement
    })) : padding;
    return mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
  };
  function arrow(_ref) {
    var _state$modifiersData$;
    var state = _ref.state, name = _ref.name, options = _ref.options;
    var arrowElement = state.elements.arrow;
    var popperOffsets2 = state.modifiersData.popperOffsets;
    var basePlacement = getBasePlacement(state.placement);
    var axis = getMainAxisFromPlacement(basePlacement);
    var isVertical = [left, right].indexOf(basePlacement) >= 0;
    var len = isVertical ? "height" : "width";
    if (!arrowElement || !popperOffsets2) {
      return;
    }
    var paddingObject = toPaddingObject(options.padding, state);
    var arrowRect = getLayoutRect(arrowElement);
    var minProp = axis === "y" ? top : left;
    var maxProp = axis === "y" ? bottom : right;
    var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets2[axis] - state.rects.popper[len];
    var startDiff = popperOffsets2[axis] - state.rects.reference[axis];
    var arrowOffsetParent = getOffsetParent(arrowElement);
    var clientSize = arrowOffsetParent ? axis === "y" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
    var centerToReference = endDiff / 2 - startDiff / 2;
    var min2 = paddingObject[minProp];
    var max2 = clientSize - arrowRect[len] - paddingObject[maxProp];
    var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
    var offset2 = within(min2, center, max2);
    var axisProp = axis;
    state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset2, _state$modifiersData$.centerOffset = offset2 - center, _state$modifiersData$);
  }
  function effect$1(_ref2) {
    var state = _ref2.state, options = _ref2.options;
    var _options$element = options.element, arrowElement = _options$element === void 0 ? "[data-popper-arrow]" : _options$element;
    if (arrowElement == null) {
      return;
    }
    if (typeof arrowElement === "string") {
      arrowElement = state.elements.popper.querySelector(arrowElement);
      if (!arrowElement) {
        return;
      }
    }
    if (!contains$1(state.elements.popper, arrowElement)) {
      return;
    }
    state.elements.arrow = arrowElement;
  }
  var arrow$1 = {
    name: "arrow",
    enabled: true,
    phase: "main",
    fn: arrow,
    effect: effect$1,
    requires: ["popperOffsets"],
    requiresIfExists: ["preventOverflow"]
  };
  function getVariation(placement) {
    return placement.split("-")[1];
  }
  var unsetSides = {
    top: "auto",
    right: "auto",
    bottom: "auto",
    left: "auto"
  };
  function roundOffsetsByDPR(_ref) {
    var x2 = _ref.x, y2 = _ref.y;
    var win = window;
    var dpr = win.devicePixelRatio || 1;
    return {
      x: round(round(x2 * dpr) / dpr) || 0,
      y: round(round(y2 * dpr) / dpr) || 0
    };
  }
  function mapToStyles(_ref2) {
    var _Object$assign2;
    var popper2 = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position2 = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets;
    var _ref3 = roundOffsets === true ? roundOffsetsByDPR(offsets) : typeof roundOffsets === "function" ? roundOffsets(offsets) : offsets, _ref3$x = _ref3.x, x2 = _ref3$x === void 0 ? 0 : _ref3$x, _ref3$y = _ref3.y, y2 = _ref3$y === void 0 ? 0 : _ref3$y;
    var hasX = offsets.hasOwnProperty("x");
    var hasY = offsets.hasOwnProperty("y");
    var sideX = left;
    var sideY = top;
    var win = window;
    if (adaptive) {
      var offsetParent2 = getOffsetParent(popper2);
      var heightProp = "clientHeight";
      var widthProp = "clientWidth";
      if (offsetParent2 === getWindow(popper2)) {
        offsetParent2 = getDocumentElement(popper2);
        if (getComputedStyle$3(offsetParent2).position !== "static" && position2 === "absolute") {
          heightProp = "scrollHeight";
          widthProp = "scrollWidth";
        }
      }
      offsetParent2 = offsetParent2;
      if (placement === top || (placement === left || placement === right) && variation === end) {
        sideY = bottom;
        y2 -= offsetParent2[heightProp] - popperRect.height;
        y2 *= gpuAcceleration ? 1 : -1;
      }
      if (placement === left || (placement === top || placement === bottom) && variation === end) {
        sideX = right;
        x2 -= offsetParent2[widthProp] - popperRect.width;
        x2 *= gpuAcceleration ? 1 : -1;
      }
    }
    var commonStyles = Object.assign({
      position: position2
    }, adaptive && unsetSides);
    if (gpuAcceleration) {
      var _Object$assign;
      return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? "0" : "", _Object$assign[sideX] = hasX ? "0" : "", _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x2 + "px, " + y2 + "px)" : "translate3d(" + x2 + "px, " + y2 + "px, 0)", _Object$assign));
    }
    return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y2 + "px" : "", _Object$assign2[sideX] = hasX ? x2 + "px" : "", _Object$assign2.transform = "", _Object$assign2));
  }
  function computeStyles(_ref4) {
    var state = _ref4.state, options = _ref4.options;
    var _options$gpuAccelerat = options.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
    var commonStyles = {
      placement: getBasePlacement(state.placement),
      variation: getVariation(state.placement),
      popper: state.elements.popper,
      popperRect: state.rects.popper,
      gpuAcceleration
    };
    if (state.modifiersData.popperOffsets != null) {
      state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
        offsets: state.modifiersData.popperOffsets,
        position: state.options.strategy,
        adaptive,
        roundOffsets
      })));
    }
    if (state.modifiersData.arrow != null) {
      state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
        offsets: state.modifiersData.arrow,
        position: "absolute",
        adaptive: false,
        roundOffsets
      })));
    }
    state.attributes.popper = Object.assign({}, state.attributes.popper, {
      "data-popper-placement": state.placement
    });
  }
  var computeStyles$1 = {
    name: "computeStyles",
    enabled: true,
    phase: "beforeWrite",
    fn: computeStyles,
    data: {}
  };
  var passive = {
    passive: true
  };
  function effect(_ref) {
    var state = _ref.state, instance = _ref.instance, options = _ref.options;
    var _options$scroll = options.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options.resize, resize = _options$resize === void 0 ? true : _options$resize;
    var window2 = getWindow(state.elements.popper);
    var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);
    if (scroll) {
      scrollParents.forEach(function(scrollParent) {
        scrollParent.addEventListener("scroll", instance.update, passive);
      });
    }
    if (resize) {
      window2.addEventListener("resize", instance.update, passive);
    }
    return function() {
      if (scroll) {
        scrollParents.forEach(function(scrollParent) {
          scrollParent.removeEventListener("scroll", instance.update, passive);
        });
      }
      if (resize) {
        window2.removeEventListener("resize", instance.update, passive);
      }
    };
  }
  var eventListeners = {
    name: "eventListeners",
    enabled: true,
    phase: "write",
    fn: function fn() {
    },
    effect,
    data: {}
  };
  var hash$1 = {
    left: "right",
    right: "left",
    bottom: "top",
    top: "bottom"
  };
  function getOppositePlacement(placement) {
    return placement.replace(/left|right|bottom|top/g, function(matched) {
      return hash$1[matched];
    });
  }
  var hash = {
    start: "end",
    end: "start"
  };
  function getOppositeVariationPlacement(placement) {
    return placement.replace(/start|end/g, function(matched) {
      return hash[matched];
    });
  }
  function getWindowScroll(node) {
    var win = getWindow(node);
    var scrollLeft2 = win.pageXOffset;
    var scrollTop2 = win.pageYOffset;
    return {
      scrollLeft: scrollLeft2,
      scrollTop: scrollTop2
    };
  }
  function getWindowScrollBarX(element) {
    return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
  }
  function getViewportRect(element) {
    var win = getWindow(element);
    var html = getDocumentElement(element);
    var visualViewport = win.visualViewport;
    var width = html.clientWidth;
    var height = html.clientHeight;
    var x2 = 0;
    var y2 = 0;
    if (visualViewport) {
      width = visualViewport.width;
      height = visualViewport.height;
      if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
        x2 = visualViewport.offsetLeft;
        y2 = visualViewport.offsetTop;
      }
    }
    return {
      width,
      height,
      x: x2 + getWindowScrollBarX(element),
      y: y2
    };
  }
  function getDocumentRect(element) {
    var _element$ownerDocumen;
    var html = getDocumentElement(element);
    var winScroll = getWindowScroll(element);
    var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
    var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
    var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
    var x2 = -winScroll.scrollLeft + getWindowScrollBarX(element);
    var y2 = -winScroll.scrollTop;
    if (getComputedStyle$3(body || html).direction === "rtl") {
      x2 += max(html.clientWidth, body ? body.clientWidth : 0) - width;
    }
    return {
      width,
      height,
      x: x2,
      y: y2
    };
  }
  function isScrollParent(element) {
    var _getComputedStyle = getComputedStyle$3(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;
    return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
  }
  function getScrollParent(node) {
    if (["html", "body", "#document"].indexOf(getNodeName(node)) >= 0) {
      return node.ownerDocument.body;
    }
    if (isHTMLElement(node) && isScrollParent(node)) {
      return node;
    }
    return getScrollParent(getParentNode(node));
  }
  function listScrollParents(element, list) {
    var _element$ownerDocumen;
    if (list === void 0) {
      list = [];
    }
    var scrollParent = getScrollParent(element);
    var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
    var win = getWindow(scrollParent);
    var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
    var updatedList = list.concat(target);
    return isBody ? updatedList : updatedList.concat(listScrollParents(getParentNode(target)));
  }
  function rectToClientRect(rect) {
    return Object.assign({}, rect, {
      left: rect.x,
      top: rect.y,
      right: rect.x + rect.width,
      bottom: rect.y + rect.height
    });
  }
  function getInnerBoundingClientRect(element) {
    var rect = getBoundingClientRect(element);
    rect.top = rect.top + element.clientTop;
    rect.left = rect.left + element.clientLeft;
    rect.bottom = rect.top + element.clientHeight;
    rect.right = rect.left + element.clientWidth;
    rect.width = element.clientWidth;
    rect.height = element.clientHeight;
    rect.x = rect.left;
    rect.y = rect.top;
    return rect;
  }
  function getClientRectFromMixedType(element, clippingParent) {
    return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isHTMLElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
  }
  function getClippingParents(element) {
    var clippingParents2 = listScrollParents(getParentNode(element));
    var canEscapeClipping = ["absolute", "fixed"].indexOf(getComputedStyle$3(element).position) >= 0;
    var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;
    if (!isElement$1(clipperElement)) {
      return [];
    }
    return clippingParents2.filter(function(clippingParent) {
      return isElement$1(clippingParent) && contains$1(clippingParent, clipperElement) && getNodeName(clippingParent) !== "body";
    });
  }
  function getClippingRect(element, boundary, rootBoundary) {
    var mainClippingParents = boundary === "clippingParents" ? getClippingParents(element) : [].concat(boundary);
    var clippingParents2 = [].concat(mainClippingParents, [rootBoundary]);
    var firstClippingParent = clippingParents2[0];
    var clippingRect = clippingParents2.reduce(function(accRect, clippingParent) {
      var rect = getClientRectFromMixedType(element, clippingParent);
      accRect.top = max(rect.top, accRect.top);
      accRect.right = min(rect.right, accRect.right);
      accRect.bottom = min(rect.bottom, accRect.bottom);
      accRect.left = max(rect.left, accRect.left);
      return accRect;
    }, getClientRectFromMixedType(element, firstClippingParent));
    clippingRect.width = clippingRect.right - clippingRect.left;
    clippingRect.height = clippingRect.bottom - clippingRect.top;
    clippingRect.x = clippingRect.left;
    clippingRect.y = clippingRect.top;
    return clippingRect;
  }
  function computeOffsets(_ref) {
    var reference2 = _ref.reference, element = _ref.element, placement = _ref.placement;
    var basePlacement = placement ? getBasePlacement(placement) : null;
    var variation = placement ? getVariation(placement) : null;
    var commonX = reference2.x + reference2.width / 2 - element.width / 2;
    var commonY = reference2.y + reference2.height / 2 - element.height / 2;
    var offsets;
    switch (basePlacement) {
      case top:
        offsets = {
          x: commonX,
          y: reference2.y - element.height
        };
        break;
      case bottom:
        offsets = {
          x: commonX,
          y: reference2.y + reference2.height
        };
        break;
      case right:
        offsets = {
          x: reference2.x + reference2.width,
          y: commonY
        };
        break;
      case left:
        offsets = {
          x: reference2.x - element.width,
          y: commonY
        };
        break;
      default:
        offsets = {
          x: reference2.x,
          y: reference2.y
        };
    }
    var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;
    if (mainAxis != null) {
      var len = mainAxis === "y" ? "height" : "width";
      switch (variation) {
        case start$2:
          offsets[mainAxis] = offsets[mainAxis] - (reference2[len] / 2 - element[len] / 2);
          break;
        case end:
          offsets[mainAxis] = offsets[mainAxis] + (reference2[len] / 2 - element[len] / 2);
          break;
      }
    }
    return offsets;
  }
  function detectOverflow(state, options) {
    if (options === void 0) {
      options = {};
    }
    var _options = options, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? clippingParents : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? popper : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;
    var paddingObject = mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
    var altContext = elementContext === popper ? reference : popper;
    var popperRect = state.rects.popper;
    var element = state.elements[altBoundary ? altContext : elementContext];
    var clippingClientRect = getClippingRect(isElement$1(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);
    var referenceClientRect = getBoundingClientRect(state.elements.reference);
    var popperOffsets2 = computeOffsets({
      reference: referenceClientRect,
      element: popperRect,
      strategy: "absolute",
      placement
    });
    var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets2));
    var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect;
    var overflowOffsets = {
      top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
      bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
      left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
      right: elementClientRect.right - clippingClientRect.right + paddingObject.right
    };
    var offsetData = state.modifiersData.offset;
    if (elementContext === popper && offsetData) {
      var offset2 = offsetData[placement];
      Object.keys(overflowOffsets).forEach(function(key) {
        var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
        var axis = [top, bottom].indexOf(key) >= 0 ? "y" : "x";
        overflowOffsets[key] += offset2[axis] * multiply;
      });
    }
    return overflowOffsets;
  }
  function computeAutoPlacement(state, options) {
    if (options === void 0) {
      options = {};
    }
    var _options = options, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
    var variation = getVariation(placement);
    var placements$1 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function(placement2) {
      return getVariation(placement2) === variation;
    }) : basePlacements;
    var allowedPlacements = placements$1.filter(function(placement2) {
      return allowedAutoPlacements.indexOf(placement2) >= 0;
    });
    if (allowedPlacements.length === 0) {
      allowedPlacements = placements$1;
    }
    var overflows = allowedPlacements.reduce(function(acc, placement2) {
      acc[placement2] = detectOverflow(state, {
        placement: placement2,
        boundary,
        rootBoundary,
        padding
      })[getBasePlacement(placement2)];
      return acc;
    }, {});
    return Object.keys(overflows).sort(function(a2, b2) {
      return overflows[a2] - overflows[b2];
    });
  }
  function getExpandedFallbackPlacements(placement) {
    if (getBasePlacement(placement) === auto$1) {
      return [];
    }
    var oppositePlacement = getOppositePlacement(placement);
    return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
  }
  function flip(_ref) {
    var state = _ref.state, options = _ref.options, name = _ref.name;
    if (state.modifiersData[name]._skip) {
      return;
    }
    var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options.fallbackPlacements, padding = options.padding, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, _options$flipVariatio = options.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options.allowedAutoPlacements;
    var preferredPlacement = state.options.placement;
    var basePlacement = getBasePlacement(preferredPlacement);
    var isBasePlacement = basePlacement === preferredPlacement;
    var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
    var placements2 = [preferredPlacement].concat(fallbackPlacements).reduce(function(acc, placement2) {
      return acc.concat(getBasePlacement(placement2) === auto$1 ? computeAutoPlacement(state, {
        placement: placement2,
        boundary,
        rootBoundary,
        padding,
        flipVariations,
        allowedAutoPlacements
      }) : placement2);
    }, []);
    var referenceRect = state.rects.reference;
    var popperRect = state.rects.popper;
    var checksMap = /* @__PURE__ */ new Map();
    var makeFallbackChecks = true;
    var firstFittingPlacement = placements2[0];
    for (var i2 = 0; i2 < placements2.length; i2++) {
      var placement = placements2[i2];
      var _basePlacement = getBasePlacement(placement);
      var isStartVariation = getVariation(placement) === start$2;
      var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
      var len = isVertical ? "width" : "height";
      var overflow = detectOverflow(state, {
        placement,
        boundary,
        rootBoundary,
        altBoundary,
        padding
      });
      var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;
      if (referenceRect[len] > popperRect[len]) {
        mainVariationSide = getOppositePlacement(mainVariationSide);
      }
      var altVariationSide = getOppositePlacement(mainVariationSide);
      var checks = [];
      if (checkMainAxis) {
        checks.push(overflow[_basePlacement] <= 0);
      }
      if (checkAltAxis) {
        checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
      }
      if (checks.every(function(check) {
        return check;
      })) {
        firstFittingPlacement = placement;
        makeFallbackChecks = false;
        break;
      }
      checksMap.set(placement, checks);
    }
    if (makeFallbackChecks) {
      var numberOfChecks = flipVariations ? 3 : 1;
      var _loop = function _loop4(_i2) {
        var fittingPlacement = placements2.find(function(placement2) {
          var checks2 = checksMap.get(placement2);
          if (checks2) {
            return checks2.slice(0, _i2).every(function(check) {
              return check;
            });
          }
        });
        if (fittingPlacement) {
          firstFittingPlacement = fittingPlacement;
          return "break";
        }
      };
      for (var _i = numberOfChecks; _i > 0; _i--) {
        var _ret = _loop(_i);
        if (_ret === "break")
          break;
      }
    }
    if (state.placement !== firstFittingPlacement) {
      state.modifiersData[name]._skip = true;
      state.placement = firstFittingPlacement;
      state.reset = true;
    }
  }
  var flip$1 = {
    name: "flip",
    enabled: true,
    phase: "main",
    fn: flip,
    requiresIfExists: ["offset"],
    data: {
      _skip: false
    }
  };
  function getSideOffsets(overflow, rect, preventedOffsets) {
    if (preventedOffsets === void 0) {
      preventedOffsets = {
        x: 0,
        y: 0
      };
    }
    return {
      top: overflow.top - rect.height - preventedOffsets.y,
      right: overflow.right - rect.width + preventedOffsets.x,
      bottom: overflow.bottom - rect.height + preventedOffsets.y,
      left: overflow.left - rect.width - preventedOffsets.x
    };
  }
  function isAnySideFullyClipped(overflow) {
    return [top, right, bottom, left].some(function(side) {
      return overflow[side] >= 0;
    });
  }
  function hide(_ref) {
    var state = _ref.state, name = _ref.name;
    var referenceRect = state.rects.reference;
    var popperRect = state.rects.popper;
    var preventedOffsets = state.modifiersData.preventOverflow;
    var referenceOverflow = detectOverflow(state, {
      elementContext: "reference"
    });
    var popperAltOverflow = detectOverflow(state, {
      altBoundary: true
    });
    var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
    var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
    var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
    var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
    state.modifiersData[name] = {
      referenceClippingOffsets,
      popperEscapeOffsets,
      isReferenceHidden,
      hasPopperEscaped
    };
    state.attributes.popper = Object.assign({}, state.attributes.popper, {
      "data-popper-reference-hidden": isReferenceHidden,
      "data-popper-escaped": hasPopperEscaped
    });
  }
  var hide$1 = {
    name: "hide",
    enabled: true,
    phase: "main",
    requiresIfExists: ["preventOverflow"],
    fn: hide
  };
  function distanceAndSkiddingToXY(placement, rects, offset2) {
    var basePlacement = getBasePlacement(placement);
    var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;
    var _ref = typeof offset2 === "function" ? offset2(Object.assign({}, rects, {
      placement
    })) : offset2, skidding = _ref[0], distance2 = _ref[1];
    skidding = skidding || 0;
    distance2 = (distance2 || 0) * invertDistance;
    return [left, right].indexOf(basePlacement) >= 0 ? {
      x: distance2,
      y: skidding
    } : {
      x: skidding,
      y: distance2
    };
  }
  function offset$1(_ref2) {
    var state = _ref2.state, options = _ref2.options, name = _ref2.name;
    var _options$offset = options.offset, offset2 = _options$offset === void 0 ? [0, 0] : _options$offset;
    var data = placements.reduce(function(acc, placement) {
      acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset2);
      return acc;
    }, {});
    var _data$state$placement = data[state.placement], x2 = _data$state$placement.x, y2 = _data$state$placement.y;
    if (state.modifiersData.popperOffsets != null) {
      state.modifiersData.popperOffsets.x += x2;
      state.modifiersData.popperOffsets.y += y2;
    }
    state.modifiersData[name] = data;
  }
  var offset$2 = {
    name: "offset",
    enabled: true,
    phase: "main",
    requires: ["popperOffsets"],
    fn: offset$1
  };
  function popperOffsets(_ref) {
    var state = _ref.state, name = _ref.name;
    state.modifiersData[name] = computeOffsets({
      reference: state.rects.reference,
      element: state.rects.popper,
      strategy: "absolute",
      placement: state.placement
    });
  }
  var popperOffsets$1 = {
    name: "popperOffsets",
    enabled: true,
    phase: "read",
    fn: popperOffsets,
    data: {}
  };
  function getAltAxis(axis) {
    return axis === "x" ? "y" : "x";
  }
  function preventOverflow(_ref) {
    var state = _ref.state, options = _ref.options, name = _ref.name;
    var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, padding = options.padding, _options$tether = options.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
    var overflow = detectOverflow(state, {
      boundary,
      rootBoundary,
      padding,
      altBoundary
    });
    var basePlacement = getBasePlacement(state.placement);
    var variation = getVariation(state.placement);
    var isBasePlacement = !variation;
    var mainAxis = getMainAxisFromPlacement(basePlacement);
    var altAxis = getAltAxis(mainAxis);
    var popperOffsets2 = state.modifiersData.popperOffsets;
    var referenceRect = state.rects.reference;
    var popperRect = state.rects.popper;
    var tetherOffsetValue = typeof tetherOffset === "function" ? tetherOffset(Object.assign({}, state.rects, {
      placement: state.placement
    })) : tetherOffset;
    var data = {
      x: 0,
      y: 0
    };
    if (!popperOffsets2) {
      return;
    }
    if (checkMainAxis || checkAltAxis) {
      var mainSide = mainAxis === "y" ? top : left;
      var altSide = mainAxis === "y" ? bottom : right;
      var len = mainAxis === "y" ? "height" : "width";
      var offset2 = popperOffsets2[mainAxis];
      var min$1 = popperOffsets2[mainAxis] + overflow[mainSide];
      var max$1 = popperOffsets2[mainAxis] - overflow[altSide];
      var additive = tether ? -popperRect[len] / 2 : 0;
      var minLen = variation === start$2 ? referenceRect[len] : popperRect[len];
      var maxLen = variation === start$2 ? -popperRect[len] : -referenceRect[len];
      var arrowElement = state.elements.arrow;
      var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
        width: 0,
        height: 0
      };
      var arrowPaddingObject = state.modifiersData["arrow#persistent"] ? state.modifiersData["arrow#persistent"].padding : getFreshSideObject();
      var arrowPaddingMin = arrowPaddingObject[mainSide];
      var arrowPaddingMax = arrowPaddingObject[altSide];
      var arrowLen = within(0, referenceRect[len], arrowRect[len]);
      var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - tetherOffsetValue : minLen - arrowLen - arrowPaddingMin - tetherOffsetValue;
      var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + tetherOffsetValue : maxLen + arrowLen + arrowPaddingMax + tetherOffsetValue;
      var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
      var clientOffset = arrowOffsetParent ? mainAxis === "y" ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
      var offsetModifierValue = state.modifiersData.offset ? state.modifiersData.offset[state.placement][mainAxis] : 0;
      var tetherMin = popperOffsets2[mainAxis] + minOffset - offsetModifierValue - clientOffset;
      var tetherMax = popperOffsets2[mainAxis] + maxOffset - offsetModifierValue;
      if (checkMainAxis) {
        var preventedOffset = within(tether ? min(min$1, tetherMin) : min$1, offset2, tether ? max(max$1, tetherMax) : max$1);
        popperOffsets2[mainAxis] = preventedOffset;
        data[mainAxis] = preventedOffset - offset2;
      }
      if (checkAltAxis) {
        var _mainSide = mainAxis === "x" ? top : left;
        var _altSide = mainAxis === "x" ? bottom : right;
        var _offset = popperOffsets2[altAxis];
        var _min = _offset + overflow[_mainSide];
        var _max = _offset - overflow[_altSide];
        var _preventedOffset = within(tether ? min(_min, tetherMin) : _min, _offset, tether ? max(_max, tetherMax) : _max);
        popperOffsets2[altAxis] = _preventedOffset;
        data[altAxis] = _preventedOffset - _offset;
      }
    }
    state.modifiersData[name] = data;
  }
  var preventOverflow$1 = {
    name: "preventOverflow",
    enabled: true,
    phase: "main",
    fn: preventOverflow,
    requiresIfExists: ["offset"]
  };
  function getHTMLElementScroll(element) {
    return {
      scrollLeft: element.scrollLeft,
      scrollTop: element.scrollTop
    };
  }
  function getNodeScroll(node) {
    if (node === getWindow(node) || !isHTMLElement(node)) {
      return getWindowScroll(node);
    } else {
      return getHTMLElementScroll(node);
    }
  }
  function isElementScaled(element) {
    var rect = element.getBoundingClientRect();
    var scaleX = rect.width / element.offsetWidth || 1;
    var scaleY = rect.height / element.offsetHeight || 1;
    return scaleX !== 1 || scaleY !== 1;
  }
  function getCompositeRect(elementOrVirtualElement, offsetParent2, isFixed) {
    if (isFixed === void 0) {
      isFixed = false;
    }
    var isOffsetParentAnElement = isHTMLElement(offsetParent2);
    isHTMLElement(offsetParent2) && isElementScaled(offsetParent2);
    var documentElement = getDocumentElement(offsetParent2);
    var rect = getBoundingClientRect(elementOrVirtualElement);
    var scroll = {
      scrollLeft: 0,
      scrollTop: 0
    };
    var offsets = {
      x: 0,
      y: 0
    };
    if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
      if (getNodeName(offsetParent2) !== "body" || isScrollParent(documentElement)) {
        scroll = getNodeScroll(offsetParent2);
      }
      if (isHTMLElement(offsetParent2)) {
        offsets = getBoundingClientRect(offsetParent2);
        offsets.x += offsetParent2.clientLeft;
        offsets.y += offsetParent2.clientTop;
      } else if (documentElement) {
        offsets.x = getWindowScrollBarX(documentElement);
      }
    }
    return {
      x: rect.left + scroll.scrollLeft - offsets.x,
      y: rect.top + scroll.scrollTop - offsets.y,
      width: rect.width,
      height: rect.height
    };
  }
  function order$1(modifiers) {
    var map2 = /* @__PURE__ */ new Map();
    var visited = /* @__PURE__ */ new Set();
    var result = [];
    modifiers.forEach(function(modifier) {
      map2.set(modifier.name, modifier);
    });
    function sort(modifier) {
      visited.add(modifier.name);
      var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
      requires.forEach(function(dep) {
        if (!visited.has(dep)) {
          var depModifier = map2.get(dep);
          if (depModifier) {
            sort(depModifier);
          }
        }
      });
      result.push(modifier);
    }
    modifiers.forEach(function(modifier) {
      if (!visited.has(modifier.name)) {
        sort(modifier);
      }
    });
    return result;
  }
  function orderModifiers(modifiers) {
    var orderedModifiers = order$1(modifiers);
    return modifierPhases.reduce(function(acc, phase) {
      return acc.concat(orderedModifiers.filter(function(modifier) {
        return modifier.phase === phase;
      }));
    }, []);
  }
  function debounce$3(fn3) {
    var pending;
    return function() {
      if (!pending) {
        pending = new Promise(function(resolve) {
          Promise.resolve().then(function() {
            pending = void 0;
            resolve(fn3());
          });
        });
      }
      return pending;
    };
  }
  function mergeByName(modifiers) {
    var merged = modifiers.reduce(function(merged2, current) {
      var existing = merged2[current.name];
      merged2[current.name] = existing ? Object.assign({}, existing, current, {
        options: Object.assign({}, existing.options, current.options),
        data: Object.assign({}, existing.data, current.data)
      }) : current;
      return merged2;
    }, {});
    return Object.keys(merged).map(function(key) {
      return merged[key];
    });
  }
  var DEFAULT_OPTIONS = {
    placement: "bottom",
    modifiers: [],
    strategy: "absolute"
  };
  function areValidElements() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return !args.some(function(element) {
      return !(element && typeof element.getBoundingClientRect === "function");
    });
  }
  function popperGenerator(generatorOptions) {
    if (generatorOptions === void 0) {
      generatorOptions = {};
    }
    var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers2 = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions2 = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
    return function createPopper2(reference2, popper2, options) {
      if (options === void 0) {
        options = defaultOptions2;
      }
      var state = {
        placement: "bottom",
        orderedModifiers: [],
        options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions2),
        modifiersData: {},
        elements: {
          reference: reference2,
          popper: popper2
        },
        attributes: {},
        styles: {}
      };
      var effectCleanupFns = [];
      var isDestroyed = false;
      var instance = {
        state,
        setOptions: function setOptions(setOptionsAction) {
          var options2 = typeof setOptionsAction === "function" ? setOptionsAction(state.options) : setOptionsAction;
          cleanupModifierEffects();
          state.options = Object.assign({}, defaultOptions2, state.options, options2);
          state.scrollParents = {
            reference: isElement$1(reference2) ? listScrollParents(reference2) : reference2.contextElement ? listScrollParents(reference2.contextElement) : [],
            popper: listScrollParents(popper2)
          };
          var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers2, state.options.modifiers)));
          state.orderedModifiers = orderedModifiers.filter(function(m) {
            return m.enabled;
          });
          runModifierEffects();
          return instance.update();
        },
        forceUpdate: function forceUpdate() {
          if (isDestroyed) {
            return;
          }
          var _state$elements = state.elements, reference3 = _state$elements.reference, popper3 = _state$elements.popper;
          if (!areValidElements(reference3, popper3)) {
            return;
          }
          state.rects = {
            reference: getCompositeRect(reference3, getOffsetParent(popper3), state.options.strategy === "fixed"),
            popper: getLayoutRect(popper3)
          };
          state.reset = false;
          state.placement = state.options.placement;
          state.orderedModifiers.forEach(function(modifier) {
            return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
          });
          for (var index2 = 0; index2 < state.orderedModifiers.length; index2++) {
            if (state.reset === true) {
              state.reset = false;
              index2 = -1;
              continue;
            }
            var _state$orderedModifie = state.orderedModifiers[index2], fn3 = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;
            if (typeof fn3 === "function") {
              state = fn3({
                state,
                options: _options,
                name,
                instance
              }) || state;
            }
          }
        },
        update: debounce$3(function() {
          return new Promise(function(resolve) {
            instance.forceUpdate();
            resolve(state);
          });
        }),
        destroy: function destroy() {
          cleanupModifierEffects();
          isDestroyed = true;
        }
      };
      if (!areValidElements(reference2, popper2)) {
        return instance;
      }
      instance.setOptions(options).then(function(state2) {
        if (!isDestroyed && options.onFirstUpdate) {
          options.onFirstUpdate(state2);
        }
      });
      function runModifierEffects() {
        state.orderedModifiers.forEach(function(_ref3) {
          var name = _ref3.name, _ref3$options = _ref3.options, options2 = _ref3$options === void 0 ? {} : _ref3$options, effect2 = _ref3.effect;
          if (typeof effect2 === "function") {
            var cleanupFn = effect2({
              state,
              name,
              instance,
              options: options2
            });
            var noopFn = function noopFn2() {
            };
            effectCleanupFns.push(cleanupFn || noopFn);
          }
        });
      }
      function cleanupModifierEffects() {
        effectCleanupFns.forEach(function(fn3) {
          return fn3();
        });
        effectCleanupFns = [];
      }
      return instance;
    };
  }
  var defaultModifiers = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1, offset$2, flip$1, preventOverflow$1, arrow$1, hide$1];
  var createPopper = /* @__PURE__ */ popperGenerator({
    defaultModifiers
  });
  var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
  function getDefaultExportFromCjs(x2) {
    return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, "default") ? x2["default"] : x2;
  }
  var hasElementType = typeof Element !== "undefined";
  var hasMap = typeof Map === "function";
  var hasSet = typeof Set === "function";
  var hasArrayBuffer = typeof ArrayBuffer === "function" && !!ArrayBuffer.isView;
  function equal(a2, b2) {
    if (a2 === b2)
      return true;
    if (a2 && b2 && typeof a2 == "object" && typeof b2 == "object") {
      if (a2.constructor !== b2.constructor)
        return false;
      var length, i2, keys2;
      if (Array.isArray(a2)) {
        length = a2.length;
        if (length != b2.length)
          return false;
        for (i2 = length; i2-- !== 0; )
          if (!equal(a2[i2], b2[i2]))
            return false;
        return true;
      }
      var it;
      if (hasMap && a2 instanceof Map && b2 instanceof Map) {
        if (a2.size !== b2.size)
          return false;
        it = a2.entries();
        while (!(i2 = it.next()).done)
          if (!b2.has(i2.value[0]))
            return false;
        it = a2.entries();
        while (!(i2 = it.next()).done)
          if (!equal(i2.value[1], b2.get(i2.value[0])))
            return false;
        return true;
      }
      if (hasSet && a2 instanceof Set && b2 instanceof Set) {
        if (a2.size !== b2.size)
          return false;
        it = a2.entries();
        while (!(i2 = it.next()).done)
          if (!b2.has(i2.value[0]))
            return false;
        return true;
      }
      if (hasArrayBuffer && ArrayBuffer.isView(a2) && ArrayBuffer.isView(b2)) {
        length = a2.length;
        if (length != b2.length)
          return false;
        for (i2 = length; i2-- !== 0; )
          if (a2[i2] !== b2[i2])
            return false;
        return true;
      }
      if (a2.constructor === RegExp)
        return a2.source === b2.source && a2.flags === b2.flags;
      if (a2.valueOf !== Object.prototype.valueOf)
        return a2.valueOf() === b2.valueOf();
      if (a2.toString !== Object.prototype.toString)
        return a2.toString() === b2.toString();
      keys2 = Object.keys(a2);
      length = keys2.length;
      if (length !== Object.keys(b2).length)
        return false;
      for (i2 = length; i2-- !== 0; )
        if (!Object.prototype.hasOwnProperty.call(b2, keys2[i2]))
          return false;
      if (hasElementType && a2 instanceof Element)
        return false;
      for (i2 = length; i2-- !== 0; ) {
        if ((keys2[i2] === "_owner" || keys2[i2] === "__v" || keys2[i2] === "__o") && a2.$$typeof) {
          continue;
        }
        if (!equal(a2[keys2[i2]], b2[keys2[i2]]))
          return false;
      }
      return true;
    }
    return a2 !== a2 && b2 !== b2;
  }
  var reactFastCompare = function isEqual(a2, b2) {
    try {
      return equal(a2, b2);
    } catch (error2) {
      if ((error2.message || "").match(/stack|recursion/i)) {
        console.warn("react-fast-compare cannot handle circular refs");
        return false;
      }
      throw error2;
    }
  };
  var EMPTY_MODIFIERS = [];
  var usePopper = function usePopper2(referenceElement, popperElement, options) {
    if (options === void 0) {
      options = {};
    }
    var prevOptions = React__default__namespace.useRef(null);
    var optionsWithDefaults = {
      onFirstUpdate: options.onFirstUpdate,
      placement: options.placement || "bottom",
      strategy: options.strategy || "absolute",
      modifiers: options.modifiers || EMPTY_MODIFIERS
    };
    var _React$useState = React__default__namespace.useState({
      styles: {
        popper: {
          position: optionsWithDefaults.strategy,
          left: "0",
          top: "0"
        },
        arrow: {
          position: "absolute"
        }
      },
      attributes: {}
    }), state = _React$useState[0], setState = _React$useState[1];
    var updateStateModifier = React__default__namespace.useMemo(function() {
      return {
        name: "updateState",
        enabled: true,
        phase: "write",
        fn: function fn3(_ref) {
          var state2 = _ref.state;
          var elements = Object.keys(state2.elements);
          setState({
            styles: fromEntries$1(elements.map(function(element) {
              return [element, state2.styles[element] || {}];
            })),
            attributes: fromEntries$1(elements.map(function(element) {
              return [element, state2.attributes[element]];
            }))
          });
        },
        requires: ["computeStyles"]
      };
    }, []);
    var popperOptions = React__default__namespace.useMemo(function() {
      var newOptions = {
        onFirstUpdate: optionsWithDefaults.onFirstUpdate,
        placement: optionsWithDefaults.placement,
        strategy: optionsWithDefaults.strategy,
        modifiers: [].concat(optionsWithDefaults.modifiers, [updateStateModifier, {
          name: "applyStyles",
          enabled: false
        }])
      };
      if (reactFastCompare(prevOptions.current, newOptions)) {
        return prevOptions.current || newOptions;
      } else {
        prevOptions.current = newOptions;
        return newOptions;
      }
    }, [optionsWithDefaults.onFirstUpdate, optionsWithDefaults.placement, optionsWithDefaults.strategy, optionsWithDefaults.modifiers, updateStateModifier]);
    var popperInstanceRef = React__default__namespace.useRef();
    useIsomorphicLayoutEffect$2(function() {
      if (popperInstanceRef.current) {
        popperInstanceRef.current.setOptions(popperOptions);
      }
    }, [popperOptions]);
    useIsomorphicLayoutEffect$2(function() {
      if (referenceElement == null || popperElement == null) {
        return;
      }
      var createPopper$1 = options.createPopper || createPopper;
      var popperInstance = createPopper$1(referenceElement, popperElement, popperOptions);
      popperInstanceRef.current = popperInstance;
      return function() {
        popperInstance.destroy();
        popperInstanceRef.current = null;
      };
    }, [referenceElement, popperElement, options.createPopper]);
    return {
      state: popperInstanceRef.current ? popperInstanceRef.current.state : null,
      styles: state.styles,
      attributes: state.attributes,
      update: popperInstanceRef.current ? popperInstanceRef.current.update : null,
      forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null
    };
  };
  var TOOLTIP_DISTANCE = 15;
  var TOOLTIP_SKIDDING = 0;
  var TOOLTIP_PADDING = 15;
  var InputLabel = ({
    children: children2,
    htmlFor,
    required = false,
    disabled = false,
    tooltip,
    bold
  }) => {
    var _a2;
    const tooltipElement = React__default.useRef(null);
    const [tooltipArrowElement, setTooltipArrowElement] = React__default.useState(null);
    const tooltipTriggerElement = React__default.useRef(null);
    const state = useTooltipTriggerState();
    const { triggerProps, tooltipProps } = useTooltipTrigger({}, state, tooltipTriggerElement);
    const { isOpen } = state;
    const { isFocusVisible: isFocusVisible2 } = useFocusVisible();
    const { styles: styles2, attributes } = usePopper(tooltipTriggerElement.current, tooltipElement.current, {
      placement: "auto",
      modifiers: [
        { name: "offset", options: { offset: [TOOLTIP_SKIDDING, TOOLTIP_DISTANCE] } },
        { name: "arrow", options: { element: tooltipArrowElement, padding: TOOLTIP_PADDING } }
      ]
    });
    const { hoverProps } = useHover({
      onHoverStart: () => state.open(),
      onHoverEnd: () => state.close()
    });
    return /* @__PURE__ */ React__default__default["default"].createElement("div", {
      className: merge$1([
        "tw-inline-flex tw-items-center tw-gap-1 tw-font-sans tw-text-s tw-overflow-hidden tw-max-w-full",
        disabled ? "tw-text-black-40 hover:tw-text-black-40 dark:tw-text-black-60 dark:hover:tw-text-black-60" : "tw-text-black-90 dark:tw-text-white"
      ]),
      "data-test-id": "input-label-container"
    }, /* @__PURE__ */ React__default__default["default"].createElement("div", {
      className: "tw-flex-1 tw-overflow-hidden tw-overflow-ellipsis tw-whitespace-nowrap"
    }, /* @__PURE__ */ React__default__default["default"].createElement("label", {
      htmlFor,
      className: merge$1([
        "tw-select-none",
        bold && "tw-font-medium",
        disabled ? "hover:tw-cursor-not-allowed tw-pointer-events-none" : "hover:tw-cursor-pointer hover:tw-text-black dark:hover:tw-text-white group-hover:tw-text-black dark:group-hover:tw-text-white"
      ]),
      "data-test-id": "input-label"
    }, children2)), required && /* @__PURE__ */ React__default__default["default"].createElement("span", {
      "data-test-id": "input-label-required",
      className: "tw-h-4 tw-text-m tw-text-red-60 dark:tw-text-red-50"
    }, "*"), tooltip && /* @__PURE__ */ React__default__default["default"].createElement(React__default__default["default"].Fragment, null, /* @__PURE__ */ React__default__default["default"].createElement("div", __spreadValues({}, hoverProps), /* @__PURE__ */ React__default__default["default"].createElement("button", __spreadValues({
      "data-test-id": "input-label-tooltip-icon",
      ref: tooltipTriggerElement,
      className: merge$1([
        "tw-inline-flex tw-justify-center tw-items-center tw-text-black-60 hover:tw-text-black-60 dark:tw-text-black-40 dark:hover:tw-text-white tw-cursor-default tw-outline-none tw-rounded-full",
        isOpen && isFocusVisible2 && FOCUS_STYLE
      ])
    }, triggerProps), /* @__PURE__ */ React__default__default["default"].createElement(MemoIconQuestion, {
      size: IconSize.Size16
    })), isOpen && /* @__PURE__ */ React__default__default["default"].createElement(Tooltip, __spreadProps(__spreadValues({}, tooltip), {
      popperAttributes: attributes.popper,
      ref: tooltipElement,
      style: styles2.popper,
      tooltipAriaProps: tooltipProps
    }), /* @__PURE__ */ React__default__default["default"].createElement(TooltipArrow, {
      ref: setTooltipArrowElement,
      style: styles2.arrow,
      placement: (_a2 = attributes.popper) == null ? void 0 : _a2["data-popper-placement"],
      headerColor: tooltip.brightHeader
    })))));
  };
  var SwitchSize;
  (function(SwitchSize2) {
    SwitchSize2["Small"] = "Small";
    SwitchSize2["Medium"] = "Medium";
    SwitchSize2["Large"] = "Large";
  })(SwitchSize || (SwitchSize = {}));
  var lineSizeClasses = {
    [SwitchSize.Small]: "tw-w-5 tw-h-2",
    [SwitchSize.Medium]: "tw-w-9 tw-h-5",
    [SwitchSize.Large]: "tw-w-11 tw-h-6"
  };
  var dotSizeClasses = {
    [SwitchSize.Small]: "tw-w-3 tw-h-3",
    [SwitchSize.Medium]: "tw-w-4 tw-h-4",
    [SwitchSize.Large]: "tw-w-5 tw-h-5"
  };
  var Switch = ({
    id: propId,
    name,
    label,
    disabled,
    onChange,
    size = SwitchSize.Medium,
    on: on2 = false,
    hug = false,
    tooltip
  }) => {
    const id2 = useMemoizedId(propId);
    const { isFocusVisible: isFocusVisible2, focusProps } = useFocusRing();
    const lineClasses = React__default.useMemo(() => {
      const baseClasses = "tw-inline-flex tw-border-0 tw-rounded-full tw-transition-colors tw-flex-shrink-0";
      const sizeClasses2 = size !== SwitchSize.Small ? "tw-py-0 tw-px-[0.125rem]" : "tw-p-0";
      const activatedClasses = on2 ? "tw-bg-black-90 hover:tw-bg-black" : "tw-bg-black-30 hover:tw-bg-black-60";
      const disabledClasses = disabled ? "tw-bg-black-10 tw-pointer-events-none" : activatedClasses;
      return merge$1([baseClasses, sizeClasses2, disabledClasses, lineSizeClasses[size], isFocusVisible2 && FOCUS_STYLE]);
    }, [on2, disabled, size, isFocusVisible2]);
    const dotClasses = React__default.useMemo(() => {
      const baseClasses = "tw-block tw-self-center tw-bg-white tw-rounded-full tw-transition-transform";
      const disabledClasses = disabled ? "tw-border tw-border-black-30" : "tw-border tw-border-black";
      const sizeClasses2 = size === SwitchSize.Small ? disabledClasses : "";
      const activatedClasses = size === SwitchSize.Small ? "tw-translate-x-2" : "tw-translate-x-full";
      const animationClasses = on2 ? activatedClasses : "tw-translate-x-0";
      return merge$1([baseClasses, sizeClasses2, dotSizeClasses[size], animationClasses]);
    }, [on2, disabled, size]);
    const containerClasses = React__default.useMemo(() => {
      return merge$1(["tw-gap-2 tw-items-center tw-justify-between", hug ? "tw-inline-flex" : "tw-flex"]);
    }, [hug]);
    return /* @__PURE__ */ React__default__default["default"].createElement("div", {
      className: containerClasses,
      "data-test-id": "switch-container"
    }, label && /* @__PURE__ */ React__default__default["default"].createElement(InputLabel, {
      htmlFor: id2,
      disabled,
      tooltip
    }, label), /* @__PURE__ */ React__default__default["default"].createElement("button", __spreadProps(__spreadValues({}, focusProps), {
      id: id2,
      disabled,
      name,
      "data-test-id": "switch",
      className: lineClasses,
      value: on2.toString(),
      onClick: onChange
    }), /* @__PURE__ */ React__default__default["default"].createElement("div", {
      className: dotClasses
    })));
  };
  var FieldsetHeaderSize;
  (function(FieldsetHeaderSize2) {
    FieldsetHeaderSize2["Small"] = "Small";
    FieldsetHeaderSize2["Large"] = "Large";
  })(FieldsetHeaderSize || (FieldsetHeaderSize = {}));
  var FieldsetHeaderType;
  (function(FieldsetHeaderType2) {
    FieldsetHeaderType2["Default"] = "Default";
    FieldsetHeaderType2["Switch"] = "Switch";
    FieldsetHeaderType2["Accordion"] = "Accordion";
    FieldsetHeaderType2["AddRemove"] = "AddRemove";
  })(FieldsetHeaderType || (FieldsetHeaderType = {}));
  var renderType = (type, id2, size, active3, disabled) => {
    const props = {
      "aria-labelledby": id2,
      size: size === FieldsetHeaderSize.Large ? IconSize.Size20 : IconSize.Size12
    };
    switch (type) {
      case FieldsetHeaderType.Switch:
        return /* @__PURE__ */ React__default__default["default"].createElement(Switch, __spreadProps(__spreadValues({}, props), {
          size: size === FieldsetHeaderSize.Large ? SwitchSize.Large : SwitchSize.Small,
          on: active3,
          disabled
        }));
      case FieldsetHeaderType.Accordion:
        return /* @__PURE__ */ React__default__default["default"].createElement("div", {
          className: merge$1([
            "tw-transition-transform",
            active3 && "tw-rotate-180 tw-duration-300",
            disabled && !active3 && "tw-text-black-40",
            !disabled && active3 && "tw-text-black",
            !disabled && !active3 && "tw-text-black-80"
          ])
        }, /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCaretDown, __spreadValues({}, props)));
      case FieldsetHeaderType.AddRemove:
        return /* @__PURE__ */ React__default__default["default"].createElement("div", {
          className: merge$1([
            active3 && disabled && "tw-text-black-40",
            active3 && !disabled && "tw-text-black",
            !active3 && !disabled && "tw-text-black-80"
          ])
        }, active3 ? /* @__PURE__ */ React__default__default["default"].createElement(MemoIconMinus, __spreadValues({}, props)) : /* @__PURE__ */ React__default__default["default"].createElement(MemoIconAddSimple, __spreadValues({}, props)));
    }
    return null;
  };
  var FieldsetHeader = ({
    size = FieldsetHeaderSize.Large,
    active: active3 = true,
    decorator,
    type = FieldsetHeaderType.Default,
    disabled = false,
    bold = true,
    children: children2,
    onClick,
    as: Heading = "label",
    tabIndex = -1
  }) => {
    const id2 = useMemoizedId();
    const clickOnNotDisabled = () => !disabled && onClick && onClick();
    return /* @__PURE__ */ React__default__default["default"].createElement("header", {
      "data-test-id": "fieldset-header",
      role: onClick ? "button" : void 0,
      onClick: clickOnNotDisabled,
      onKeyPress: clickOnNotDisabled,
      className: merge$1([
        "tw-flex tw-items-center tw-gap-x-1.5 tw-w-full tw-flex-row",
        disabled ? "tw-text-black-40" : "tw-text-black dark:tw-text-white",
        !disabled && onClick ? "hover:tw-cursor-pointer" : "tw-pointer-events-none"
      ]),
      tabIndex
    }, React__default.isValidElement(decorator) && /* @__PURE__ */ React__default__default["default"].createElement("span", {
      className: "tw-flex-shrink-0"
    }, React__default.cloneElement(decorator, {
      size: size === FieldsetHeaderSize.Large ? IconSize.Size20 : IconSize.Size16
    })), /* @__PURE__ */ React__default__default["default"].createElement(Heading, {
      id: id2,
      className: merge$1([
        "tw-text-left",
        size === FieldsetHeaderSize.Large ? "tw-text-l" : "tw-text-m",
        bold ? "tw-font-bold" : "tw-font-normal",
        onClick && "hover:tw-cursor-pointer"
      ])
    }, children2), type !== FieldsetHeaderType.Default && /* @__PURE__ */ React__default__default["default"].createElement("span", {
      className: "tw-ml-auto tw-flex-shrink-0"
    }, renderType(type, id2, size, active3, disabled)));
  };
  var extendStatics = function(d2, b2) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d3, b3) {
      d3.__proto__ = b3;
    } || function(d3, b3) {
      for (var p2 in b3)
        if (Object.prototype.hasOwnProperty.call(b3, p2))
          d3[p2] = b3[p2];
    };
    return extendStatics(d2, b2);
  };
  function __extends(d2, b2) {
    if (typeof b2 !== "function" && b2 !== null)
      throw new TypeError("Class extends value " + String(b2) + " is not a constructor or null");
    extendStatics(d2, b2);
    function __() {
      this.constructor = d2;
    }
    d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
  }
  var __assign$2 = function() {
    __assign$2 = Object.assign || function __assign2(t2) {
      for (var s2, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
        s2 = arguments[i2];
        for (var p2 in s2)
          if (Object.prototype.hasOwnProperty.call(s2, p2))
            t2[p2] = s2[p2];
      }
      return t2;
    };
    return __assign$2.apply(this, arguments);
  };
  function __rest$2(s2, e2) {
    var t2 = {};
    for (var p2 in s2)
      if (Object.prototype.hasOwnProperty.call(s2, p2) && e2.indexOf(p2) < 0)
        t2[p2] = s2[p2];
    if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
      for (var i2 = 0, p2 = Object.getOwnPropertySymbols(s2); i2 < p2.length; i2++) {
        if (e2.indexOf(p2[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p2[i2]))
          t2[p2[i2]] = s2[p2[i2]];
      }
    return t2;
  }
  function __read$5(o2, n2) {
    var m = typeof Symbol === "function" && o2[Symbol.iterator];
    if (!m)
      return o2;
    var i2 = m.call(o2), r2, ar = [], e2;
    try {
      while ((n2 === void 0 || n2-- > 0) && !(r2 = i2.next()).done)
        ar.push(r2.value);
    } catch (error2) {
      e2 = { error: error2 };
    } finally {
      try {
        if (r2 && !r2.done && (m = i2["return"]))
          m.call(i2);
      } finally {
        if (e2)
          throw e2.error;
      }
    }
    return ar;
  }
  function __spreadArray$2(to, from, pack) {
    if (pack || arguments.length === 2)
      for (var i2 = 0, l2 = from.length, ar; i2 < l2; i2++) {
        if (ar || !(i2 in from)) {
          if (!ar)
            ar = Array.prototype.slice.call(from, 0, i2);
          ar[i2] = from[i2];
        }
      }
    return to.concat(ar || Array.prototype.slice.call(from));
  }
  var ErrorKind;
  (function(ErrorKind2) {
    ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_CLOSING_BRACE"] = 1] = "EXPECT_ARGUMENT_CLOSING_BRACE";
    ErrorKind2[ErrorKind2["EMPTY_ARGUMENT"] = 2] = "EMPTY_ARGUMENT";
    ErrorKind2[ErrorKind2["MALFORMED_ARGUMENT"] = 3] = "MALFORMED_ARGUMENT";
    ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_TYPE"] = 4] = "EXPECT_ARGUMENT_TYPE";
    ErrorKind2[ErrorKind2["INVALID_ARGUMENT_TYPE"] = 5] = "INVALID_ARGUMENT_TYPE";
    ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_STYLE"] = 6] = "EXPECT_ARGUMENT_STYLE";
    ErrorKind2[ErrorKind2["INVALID_NUMBER_SKELETON"] = 7] = "INVALID_NUMBER_SKELETON";
    ErrorKind2[ErrorKind2["INVALID_DATE_TIME_SKELETON"] = 8] = "INVALID_DATE_TIME_SKELETON";
    ErrorKind2[ErrorKind2["EXPECT_NUMBER_SKELETON"] = 9] = "EXPECT_NUMBER_SKELETON";
    ErrorKind2[ErrorKind2["EXPECT_DATE_TIME_SKELETON"] = 10] = "EXPECT_DATE_TIME_SKELETON";
    ErrorKind2[ErrorKind2["UNCLOSED_QUOTE_IN_ARGUMENT_STYLE"] = 11] = "UNCLOSED_QUOTE_IN_ARGUMENT_STYLE";
    ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_OPTIONS"] = 12] = "EXPECT_SELECT_ARGUMENT_OPTIONS";
    ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE"] = 13] = "EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE";
    ErrorKind2[ErrorKind2["INVALID_PLURAL_ARGUMENT_OFFSET_VALUE"] = 14] = "INVALID_PLURAL_ARGUMENT_OFFSET_VALUE";
    ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_SELECTOR"] = 15] = "EXPECT_SELECT_ARGUMENT_SELECTOR";
    ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_SELECTOR"] = 16] = "EXPECT_PLURAL_ARGUMENT_SELECTOR";
    ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT"] = 17] = "EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT";
    ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT"] = 18] = "EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT";
    ErrorKind2[ErrorKind2["INVALID_PLURAL_ARGUMENT_SELECTOR"] = 19] = "INVALID_PLURAL_ARGUMENT_SELECTOR";
    ErrorKind2[ErrorKind2["DUPLICATE_PLURAL_ARGUMENT_SELECTOR"] = 20] = "DUPLICATE_PLURAL_ARGUMENT_SELECTOR";
    ErrorKind2[ErrorKind2["DUPLICATE_SELECT_ARGUMENT_SELECTOR"] = 21] = "DUPLICATE_SELECT_ARGUMENT_SELECTOR";
    ErrorKind2[ErrorKind2["MISSING_OTHER_CLAUSE"] = 22] = "MISSING_OTHER_CLAUSE";
    ErrorKind2[ErrorKind2["INVALID_TAG"] = 23] = "INVALID_TAG";
    ErrorKind2[ErrorKind2["INVALID_TAG_NAME"] = 25] = "INVALID_TAG_NAME";
    ErrorKind2[ErrorKind2["UNMATCHED_CLOSING_TAG"] = 26] = "UNMATCHED_CLOSING_TAG";
    ErrorKind2[ErrorKind2["UNCLOSED_TAG"] = 27] = "UNCLOSED_TAG";
  })(ErrorKind || (ErrorKind = {}));
  var TYPE;
  (function(TYPE2) {
    TYPE2[TYPE2["literal"] = 0] = "literal";
    TYPE2[TYPE2["argument"] = 1] = "argument";
    TYPE2[TYPE2["number"] = 2] = "number";
    TYPE2[TYPE2["date"] = 3] = "date";
    TYPE2[TYPE2["time"] = 4] = "time";
    TYPE2[TYPE2["select"] = 5] = "select";
    TYPE2[TYPE2["plural"] = 6] = "plural";
    TYPE2[TYPE2["pound"] = 7] = "pound";
    TYPE2[TYPE2["tag"] = 8] = "tag";
  })(TYPE || (TYPE = {}));
  var SKELETON_TYPE;
  (function(SKELETON_TYPE2) {
    SKELETON_TYPE2[SKELETON_TYPE2["number"] = 0] = "number";
    SKELETON_TYPE2[SKELETON_TYPE2["dateTime"] = 1] = "dateTime";
  })(SKELETON_TYPE || (SKELETON_TYPE = {}));
  function isLiteralElement(el) {
    return el.type === TYPE.literal;
  }
  function isArgumentElement(el) {
    return el.type === TYPE.argument;
  }
  function isNumberElement(el) {
    return el.type === TYPE.number;
  }
  function isDateElement(el) {
    return el.type === TYPE.date;
  }
  function isTimeElement(el) {
    return el.type === TYPE.time;
  }
  function isSelectElement(el) {
    return el.type === TYPE.select;
  }
  function isPluralElement(el) {
    return el.type === TYPE.plural;
  }
  function isPoundElement(el) {
    return el.type === TYPE.pound;
  }
  function isTagElement(el) {
    return el.type === TYPE.tag;
  }
  function isNumberSkeleton(el) {
    return !!(el && typeof el === "object" && el.type === SKELETON_TYPE.number);
  }
  function isDateTimeSkeleton(el) {
    return !!(el && typeof el === "object" && el.type === SKELETON_TYPE.dateTime);
  }
  var SPACE_SEPARATOR_REGEX = /[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/;
  var DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;
  function parseDateTimeSkeleton(skeleton) {
    var result = {};
    skeleton.replace(DATE_TIME_REGEX, function(match) {
      var len = match.length;
      switch (match[0]) {
        case "G":
          result.era = len === 4 ? "long" : len === 5 ? "narrow" : "short";
          break;
        case "y":
          result.year = len === 2 ? "2-digit" : "numeric";
          break;
        case "Y":
        case "u":
        case "U":
        case "r":
          throw new RangeError("`Y/u/U/r` (year) patterns are not supported, use `y` instead");
        case "q":
        case "Q":
          throw new RangeError("`q/Q` (quarter) patterns are not supported");
        case "M":
        case "L":
          result.month = ["numeric", "2-digit", "short", "long", "narrow"][len - 1];
          break;
        case "w":
        case "W":
          throw new RangeError("`w/W` (week) patterns are not supported");
        case "d":
          result.day = ["numeric", "2-digit"][len - 1];
          break;
        case "D":
        case "F":
        case "g":
          throw new RangeError("`D/F/g` (day) patterns are not supported, use `d` instead");
        case "E":
          result.weekday = len === 4 ? "short" : len === 5 ? "narrow" : "short";
          break;
        case "e":
          if (len < 4) {
            throw new RangeError("`e..eee` (weekday) patterns are not supported");
          }
          result.weekday = ["short", "long", "narrow", "short"][len - 4];
          break;
        case "c":
          if (len < 4) {
            throw new RangeError("`c..ccc` (weekday) patterns are not supported");
          }
          result.weekday = ["short", "long", "narrow", "short"][len - 4];
          break;
        case "a":
          result.hour12 = true;
          break;
        case "b":
        case "B":
          throw new RangeError("`b/B` (period) patterns are not supported, use `a` instead");
        case "h":
          result.hourCycle = "h12";
          result.hour = ["numeric", "2-digit"][len - 1];
          break;
        case "H":
          result.hourCycle = "h23";
          result.hour = ["numeric", "2-digit"][len - 1];
          break;
        case "K":
          result.hourCycle = "h11";
          result.hour = ["numeric", "2-digit"][len - 1];
          break;
        case "k":
          result.hourCycle = "h24";
          result.hour = ["numeric", "2-digit"][len - 1];
          break;
        case "j":
        case "J":
        case "C":
          throw new RangeError("`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead");
        case "m":
          result.minute = ["numeric", "2-digit"][len - 1];
          break;
        case "s":
          result.second = ["numeric", "2-digit"][len - 1];
          break;
        case "S":
        case "A":
          throw new RangeError("`S/A` (second) patterns are not supported, use `s` instead");
        case "z":
          result.timeZoneName = len < 4 ? "short" : "long";
          break;
        case "Z":
        case "O":
        case "v":
        case "V":
        case "X":
        case "x":
          throw new RangeError("`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead");
      }
      return "";
    });
    return result;
  }
  var WHITE_SPACE_REGEX = /[\t-\r \x85\u200E\u200F\u2028\u2029]/i;
  function parseNumberSkeletonFromString(skeleton) {
    if (skeleton.length === 0) {
      throw new Error("Number skeleton cannot be empty");
    }
    var stringTokens = skeleton.split(WHITE_SPACE_REGEX).filter(function(x2) {
      return x2.length > 0;
    });
    var tokens = [];
    for (var _i = 0, stringTokens_1 = stringTokens; _i < stringTokens_1.length; _i++) {
      var stringToken = stringTokens_1[_i];
      var stemAndOptions = stringToken.split("/");
      if (stemAndOptions.length === 0) {
        throw new Error("Invalid number skeleton");
      }
      var stem = stemAndOptions[0], options = stemAndOptions.slice(1);
      for (var _a2 = 0, options_1 = options; _a2 < options_1.length; _a2++) {
        var option = options_1[_a2];
        if (option.length === 0) {
          throw new Error("Invalid number skeleton");
        }
      }
      tokens.push({ stem, options });
    }
    return tokens;
  }
  function icuUnitToEcma(unit) {
    return unit.replace(/^(.*?)-/, "");
  }
  var FRACTION_PRECISION_REGEX = /^\.(?:(0+)(\*)?|(#+)|(0+)(#+))$/g;
  var SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\+|#+)?[rs]?$/g;
  var INTEGER_WIDTH_REGEX = /(\*)(0+)|(#+)(0+)|(0+)/g;
  var CONCISE_INTEGER_WIDTH_REGEX = /^(0+)$/;
  function parseSignificantPrecision(str) {
    var result = {};
    if (str[str.length - 1] === "r") {
      result.roundingPriority = "morePrecision";
    } else if (str[str.length - 1] === "s") {
      result.roundingPriority = "lessPrecision";
    }
    str.replace(SIGNIFICANT_PRECISION_REGEX, function(_2, g1, g2) {
      if (typeof g2 !== "string") {
        result.minimumSignificantDigits = g1.length;
        result.maximumSignificantDigits = g1.length;
      } else if (g2 === "+") {
        result.minimumSignificantDigits = g1.length;
      } else if (g1[0] === "#") {
        result.maximumSignificantDigits = g1.length;
      } else {
        result.minimumSignificantDigits = g1.length;
        result.maximumSignificantDigits = g1.length + (typeof g2 === "string" ? g2.length : 0);
      }
      return "";
    });
    return result;
  }
  function parseSign(str) {
    switch (str) {
      case "sign-auto":
        return {
          signDisplay: "auto"
        };
      case "sign-accounting":
      case "()":
        return {
          currencySign: "accounting"
        };
      case "sign-always":
      case "+!":
        return {
          signDisplay: "always"
        };
      case "sign-accounting-always":
      case "()!":
        return {
          signDisplay: "always",
          currencySign: "accounting"
        };
      case "sign-except-zero":
      case "+?":
        return {
          signDisplay: "exceptZero"
        };
      case "sign-accounting-except-zero":
      case "()?":
        return {
          signDisplay: "exceptZero",
          currencySign: "accounting"
        };
      case "sign-never":
      case "+_":
        return {
          signDisplay: "never"
        };
    }
  }
  function parseConciseScientificAndEngineeringStem(stem) {
    var result;
    if (stem[0] === "E" && stem[1] === "E") {
      result = {
        notation: "engineering"
      };
      stem = stem.slice(2);
    } else if (stem[0] === "E") {
      result = {
        notation: "scientific"
      };
      stem = stem.slice(1);
    }
    if (result) {
      var signDisplay = stem.slice(0, 2);
      if (signDisplay === "+!") {
        result.signDisplay = "always";
        stem = stem.slice(2);
      } else if (signDisplay === "+?") {
        result.signDisplay = "exceptZero";
        stem = stem.slice(2);
      }
      if (!CONCISE_INTEGER_WIDTH_REGEX.test(stem)) {
        throw new Error("Malformed concise eng/scientific notation");
      }
      result.minimumIntegerDigits = stem.length;
    }
    return result;
  }
  function parseNotationOptions(opt) {
    var result = {};
    var signOpts = parseSign(opt);
    if (signOpts) {
      return signOpts;
    }
    return result;
  }
  function parseNumberSkeleton(tokens) {
    var result = {};
    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
      var token = tokens_1[_i];
      switch (token.stem) {
        case "percent":
        case "%":
          result.style = "percent";
          continue;
        case "%x100":
          result.style = "percent";
          result.scale = 100;
          continue;
        case "currency":
          result.style = "currency";
          result.currency = token.options[0];
          continue;
        case "group-off":
        case ",_":
          result.useGrouping = false;
          continue;
        case "precision-integer":
        case ".":
          result.maximumFractionDigits = 0;
          continue;
        case "measure-unit":
        case "unit":
          result.style = "unit";
          result.unit = icuUnitToEcma(token.options[0]);
          continue;
        case "compact-short":
        case "K":
          result.notation = "compact";
          result.compactDisplay = "short";
          continue;
        case "compact-long":
        case "KK":
          result.notation = "compact";
          result.compactDisplay = "long";
          continue;
        case "scientific":
          result = __assign$2(__assign$2(__assign$2({}, result), { notation: "scientific" }), token.options.reduce(function(all, opt2) {
            return __assign$2(__assign$2({}, all), parseNotationOptions(opt2));
          }, {}));
          continue;
        case "engineering":
          result = __assign$2(__assign$2(__assign$2({}, result), { notation: "engineering" }), token.options.reduce(function(all, opt2) {
            return __assign$2(__assign$2({}, all), parseNotationOptions(opt2));
          }, {}));
          continue;
        case "notation-simple":
          result.notation = "standard";
          continue;
        case "unit-width-narrow":
          result.currencyDisplay = "narrowSymbol";
          result.unitDisplay = "narrow";
          continue;
        case "unit-width-short":
          result.currencyDisplay = "code";
          result.unitDisplay = "short";
          continue;
        case "unit-width-full-name":
          result.currencyDisplay = "name";
          result.unitDisplay = "long";
          continue;
        case "unit-width-iso-code":
          result.currencyDisplay = "symbol";
          continue;
        case "scale":
          result.scale = parseFloat(token.options[0]);
          continue;
        case "integer-width":
          if (token.options.length > 1) {
            throw new RangeError("integer-width stems only accept a single optional option");
          }
          token.options[0].replace(INTEGER_WIDTH_REGEX, function(_2, g1, g2, g3, g4, g5) {
            if (g1) {
              result.minimumIntegerDigits = g2.length;
            } else if (g3 && g4) {
              throw new Error("We currently do not support maximum integer digits");
            } else if (g5) {
              throw new Error("We currently do not support exact integer digits");
            }
            return "";
          });
          continue;
      }
      if (CONCISE_INTEGER_WIDTH_REGEX.test(token.stem)) {
        result.minimumIntegerDigits = token.stem.length;
        continue;
      }
      if (FRACTION_PRECISION_REGEX.test(token.stem)) {
        if (token.options.length > 1) {
          throw new RangeError("Fraction-precision stems only accept a single optional option");
        }
        token.stem.replace(FRACTION_PRECISION_REGEX, function(_2, g1, g2, g3, g4, g5) {
          if (g2 === "*") {
            result.minimumFractionDigits = g1.length;
          } else if (g3 && g3[0] === "#") {
            result.maximumFractionDigits = g3.length;
          } else if (g4 && g5) {
            result.minimumFractionDigits = g4.length;
            result.maximumFractionDigits = g4.length + g5.length;
          } else {
            result.minimumFractionDigits = g1.length;
            result.maximumFractionDigits = g1.length;
          }
          return "";
        });
        var opt = token.options[0];
        if (opt === "w") {
          result = __assign$2(__assign$2({}, result), { trailingZeroDisplay: "stripIfInteger" });
        } else if (opt) {
          result = __assign$2(__assign$2({}, result), parseSignificantPrecision(opt));
        }
        continue;
      }
      if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {
        result = __assign$2(__assign$2({}, result), parseSignificantPrecision(token.stem));
        continue;
      }
      var signOpts = parseSign(token.stem);
      if (signOpts) {
        result = __assign$2(__assign$2({}, result), signOpts);
      }
      var conciseScientificAndEngineeringOpts = parseConciseScientificAndEngineeringStem(token.stem);
      if (conciseScientificAndEngineeringOpts) {
        result = __assign$2(__assign$2({}, result), conciseScientificAndEngineeringOpts);
      }
    }
    return result;
  }
  var _a;
  var SPACE_SEPARATOR_START_REGEX = new RegExp("^" + SPACE_SEPARATOR_REGEX.source + "*");
  var SPACE_SEPARATOR_END_REGEX = new RegExp(SPACE_SEPARATOR_REGEX.source + "*$");
  function createLocation(start2, end2) {
    return { start: start2, end: end2 };
  }
  var hasNativeStartsWith = !!String.prototype.startsWith;
  var hasNativeFromCodePoint = !!String.fromCodePoint;
  var hasNativeFromEntries = !!Object.fromEntries;
  var hasNativeCodePointAt = !!String.prototype.codePointAt;
  var hasTrimStart = !!String.prototype.trimStart;
  var hasTrimEnd = !!String.prototype.trimEnd;
  var hasNativeIsSafeInteger = !!Number.isSafeInteger;
  var isSafeInteger = hasNativeIsSafeInteger ? Number.isSafeInteger : function(n2) {
    return typeof n2 === "number" && isFinite(n2) && Math.floor(n2) === n2 && Math.abs(n2) <= 9007199254740991;
  };
  var REGEX_SUPPORTS_U_AND_Y = true;
  try {
    re = RE("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
    REGEX_SUPPORTS_U_AND_Y = ((_a = re.exec("a")) === null || _a === void 0 ? void 0 : _a[0]) === "a";
  } catch (_2) {
    REGEX_SUPPORTS_U_AND_Y = false;
  }
  var re;
  var startsWith = hasNativeStartsWith ? function startsWith2(s2, search, position2) {
    return s2.startsWith(search, position2);
  } : function startsWith3(s2, search, position2) {
    return s2.slice(position2, position2 + search.length) === search;
  };
  var fromCodePoint = hasNativeFromCodePoint ? String.fromCodePoint : function fromCodePoint2() {
    var codePoints = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      codePoints[_i] = arguments[_i];
    }
    var elements = "";
    var length = codePoints.length;
    var i2 = 0;
    var code;
    while (length > i2) {
      code = codePoints[i2++];
      if (code > 1114111)
        throw RangeError(code + " is not a valid code point");
      elements += code < 65536 ? String.fromCharCode(code) : String.fromCharCode(((code -= 65536) >> 10) + 55296, code % 1024 + 56320);
    }
    return elements;
  };
  var fromEntries2 = hasNativeFromEntries ? Object.fromEntries : function fromEntries3(entries) {
    var obj = {};
    for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
      var _a2 = entries_1[_i], k2 = _a2[0], v2 = _a2[1];
      obj[k2] = v2;
    }
    return obj;
  };
  var codePointAt = hasNativeCodePointAt ? function codePointAt2(s2, index2) {
    return s2.codePointAt(index2);
  } : function codePointAt3(s2, index2) {
    var size = s2.length;
    if (index2 < 0 || index2 >= size) {
      return void 0;
    }
    var first = s2.charCodeAt(index2);
    var second;
    return first < 55296 || first > 56319 || index2 + 1 === size || (second = s2.charCodeAt(index2 + 1)) < 56320 || second > 57343 ? first : (first - 55296 << 10) + (second - 56320) + 65536;
  };
  var trimStart = hasTrimStart ? function trimStart2(s2) {
    return s2.trimStart();
  } : function trimStart3(s2) {
    return s2.replace(SPACE_SEPARATOR_START_REGEX, "");
  };
  var trimEnd = hasTrimEnd ? function trimEnd2(s2) {
    return s2.trimEnd();
  } : function trimEnd3(s2) {
    return s2.replace(SPACE_SEPARATOR_END_REGEX, "");
  };
  function RE(s2, flag) {
    return new RegExp(s2, flag);
  }
  var matchIdentifierAtIndex;
  if (REGEX_SUPPORTS_U_AND_Y) {
    IDENTIFIER_PREFIX_RE_1 = RE("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
    matchIdentifierAtIndex = function matchIdentifierAtIndex2(s2, index2) {
      var _a2;
      IDENTIFIER_PREFIX_RE_1.lastIndex = index2;
      var match = IDENTIFIER_PREFIX_RE_1.exec(s2);
      return (_a2 = match[1]) !== null && _a2 !== void 0 ? _a2 : "";
    };
  } else {
    matchIdentifierAtIndex = function matchIdentifierAtIndex2(s2, index2) {
      var match = [];
      while (true) {
        var c2 = codePointAt(s2, index2);
        if (c2 === void 0 || _isWhiteSpace(c2) || _isPatternSyntax(c2)) {
          break;
        }
        match.push(c2);
        index2 += c2 >= 65536 ? 2 : 1;
      }
      return fromCodePoint.apply(void 0, match);
    };
  }
  var IDENTIFIER_PREFIX_RE_1;
  var Parser = function() {
    function Parser2(message, options) {
      if (options === void 0) {
        options = {};
      }
      this.message = message;
      this.position = { offset: 0, line: 1, column: 1 };
      this.ignoreTag = !!options.ignoreTag;
      this.requiresOtherClause = !!options.requiresOtherClause;
      this.shouldParseSkeletons = !!options.shouldParseSkeletons;
    }
    Parser2.prototype.parse = function() {
      if (this.offset() !== 0) {
        throw Error("parser can only be used once");
      }
      return this.parseMessage(0, "", false);
    };
    Parser2.prototype.parseMessage = function(nestingLevel, parentArgType, expectingCloseTag) {
      var elements = [];
      while (!this.isEOF()) {
        var char = this.char();
        if (char === 123) {
          var result = this.parseArgument(nestingLevel, expectingCloseTag);
          if (result.err) {
            return result;
          }
          elements.push(result.val);
        } else if (char === 125 && nestingLevel > 0) {
          break;
        } else if (char === 35 && (parentArgType === "plural" || parentArgType === "selectordinal")) {
          var position2 = this.clonePosition();
          this.bump();
          elements.push({
            type: TYPE.pound,
            location: createLocation(position2, this.clonePosition())
          });
        } else if (char === 60 && !this.ignoreTag && this.peek() === 47) {
          if (expectingCloseTag) {
            break;
          } else {
            return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));
          }
        } else if (char === 60 && !this.ignoreTag && _isAlpha(this.peek() || 0)) {
          var result = this.parseTag(nestingLevel, parentArgType);
          if (result.err) {
            return result;
          }
          elements.push(result.val);
        } else {
          var result = this.parseLiteral(nestingLevel, parentArgType);
          if (result.err) {
            return result;
          }
          elements.push(result.val);
        }
      }
      return { val: elements, err: null };
    };
    Parser2.prototype.parseTag = function(nestingLevel, parentArgType) {
      var startPosition = this.clonePosition();
      this.bump();
      var tagName = this.parseTagName();
      this.bumpSpace();
      if (this.bumpIf("/>")) {
        return {
          val: {
            type: TYPE.literal,
            value: "<" + tagName + "/>",
            location: createLocation(startPosition, this.clonePosition())
          },
          err: null
        };
      } else if (this.bumpIf(">")) {
        var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);
        if (childrenResult.err) {
          return childrenResult;
        }
        var children2 = childrenResult.val;
        var endTagStartPosition = this.clonePosition();
        if (this.bumpIf("</")) {
          if (this.isEOF() || !_isAlpha(this.char())) {
            return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
          }
          var closingTagNameStartPosition = this.clonePosition();
          var closingTagName = this.parseTagName();
          if (tagName !== closingTagName) {
            return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));
          }
          this.bumpSpace();
          if (!this.bumpIf(">")) {
            return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
          }
          return {
            val: {
              type: TYPE.tag,
              value: tagName,
              children: children2,
              location: createLocation(startPosition, this.clonePosition())
            },
            err: null
          };
        } else {
          return this.error(ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));
        }
      } else {
        return this.error(ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));
      }
    };
    Parser2.prototype.parseTagName = function() {
      var startOffset = this.offset();
      this.bump();
      while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {
        this.bump();
      }
      return this.message.slice(startOffset, this.offset());
    };
    Parser2.prototype.parseLiteral = function(nestingLevel, parentArgType) {
      var start2 = this.clonePosition();
      var value = "";
      while (true) {
        var parseQuoteResult = this.tryParseQuote(parentArgType);
        if (parseQuoteResult) {
          value += parseQuoteResult;
          continue;
        }
        var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);
        if (parseUnquotedResult) {
          value += parseUnquotedResult;
          continue;
        }
        var parseLeftAngleResult = this.tryParseLeftAngleBracket();
        if (parseLeftAngleResult) {
          value += parseLeftAngleResult;
          continue;
        }
        break;
      }
      var location = createLocation(start2, this.clonePosition());
      return {
        val: { type: TYPE.literal, value, location },
        err: null
      };
    };
    Parser2.prototype.tryParseLeftAngleBracket = function() {
      if (!this.isEOF() && this.char() === 60 && (this.ignoreTag || !_isAlphaOrSlash(this.peek() || 0))) {
        this.bump();
        return "<";
      }
      return null;
    };
    Parser2.prototype.tryParseQuote = function(parentArgType) {
      if (this.isEOF() || this.char() !== 39) {
        return null;
      }
      switch (this.peek()) {
        case 39:
          this.bump();
          this.bump();
          return "'";
        case 123:
        case 60:
        case 62:
        case 125:
          break;
        case 35:
          if (parentArgType === "plural" || parentArgType === "selectordinal") {
            break;
          }
          return null;
        default:
          return null;
      }
      this.bump();
      var codePoints = [this.char()];
      this.bump();
      while (!this.isEOF()) {
        var ch = this.char();
        if (ch === 39) {
          if (this.peek() === 39) {
            codePoints.push(39);
            this.bump();
          } else {
            this.bump();
            break;
          }
        } else {
          codePoints.push(ch);
        }
        this.bump();
      }
      return fromCodePoint.apply(void 0, codePoints);
    };
    Parser2.prototype.tryParseUnquoted = function(nestingLevel, parentArgType) {
      if (this.isEOF()) {
        return null;
      }
      var ch = this.char();
      if (ch === 60 || ch === 123 || ch === 35 && (parentArgType === "plural" || parentArgType === "selectordinal") || ch === 125 && nestingLevel > 0) {
        return null;
      } else {
        this.bump();
        return fromCodePoint(ch);
      }
    };
    Parser2.prototype.parseArgument = function(nestingLevel, expectingCloseTag) {
      var openingBracePosition = this.clonePosition();
      this.bump();
      this.bumpSpace();
      if (this.isEOF()) {
        return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
      }
      if (this.char() === 125) {
        this.bump();
        return this.error(ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
      }
      var value = this.parseIdentifierIfPossible().value;
      if (!value) {
        return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
      }
      this.bumpSpace();
      if (this.isEOF()) {
        return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
      }
      switch (this.char()) {
        case 125: {
          this.bump();
          return {
            val: {
              type: TYPE.argument,
              value,
              location: createLocation(openingBracePosition, this.clonePosition())
            },
            err: null
          };
        }
        case 44: {
          this.bump();
          this.bumpSpace();
          if (this.isEOF()) {
            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
          }
          return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value, openingBracePosition);
        }
        default:
          return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
      }
    };
    Parser2.prototype.parseIdentifierIfPossible = function() {
      var startingPosition = this.clonePosition();
      var startOffset = this.offset();
      var value = matchIdentifierAtIndex(this.message, startOffset);
      var endOffset = startOffset + value.length;
      this.bumpTo(endOffset);
      var endPosition = this.clonePosition();
      var location = createLocation(startingPosition, endPosition);
      return { value, location };
    };
    Parser2.prototype.parseArgumentOptions = function(nestingLevel, expectingCloseTag, value, openingBracePosition) {
      var _a2;
      var typeStartPosition = this.clonePosition();
      var argType = this.parseIdentifierIfPossible().value;
      var typeEndPosition = this.clonePosition();
      switch (argType) {
        case "":
          return this.error(ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
        case "number":
        case "date":
        case "time": {
          this.bumpSpace();
          var styleAndLocation = null;
          if (this.bumpIf(",")) {
            this.bumpSpace();
            var styleStartPosition = this.clonePosition();
            var result = this.parseSimpleArgStyleIfPossible();
            if (result.err) {
              return result;
            }
            var style2 = trimEnd(result.val);
            if (style2.length === 0) {
              return this.error(ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));
            }
            var styleLocation = createLocation(styleStartPosition, this.clonePosition());
            styleAndLocation = { style: style2, styleLocation };
          }
          var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
          if (argCloseResult.err) {
            return argCloseResult;
          }
          var location_1 = createLocation(openingBracePosition, this.clonePosition());
          if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, "::", 0)) {
            var skeleton = trimStart(styleAndLocation.style.slice(2));
            if (argType === "number") {
              var result = this.parseNumberSkeletonFromString(skeleton, styleAndLocation.styleLocation);
              if (result.err) {
                return result;
              }
              return {
                val: { type: TYPE.number, value, location: location_1, style: result.val },
                err: null
              };
            } else {
              if (skeleton.length === 0) {
                return this.error(ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);
              }
              var style2 = {
                type: SKELETON_TYPE.dateTime,
                pattern: skeleton,
                location: styleAndLocation.styleLocation,
                parsedOptions: this.shouldParseSkeletons ? parseDateTimeSkeleton(skeleton) : {}
              };
              var type = argType === "date" ? TYPE.date : TYPE.time;
              return {
                val: { type, value, location: location_1, style: style2 },
                err: null
              };
            }
          }
          return {
            val: {
              type: argType === "number" ? TYPE.number : argType === "date" ? TYPE.date : TYPE.time,
              value,
              location: location_1,
              style: (_a2 = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a2 !== void 0 ? _a2 : null
            },
            err: null
          };
        }
        case "plural":
        case "selectordinal":
        case "select": {
          var typeEndPosition_1 = this.clonePosition();
          this.bumpSpace();
          if (!this.bumpIf(",")) {
            return this.error(ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, __assign$2({}, typeEndPosition_1)));
          }
          this.bumpSpace();
          var identifierAndLocation = this.parseIdentifierIfPossible();
          var pluralOffset = 0;
          if (argType !== "select" && identifierAndLocation.value === "offset") {
            if (!this.bumpIf(":")) {
              return this.error(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));
            }
            this.bumpSpace();
            var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);
            if (result.err) {
              return result;
            }
            this.bumpSpace();
            identifierAndLocation = this.parseIdentifierIfPossible();
            pluralOffset = result.val;
          }
          var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);
          if (optionsResult.err) {
            return optionsResult;
          }
          var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
          if (argCloseResult.err) {
            return argCloseResult;
          }
          var location_2 = createLocation(openingBracePosition, this.clonePosition());
          if (argType === "select") {
            return {
              val: {
                type: TYPE.select,
                value,
                options: fromEntries2(optionsResult.val),
                location: location_2
              },
              err: null
            };
          } else {
            return {
              val: {
                type: TYPE.plural,
                value,
                options: fromEntries2(optionsResult.val),
                offset: pluralOffset,
                pluralType: argType === "plural" ? "cardinal" : "ordinal",
                location: location_2
              },
              err: null
            };
          }
        }
        default:
          return this.error(ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
      }
    };
    Parser2.prototype.tryParseArgumentClose = function(openingBracePosition) {
      if (this.isEOF() || this.char() !== 125) {
        return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
      }
      this.bump();
      return { val: true, err: null };
    };
    Parser2.prototype.parseSimpleArgStyleIfPossible = function() {
      var nestedBraces = 0;
      var startPosition = this.clonePosition();
      while (!this.isEOF()) {
        var ch = this.char();
        switch (ch) {
          case 39: {
            this.bump();
            var apostrophePosition = this.clonePosition();
            if (!this.bumpUntil("'")) {
              return this.error(ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));
            }
            this.bump();
            break;
          }
          case 123: {
            nestedBraces += 1;
            this.bump();
            break;
          }
          case 125: {
            if (nestedBraces > 0) {
              nestedBraces -= 1;
            } else {
              return {
                val: this.message.slice(startPosition.offset, this.offset()),
                err: null
              };
            }
            break;
          }
          default:
            this.bump();
            break;
        }
      }
      return {
        val: this.message.slice(startPosition.offset, this.offset()),
        err: null
      };
    };
    Parser2.prototype.parseNumberSkeletonFromString = function(skeleton, location) {
      var tokens = [];
      try {
        tokens = parseNumberSkeletonFromString(skeleton);
      } catch (e2) {
        return this.error(ErrorKind.INVALID_NUMBER_SKELETON, location);
      }
      return {
        val: {
          type: SKELETON_TYPE.number,
          tokens,
          location,
          parsedOptions: this.shouldParseSkeletons ? parseNumberSkeleton(tokens) : {}
        },
        err: null
      };
    };
    Parser2.prototype.tryParsePluralOrSelectOptions = function(nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {
      var _a2;
      var hasOtherClause = false;
      var options = [];
      var parsedSelectors = /* @__PURE__ */ new Set();
      var selector = parsedFirstIdentifier.value, selectorLocation = parsedFirstIdentifier.location;
      while (true) {
        if (selector.length === 0) {
          var startPosition = this.clonePosition();
          if (parentArgType !== "select" && this.bumpIf("=")) {
            var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);
            if (result.err) {
              return result;
            }
            selectorLocation = createLocation(startPosition, this.clonePosition());
            selector = this.message.slice(startPosition.offset, this.offset());
          } else {
            break;
          }
        }
        if (parsedSelectors.has(selector)) {
          return this.error(parentArgType === "select" ? ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR : ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);
        }
        if (selector === "other") {
          hasOtherClause = true;
        }
        this.bumpSpace();
        var openingBracePosition = this.clonePosition();
        if (!this.bumpIf("{")) {
          return this.error(parentArgType === "select" ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));
        }
        var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);
        if (fragmentResult.err) {
          return fragmentResult;
        }
        var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
        if (argCloseResult.err) {
          return argCloseResult;
        }
        options.push([
          selector,
          {
            value: fragmentResult.val,
            location: createLocation(openingBracePosition, this.clonePosition())
          }
        ]);
        parsedSelectors.add(selector);
        this.bumpSpace();
        _a2 = this.parseIdentifierIfPossible(), selector = _a2.value, selectorLocation = _a2.location;
      }
      if (options.length === 0) {
        return this.error(parentArgType === "select" ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));
      }
      if (this.requiresOtherClause && !hasOtherClause) {
        return this.error(ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));
      }
      return { val: options, err: null };
    };
    Parser2.prototype.tryParseDecimalInteger = function(expectNumberError, invalidNumberError) {
      var sign = 1;
      var startingPosition = this.clonePosition();
      if (this.bumpIf("+"))
        ;
      else if (this.bumpIf("-")) {
        sign = -1;
      }
      var hasDigits = false;
      var decimal = 0;
      while (!this.isEOF()) {
        var ch = this.char();
        if (ch >= 48 && ch <= 57) {
          hasDigits = true;
          decimal = decimal * 10 + (ch - 48);
          this.bump();
        } else {
          break;
        }
      }
      var location = createLocation(startingPosition, this.clonePosition());
      if (!hasDigits) {
        return this.error(expectNumberError, location);
      }
      decimal *= sign;
      if (!isSafeInteger(decimal)) {
        return this.error(invalidNumberError, location);
      }
      return { val: decimal, err: null };
    };
    Parser2.prototype.offset = function() {
      return this.position.offset;
    };
    Parser2.prototype.isEOF = function() {
      return this.offset() === this.message.length;
    };
    Parser2.prototype.clonePosition = function() {
      return {
        offset: this.position.offset,
        line: this.position.line,
        column: this.position.column
      };
    };
    Parser2.prototype.char = function() {
      var offset2 = this.position.offset;
      if (offset2 >= this.message.length) {
        throw Error("out of bound");
      }
      var code = codePointAt(this.message, offset2);
      if (code === void 0) {
        throw Error("Offset " + offset2 + " is at invalid UTF-16 code unit boundary");
      }
      return code;
    };
    Parser2.prototype.error = function(kind, location) {
      return {
        val: null,
        err: {
          kind,
          message: this.message,
          location
        }
      };
    };
    Parser2.prototype.bump = function() {
      if (this.isEOF()) {
        return;
      }
      var code = this.char();
      if (code === 10) {
        this.position.line += 1;
        this.position.column = 1;
        this.position.offset += 1;
      } else {
        this.position.column += 1;
        this.position.offset += code < 65536 ? 1 : 2;
      }
    };
    Parser2.prototype.bumpIf = function(prefix2) {
      if (startsWith(this.message, prefix2, this.offset())) {
        for (var i2 = 0; i2 < prefix2.length; i2++) {
          this.bump();
        }
        return true;
      }
      return false;
    };
    Parser2.prototype.bumpUntil = function(pattern) {
      var currentOffset = this.offset();
      var index2 = this.message.indexOf(pattern, currentOffset);
      if (index2 >= 0) {
        this.bumpTo(index2);
        return true;
      } else {
        this.bumpTo(this.message.length);
        return false;
      }
    };
    Parser2.prototype.bumpTo = function(targetOffset) {
      if (this.offset() > targetOffset) {
        throw Error("targetOffset " + targetOffset + " must be greater than or equal to the current offset " + this.offset());
      }
      targetOffset = Math.min(targetOffset, this.message.length);
      while (true) {
        var offset2 = this.offset();
        if (offset2 === targetOffset) {
          break;
        }
        if (offset2 > targetOffset) {
          throw Error("targetOffset " + targetOffset + " is at invalid UTF-16 code unit boundary");
        }
        this.bump();
        if (this.isEOF()) {
          break;
        }
      }
    };
    Parser2.prototype.bumpSpace = function() {
      while (!this.isEOF() && _isWhiteSpace(this.char())) {
        this.bump();
      }
    };
    Parser2.prototype.peek = function() {
      if (this.isEOF()) {
        return null;
      }
      var code = this.char();
      var offset2 = this.offset();
      var nextCode = this.message.charCodeAt(offset2 + (code >= 65536 ? 2 : 1));
      return nextCode !== null && nextCode !== void 0 ? nextCode : null;
    };
    return Parser2;
  }();
  function _isAlpha(codepoint) {
    return codepoint >= 97 && codepoint <= 122 || codepoint >= 65 && codepoint <= 90;
  }
  function _isAlphaOrSlash(codepoint) {
    return _isAlpha(codepoint) || codepoint === 47;
  }
  function _isPotentialElementNameChar(c2) {
    return c2 === 45 || c2 === 46 || c2 >= 48 && c2 <= 57 || c2 === 95 || c2 >= 97 && c2 <= 122 || c2 >= 65 && c2 <= 90 || c2 == 183 || c2 >= 192 && c2 <= 214 || c2 >= 216 && c2 <= 246 || c2 >= 248 && c2 <= 893 || c2 >= 895 && c2 <= 8191 || c2 >= 8204 && c2 <= 8205 || c2 >= 8255 && c2 <= 8256 || c2 >= 8304 && c2 <= 8591 || c2 >= 11264 && c2 <= 12271 || c2 >= 12289 && c2 <= 55295 || c2 >= 63744 && c2 <= 64975 || c2 >= 65008 && c2 <= 65533 || c2 >= 65536 && c2 <= 983039;
  }
  function _isWhiteSpace(c2) {
    return c2 >= 9 && c2 <= 13 || c2 === 32 || c2 === 133 || c2 >= 8206 && c2 <= 8207 || c2 === 8232 || c2 === 8233;
  }
  function _isPatternSyntax(c2) {
    return c2 >= 33 && c2 <= 35 || c2 === 36 || c2 >= 37 && c2 <= 39 || c2 === 40 || c2 === 41 || c2 === 42 || c2 === 43 || c2 === 44 || c2 === 45 || c2 >= 46 && c2 <= 47 || c2 >= 58 && c2 <= 59 || c2 >= 60 && c2 <= 62 || c2 >= 63 && c2 <= 64 || c2 === 91 || c2 === 92 || c2 === 93 || c2 === 94 || c2 === 96 || c2 === 123 || c2 === 124 || c2 === 125 || c2 === 126 || c2 === 161 || c2 >= 162 && c2 <= 165 || c2 === 166 || c2 === 167 || c2 === 169 || c2 === 171 || c2 === 172 || c2 === 174 || c2 === 176 || c2 === 177 || c2 === 182 || c2 === 187 || c2 === 191 || c2 === 215 || c2 === 247 || c2 >= 8208 && c2 <= 8213 || c2 >= 8214 && c2 <= 8215 || c2 === 8216 || c2 === 8217 || c2 === 8218 || c2 >= 8219 && c2 <= 8220 || c2 === 8221 || c2 === 8222 || c2 === 8223 || c2 >= 8224 && c2 <= 8231 || c2 >= 8240 && c2 <= 8248 || c2 === 8249 || c2 === 8250 || c2 >= 8251 && c2 <= 8254 || c2 >= 8257 && c2 <= 8259 || c2 === 8260 || c2 === 8261 || c2 === 8262 || c2 >= 8263 && c2 <= 8273 || c2 === 8274 || c2 === 8275 || c2 >= 8277 && c2 <= 8286 || c2 >= 8592 && c2 <= 8596 || c2 >= 8597 && c2 <= 8601 || c2 >= 8602 && c2 <= 8603 || c2 >= 8604 && c2 <= 8607 || c2 === 8608 || c2 >= 8609 && c2 <= 8610 || c2 === 8611 || c2 >= 8612 && c2 <= 8613 || c2 === 8614 || c2 >= 8615 && c2 <= 8621 || c2 === 8622 || c2 >= 8623 && c2 <= 8653 || c2 >= 8654 && c2 <= 8655 || c2 >= 8656 && c2 <= 8657 || c2 === 8658 || c2 === 8659 || c2 === 8660 || c2 >= 8661 && c2 <= 8691 || c2 >= 8692 && c2 <= 8959 || c2 >= 8960 && c2 <= 8967 || c2 === 8968 || c2 === 8969 || c2 === 8970 || c2 === 8971 || c2 >= 8972 && c2 <= 8991 || c2 >= 8992 && c2 <= 8993 || c2 >= 8994 && c2 <= 9e3 || c2 === 9001 || c2 === 9002 || c2 >= 9003 && c2 <= 9083 || c2 === 9084 || c2 >= 9085 && c2 <= 9114 || c2 >= 9115 && c2 <= 9139 || c2 >= 9140 && c2 <= 9179 || c2 >= 9180 && c2 <= 9185 || c2 >= 9186 && c2 <= 9254 || c2 >= 9255 && c2 <= 9279 || c2 >= 9280 && c2 <= 9290 || c2 >= 9291 && c2 <= 9311 || c2 >= 9472 && c2 <= 9654 || c2 === 9655 || c2 >= 9656 && c2 <= 9664 || c2 === 9665 || c2 >= 9666 && c2 <= 9719 || c2 >= 9720 && c2 <= 9727 || c2 >= 9728 && c2 <= 9838 || c2 === 9839 || c2 >= 9840 && c2 <= 10087 || c2 === 10088 || c2 === 10089 || c2 === 10090 || c2 === 10091 || c2 === 10092 || c2 === 10093 || c2 === 10094 || c2 === 10095 || c2 === 10096 || c2 === 10097 || c2 === 10098 || c2 === 10099 || c2 === 10100 || c2 === 10101 || c2 >= 10132 && c2 <= 10175 || c2 >= 10176 && c2 <= 10180 || c2 === 10181 || c2 === 10182 || c2 >= 10183 && c2 <= 10213 || c2 === 10214 || c2 === 10215 || c2 === 10216 || c2 === 10217 || c2 === 10218 || c2 === 10219 || c2 === 10220 || c2 === 10221 || c2 === 10222 || c2 === 10223 || c2 >= 10224 && c2 <= 10239 || c2 >= 10240 && c2 <= 10495 || c2 >= 10496 && c2 <= 10626 || c2 === 10627 || c2 === 10628 || c2 === 10629 || c2 === 10630 || c2 === 10631 || c2 === 10632 || c2 === 10633 || c2 === 10634 || c2 === 10635 || c2 === 10636 || c2 === 10637 || c2 === 10638 || c2 === 10639 || c2 === 10640 || c2 === 10641 || c2 === 10642 || c2 === 10643 || c2 === 10644 || c2 === 10645 || c2 === 10646 || c2 === 10647 || c2 === 10648 || c2 >= 10649 && c2 <= 10711 || c2 === 10712 || c2 === 10713 || c2 === 10714 || c2 === 10715 || c2 >= 10716 && c2 <= 10747 || c2 === 10748 || c2 === 10749 || c2 >= 10750 && c2 <= 11007 || c2 >= 11008 && c2 <= 11055 || c2 >= 11056 && c2 <= 11076 || c2 >= 11077 && c2 <= 11078 || c2 >= 11079 && c2 <= 11084 || c2 >= 11085 && c2 <= 11123 || c2 >= 11124 && c2 <= 11125 || c2 >= 11126 && c2 <= 11157 || c2 === 11158 || c2 >= 11159 && c2 <= 11263 || c2 >= 11776 && c2 <= 11777 || c2 === 11778 || c2 === 11779 || c2 === 11780 || c2 === 11781 || c2 >= 11782 && c2 <= 11784 || c2 === 11785 || c2 === 11786 || c2 === 11787 || c2 === 11788 || c2 === 11789 || c2 >= 11790 && c2 <= 11798 || c2 === 11799 || c2 >= 11800 && c2 <= 11801 || c2 === 11802 || c2 === 11803 || c2 === 11804 || c2 === 11805 || c2 >= 11806 && c2 <= 11807 || c2 === 11808 || c2 === 11809 || c2 === 11810 || c2 === 11811 || c2 === 11812 || c2 === 11813 || c2 === 11814 || c2 === 11815 || c2 === 11816 || c2 === 11817 || c2 >= 11818 && c2 <= 11822 || c2 === 11823 || c2 >= 11824 && c2 <= 11833 || c2 >= 11834 && c2 <= 11835 || c2 >= 11836 && c2 <= 11839 || c2 === 11840 || c2 === 11841 || c2 === 11842 || c2 >= 11843 && c2 <= 11855 || c2 >= 11856 && c2 <= 11857 || c2 === 11858 || c2 >= 11859 && c2 <= 11903 || c2 >= 12289 && c2 <= 12291 || c2 === 12296 || c2 === 12297 || c2 === 12298 || c2 === 12299 || c2 === 12300 || c2 === 12301 || c2 === 12302 || c2 === 12303 || c2 === 12304 || c2 === 12305 || c2 >= 12306 && c2 <= 12307 || c2 === 12308 || c2 === 12309 || c2 === 12310 || c2 === 12311 || c2 === 12312 || c2 === 12313 || c2 === 12314 || c2 === 12315 || c2 === 12316 || c2 === 12317 || c2 >= 12318 && c2 <= 12319 || c2 === 12320 || c2 === 12336 || c2 === 64830 || c2 === 64831 || c2 >= 65093 && c2 <= 65094;
  }
  function pruneLocation(els) {
    els.forEach(function(el) {
      delete el.location;
      if (isSelectElement(el) || isPluralElement(el)) {
        for (var k2 in el.options) {
          delete el.options[k2].location;
          pruneLocation(el.options[k2].value);
        }
      } else if (isNumberElement(el) && isNumberSkeleton(el.style)) {
        delete el.style.location;
      } else if ((isDateElement(el) || isTimeElement(el)) && isDateTimeSkeleton(el.style)) {
        delete el.style.location;
      } else if (isTagElement(el)) {
        pruneLocation(el.children);
      }
    });
  }
  function parse$1(message, opts) {
    if (opts === void 0) {
      opts = {};
    }
    opts = __assign$2({ shouldParseSkeletons: true, requiresOtherClause: true }, opts);
    var result = new Parser(message, opts).parse();
    if (result.err) {
      var error2 = SyntaxError(ErrorKind[result.err.kind]);
      error2.location = result.err.location;
      error2.originalMessage = result.err.message;
      throw error2;
    }
    if (!(opts === null || opts === void 0 ? void 0 : opts.captureLocation)) {
      pruneLocation(result.val);
    }
    return result.val;
  }
  function memoize$2(fn3, options) {
    var cache = options && options.cache ? options.cache : cacheDefault;
    var serializer = options && options.serializer ? options.serializer : serializerDefault;
    var strategy = options && options.strategy ? options.strategy : strategyDefault;
    return strategy(fn3, {
      cache,
      serializer
    });
  }
  function isPrimitive(value) {
    return value == null || typeof value === "number" || typeof value === "boolean";
  }
  function monadic(fn3, cache, serializer, arg) {
    var cacheKey = isPrimitive(arg) ? arg : serializer(arg);
    var computedValue = cache.get(cacheKey);
    if (typeof computedValue === "undefined") {
      computedValue = fn3.call(this, arg);
      cache.set(cacheKey, computedValue);
    }
    return computedValue;
  }
  function variadic(fn3, cache, serializer) {
    var args = Array.prototype.slice.call(arguments, 3);
    var cacheKey = serializer(args);
    var computedValue = cache.get(cacheKey);
    if (typeof computedValue === "undefined") {
      computedValue = fn3.apply(this, args);
      cache.set(cacheKey, computedValue);
    }
    return computedValue;
  }
  function assemble(fn3, context, strategy, cache, serialize) {
    return strategy.bind(context, fn3, cache, serialize);
  }
  function strategyDefault(fn3, options) {
    var strategy = fn3.length === 1 ? monadic : variadic;
    return assemble(fn3, this, strategy, options.cache.create(), options.serializer);
  }
  function strategyVariadic(fn3, options) {
    return assemble(fn3, this, variadic, options.cache.create(), options.serializer);
  }
  function strategyMonadic(fn3, options) {
    return assemble(fn3, this, monadic, options.cache.create(), options.serializer);
  }
  var serializerDefault = function() {
    return JSON.stringify(arguments);
  };
  function ObjectWithoutPrototypeCache() {
    this.cache = /* @__PURE__ */ Object.create(null);
  }
  ObjectWithoutPrototypeCache.prototype.get = function(key) {
    return this.cache[key];
  };
  ObjectWithoutPrototypeCache.prototype.set = function(key, value) {
    this.cache[key] = value;
  };
  var cacheDefault = {
    create: function create() {
      return new ObjectWithoutPrototypeCache();
    }
  };
  var strategies = {
    variadic: strategyVariadic,
    monadic: strategyMonadic
  };
  var ErrorCode;
  (function(ErrorCode2) {
    ErrorCode2["MISSING_VALUE"] = "MISSING_VALUE";
    ErrorCode2["INVALID_VALUE"] = "INVALID_VALUE";
    ErrorCode2["MISSING_INTL_API"] = "MISSING_INTL_API";
  })(ErrorCode || (ErrorCode = {}));
  var FormatError = function(_super) {
    __extends(FormatError2, _super);
    function FormatError2(msg, code, originalMessage) {
      var _this = _super.call(this, msg) || this;
      _this.code = code;
      _this.originalMessage = originalMessage;
      return _this;
    }
    FormatError2.prototype.toString = function() {
      return "[formatjs Error: " + this.code + "] " + this.message;
    };
    return FormatError2;
  }(Error);
  var InvalidValueError = function(_super) {
    __extends(InvalidValueError2, _super);
    function InvalidValueError2(variableId, value, options, originalMessage) {
      return _super.call(this, 'Invalid values for "' + variableId + '": "' + value + '". Options are "' + Object.keys(options).join('", "') + '"', ErrorCode.INVALID_VALUE, originalMessage) || this;
    }
    return InvalidValueError2;
  }(FormatError);
  var InvalidValueTypeError = function(_super) {
    __extends(InvalidValueTypeError2, _super);
    function InvalidValueTypeError2(value, type, originalMessage) {
      return _super.call(this, 'Value for "' + value + '" must be of type ' + type, ErrorCode.INVALID_VALUE, originalMessage) || this;
    }
    return InvalidValueTypeError2;
  }(FormatError);
  var MissingValueError = function(_super) {
    __extends(MissingValueError2, _super);
    function MissingValueError2(variableId, originalMessage) {
      return _super.call(this, 'The intl string context variable "' + variableId + '" was not provided to the string "' + originalMessage + '"', ErrorCode.MISSING_VALUE, originalMessage) || this;
    }
    return MissingValueError2;
  }(FormatError);
  var PART_TYPE;
  (function(PART_TYPE2) {
    PART_TYPE2[PART_TYPE2["literal"] = 0] = "literal";
    PART_TYPE2[PART_TYPE2["object"] = 1] = "object";
  })(PART_TYPE || (PART_TYPE = {}));
  function mergeLiteral(parts) {
    if (parts.length < 2) {
      return parts;
    }
    return parts.reduce(function(all, part) {
      var lastPart = all[all.length - 1];
      if (!lastPart || lastPart.type !== PART_TYPE.literal || part.type !== PART_TYPE.literal) {
        all.push(part);
      } else {
        lastPart.value += part.value;
      }
      return all;
    }, []);
  }
  function isFormatXMLElementFn(el) {
    return typeof el === "function";
  }
  function formatToParts(els, locales, formatters, formats, values, currentPluralValue, originalMessage) {
    if (els.length === 1 && isLiteralElement(els[0])) {
      return [
        {
          type: PART_TYPE.literal,
          value: els[0].value
        }
      ];
    }
    var result = [];
    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {
      var el = els_1[_i];
      if (isLiteralElement(el)) {
        result.push({
          type: PART_TYPE.literal,
          value: el.value
        });
        continue;
      }
      if (isPoundElement(el)) {
        if (typeof currentPluralValue === "number") {
          result.push({
            type: PART_TYPE.literal,
            value: formatters.getNumberFormat(locales).format(currentPluralValue)
          });
        }
        continue;
      }
      var varName = el.value;
      if (!(values && varName in values)) {
        throw new MissingValueError(varName, originalMessage);
      }
      var value = values[varName];
      if (isArgumentElement(el)) {
        if (!value || typeof value === "string" || typeof value === "number") {
          value = typeof value === "string" || typeof value === "number" ? String(value) : "";
        }
        result.push({
          type: typeof value === "string" ? PART_TYPE.literal : PART_TYPE.object,
          value
        });
        continue;
      }
      if (isDateElement(el)) {
        var style2 = typeof el.style === "string" ? formats.date[el.style] : isDateTimeSkeleton(el.style) ? el.style.parsedOptions : void 0;
        result.push({
          type: PART_TYPE.literal,
          value: formatters.getDateTimeFormat(locales, style2).format(value)
        });
        continue;
      }
      if (isTimeElement(el)) {
        var style2 = typeof el.style === "string" ? formats.time[el.style] : isDateTimeSkeleton(el.style) ? el.style.parsedOptions : void 0;
        result.push({
          type: PART_TYPE.literal,
          value: formatters.getDateTimeFormat(locales, style2).format(value)
        });
        continue;
      }
      if (isNumberElement(el)) {
        var style2 = typeof el.style === "string" ? formats.number[el.style] : isNumberSkeleton(el.style) ? el.style.parsedOptions : void 0;
        if (style2 && style2.scale) {
          value = value * (style2.scale || 1);
        }
        result.push({
          type: PART_TYPE.literal,
          value: formatters.getNumberFormat(locales, style2).format(value)
        });
        continue;
      }
      if (isTagElement(el)) {
        var children2 = el.children, value_1 = el.value;
        var formatFn = values[value_1];
        if (!isFormatXMLElementFn(formatFn)) {
          throw new InvalidValueTypeError(value_1, "function", originalMessage);
        }
        var parts = formatToParts(children2, locales, formatters, formats, values, currentPluralValue);
        var chunks = formatFn(parts.map(function(p2) {
          return p2.value;
        }));
        if (!Array.isArray(chunks)) {
          chunks = [chunks];
        }
        result.push.apply(result, chunks.map(function(c2) {
          return {
            type: typeof c2 === "string" ? PART_TYPE.literal : PART_TYPE.object,
            value: c2
          };
        }));
      }
      if (isSelectElement(el)) {
        var opt = el.options[value] || el.options.other;
        if (!opt) {
          throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);
        }
        result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));
        continue;
      }
      if (isPluralElement(el)) {
        var opt = el.options["=" + value];
        if (!opt) {
          if (!Intl.PluralRules) {
            throw new FormatError('Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n', ErrorCode.MISSING_INTL_API, originalMessage);
          }
          var rule = formatters.getPluralRules(locales, { type: el.pluralType }).select(value - (el.offset || 0));
          opt = el.options[rule] || el.options.other;
        }
        if (!opt) {
          throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);
        }
        result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));
        continue;
      }
    }
    return mergeLiteral(result);
  }
  function mergeConfig(c1, c2) {
    if (!c2) {
      return c1;
    }
    return __assign$2(__assign$2(__assign$2({}, c1 || {}), c2 || {}), Object.keys(c1).reduce(function(all, k2) {
      all[k2] = __assign$2(__assign$2({}, c1[k2]), c2[k2] || {});
      return all;
    }, {}));
  }
  function mergeConfigs(defaultConfig, configs) {
    if (!configs) {
      return defaultConfig;
    }
    return Object.keys(defaultConfig).reduce(function(all, k2) {
      all[k2] = mergeConfig(defaultConfig[k2], configs[k2]);
      return all;
    }, __assign$2({}, defaultConfig));
  }
  function createFastMemoizeCache(store) {
    return {
      create: function() {
        return {
          get: function(key) {
            return store[key];
          },
          set: function(key, value) {
            store[key] = value;
          }
        };
      }
    };
  }
  function createDefaultFormatters(cache) {
    if (cache === void 0) {
      cache = {
        number: {},
        dateTime: {},
        pluralRules: {}
      };
    }
    return {
      getNumberFormat: memoize$2(function() {
        var _a2;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }
        return new ((_a2 = Intl.NumberFormat).bind.apply(_a2, __spreadArray$2([void 0], args, false)))();
      }, {
        cache: createFastMemoizeCache(cache.number),
        strategy: strategies.variadic
      }),
      getDateTimeFormat: memoize$2(function() {
        var _a2;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }
        return new ((_a2 = Intl.DateTimeFormat).bind.apply(_a2, __spreadArray$2([void 0], args, false)))();
      }, {
        cache: createFastMemoizeCache(cache.dateTime),
        strategy: strategies.variadic
      }),
      getPluralRules: memoize$2(function() {
        var _a2;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }
        return new ((_a2 = Intl.PluralRules).bind.apply(_a2, __spreadArray$2([void 0], args, false)))();
      }, {
        cache: createFastMemoizeCache(cache.pluralRules),
        strategy: strategies.variadic
      })
    };
  }
  var IntlMessageFormat = function() {
    function IntlMessageFormat2(message, locales, overrideFormats, opts) {
      var _this = this;
      if (locales === void 0) {
        locales = IntlMessageFormat2.defaultLocale;
      }
      this.formatterCache = {
        number: {},
        dateTime: {},
        pluralRules: {}
      };
      this.format = function(values) {
        var parts = _this.formatToParts(values);
        if (parts.length === 1) {
          return parts[0].value;
        }
        var result = parts.reduce(function(all, part) {
          if (!all.length || part.type !== PART_TYPE.literal || typeof all[all.length - 1] !== "string") {
            all.push(part.value);
          } else {
            all[all.length - 1] += part.value;
          }
          return all;
        }, []);
        if (result.length <= 1) {
          return result[0] || "";
        }
        return result;
      };
      this.formatToParts = function(values) {
        return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, void 0, _this.message);
      };
      this.resolvedOptions = function() {
        return {
          locale: Intl.NumberFormat.supportedLocalesOf(_this.locales)[0]
        };
      };
      this.getAst = function() {
        return _this.ast;
      };
      if (typeof message === "string") {
        this.message = message;
        if (!IntlMessageFormat2.__parse) {
          throw new TypeError("IntlMessageFormat.__parse must be set to process `message` of type `string`");
        }
        this.ast = IntlMessageFormat2.__parse(message, {
          ignoreTag: opts === null || opts === void 0 ? void 0 : opts.ignoreTag
        });
      } else {
        this.ast = message;
      }
      if (!Array.isArray(this.ast)) {
        throw new TypeError("A message must be provided as a String or AST.");
      }
      this.formats = mergeConfigs(IntlMessageFormat2.formats, overrideFormats);
      this.locales = locales;
      this.formatters = opts && opts.formatters || createDefaultFormatters(this.formatterCache);
    }
    Object.defineProperty(IntlMessageFormat2, "defaultLocale", {
      get: function() {
        if (!IntlMessageFormat2.memoizedDefaultLocale) {
          IntlMessageFormat2.memoizedDefaultLocale = new Intl.NumberFormat().resolvedOptions().locale;
        }
        return IntlMessageFormat2.memoizedDefaultLocale;
      },
      enumerable: false,
      configurable: true
    });
    IntlMessageFormat2.memoizedDefaultLocale = null;
    IntlMessageFormat2.__parse = parse$1;
    IntlMessageFormat2.formats = {
      number: {
        integer: {
          maximumFractionDigits: 0
        },
        currency: {
          style: "currency"
        },
        percent: {
          style: "percent"
        }
      },
      date: {
        short: {
          month: "numeric",
          day: "numeric",
          year: "2-digit"
        },
        medium: {
          month: "short",
          day: "numeric",
          year: "numeric"
        },
        long: {
          month: "long",
          day: "numeric",
          year: "numeric"
        },
        full: {
          weekday: "long",
          month: "long",
          day: "numeric",
          year: "numeric"
        }
      },
      time: {
        short: {
          hour: "numeric",
          minute: "numeric"
        },
        medium: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric"
        },
        long: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric",
          timeZoneName: "short"
        },
        full: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric",
          timeZoneName: "short"
        }
      }
    };
    return IntlMessageFormat2;
  }();
  var _intlMessageformat = IntlMessageFormat;
  var MessageDictionary = class {
    constructor(messages, defaultLocale) {
      if (defaultLocale === void 0) {
        defaultLocale = "en-US";
      }
      this.messages = void 0;
      this.defaultLocale = void 0;
      this.messages = _extends$a({}, messages);
      this.defaultLocale = defaultLocale;
    }
    getStringForLocale(key, locale) {
      let strings = this.messages[locale];
      if (!strings) {
        strings = $e73469445899f72bd9d935bbafe76d4$var$getStringsForLocale(locale, this.messages, this.defaultLocale);
        this.messages[locale] = strings;
      }
      let string = strings[key];
      if (!string) {
        throw new Error("Could not find intl message " + key + " in " + locale + " locale");
      }
      return string;
    }
  };
  function $e73469445899f72bd9d935bbafe76d4$var$getStringsForLocale(locale, strings, defaultLocale) {
    if (defaultLocale === void 0) {
      defaultLocale = "en-US";
    }
    if (strings[locale]) {
      return strings[locale];
    }
    let language = $e73469445899f72bd9d935bbafe76d4$var$getLanguage(locale);
    for (let key in strings) {
      if (key.startsWith(language + "-")) {
        return strings[key];
      }
    }
    return strings[defaultLocale];
  }
  function $e73469445899f72bd9d935bbafe76d4$var$getLanguage(locale) {
    if (Intl.Locale) {
      return new Intl.Locale(locale).language;
    }
    return locale.split("-")[0];
  }
  var MessageFormatter = class {
    constructor(locale, messages) {
      this.locale = void 0;
      this.messages = void 0;
      this.cache = void 0;
      this.locale = locale;
      this.messages = messages;
      this.cache = {};
    }
    format(key, variables) {
      let message = this.cache[key];
      if (!message) {
        let msg = this.messages.getStringForLocale(key, this.locale);
        if (!msg) {
          throw new Error("Could not find intl message " + key + " in " + this.locale + " locale");
        }
        message = new _intlMessageformat(msg, this.locale);
        this.cache[key] = message;
      }
      return message.format(variables);
    }
  };
  var $d26e725ad56fbcb2c25f52b7de27$var$RTL_SCRIPTS = /* @__PURE__ */ new Set(["Arab", "Syrc", "Samr", "Mand", "Thaa", "Mend", "Nkoo", "Adlm", "Rohg", "Hebr"]);
  var $d26e725ad56fbcb2c25f52b7de27$var$RTL_LANGS = /* @__PURE__ */ new Set(["ae", "ar", "arc", "bcc", "bqi", "ckb", "dv", "fa", "glk", "he", "ku", "mzn", "nqo", "pnb", "ps", "sd", "ug", "ur", "yi"]);
  function $d26e725ad56fbcb2c25f52b7de27$export$isRTL(locale) {
    if (Intl.Locale) {
      let script = new Intl.Locale(locale).maximize().script;
      return $d26e725ad56fbcb2c25f52b7de27$var$RTL_SCRIPTS.has(script);
    }
    let lang = locale.split("-")[0];
    return $d26e725ad56fbcb2c25f52b7de27$var$RTL_LANGS.has(lang);
  }
  function $e851d0b81d46abd5f971c8e95c27f1$export$getDefaultLocale() {
    let locale = typeof navigator !== "undefined" && (navigator.language || navigator.userLanguage) || "en-US";
    return {
      locale,
      direction: $d26e725ad56fbcb2c25f52b7de27$export$isRTL(locale) ? "rtl" : "ltr"
    };
  }
  var $e851d0b81d46abd5f971c8e95c27f1$var$currentLocale = $e851d0b81d46abd5f971c8e95c27f1$export$getDefaultLocale();
  var $e851d0b81d46abd5f971c8e95c27f1$var$listeners = /* @__PURE__ */ new Set();
  function $e851d0b81d46abd5f971c8e95c27f1$var$updateLocale() {
    $e851d0b81d46abd5f971c8e95c27f1$var$currentLocale = $e851d0b81d46abd5f971c8e95c27f1$export$getDefaultLocale();
    for (let listener of $e851d0b81d46abd5f971c8e95c27f1$var$listeners) {
      listener($e851d0b81d46abd5f971c8e95c27f1$var$currentLocale);
    }
  }
  function $e851d0b81d46abd5f971c8e95c27f1$export$useDefaultLocale() {
    let isSSR = useIsSSR();
    let [defaultLocale, setDefaultLocale] = React__default.useState($e851d0b81d46abd5f971c8e95c27f1$var$currentLocale);
    React__default.useEffect(() => {
      if ($e851d0b81d46abd5f971c8e95c27f1$var$listeners.size === 0) {
        window.addEventListener("languagechange", $e851d0b81d46abd5f971c8e95c27f1$var$updateLocale);
      }
      $e851d0b81d46abd5f971c8e95c27f1$var$listeners.add(setDefaultLocale);
      return () => {
        $e851d0b81d46abd5f971c8e95c27f1$var$listeners.delete(setDefaultLocale);
        if ($e851d0b81d46abd5f971c8e95c27f1$var$listeners.size === 0) {
          window.removeEventListener("languagechange", $e851d0b81d46abd5f971c8e95c27f1$var$updateLocale);
        }
      };
    }, []);
    if (isSSR) {
      return {
        locale: "en-US",
        direction: "ltr"
      };
    }
    return defaultLocale;
  }
  var $cff8541df3b5c83067b2ab3ee0d20$var$I18nContext = /* @__PURE__ */ React__default__default["default"].createContext(null);
  function useLocale() {
    let defaultLocale = $e851d0b81d46abd5f971c8e95c27f1$export$useDefaultLocale();
    let context = React__default.useContext($cff8541df3b5c83067b2ab3ee0d20$var$I18nContext);
    return context || defaultLocale;
  }
  var $f58d206cee90f9c2bf3c03e4522c35$var$cache = /* @__PURE__ */ new WeakMap();
  function $f58d206cee90f9c2bf3c03e4522c35$var$getCachedDictionary(strings) {
    let dictionary = $f58d206cee90f9c2bf3c03e4522c35$var$cache.get(strings);
    if (!dictionary) {
      dictionary = new MessageDictionary(strings);
      $f58d206cee90f9c2bf3c03e4522c35$var$cache.set(strings, dictionary);
    }
    return dictionary;
  }
  function useMessageFormatter(strings) {
    let {
      locale
    } = useLocale();
    let dictionary = React__default.useMemo(() => $f58d206cee90f9c2bf3c03e4522c35$var$getCachedDictionary(strings), [strings]);
    let formatter = React__default.useMemo(() => new MessageFormatter(locale, dictionary), [locale, dictionary]);
    return React__default.useCallback((key, variables) => formatter.format(key, variables), [formatter]);
  }
  var createDefinition = function(propNames) {
    return {
      isEnabled: function(props) {
        return propNames.some(function(name) {
          return !!props[name];
        });
      }
    };
  };
  var featureDefinitions = {
    measureLayout: createDefinition(["layout", "layoutId", "drag"]),
    animation: createDefinition([
      "animate",
      "exit",
      "variants",
      "whileHover",
      "whileTap",
      "whileFocus",
      "whileDrag"
    ]),
    exit: createDefinition(["exit"]),
    drag: createDefinition(["drag", "dragControls"]),
    focus: createDefinition(["whileFocus"]),
    hover: createDefinition(["whileHover", "onHoverStart", "onHoverEnd"]),
    tap: createDefinition(["whileTap", "onTap", "onTapStart", "onTapCancel"]),
    pan: createDefinition([
      "onPan",
      "onPanStart",
      "onPanSessionStart",
      "onPanEnd"
    ])
  };
  var invariant = function() {
  };
  React__default.createContext({ strict: false });
  var featureNames = Object.keys(featureDefinitions);
  featureNames.length;
  var MotionConfigContext = React__default.createContext({
    transformPagePoint: function(p2) {
      return p2;
    },
    isStatic: false
  });
  React__default.createContext({});
  var PresenceContext = React__default.createContext(null);
  var isBrowser = typeof window !== "undefined";
  function isRefObject(ref) {
    return typeof ref === "object" && Object.prototype.hasOwnProperty.call(ref, "current");
  }
  function isVariantLabels(v2) {
    return Array.isArray(v2);
  }
  function isVariantLabel(v2) {
    return typeof v2 === "string" || isVariantLabels(v2);
  }
  function getCurrent(visualElement2) {
    var current = {};
    visualElement2.forEachValue(function(value, key) {
      return current[key] = value.get();
    });
    return current;
  }
  function getVelocity$1(visualElement2) {
    var velocity = {};
    visualElement2.forEachValue(function(value, key) {
      return velocity[key] = value.getVelocity();
    });
    return velocity;
  }
  function resolveVariantFromProps(props, definition, custom, currentValues, currentVelocity) {
    var _a2;
    if (currentValues === void 0) {
      currentValues = {};
    }
    if (currentVelocity === void 0) {
      currentVelocity = {};
    }
    if (typeof definition === "function") {
      definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);
    }
    if (typeof definition === "string") {
      definition = (_a2 = props.variants) === null || _a2 === void 0 ? void 0 : _a2[definition];
    }
    if (typeof definition === "function") {
      definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);
    }
    return definition;
  }
  function resolveVariant(visualElement2, definition, custom) {
    var props = visualElement2.getProps();
    return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement2), getVelocity$1(visualElement2));
  }
  function checkIfControllingVariants(props) {
    var _a2;
    return typeof ((_a2 = props.animate) === null || _a2 === void 0 ? void 0 : _a2.start) === "function" || isVariantLabel(props.initial) || isVariantLabel(props.animate) || isVariantLabel(props.whileHover) || isVariantLabel(props.whileDrag) || isVariantLabel(props.whileTap) || isVariantLabel(props.whileFocus) || isVariantLabel(props.exit);
  }
  function checkIfVariantNode(props) {
    return Boolean(checkIfControllingVariants(props) || props.variants);
  }
  function useConstant$1(init2) {
    var ref = React__default.useRef(null);
    if (ref.current === null) {
      ref.current = init2();
    }
    return ref.current;
  }
  var defaultTimestep = 1 / 60 * 1e3;
  var getCurrentTime = typeof performance !== "undefined" ? () => performance.now() : () => Date.now();
  var onNextFrame = typeof window !== "undefined" ? (callback) => window.requestAnimationFrame(callback) : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);
  function createRenderStep(runNextFrame2) {
    let toRun = [];
    let toRunNextFrame = [];
    let numToRun = 0;
    let isProcessing2 = false;
    let flushNextFrame = false;
    const toKeepAlive = /* @__PURE__ */ new WeakSet();
    const step = {
      schedule: (callback, keepAlive = false, immediate = false) => {
        const addToCurrentFrame = immediate && isProcessing2;
        const buffer = addToCurrentFrame ? toRun : toRunNextFrame;
        if (keepAlive)
          toKeepAlive.add(callback);
        if (buffer.indexOf(callback) === -1) {
          buffer.push(callback);
          if (addToCurrentFrame && isProcessing2)
            numToRun = toRun.length;
        }
        return callback;
      },
      cancel: (callback) => {
        const index2 = toRunNextFrame.indexOf(callback);
        if (index2 !== -1)
          toRunNextFrame.splice(index2, 1);
        toKeepAlive.delete(callback);
      },
      process: (frameData) => {
        if (isProcessing2) {
          flushNextFrame = true;
          return;
        }
        isProcessing2 = true;
        [toRun, toRunNextFrame] = [toRunNextFrame, toRun];
        toRunNextFrame.length = 0;
        numToRun = toRun.length;
        if (numToRun) {
          for (let i2 = 0; i2 < numToRun; i2++) {
            const callback = toRun[i2];
            callback(frameData);
            if (toKeepAlive.has(callback)) {
              step.schedule(callback);
              runNextFrame2();
            }
          }
        }
        isProcessing2 = false;
        if (flushNextFrame) {
          flushNextFrame = false;
          step.process(frameData);
        }
      }
    };
    return step;
  }
  var maxElapsed = 40;
  var useDefaultElapsed = true;
  var runNextFrame = false;
  var isProcessing = false;
  var frame = {
    delta: 0,
    timestamp: 0
  };
  var stepsOrder = [
    "read",
    "update",
    "preRender",
    "render",
    "postRender"
  ];
  var steps = stepsOrder.reduce((acc, key) => {
    acc[key] = createRenderStep(() => runNextFrame = true);
    return acc;
  }, {});
  var sync = stepsOrder.reduce((acc, key) => {
    const step = steps[key];
    acc[key] = (process, keepAlive = false, immediate = false) => {
      if (!runNextFrame)
        startLoop();
      return step.schedule(process, keepAlive, immediate);
    };
    return acc;
  }, {});
  var cancelSync = stepsOrder.reduce((acc, key) => {
    acc[key] = steps[key].cancel;
    return acc;
  }, {});
  var flushSync = stepsOrder.reduce((acc, key) => {
    acc[key] = () => steps[key].process(frame);
    return acc;
  }, {});
  var processStep = (stepId) => steps[stepId].process(frame);
  var processFrame = (timestamp) => {
    runNextFrame = false;
    frame.delta = useDefaultElapsed ? defaultTimestep : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);
    frame.timestamp = timestamp;
    isProcessing = true;
    stepsOrder.forEach(processStep);
    isProcessing = false;
    if (runNextFrame) {
      useDefaultElapsed = false;
      onNextFrame(processFrame);
    }
  };
  var startLoop = () => {
    runNextFrame = true;
    useDefaultElapsed = true;
    if (!isProcessing)
      onNextFrame(processFrame);
  };
  var getFrameData = () => frame;
  var clamp$1 = (min2, max2, v2) => Math.min(Math.max(v2, min2), max2);
  var safeMin = 1e-3;
  var minDuration = 0.01;
  var maxDuration = 10;
  var minDamping = 0.05;
  var maxDamping = 1;
  function findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1 }) {
    let envelope;
    let derivative;
    let dampingRatio = 1 - bounce;
    dampingRatio = clamp$1(minDamping, maxDamping, dampingRatio);
    duration = clamp$1(minDuration, maxDuration, duration / 1e3);
    if (dampingRatio < 1) {
      envelope = (undampedFreq2) => {
        const exponentialDecay = undampedFreq2 * dampingRatio;
        const delta = exponentialDecay * duration;
        const a2 = exponentialDecay - velocity;
        const b2 = calcAngularFreq(undampedFreq2, dampingRatio);
        const c2 = Math.exp(-delta);
        return safeMin - a2 / b2 * c2;
      };
      derivative = (undampedFreq2) => {
        const exponentialDecay = undampedFreq2 * dampingRatio;
        const delta = exponentialDecay * duration;
        const d2 = delta * velocity + velocity;
        const e2 = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq2, 2) * duration;
        const f = Math.exp(-delta);
        const g2 = calcAngularFreq(Math.pow(undampedFreq2, 2), dampingRatio);
        const factor = -envelope(undampedFreq2) + safeMin > 0 ? -1 : 1;
        return factor * ((d2 - e2) * f) / g2;
      };
    } else {
      envelope = (undampedFreq2) => {
        const a2 = Math.exp(-undampedFreq2 * duration);
        const b2 = (undampedFreq2 - velocity) * duration + 1;
        return -safeMin + a2 * b2;
      };
      derivative = (undampedFreq2) => {
        const a2 = Math.exp(-undampedFreq2 * duration);
        const b2 = (velocity - undampedFreq2) * (duration * duration);
        return a2 * b2;
      };
    }
    const initialGuess = 5 / duration;
    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);
    duration = duration * 1e3;
    if (isNaN(undampedFreq)) {
      return {
        stiffness: 100,
        damping: 10,
        duration
      };
    } else {
      const stiffness = Math.pow(undampedFreq, 2) * mass;
      return {
        stiffness,
        damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),
        duration
      };
    }
  }
  var rootIterations = 12;
  function approximateRoot(envelope, derivative, initialGuess) {
    let result = initialGuess;
    for (let i2 = 1; i2 < rootIterations; i2++) {
      result = result - envelope(result) / derivative(result);
    }
    return result;
  }
  function calcAngularFreq(undampedFreq, dampingRatio) {
    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);
  }
  var durationKeys = ["duration", "bounce"];
  var physicsKeys = ["stiffness", "damping", "mass"];
  function isSpringType(options, keys2) {
    return keys2.some((key) => options[key] !== void 0);
  }
  function getSpringOptions(options) {
    let springOptions = Object.assign({ velocity: 0, stiffness: 100, damping: 10, mass: 1, isResolvedFromDuration: false }, options);
    if (!isSpringType(options, physicsKeys) && isSpringType(options, durationKeys)) {
      const derived = findSpring(options);
      springOptions = Object.assign(Object.assign(Object.assign({}, springOptions), derived), { velocity: 0, mass: 1 });
      springOptions.isResolvedFromDuration = true;
    }
    return springOptions;
  }
  function spring(_a2) {
    var { from = 0, to = 1, restSpeed = 2, restDelta } = _a2, options = __rest$2(_a2, ["from", "to", "restSpeed", "restDelta"]);
    const state = { done: false, value: from };
    let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration } = getSpringOptions(options);
    let resolveSpring = zero;
    let resolveVelocity = zero;
    function createSpring() {
      const initialVelocity = velocity ? -(velocity / 1e3) : 0;
      const initialDelta = to - from;
      const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));
      const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1e3;
      restDelta !== null && restDelta !== void 0 ? restDelta : restDelta = Math.abs(to - from) <= 1 ? 0.01 : 0.4;
      if (dampingRatio < 1) {
        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);
        resolveSpring = (t2) => {
          const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t2);
          return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq * Math.sin(angularFreq * t2) + initialDelta * Math.cos(angularFreq * t2));
        };
        resolveVelocity = (t2) => {
          const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t2);
          return dampingRatio * undampedAngularFreq * envelope * (Math.sin(angularFreq * t2) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq + initialDelta * Math.cos(angularFreq * t2)) - envelope * (Math.cos(angularFreq * t2) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) - angularFreq * initialDelta * Math.sin(angularFreq * t2));
        };
      } else if (dampingRatio === 1) {
        resolveSpring = (t2) => to - Math.exp(-undampedAngularFreq * t2) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t2);
      } else {
        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);
        resolveSpring = (t2) => {
          const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t2);
          const freqForT = Math.min(dampedAngularFreq * t2, 300);
          return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq;
        };
      }
    }
    createSpring();
    return {
      next: (t2) => {
        const current = resolveSpring(t2);
        if (!isResolvedFromDuration) {
          const currentVelocity = resolveVelocity(t2) * 1e3;
          const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;
          const isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;
          state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;
        } else {
          state.done = t2 >= duration;
        }
        state.value = state.done ? to : current;
        return state;
      },
      flipTarget: () => {
        velocity = -velocity;
        [from, to] = [to, from];
        createSpring();
      }
    };
  }
  spring.needsInterpolation = (a2, b2) => typeof a2 === "string" || typeof b2 === "string";
  var zero = (_t) => 0;
  var progress = (from, to, value) => {
    const toFromDifference = to - from;
    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;
  };
  var mix = (from, to, progress2) => -progress2 * from + progress2 * to + from;
  var clamp = (min2, max2) => (v2) => Math.max(Math.min(v2, max2), min2);
  var sanitize = (v2) => v2 % 1 ? Number(v2.toFixed(5)) : v2;
  var floatRegex = /(-)?([\d]*\.?[\d])+/g;
  var colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2,3}\s*\/*\s*[\d\.]+%?\))/gi;
  var singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2,3}\s*\/*\s*[\d\.]+%?\))$/i;
  function isString$2(v2) {
    return typeof v2 === "string";
  }
  var number = {
    test: (v2) => typeof v2 === "number",
    parse: parseFloat,
    transform: (v2) => v2
  };
  var alpha$2 = Object.assign(Object.assign({}, number), { transform: clamp(0, 1) });
  var scale = Object.assign(Object.assign({}, number), { default: 1 });
  var createUnitType = (unit) => ({
    test: (v2) => isString$2(v2) && v2.endsWith(unit) && v2.split(" ").length === 1,
    parse: parseFloat,
    transform: (v2) => `${v2}${unit}`
  });
  var degrees = createUnitType("deg");
  var percent = createUnitType("%");
  var px = createUnitType("px");
  var vh = createUnitType("vh");
  var vw = createUnitType("vw");
  var progressPercentage = Object.assign(Object.assign({}, percent), { parse: (v2) => percent.parse(v2) / 100, transform: (v2) => percent.transform(v2 * 100) });
  var isColorString = (type, testProp) => (v2) => {
    return Boolean(isString$2(v2) && singleColorRegex.test(v2) && v2.startsWith(type) || testProp && Object.prototype.hasOwnProperty.call(v2, testProp));
  };
  var splitColor = (aName, bName, cName) => (v2) => {
    if (!isString$2(v2))
      return v2;
    const [a2, b2, c2, alpha2] = v2.match(floatRegex);
    return {
      [aName]: parseFloat(a2),
      [bName]: parseFloat(b2),
      [cName]: parseFloat(c2),
      alpha: alpha2 !== void 0 ? parseFloat(alpha2) : 1
    };
  };
  var hsla = {
    test: isColorString("hsl", "hue"),
    parse: splitColor("hue", "saturation", "lightness"),
    transform: ({ hue: hue2, saturation: saturation2, lightness, alpha: alpha$12 = 1 }) => {
      return "hsla(" + Math.round(hue2) + ", " + percent.transform(sanitize(saturation2)) + ", " + percent.transform(sanitize(lightness)) + ", " + sanitize(alpha$2.transform(alpha$12)) + ")";
    }
  };
  var clampRgbUnit = clamp(0, 255);
  var rgbUnit = Object.assign(Object.assign({}, number), { transform: (v2) => Math.round(clampRgbUnit(v2)) });
  var rgba = {
    test: isColorString("rgb", "red"),
    parse: splitColor("red", "green", "blue"),
    transform: ({ red, green, blue, alpha: alpha$12 = 1 }) => "rgba(" + rgbUnit.transform(red) + ", " + rgbUnit.transform(green) + ", " + rgbUnit.transform(blue) + ", " + sanitize(alpha$2.transform(alpha$12)) + ")"
  };
  function parseHex(v2) {
    let r2 = "";
    let g2 = "";
    let b2 = "";
    let a2 = "";
    if (v2.length > 5) {
      r2 = v2.substr(1, 2);
      g2 = v2.substr(3, 2);
      b2 = v2.substr(5, 2);
      a2 = v2.substr(7, 2);
    } else {
      r2 = v2.substr(1, 1);
      g2 = v2.substr(2, 1);
      b2 = v2.substr(3, 1);
      a2 = v2.substr(4, 1);
      r2 += r2;
      g2 += g2;
      b2 += b2;
      a2 += a2;
    }
    return {
      red: parseInt(r2, 16),
      green: parseInt(g2, 16),
      blue: parseInt(b2, 16),
      alpha: a2 ? parseInt(a2, 16) / 255 : 1
    };
  }
  var hex = {
    test: isColorString("#"),
    parse: parseHex,
    transform: rgba.transform
  };
  var color$2 = {
    test: (v2) => rgba.test(v2) || hex.test(v2) || hsla.test(v2),
    parse: (v2) => {
      if (rgba.test(v2)) {
        return rgba.parse(v2);
      } else if (hsla.test(v2)) {
        return hsla.parse(v2);
      } else {
        return hex.parse(v2);
      }
    },
    transform: (v2) => {
      return isString$2(v2) ? v2 : v2.hasOwnProperty("red") ? rgba.transform(v2) : hsla.transform(v2);
    }
  };
  var colorToken = "${c}";
  var numberToken = "${n}";
  function test(v2) {
    var _a2, _b, _c, _d;
    return isNaN(v2) && isString$2(v2) && ((_b = (_a2 = v2.match(floatRegex)) === null || _a2 === void 0 ? void 0 : _a2.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v2.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0;
  }
  function analyse$1(v2) {
    if (typeof v2 === "number")
      v2 = `${v2}`;
    const values = [];
    let numColors = 0;
    const colors = v2.match(colorRegex);
    if (colors) {
      numColors = colors.length;
      v2 = v2.replace(colorRegex, colorToken);
      values.push(...colors.map(color$2.parse));
    }
    const numbers = v2.match(floatRegex);
    if (numbers) {
      v2 = v2.replace(floatRegex, numberToken);
      values.push(...numbers.map(number.parse));
    }
    return { values, numColors, tokenised: v2 };
  }
  function parse(v2) {
    return analyse$1(v2).values;
  }
  function createTransformer(v2) {
    const { values, numColors, tokenised } = analyse$1(v2);
    const numValues = values.length;
    return (v3) => {
      let output = tokenised;
      for (let i2 = 0; i2 < numValues; i2++) {
        output = output.replace(i2 < numColors ? colorToken : numberToken, i2 < numColors ? color$2.transform(v3[i2]) : sanitize(v3[i2]));
      }
      return output;
    };
  }
  var convertNumbersToZero = (v2) => typeof v2 === "number" ? 0 : v2;
  function getAnimatableNone$1(v2) {
    const parsed = parse(v2);
    const transformer = createTransformer(v2);
    return transformer(parsed.map(convertNumbersToZero));
  }
  var complex = { test, parse, createTransformer, getAnimatableNone: getAnimatableNone$1 };
  var maxDefaults = /* @__PURE__ */ new Set(["brightness", "contrast", "saturate", "opacity"]);
  function applyDefaultFilter(v2) {
    let [name, value] = v2.slice(0, -1).split("(");
    if (name === "drop-shadow")
      return v2;
    const [number2] = value.match(floatRegex) || [];
    if (!number2)
      return v2;
    const unit = value.replace(number2, "");
    let defaultValue = maxDefaults.has(name) ? 1 : 0;
    if (number2 !== value)
      defaultValue *= 100;
    return name + "(" + defaultValue + unit + ")";
  }
  var functionRegex = /([a-z-]*)\(.*?\)/g;
  var filter = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v2) => {
    const functions = v2.match(functionRegex);
    return functions ? functions.map(applyDefaultFilter).join(" ") : v2;
  } });
  function hueToRgb(p2, q2, t2) {
    if (t2 < 0)
      t2 += 1;
    if (t2 > 1)
      t2 -= 1;
    if (t2 < 1 / 6)
      return p2 + (q2 - p2) * 6 * t2;
    if (t2 < 1 / 2)
      return q2;
    if (t2 < 2 / 3)
      return p2 + (q2 - p2) * (2 / 3 - t2) * 6;
    return p2;
  }
  function hslaToRgba({ hue: hue2, saturation: saturation2, lightness, alpha: alpha2 }) {
    hue2 /= 360;
    saturation2 /= 100;
    lightness /= 100;
    let red = 0;
    let green = 0;
    let blue = 0;
    if (!saturation2) {
      red = green = blue = lightness;
    } else {
      const q2 = lightness < 0.5 ? lightness * (1 + saturation2) : lightness + saturation2 - lightness * saturation2;
      const p2 = 2 * lightness - q2;
      red = hueToRgb(p2, q2, hue2 + 1 / 3);
      green = hueToRgb(p2, q2, hue2);
      blue = hueToRgb(p2, q2, hue2 - 1 / 3);
    }
    return {
      red: Math.round(red * 255),
      green: Math.round(green * 255),
      blue: Math.round(blue * 255),
      alpha: alpha2
    };
  }
  var mixLinearColor = (from, to, v2) => {
    const fromExpo = from * from;
    const toExpo = to * to;
    return Math.sqrt(Math.max(0, v2 * (toExpo - fromExpo) + fromExpo));
  };
  var colorTypes$1 = [hex, rgba, hsla];
  var getColorType = (v2) => colorTypes$1.find((type) => type.test(v2));
  var mixColor = (from, to) => {
    let fromColorType = getColorType(from);
    let toColorType = getColorType(to);
    let fromColor = fromColorType.parse(from);
    let toColor2 = toColorType.parse(to);
    if (fromColorType === hsla) {
      fromColor = hslaToRgba(fromColor);
      fromColorType = rgba;
    }
    if (toColorType === hsla) {
      toColor2 = hslaToRgba(toColor2);
      toColorType = rgba;
    }
    const blended = Object.assign({}, fromColor);
    return (v2) => {
      for (const key in blended) {
        if (key !== "alpha") {
          blended[key] = mixLinearColor(fromColor[key], toColor2[key], v2);
        }
      }
      blended.alpha = mix(fromColor.alpha, toColor2.alpha, v2);
      return fromColorType.transform(blended);
    };
  };
  var isNum = (v2) => typeof v2 === "number";
  var combineFunctions = (a2, b2) => (v2) => b2(a2(v2));
  var pipe = (...transformers) => transformers.reduce(combineFunctions);
  function getMixer(origin, target) {
    if (isNum(origin)) {
      return (v2) => mix(origin, target, v2);
    } else if (color$2.test(origin)) {
      return mixColor(origin, target);
    } else {
      return mixComplex(origin, target);
    }
  }
  var mixArray = (from, to) => {
    const output = [...from];
    const numValues = output.length;
    const blendValue = from.map((fromThis, i2) => getMixer(fromThis, to[i2]));
    return (v2) => {
      for (let i2 = 0; i2 < numValues; i2++) {
        output[i2] = blendValue[i2](v2);
      }
      return output;
    };
  };
  var mixObject = (origin, target) => {
    const output = Object.assign(Object.assign({}, origin), target);
    const blendValue = {};
    for (const key in output) {
      if (origin[key] !== void 0 && target[key] !== void 0) {
        blendValue[key] = getMixer(origin[key], target[key]);
      }
    }
    return (v2) => {
      for (const key in blendValue) {
        output[key] = blendValue[key](v2);
      }
      return output;
    };
  };
  function analyse(value) {
    const parsed = complex.parse(value);
    const numValues = parsed.length;
    let numNumbers = 0;
    let numRGB = 0;
    let numHSL = 0;
    for (let i2 = 0; i2 < numValues; i2++) {
      if (numNumbers || typeof parsed[i2] === "number") {
        numNumbers++;
      } else {
        if (parsed[i2].hue !== void 0) {
          numHSL++;
        } else {
          numRGB++;
        }
      }
    }
    return { parsed, numNumbers, numRGB, numHSL };
  }
  var mixComplex = (origin, target) => {
    const template = complex.createTransformer(target);
    const originStats = analyse(origin);
    const targetStats = analyse(target);
    const canInterpolate = originStats.numHSL === targetStats.numHSL && originStats.numRGB === targetStats.numRGB && originStats.numNumbers >= targetStats.numNumbers;
    if (canInterpolate) {
      return pipe(mixArray(originStats.parsed, targetStats.parsed), template);
    } else {
      return (p2) => `${p2 > 0 ? target : origin}`;
    }
  };
  var mixNumber = (from, to) => (p2) => mix(from, to, p2);
  function detectMixerFactory(v2) {
    if (typeof v2 === "number") {
      return mixNumber;
    } else if (typeof v2 === "string") {
      if (color$2.test(v2)) {
        return mixColor;
      } else {
        return mixComplex;
      }
    } else if (Array.isArray(v2)) {
      return mixArray;
    } else if (typeof v2 === "object") {
      return mixObject;
    }
  }
  function createMixers(output, ease, customMixer) {
    const mixers = [];
    const mixerFactory = customMixer || detectMixerFactory(output[0]);
    const numMixers = output.length - 1;
    for (let i2 = 0; i2 < numMixers; i2++) {
      let mixer = mixerFactory(output[i2], output[i2 + 1]);
      if (ease) {
        const easingFunction = Array.isArray(ease) ? ease[i2] : ease;
        mixer = pipe(easingFunction, mixer);
      }
      mixers.push(mixer);
    }
    return mixers;
  }
  function fastInterpolate([from, to], [mixer]) {
    return (v2) => mixer(progress(from, to, v2));
  }
  function slowInterpolate(input, mixers) {
    const inputLength = input.length;
    const lastInputIndex = inputLength - 1;
    return (v2) => {
      let mixerIndex = 0;
      let foundMixerIndex = false;
      if (v2 <= input[0]) {
        foundMixerIndex = true;
      } else if (v2 >= input[lastInputIndex]) {
        mixerIndex = lastInputIndex - 1;
        foundMixerIndex = true;
      }
      if (!foundMixerIndex) {
        let i2 = 1;
        for (; i2 < inputLength; i2++) {
          if (input[i2] > v2 || i2 === lastInputIndex) {
            break;
          }
        }
        mixerIndex = i2 - 1;
      }
      const progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v2);
      return mixers[mixerIndex](progressInRange);
    };
  }
  function interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {
    const inputLength = input.length;
    invariant(inputLength === output.length);
    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1);
    if (input[0] > input[inputLength - 1]) {
      input = [].concat(input);
      output = [].concat(output);
      input.reverse();
      output.reverse();
    }
    const mixers = createMixers(output, ease, mixer);
    const interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);
    return isClamp ? (v2) => interpolator(clamp$1(input[0], input[inputLength - 1], v2)) : interpolator;
  }
  var reverseEasing = (easing) => (p2) => 1 - easing(1 - p2);
  var mirrorEasing = (easing) => (p2) => p2 <= 0.5 ? easing(2 * p2) / 2 : (2 - easing(2 * (1 - p2))) / 2;
  var createExpoIn = (power) => (p2) => Math.pow(p2, power);
  var createBackIn = (power) => (p2) => p2 * p2 * ((power + 1) * p2 - power);
  var createAnticipate = (power) => {
    const backEasing = createBackIn(power);
    return (p2) => (p2 *= 2) < 1 ? 0.5 * backEasing(p2) : 0.5 * (2 - Math.pow(2, -10 * (p2 - 1)));
  };
  var DEFAULT_OVERSHOOT_STRENGTH = 1.525;
  var BOUNCE_FIRST_THRESHOLD = 4 / 11;
  var BOUNCE_SECOND_THRESHOLD = 8 / 11;
  var BOUNCE_THIRD_THRESHOLD = 9 / 10;
  var linear = (p2) => p2;
  var easeIn = createExpoIn(2);
  var easeOut = reverseEasing(easeIn);
  var easeInOut = mirrorEasing(easeIn);
  var circIn = (p2) => 1 - Math.sin(Math.acos(p2));
  var circOut = reverseEasing(circIn);
  var circInOut = mirrorEasing(circOut);
  var backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH);
  var backOut = reverseEasing(backIn);
  var backInOut = mirrorEasing(backIn);
  var anticipate = createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);
  var ca = 4356 / 361;
  var cb = 35442 / 1805;
  var cc = 16061 / 1805;
  var bounceOut = (p2) => {
    if (p2 === 1 || p2 === 0)
      return p2;
    const p22 = p2 * p2;
    return p2 < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p22 : p2 < BOUNCE_SECOND_THRESHOLD ? 9.075 * p22 - 9.9 * p2 + 3.4 : p2 < BOUNCE_THIRD_THRESHOLD ? ca * p22 - cb * p2 + cc : 10.8 * p2 * p2 - 20.52 * p2 + 10.72;
  };
  var bounceIn = reverseEasing(bounceOut);
  var bounceInOut = (p2) => p2 < 0.5 ? 0.5 * (1 - bounceOut(1 - p2 * 2)) : 0.5 * bounceOut(p2 * 2 - 1) + 0.5;
  function defaultEasing(values, easing) {
    return values.map(() => easing || easeInOut).splice(0, values.length - 1);
  }
  function defaultOffset(values) {
    const numValues = values.length;
    return values.map((_value, i2) => i2 !== 0 ? i2 / (numValues - 1) : 0);
  }
  function convertOffsetToTimes(offset2, duration) {
    return offset2.map((o2) => o2 * duration);
  }
  function keyframes$1({ from = 0, to = 1, ease, offset: offset2, duration = 300 }) {
    const state = { done: false, value: from };
    const values = Array.isArray(to) ? to : [from, to];
    const times = convertOffsetToTimes(offset2 && offset2.length === values.length ? offset2 : defaultOffset(values), duration);
    function createInterpolator() {
      return interpolate(times, values, {
        ease: Array.isArray(ease) ? ease : defaultEasing(values, ease)
      });
    }
    let interpolator = createInterpolator();
    return {
      next: (t2) => {
        state.value = interpolator(t2);
        state.done = t2 >= duration;
        return state;
      },
      flipTarget: () => {
        values.reverse();
        interpolator = createInterpolator();
      }
    };
  }
  function decay({ velocity = 0, from = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget }) {
    const state = { done: false, value: from };
    let amplitude = power * velocity;
    const ideal = from + amplitude;
    const target = modifyTarget === void 0 ? ideal : modifyTarget(ideal);
    if (target !== ideal)
      amplitude = target - from;
    return {
      next: (t2) => {
        const delta = -amplitude * Math.exp(-t2 / timeConstant);
        state.done = !(delta > restDelta || delta < -restDelta);
        state.value = state.done ? target : target + delta;
        return state;
      },
      flipTarget: () => {
      }
    };
  }
  var types = { keyframes: keyframes$1, spring, decay };
  function detectAnimationFromOptions(config) {
    if (Array.isArray(config.to)) {
      return keyframes$1;
    } else if (types[config.type]) {
      return types[config.type];
    }
    const keys2 = new Set(Object.keys(config));
    if (keys2.has("ease") || keys2.has("duration") && !keys2.has("dampingRatio")) {
      return keyframes$1;
    } else if (keys2.has("dampingRatio") || keys2.has("stiffness") || keys2.has("mass") || keys2.has("damping") || keys2.has("restSpeed") || keys2.has("restDelta")) {
      return spring;
    }
    return keyframes$1;
  }
  function loopElapsed(elapsed, duration, delay = 0) {
    return elapsed - duration - delay;
  }
  function reverseElapsed(elapsed, duration, delay = 0, isForwardPlayback = true) {
    return isForwardPlayback ? loopElapsed(duration + -elapsed, duration, delay) : duration - (elapsed - duration) + delay;
  }
  function hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {
    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;
  }
  var framesync = (update2) => {
    const passTimestamp = ({ delta }) => update2(delta);
    return {
      start: () => sync.update(passTimestamp, true),
      stop: () => cancelSync.update(passTimestamp)
    };
  };
  function animate$1(_a2) {
    var _b, _c;
    var { from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = "loop", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate } = _a2, options = __rest$2(_a2, ["from", "autoplay", "driver", "elapsed", "repeat", "repeatType", "repeatDelay", "onPlay", "onStop", "onComplete", "onRepeat", "onUpdate"]);
    let { to } = options;
    let driverControls;
    let repeatCount = 0;
    let computedDuration = options.duration;
    let latest;
    let isComplete = false;
    let isForwardPlayback = true;
    let interpolateFromNumber;
    const animator = detectAnimationFromOptions(options);
    if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {
      interpolateFromNumber = interpolate([0, 100], [from, to], {
        clamp: false
      });
      from = 0;
      to = 100;
    }
    const animation = animator(Object.assign(Object.assign({}, options), { from, to }));
    function repeat() {
      repeatCount++;
      if (repeatType === "reverse") {
        isForwardPlayback = repeatCount % 2 === 0;
        elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);
      } else {
        elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);
        if (repeatType === "mirror")
          animation.flipTarget();
      }
      isComplete = false;
      onRepeat && onRepeat();
    }
    function complete() {
      driverControls.stop();
      onComplete && onComplete();
    }
    function update2(delta) {
      if (!isForwardPlayback)
        delta = -delta;
      elapsed += delta;
      if (!isComplete) {
        const state = animation.next(Math.max(0, elapsed));
        latest = state.value;
        if (interpolateFromNumber)
          latest = interpolateFromNumber(latest);
        isComplete = isForwardPlayback ? state.done : elapsed <= 0;
      }
      onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);
      if (isComplete) {
        if (repeatCount === 0)
          computedDuration !== null && computedDuration !== void 0 ? computedDuration : computedDuration = elapsed;
        if (repeatCount < repeatMax) {
          hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();
        } else {
          complete();
        }
      }
    }
    function play() {
      onPlay === null || onPlay === void 0 ? void 0 : onPlay();
      driverControls = driver(update2);
      driverControls.start();
    }
    autoplay && play();
    return {
      stop: () => {
        onStop === null || onStop === void 0 ? void 0 : onStop();
        driverControls.stop();
      }
    };
  }
  function velocityPerSecond(velocity, frameDuration) {
    return frameDuration ? velocity * (1e3 / frameDuration) : 0;
  }
  function inertia({ from = 0, velocity = 0, min: min2, max: max2, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop }) {
    let currentAnimation;
    function isOutOfBounds(v2) {
      return min2 !== void 0 && v2 < min2 || max2 !== void 0 && v2 > max2;
    }
    function boundaryNearest(v2) {
      if (min2 === void 0)
        return max2;
      if (max2 === void 0)
        return min2;
      return Math.abs(min2 - v2) < Math.abs(max2 - v2) ? min2 : max2;
    }
    function startAnimation2(options) {
      currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();
      currentAnimation = animate$1(Object.assign(Object.assign({}, options), {
        driver,
        onUpdate: (v2) => {
          var _a2;
          onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v2);
          (_a2 = options.onUpdate) === null || _a2 === void 0 ? void 0 : _a2.call(options, v2);
        },
        onComplete,
        onStop
      }));
    }
    function startSpring(options) {
      startAnimation2(Object.assign({ type: "spring", stiffness: bounceStiffness, damping: bounceDamping, restDelta }, options));
    }
    if (isOutOfBounds(from)) {
      startSpring({ from, velocity, to: boundaryNearest(from) });
    } else {
      let target = power * velocity + from;
      if (typeof modifyTarget !== "undefined")
        target = modifyTarget(target);
      const boundary = boundaryNearest(target);
      const heading = boundary === min2 ? -1 : 1;
      let prev;
      let current;
      const checkBoundary = (v2) => {
        prev = current;
        current = v2;
        velocity = velocityPerSecond(v2 - prev, getFrameData().delta);
        if (heading === 1 && v2 > boundary || heading === -1 && v2 < boundary) {
          startSpring({ from: v2, to: boundary, velocity });
        }
      };
      startAnimation2({
        type: "decay",
        from,
        velocity,
        timeConstant,
        power,
        restDelta,
        modifyTarget,
        onUpdate: isOutOfBounds(target) ? checkBoundary : void 0
      });
    }
    return {
      stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop()
    };
  }
  var isPoint = (point) => point.hasOwnProperty("x") && point.hasOwnProperty("y");
  var isPoint3D = (point) => isPoint(point) && point.hasOwnProperty("z");
  var distance1D = (a2, b2) => Math.abs(a2 - b2);
  function distance(a2, b2) {
    if (isNum(a2) && isNum(b2)) {
      return distance1D(a2, b2);
    } else if (isPoint(a2) && isPoint(b2)) {
      const xDelta = distance1D(a2.x, b2.x);
      const yDelta = distance1D(a2.y, b2.y);
      const zDelta = isPoint3D(a2) && isPoint3D(b2) ? distance1D(a2.z, b2.z) : 0;
      return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));
    }
  }
  var a$1 = (a1, a2) => 1 - 3 * a2 + 3 * a1;
  var b$1 = (a1, a2) => 3 * a2 - 6 * a1;
  var c$1 = (a1) => 3 * a1;
  var calcBezier = (t2, a1, a2) => ((a$1(a1, a2) * t2 + b$1(a1, a2)) * t2 + c$1(a1)) * t2;
  var getSlope = (t2, a1, a2) => 3 * a$1(a1, a2) * t2 * t2 + 2 * b$1(a1, a2) * t2 + c$1(a1);
  var subdivisionPrecision = 1e-7;
  var subdivisionMaxIterations = 10;
  function binarySubdivide(aX, aA, aB, mX1, mX2) {
    let currentX;
    let currentT;
    let i2 = 0;
    do {
      currentT = aA + (aB - aA) / 2;
      currentX = calcBezier(currentT, mX1, mX2) - aX;
      if (currentX > 0) {
        aB = currentT;
      } else {
        aA = currentT;
      }
    } while (Math.abs(currentX) > subdivisionPrecision && ++i2 < subdivisionMaxIterations);
    return currentT;
  }
  var newtonIterations = 8;
  var newtonMinSlope = 1e-3;
  function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
    for (let i2 = 0; i2 < newtonIterations; ++i2) {
      const currentSlope = getSlope(aGuessT, mX1, mX2);
      if (currentSlope === 0) {
        return aGuessT;
      }
      const currentX = calcBezier(aGuessT, mX1, mX2) - aX;
      aGuessT -= currentX / currentSlope;
    }
    return aGuessT;
  }
  var kSplineTableSize = 11;
  var kSampleStepSize = 1 / (kSplineTableSize - 1);
  function cubicBezier(mX1, mY1, mX2, mY2) {
    if (mX1 === mY1 && mX2 === mY2)
      return linear;
    const sampleValues = new Float32Array(kSplineTableSize);
    for (let i2 = 0; i2 < kSplineTableSize; ++i2) {
      sampleValues[i2] = calcBezier(i2 * kSampleStepSize, mX1, mX2);
    }
    function getTForX(aX) {
      let intervalStart = 0;
      let currentSample = 1;
      const lastSample = kSplineTableSize - 1;
      for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {
        intervalStart += kSampleStepSize;
      }
      --currentSample;
      const dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);
      const guessForT = intervalStart + dist * kSampleStepSize;
      const initialSlope = getSlope(guessForT, mX1, mX2);
      if (initialSlope >= newtonMinSlope) {
        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
      } else if (initialSlope === 0) {
        return guessForT;
      } else {
        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
      }
    }
    return (t2) => t2 === 0 || t2 === 1 ? t2 : calcBezier(getTForX(t2), mY1, mY2);
  }
  function addUniqueItem(arr, item) {
    arr.indexOf(item) === -1 && arr.push(item);
  }
  function removeItem(arr, item) {
    var index2 = arr.indexOf(item);
    index2 > -1 && arr.splice(index2, 1);
  }
  var SubscriptionManager = function() {
    function SubscriptionManager2() {
      this.subscriptions = [];
    }
    SubscriptionManager2.prototype.add = function(handler) {
      var _this = this;
      addUniqueItem(this.subscriptions, handler);
      return function() {
        return removeItem(_this.subscriptions, handler);
      };
    };
    SubscriptionManager2.prototype.notify = function(a2, b2, c2) {
      var numSubscriptions = this.subscriptions.length;
      if (!numSubscriptions)
        return;
      if (numSubscriptions === 1) {
        this.subscriptions[0](a2, b2, c2);
      } else {
        for (var i2 = 0; i2 < numSubscriptions; i2++) {
          var handler = this.subscriptions[i2];
          handler && handler(a2, b2, c2);
        }
      }
    };
    SubscriptionManager2.prototype.getSize = function() {
      return this.subscriptions.length;
    };
    SubscriptionManager2.prototype.clear = function() {
      this.subscriptions.length = 0;
    };
    return SubscriptionManager2;
  }();
  var isFloat = function(value) {
    return !isNaN(parseFloat(value));
  };
  var MotionValue = function() {
    function MotionValue2(init2) {
      var _this = this;
      this.timeDelta = 0;
      this.lastUpdated = 0;
      this.updateSubscribers = new SubscriptionManager();
      this.velocityUpdateSubscribers = new SubscriptionManager();
      this.renderSubscribers = new SubscriptionManager();
      this.canTrackVelocity = false;
      this.updateAndNotify = function(v2, render3) {
        if (render3 === void 0) {
          render3 = true;
        }
        _this.prev = _this.current;
        _this.current = v2;
        var _a2 = getFrameData(), delta = _a2.delta, timestamp = _a2.timestamp;
        if (_this.lastUpdated !== timestamp) {
          _this.timeDelta = delta;
          _this.lastUpdated = timestamp;
          sync.postRender(_this.scheduleVelocityCheck);
        }
        if (_this.prev !== _this.current) {
          _this.updateSubscribers.notify(_this.current);
        }
        if (_this.velocityUpdateSubscribers.getSize()) {
          _this.velocityUpdateSubscribers.notify(_this.getVelocity());
        }
        if (render3) {
          _this.renderSubscribers.notify(_this.current);
        }
      };
      this.scheduleVelocityCheck = function() {
        return sync.postRender(_this.velocityCheck);
      };
      this.velocityCheck = function(_a2) {
        var timestamp = _a2.timestamp;
        if (timestamp !== _this.lastUpdated) {
          _this.prev = _this.current;
          _this.velocityUpdateSubscribers.notify(_this.getVelocity());
        }
      };
      this.hasAnimated = false;
      this.prev = this.current = init2;
      this.canTrackVelocity = isFloat(this.current);
    }
    MotionValue2.prototype.onChange = function(subscription) {
      return this.updateSubscribers.add(subscription);
    };
    MotionValue2.prototype.clearListeners = function() {
      this.updateSubscribers.clear();
    };
    MotionValue2.prototype.onRenderRequest = function(subscription) {
      subscription(this.get());
      return this.renderSubscribers.add(subscription);
    };
    MotionValue2.prototype.attach = function(passiveEffect) {
      this.passiveEffect = passiveEffect;
    };
    MotionValue2.prototype.set = function(v2, render3) {
      if (render3 === void 0) {
        render3 = true;
      }
      if (!render3 || !this.passiveEffect) {
        this.updateAndNotify(v2, render3);
      } else {
        this.passiveEffect(v2, this.updateAndNotify);
      }
    };
    MotionValue2.prototype.get = function() {
      return this.current;
    };
    MotionValue2.prototype.getPrevious = function() {
      return this.prev;
    };
    MotionValue2.prototype.getVelocity = function() {
      return this.canTrackVelocity ? velocityPerSecond(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta) : 0;
    };
    MotionValue2.prototype.start = function(animation) {
      var _this = this;
      this.stop();
      return new Promise(function(resolve) {
        _this.hasAnimated = true;
        _this.stopAnimation = animation(resolve);
      }).then(function() {
        return _this.clearAnimation();
      });
    };
    MotionValue2.prototype.stop = function() {
      if (this.stopAnimation)
        this.stopAnimation();
      this.clearAnimation();
    };
    MotionValue2.prototype.isAnimating = function() {
      return !!this.stopAnimation;
    };
    MotionValue2.prototype.clearAnimation = function() {
      this.stopAnimation = null;
    };
    MotionValue2.prototype.destroy = function() {
      this.updateSubscribers.clear();
      this.renderSubscribers.clear();
      this.stop();
    };
    return MotionValue2;
  }();
  function motionValue(init2) {
    return new MotionValue(init2);
  }
  var isMotionValue = function(value) {
    return value !== null && typeof value === "object" && value.getVelocity;
  };
  var secondsToMilliseconds = function(seconds) {
    return seconds * 1e3;
  };
  var easingLookup = {
    linear,
    easeIn,
    easeInOut,
    easeOut,
    circIn,
    circInOut,
    circOut,
    backIn,
    backInOut,
    backOut,
    anticipate,
    bounceIn,
    bounceInOut,
    bounceOut
  };
  var easingDefinitionToFunction = function(definition) {
    if (Array.isArray(definition)) {
      invariant(definition.length === 4);
      var _a2 = __read$5(definition, 4), x1 = _a2[0], y1 = _a2[1], x2 = _a2[2], y2 = _a2[3];
      return cubicBezier(x1, y1, x2, y2);
    } else if (typeof definition === "string") {
      return easingLookup[definition];
    }
    return definition;
  };
  var isEasingArray = function(ease) {
    return Array.isArray(ease) && typeof ease[0] !== "number";
  };
  var isAnimatable = function(key, value) {
    if (key === "zIndex")
      return false;
    if (typeof value === "number" || Array.isArray(value))
      return true;
    if (typeof value === "string" && complex.test(value) && !value.startsWith("url(")) {
      return true;
    }
    return false;
  };
  var isKeyframesTarget = function(v2) {
    return Array.isArray(v2);
  };
  var underDampedSpring = function() {
    return {
      type: "spring",
      stiffness: 500,
      damping: 25,
      restDelta: 0.5,
      restSpeed: 10
    };
  };
  var criticallyDampedSpring = function(to) {
    return {
      type: "spring",
      stiffness: 550,
      damping: to === 0 ? 2 * Math.sqrt(550) : 30,
      restDelta: 0.01,
      restSpeed: 10
    };
  };
  var linearTween = function() {
    return {
      type: "keyframes",
      ease: "linear",
      duration: 0.3
    };
  };
  var keyframes = function(values) {
    return {
      type: "keyframes",
      duration: 0.8,
      values
    };
  };
  var defaultTransitions = {
    x: underDampedSpring,
    y: underDampedSpring,
    z: underDampedSpring,
    rotate: underDampedSpring,
    rotateX: underDampedSpring,
    rotateY: underDampedSpring,
    rotateZ: underDampedSpring,
    scaleX: criticallyDampedSpring,
    scaleY: criticallyDampedSpring,
    scale: criticallyDampedSpring,
    opacity: linearTween,
    backgroundColor: linearTween,
    color: linearTween,
    default: criticallyDampedSpring
  };
  var getDefaultTransition = function(valueKey, to) {
    var transitionFactory;
    if (isKeyframesTarget(to)) {
      transitionFactory = keyframes;
    } else {
      transitionFactory = defaultTransitions[valueKey] || defaultTransitions.default;
    }
    return __assign$2({ to }, transitionFactory(to));
  };
  var int = __assign$2(__assign$2({}, number), { transform: Math.round });
  var numberValueTypes = {
    borderWidth: px,
    borderTopWidth: px,
    borderRightWidth: px,
    borderBottomWidth: px,
    borderLeftWidth: px,
    borderRadius: px,
    radius: px,
    borderTopLeftRadius: px,
    borderTopRightRadius: px,
    borderBottomRightRadius: px,
    borderBottomLeftRadius: px,
    width: px,
    maxWidth: px,
    height: px,
    maxHeight: px,
    size: px,
    top: px,
    right: px,
    bottom: px,
    left: px,
    padding: px,
    paddingTop: px,
    paddingRight: px,
    paddingBottom: px,
    paddingLeft: px,
    margin: px,
    marginTop: px,
    marginRight: px,
    marginBottom: px,
    marginLeft: px,
    rotate: degrees,
    rotateX: degrees,
    rotateY: degrees,
    rotateZ: degrees,
    scale,
    scaleX: scale,
    scaleY: scale,
    scaleZ: scale,
    skew: degrees,
    skewX: degrees,
    skewY: degrees,
    distance: px,
    translateX: px,
    translateY: px,
    translateZ: px,
    x: px,
    y: px,
    z: px,
    perspective: px,
    transformPerspective: px,
    opacity: alpha$2,
    originX: progressPercentage,
    originY: progressPercentage,
    originZ: px,
    zIndex: int,
    fillOpacity: alpha$2,
    strokeOpacity: alpha$2,
    numOctaves: int
  };
  var defaultValueTypes = __assign$2(__assign$2({}, numberValueTypes), {
    color: color$2,
    backgroundColor: color$2,
    outlineColor: color$2,
    fill: color$2,
    stroke: color$2,
    borderColor: color$2,
    borderTopColor: color$2,
    borderRightColor: color$2,
    borderBottomColor: color$2,
    borderLeftColor: color$2,
    filter,
    WebkitFilter: filter
  });
  var getDefaultValueType = function(key) {
    return defaultValueTypes[key];
  };
  function getAnimatableNone(key, value) {
    var _a2;
    var defaultValueType = getDefaultValueType(key);
    if (defaultValueType !== filter)
      defaultValueType = complex;
    return (_a2 = defaultValueType.getAnimatableNone) === null || _a2 === void 0 ? void 0 : _a2.call(defaultValueType, value);
  }
  function isTransitionDefined(_a2) {
    _a2.when;
    _a2.delay;
    _a2.delayChildren;
    _a2.staggerChildren;
    _a2.staggerDirection;
    _a2.repeat;
    _a2.repeatType;
    _a2.repeatDelay;
    _a2.from;
    var transition2 = __rest$2(_a2, ["when", "delay", "delayChildren", "staggerChildren", "staggerDirection", "repeat", "repeatType", "repeatDelay", "from"]);
    return !!Object.keys(transition2).length;
  }
  function convertTransitionToAnimationOptions(_a2) {
    var ease = _a2.ease, times = _a2.times, yoyo = _a2.yoyo, flip2 = _a2.flip, loop2 = _a2.loop, transition2 = __rest$2(_a2, ["ease", "times", "yoyo", "flip", "loop"]);
    var options = __assign$2({}, transition2);
    if (times)
      options["offset"] = times;
    if (transition2.duration)
      options["duration"] = secondsToMilliseconds(transition2.duration);
    if (transition2.repeatDelay)
      options.repeatDelay = secondsToMilliseconds(transition2.repeatDelay);
    if (ease) {
      options["ease"] = isEasingArray(ease) ? ease.map(easingDefinitionToFunction) : easingDefinitionToFunction(ease);
    }
    if (transition2.type === "tween")
      options.type = "keyframes";
    if (yoyo || loop2 || flip2) {
      if (yoyo) {
        options.repeatType = "reverse";
      } else if (loop2) {
        options.repeatType = "loop";
      } else if (flip2) {
        options.repeatType = "mirror";
      }
      options.repeat = loop2 || yoyo || flip2 || transition2.repeat;
    }
    if (transition2.type !== "spring")
      options.type = "keyframes";
    return options;
  }
  function getDelayFromTransition(transition2, key) {
    var _a2, _b;
    var valueTransition = getValueTransition(transition2, key) || {};
    return (_b = (_a2 = valueTransition.delay) !== null && _a2 !== void 0 ? _a2 : transition2.delay) !== null && _b !== void 0 ? _b : 0;
  }
  function hydrateKeyframes(options) {
    if (Array.isArray(options.to) && options.to[0] === null) {
      options.to = __spreadArray$2([], __read$5(options.to), false);
      options.to[0] = options.from;
    }
    return options;
  }
  function getPopmotionAnimationOptions(transition2, options, key) {
    var _a2;
    if (Array.isArray(options.to)) {
      (_a2 = transition2.duration) !== null && _a2 !== void 0 ? _a2 : transition2.duration = 0.8;
    }
    hydrateKeyframes(options);
    if (!isTransitionDefined(transition2)) {
      transition2 = __assign$2(__assign$2({}, transition2), getDefaultTransition(key, options.to));
    }
    return __assign$2(__assign$2({}, options), convertTransitionToAnimationOptions(transition2));
  }
  function getAnimation(key, value, target, transition2, onComplete) {
    var _a2;
    var valueTransition = getValueTransition(transition2, key);
    var origin = (_a2 = valueTransition.from) !== null && _a2 !== void 0 ? _a2 : value.get();
    var isTargetAnimatable = isAnimatable(key, target);
    if (origin === "none" && isTargetAnimatable && typeof target === "string") {
      origin = getAnimatableNone(key, target);
    } else if (isZero(origin) && typeof target === "string") {
      origin = getZeroUnit(target);
    } else if (!Array.isArray(target) && isZero(target) && typeof origin === "string") {
      target = getZeroUnit(origin);
    }
    var isOriginAnimatable = isAnimatable(key, origin);
    function start2() {
      var options = {
        from: origin,
        to: target,
        velocity: value.getVelocity(),
        onComplete,
        onUpdate: function(v2) {
          return value.set(v2);
        }
      };
      return valueTransition.type === "inertia" || valueTransition.type === "decay" ? inertia(__assign$2(__assign$2({}, options), valueTransition)) : animate$1(__assign$2(__assign$2({}, getPopmotionAnimationOptions(valueTransition, options, key)), { onUpdate: function(v2) {
        var _a3;
        options.onUpdate(v2);
        (_a3 = valueTransition.onUpdate) === null || _a3 === void 0 ? void 0 : _a3.call(valueTransition, v2);
      }, onComplete: function() {
        var _a3;
        options.onComplete();
        (_a3 = valueTransition.onComplete) === null || _a3 === void 0 ? void 0 : _a3.call(valueTransition);
      } }));
    }
    function set() {
      var _a3, _b;
      value.set(target);
      onComplete();
      (_a3 = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onUpdate) === null || _a3 === void 0 ? void 0 : _a3.call(valueTransition, target);
      (_b = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onComplete) === null || _b === void 0 ? void 0 : _b.call(valueTransition);
      return { stop: function() {
      } };
    }
    return !isOriginAnimatable || !isTargetAnimatable || valueTransition.type === false ? set : start2;
  }
  function isZero(value) {
    return value === 0 || typeof value === "string" && parseFloat(value) === 0 && value.indexOf(" ") === -1;
  }
  function getZeroUnit(potentialUnitType) {
    return typeof potentialUnitType === "number" ? 0 : getAnimatableNone("", potentialUnitType);
  }
  function getValueTransition(transition2, key) {
    return transition2[key] || transition2["default"] || transition2;
  }
  function startAnimation(key, value, target, transition2) {
    if (transition2 === void 0) {
      transition2 = {};
    }
    return value.start(function(onComplete) {
      var delayTimer;
      var controls;
      var animation = getAnimation(key, value, target, transition2, onComplete);
      var delay = getDelayFromTransition(transition2, key);
      var start2 = function() {
        return controls = animation();
      };
      if (delay) {
        delayTimer = setTimeout(start2, secondsToMilliseconds(delay));
      } else {
        start2();
      }
      return function() {
        clearTimeout(delayTimer);
        controls === null || controls === void 0 ? void 0 : controls.stop();
      };
    });
  }
  function animate(from, to, transition2) {
    if (transition2 === void 0) {
      transition2 = {};
    }
    var value = isMotionValue(from) ? from : motionValue(from);
    startAnimation("", value, to, transition2);
    return {
      stop: function() {
        return value.stop();
      },
      isAnimating: function() {
        return value.isAnimating();
      }
    };
  }
  var borders = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"];
  var numBorders = borders.length;
  function mixValues(target, follow, lead, progress2, shouldCrossfadeOpacity, isOnlyMember) {
    var _a2, _b, _c, _d;
    if (shouldCrossfadeOpacity) {
      target.opacity = mix(0, (_a2 = lead.opacity) !== null && _a2 !== void 0 ? _a2 : 1, easeCrossfadeIn(progress2));
      target.opacityExit = mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress2));
    } else if (isOnlyMember) {
      target.opacity = mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress2);
    }
    for (var i2 = 0; i2 < numBorders; i2++) {
      var borderLabel = "border" + borders[i2] + "Radius";
      var followRadius = getRadius(follow, borderLabel);
      var leadRadius = getRadius(lead, borderLabel);
      if (followRadius === void 0 && leadRadius === void 0)
        continue;
      followRadius || (followRadius = 0);
      leadRadius || (leadRadius = 0);
      if (typeof followRadius === "number" && typeof leadRadius === "number") {
        var radius = Math.max(mix(followRadius, leadRadius, progress2), 0);
        target[borderLabel] = radius;
      }
    }
    if (follow.rotate || lead.rotate) {
      target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress2);
    }
  }
  function getRadius(values, radiusName) {
    var _a2;
    return (_a2 = values[radiusName]) !== null && _a2 !== void 0 ? _a2 : values.borderRadius;
  }
  var easeCrossfadeIn = compress(0, 0.5, circOut);
  var easeCrossfadeOut = compress(0.5, 0.95, linear);
  function compress(min2, max2, easing) {
    return function(p2) {
      if (p2 < min2)
        return 0;
      if (p2 > max2)
        return 1;
      return easing(progress(min2, max2, p2));
    };
  }
  function copyAxisInto(axis, originAxis) {
    axis.min = originAxis.min;
    axis.max = originAxis.max;
  }
  function copyBoxInto(box, originBox) {
    copyAxisInto(box.x, originBox.x);
    copyAxisInto(box.y, originBox.y);
  }
  function isIdentityScale(scale2) {
    return scale2 === void 0 || scale2 === 1;
  }
  function hasScale(_a2) {
    var scale2 = _a2.scale, scaleX = _a2.scaleX, scaleY = _a2.scaleY;
    return !isIdentityScale(scale2) || !isIdentityScale(scaleX) || !isIdentityScale(scaleY);
  }
  function hasTransform(values) {
    return hasScale(values) || hasTranslate(values.x) || hasTranslate(values.y) || values.z || values.rotate || values.rotateX || values.rotateY;
  }
  function hasTranslate(value) {
    return value && value !== "0%";
  }
  function scalePoint(point, scale2, originPoint) {
    var distanceFromOrigin = point - originPoint;
    var scaled = scale2 * distanceFromOrigin;
    return originPoint + scaled;
  }
  function applyPointDelta(point, translate, scale2, originPoint, boxScale) {
    if (boxScale !== void 0) {
      point = scalePoint(point, boxScale, originPoint);
    }
    return scalePoint(point, scale2, originPoint) + translate;
  }
  function applyAxisDelta(axis, translate, scale2, originPoint, boxScale) {
    if (translate === void 0) {
      translate = 0;
    }
    if (scale2 === void 0) {
      scale2 = 1;
    }
    axis.min = applyPointDelta(axis.min, translate, scale2, originPoint, boxScale);
    axis.max = applyPointDelta(axis.max, translate, scale2, originPoint, boxScale);
  }
  function applyBoxDelta(box, _a2) {
    var x2 = _a2.x, y2 = _a2.y;
    applyAxisDelta(box.x, x2.translate, x2.scale, x2.originPoint);
    applyAxisDelta(box.y, y2.translate, y2.scale, y2.originPoint);
  }
  function applyTreeDeltas(box, treeScale, treePath, isSharedTransition) {
    var _a2, _b;
    if (isSharedTransition === void 0) {
      isSharedTransition = false;
    }
    var treeLength = treePath.length;
    if (!treeLength)
      return;
    treeScale.x = treeScale.y = 1;
    var node;
    var delta;
    for (var i2 = 0; i2 < treeLength; i2++) {
      node = treePath[i2];
      delta = node.projectionDelta;
      if (((_b = (_a2 = node.instance) === null || _a2 === void 0 ? void 0 : _a2.style) === null || _b === void 0 ? void 0 : _b.display) === "contents")
        continue;
      if (isSharedTransition && node.options.layoutScroll && node.scroll && node !== node.root) {
        transformBox(box, { x: -node.scroll.x, y: -node.scroll.y });
      }
      if (delta) {
        treeScale.x *= delta.x.scale;
        treeScale.y *= delta.y.scale;
        applyBoxDelta(box, delta);
      }
      if (isSharedTransition && hasTransform(node.latestValues)) {
        transformBox(box, node.latestValues);
      }
    }
  }
  function translateAxis(axis, distance2) {
    axis.min = axis.min + distance2;
    axis.max = axis.max + distance2;
  }
  function transformAxis(axis, transforms2, _a2) {
    var _b = __read$5(_a2, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];
    var axisOrigin = transforms2[originKey] !== void 0 ? transforms2[originKey] : 0.5;
    var originPoint = mix(axis.min, axis.max, axisOrigin);
    applyAxisDelta(axis, transforms2[key], transforms2[scaleKey], originPoint, transforms2.scale);
  }
  var xKeys$1 = ["x", "scaleX", "originX"];
  var yKeys$1 = ["y", "scaleY", "originY"];
  function transformBox(box, transform3) {
    transformAxis(box.x, transform3, xKeys$1);
    transformAxis(box.y, transform3, yKeys$1);
  }
  function calcLength(axis) {
    return axis.max - axis.min;
  }
  function isNear(value, target, maxDistance) {
    if (target === void 0) {
      target = 0;
    }
    if (maxDistance === void 0) {
      maxDistance = 0.01;
    }
    return distance(value, target) < maxDistance;
  }
  function calcAxisDelta(delta, source, target, origin) {
    if (origin === void 0) {
      origin = 0.5;
    }
    delta.origin = origin;
    delta.originPoint = mix(source.min, source.max, delta.origin);
    delta.scale = calcLength(target) / calcLength(source);
    if (isNear(delta.scale, 1, 1e-4) || isNaN(delta.scale))
      delta.scale = 1;
    delta.translate = mix(target.min, target.max, delta.origin) - delta.originPoint;
    if (isNear(delta.translate) || isNaN(delta.translate))
      delta.translate = 0;
  }
  function calcBoxDelta(delta, source, target, origin) {
    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);
    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);
  }
  function calcRelativeAxis(target, relative, parent) {
    target.min = parent.min + relative.min;
    target.max = target.min + calcLength(relative);
  }
  function calcRelativeBox(target, relative, parent) {
    calcRelativeAxis(target.x, relative.x, parent.x);
    calcRelativeAxis(target.y, relative.y, parent.y);
  }
  function calcRelativeAxisPosition(target, layout, parent) {
    target.min = layout.min - parent.min;
    target.max = target.min + calcLength(layout);
  }
  function calcRelativePosition(target, layout, parent) {
    calcRelativeAxisPosition(target.x, layout.x, parent.x);
    calcRelativeAxisPosition(target.y, layout.y, parent.y);
  }
  function removePointDelta(point, translate, scale2, originPoint, boxScale) {
    point -= translate;
    point = scalePoint(point, 1 / scale2, originPoint);
    if (boxScale !== void 0) {
      point = scalePoint(point, 1 / boxScale, originPoint);
    }
    return point;
  }
  function removeAxisDelta(axis, translate, scale2, origin, boxScale, originAxis, sourceAxis) {
    if (translate === void 0) {
      translate = 0;
    }
    if (scale2 === void 0) {
      scale2 = 1;
    }
    if (origin === void 0) {
      origin = 0.5;
    }
    if (originAxis === void 0) {
      originAxis = axis;
    }
    if (sourceAxis === void 0) {
      sourceAxis = axis;
    }
    if (percent.test(translate)) {
      translate = parseFloat(translate);
      var relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);
      translate = relativeProgress - sourceAxis.min;
    }
    if (typeof translate !== "number")
      return;
    var originPoint = mix(originAxis.min, originAxis.max, origin);
    if (axis === originAxis)
      originPoint -= translate;
    axis.min = removePointDelta(axis.min, translate, scale2, originPoint, boxScale);
    axis.max = removePointDelta(axis.max, translate, scale2, originPoint, boxScale);
  }
  function removeAxisTransforms(axis, transforms2, _a2, origin, sourceAxis) {
    var _b = __read$5(_a2, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];
    removeAxisDelta(axis, transforms2[key], transforms2[scaleKey], transforms2[originKey], transforms2.scale, origin, sourceAxis);
  }
  var xKeys = ["x", "scaleX", "originX"];
  var yKeys = ["y", "scaleY", "originY"];
  function removeBoxTransforms(box, transforms2, originBox, sourceBox) {
    removeAxisTransforms(box.x, transforms2, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);
    removeAxisTransforms(box.y, transforms2, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);
  }
  var createAxisDelta = function() {
    return {
      translate: 0,
      scale: 1,
      origin: 0,
      originPoint: 0
    };
  };
  var createDelta = function() {
    return {
      x: createAxisDelta(),
      y: createAxisDelta()
    };
  };
  var createAxis = function() {
    return { min: 0, max: 0 };
  };
  var createBox = function() {
    return {
      x: createAxis(),
      y: createAxis()
    };
  };
  function isAxisDeltaZero(delta) {
    return delta.translate === 0 && delta.scale === 1;
  }
  function isDeltaZero(delta) {
    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);
  }
  function boxEquals(a2, b2) {
    return a2.x.min === b2.x.min && a2.x.max === b2.x.max && a2.y.min === b2.y.min && a2.y.max === b2.y.max;
  }
  var NodeStack = function() {
    function NodeStack2() {
      this.members = [];
    }
    NodeStack2.prototype.add = function(node) {
      addUniqueItem(this.members, node);
      node.scheduleRender();
    };
    NodeStack2.prototype.remove = function(node) {
      removeItem(this.members, node);
      if (node === this.prevLead) {
        this.prevLead = void 0;
      }
      if (node === this.lead) {
        var prevLead = this.members[this.members.length - 1];
        if (prevLead) {
          this.promote(prevLead);
        }
      }
    };
    NodeStack2.prototype.relegate = function(node) {
      var indexOfNode = this.members.findIndex(function(member2) {
        return node === member2;
      });
      if (indexOfNode === 0)
        return false;
      var prevLead;
      for (var i2 = indexOfNode; i2 >= 0; i2--) {
        var member = this.members[i2];
        if (member.isPresent !== false) {
          prevLead = member;
          break;
        }
      }
      if (prevLead) {
        this.promote(prevLead);
        return true;
      } else {
        return false;
      }
    };
    NodeStack2.prototype.promote = function(node, preserveFollowOpacity) {
      var _a2;
      var prevLead = this.lead;
      if (node === prevLead)
        return;
      this.prevLead = prevLead;
      this.lead = node;
      node.show();
      if (prevLead) {
        prevLead.instance && prevLead.scheduleRender();
        node.scheduleRender();
        node.resumeFrom = prevLead;
        if (preserveFollowOpacity) {
          node.resumeFrom.preserveOpacity = true;
        }
        if (prevLead.snapshot) {
          node.snapshot = prevLead.snapshot;
          node.snapshot.latestValues = prevLead.animationValues || prevLead.latestValues;
          node.snapshot.isShared = true;
        }
        if ((_a2 = node.root) === null || _a2 === void 0 ? void 0 : _a2.isUpdating) {
          node.isLayoutDirty = true;
        }
        var crossfade = node.options.crossfade;
        if (crossfade === false) {
          prevLead.hide();
        }
      }
    };
    NodeStack2.prototype.exitAnimationComplete = function() {
      this.members.forEach(function(node) {
        var _a2, _b, _c, _d, _e;
        (_b = (_a2 = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a2);
        (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);
      });
    };
    NodeStack2.prototype.scheduleRender = function() {
      this.members.forEach(function(node) {
        node.instance && node.scheduleRender(false);
      });
    };
    NodeStack2.prototype.removeLeadSnapshot = function() {
      if (this.lead && this.lead.snapshot) {
        this.lead.snapshot = void 0;
      }
    };
    return NodeStack2;
  }();
  var scaleCorrectors = {};
  function addScaleCorrector(correctors) {
    Object.assign(scaleCorrectors, correctors);
  }
  var identityProjection = "translate3d(0px, 0px, 0) scale(1, 1)";
  function buildProjectionTransform(delta, treeScale, latestTransform) {
    var xTranslate = delta.x.translate / treeScale.x;
    var yTranslate = delta.y.translate / treeScale.y;
    var transform3 = "translate3d(" + xTranslate + "px, " + yTranslate + "px, 0) ";
    if (latestTransform) {
      var rotate = latestTransform.rotate, rotateX = latestTransform.rotateX, rotateY = latestTransform.rotateY;
      if (rotate)
        transform3 += "rotate(" + rotate + "deg) ";
      if (rotateX)
        transform3 += "rotateX(" + rotateX + "deg) ";
      if (rotateY)
        transform3 += "rotateY(" + rotateY + "deg) ";
    }
    transform3 += "scale(" + delta.x.scale + ", " + delta.y.scale + ")";
    return transform3 === identityProjection ? "none" : transform3;
  }
  function eachAxis(callback) {
    return [callback("x"), callback("y")];
  }
  var transformAxes = ["", "X", "Y", "Z"];
  var order = ["translate", "scale", "rotate", "skew"];
  var transformProps = ["transformPerspective", "x", "y", "z"];
  order.forEach(function(operationKey) {
    return transformAxes.forEach(function(axesKey) {
      return transformProps.push(operationKey + axesKey);
    });
  });
  function sortTransformProps(a2, b2) {
    return transformProps.indexOf(a2) - transformProps.indexOf(b2);
  }
  var transformPropSet = new Set(transformProps);
  function isTransformProp(key) {
    return transformPropSet.has(key);
  }
  var transformOriginProps = /* @__PURE__ */ new Set(["originX", "originY", "originZ"]);
  function isTransformOriginProp(key) {
    return transformOriginProps.has(key);
  }
  var compareByDepth = function(a2, b2) {
    return a2.depth - b2.depth;
  };
  var FlatTree = function() {
    function FlatTree2() {
      this.children = [];
      this.isDirty = false;
    }
    FlatTree2.prototype.add = function(child) {
      addUniqueItem(this.children, child);
      this.isDirty = true;
    };
    FlatTree2.prototype.remove = function(child) {
      removeItem(this.children, child);
      this.isDirty = true;
    };
    FlatTree2.prototype.forEach = function(callback) {
      this.isDirty && this.children.sort(compareByDepth);
      this.isDirty = false;
      this.children.forEach(callback);
    };
    return FlatTree2;
  }();
  var isCustomValue = function(v2) {
    return Boolean(v2 && typeof v2 === "object" && v2.mix && v2.toValue);
  };
  var resolveFinalValueInKeyframes = function(v2) {
    return isKeyframesTarget(v2) ? v2[v2.length - 1] || 0 : v2;
  };
  function resolveMotionValue(value) {
    var unwrappedValue = isMotionValue(value) ? value.get() : value;
    return isCustomValue(unwrappedValue) ? unwrappedValue.toValue() : unwrappedValue;
  }
  var animationTarget = 1e3;
  var globalProjectionState = {
    hasAnimatedSinceResize: true,
    hasEverUpdated: false
  };
  function createProjectionNode(_a2) {
    var attachResizeListener = _a2.attachResizeListener, defaultParent = _a2.defaultParent, measureScroll = _a2.measureScroll, resetTransform = _a2.resetTransform;
    return function() {
      function ProjectionNode(id2, latestValues, parent) {
        var _this = this;
        if (latestValues === void 0) {
          latestValues = {};
        }
        if (parent === void 0) {
          parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent();
        }
        this.children = /* @__PURE__ */ new Set();
        this.options = {};
        this.isTreeAnimating = false;
        this.isAnimationBlocked = false;
        this.isLayoutDirty = false;
        this.updateManuallyBlocked = false;
        this.updateBlockedByResize = false;
        this.isUpdating = false;
        this.isSVG = false;
        this.needsReset = false;
        this.shouldResetTransform = false;
        this.treeScale = { x: 1, y: 1 };
        this.eventHandlers = /* @__PURE__ */ new Map();
        this.potentialNodes = /* @__PURE__ */ new Map();
        this.checkUpdateFailed = function() {
          if (_this.isUpdating) {
            _this.isUpdating = false;
            _this.clearAllSnapshots();
          }
        };
        this.updateProjection = function() {
          _this.nodes.forEach(resolveTargetDelta);
          _this.nodes.forEach(calcProjection);
        };
        this.hasProjected = false;
        this.isVisible = true;
        this.animationProgress = 0;
        this.sharedNodes = /* @__PURE__ */ new Map();
        this.id = id2;
        this.latestValues = latestValues;
        this.root = parent ? parent.root || parent : this;
        this.path = parent ? __spreadArray$2(__spreadArray$2([], __read$5(parent.path), false), [parent], false) : [];
        this.parent = parent;
        this.depth = parent ? parent.depth + 1 : 0;
        id2 && this.root.registerPotentialNode(id2, this);
        for (var i2 = 0; i2 < this.path.length; i2++) {
          this.path[i2].shouldResetTransform = true;
        }
        if (this.root === this)
          this.nodes = new FlatTree();
      }
      ProjectionNode.prototype.addEventListener = function(name, handler) {
        if (!this.eventHandlers.has(name)) {
          this.eventHandlers.set(name, new SubscriptionManager());
        }
        return this.eventHandlers.get(name).add(handler);
      };
      ProjectionNode.prototype.notifyListeners = function(name) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
          args[_i - 1] = arguments[_i];
        }
        var subscriptionManager = this.eventHandlers.get(name);
        subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify.apply(subscriptionManager, __spreadArray$2([], __read$5(args), false));
      };
      ProjectionNode.prototype.hasListeners = function(name) {
        return this.eventHandlers.has(name);
      };
      ProjectionNode.prototype.registerPotentialNode = function(id2, node) {
        this.potentialNodes.set(id2, node);
      };
      ProjectionNode.prototype.mount = function(instance, isLayoutDirty) {
        var _this = this;
        var _a3;
        if (isLayoutDirty === void 0) {
          isLayoutDirty = false;
        }
        if (this.instance)
          return;
        this.isSVG = instance instanceof SVGElement && instance.tagName !== "svg";
        this.instance = instance;
        var _b = this.options, layoutId = _b.layoutId, layout = _b.layout, visualElement2 = _b.visualElement;
        if (visualElement2 && !visualElement2.getInstance()) {
          visualElement2.mount(instance);
        }
        this.root.nodes.add(this);
        (_a3 = this.parent) === null || _a3 === void 0 ? void 0 : _a3.children.add(this);
        this.id && this.root.potentialNodes.delete(this.id);
        if (isLayoutDirty && (layout || layoutId)) {
          this.isLayoutDirty = true;
        }
        if (attachResizeListener) {
          var unblockTimeout_1;
          var resizeUnblockUpdate_1 = function() {
            return _this.root.updateBlockedByResize = false;
          };
          attachResizeListener(instance, function() {
            _this.root.updateBlockedByResize = true;
            clearTimeout(unblockTimeout_1);
            unblockTimeout_1 = setTimeout(resizeUnblockUpdate_1, 250);
            if (globalProjectionState.hasAnimatedSinceResize) {
              globalProjectionState.hasAnimatedSinceResize = false;
              _this.nodes.forEach(finishAnimation);
            }
          });
        }
        if (layoutId) {
          this.root.registerSharedNode(layoutId, this);
        }
        if (this.options.animate !== false && visualElement2 && (layoutId || layout)) {
          this.addEventListener("didUpdate", function(_a4) {
            var _b2, _c, _d, _e, _f;
            var delta = _a4.delta, hasLayoutChanged = _a4.hasLayoutChanged, hasRelativeTargetChanged = _a4.hasRelativeTargetChanged, newLayout = _a4.layout;
            if (_this.isTreeAnimationBlocked()) {
              _this.target = void 0;
              _this.relativeTarget = void 0;
              return;
            }
            var layoutTransition = (_c = (_b2 = _this.options.transition) !== null && _b2 !== void 0 ? _b2 : visualElement2.getDefaultTransition()) !== null && _c !== void 0 ? _c : defaultLayoutTransition;
            var onLayoutAnimationComplete = visualElement2.getProps().onLayoutAnimationComplete;
            var targetChanged = !_this.targetLayout || !boxEquals(_this.targetLayout, newLayout) || hasRelativeTargetChanged;
            var hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;
            if (((_d = _this.resumeFrom) === null || _d === void 0 ? void 0 : _d.instance) || hasOnlyRelativeTargetChanged || hasLayoutChanged && (targetChanged || !_this.currentAnimation)) {
              if (_this.resumeFrom) {
                _this.resumingFrom = _this.resumeFrom;
                _this.resumingFrom.resumingFrom = void 0;
              }
              _this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);
              _this.startAnimation(__assign$2(__assign$2({}, getValueTransition(layoutTransition, "layout")), { onComplete: onLayoutAnimationComplete }));
            } else {
              _this.isLead() && ((_f = (_e = _this.options).onExitComplete) === null || _f === void 0 ? void 0 : _f.call(_e));
            }
            _this.targetLayout = newLayout;
          });
        }
      };
      ProjectionNode.prototype.unmount = function() {
        var _a3, _b;
        this.options.layoutId && this.willUpdate();
        this.root.nodes.remove(this);
        (_a3 = this.getStack()) === null || _a3 === void 0 ? void 0 : _a3.remove(this);
        (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);
        this.instance = void 0;
        cancelSync.preRender(this.updateProjection);
      };
      ProjectionNode.prototype.blockUpdate = function() {
        this.updateManuallyBlocked = true;
      };
      ProjectionNode.prototype.unblockUpdate = function() {
        this.updateManuallyBlocked = false;
      };
      ProjectionNode.prototype.isUpdateBlocked = function() {
        return this.updateManuallyBlocked || this.updateBlockedByResize;
      };
      ProjectionNode.prototype.isTreeAnimationBlocked = function() {
        var _a3;
        return this.isAnimationBlocked || ((_a3 = this.parent) === null || _a3 === void 0 ? void 0 : _a3.isTreeAnimationBlocked()) || false;
      };
      ProjectionNode.prototype.startUpdate = function() {
        var _a3;
        if (this.isUpdateBlocked())
          return;
        this.isUpdating = true;
        (_a3 = this.nodes) === null || _a3 === void 0 ? void 0 : _a3.forEach(resetRotation);
      };
      ProjectionNode.prototype.willUpdate = function(shouldNotifyListeners) {
        var _a3, _b, _c;
        if (shouldNotifyListeners === void 0) {
          shouldNotifyListeners = true;
        }
        if (this.root.isUpdateBlocked()) {
          (_b = (_a3 = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a3);
          return;
        }
        !this.root.isUpdating && this.root.startUpdate();
        if (this.isLayoutDirty)
          return;
        this.isLayoutDirty = true;
        for (var i2 = 0; i2 < this.path.length; i2++) {
          var node = this.path[i2];
          node.shouldResetTransform = true;
          node.updateScroll();
        }
        var _d = this.options, layoutId = _d.layoutId, layout = _d.layout;
        if (layoutId === void 0 && !layout)
          return;
        var transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;
        this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, "");
        this.updateSnapshot();
        shouldNotifyListeners && this.notifyListeners("willUpdate");
      };
      ProjectionNode.prototype.didUpdate = function() {
        var updateWasBlocked = this.isUpdateBlocked();
        if (updateWasBlocked) {
          this.unblockUpdate();
          this.clearAllSnapshots();
          this.nodes.forEach(clearMeasurements);
          return;
        }
        if (!this.isUpdating)
          return;
        this.isUpdating = false;
        if (this.potentialNodes.size) {
          this.potentialNodes.forEach(mountNodeEarly);
          this.potentialNodes.clear();
        }
        this.nodes.forEach(resetTransformStyle);
        this.nodes.forEach(updateLayout);
        this.nodes.forEach(notifyLayoutUpdate);
        this.clearAllSnapshots();
        flushSync.update();
        flushSync.preRender();
        flushSync.render();
      };
      ProjectionNode.prototype.clearAllSnapshots = function() {
        this.nodes.forEach(clearSnapshot);
        this.sharedNodes.forEach(removeLeadSnapshots);
      };
      ProjectionNode.prototype.scheduleUpdateProjection = function() {
        sync.preRender(this.updateProjection, false, true);
      };
      ProjectionNode.prototype.scheduleCheckAfterUnmount = function() {
        var _this = this;
        sync.postRender(function() {
          if (_this.isLayoutDirty) {
            _this.root.didUpdate();
          } else {
            _this.root.checkUpdateFailed();
          }
        });
      };
      ProjectionNode.prototype.updateSnapshot = function() {
        if (this.snapshot || !this.instance)
          return;
        var measured = this.measure();
        var layout = this.removeTransform(this.removeElementScroll(measured));
        roundBox(layout);
        this.snapshot = {
          measured,
          layout,
          latestValues: {}
        };
      };
      ProjectionNode.prototype.updateLayout = function() {
        var _a3;
        if (!this.instance)
          return;
        this.updateScroll();
        if (!(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty) {
          return;
        }
        if (this.resumeFrom && !this.resumeFrom.instance) {
          for (var i2 = 0; i2 < this.path.length; i2++) {
            var node = this.path[i2];
            node.updateScroll();
          }
        }
        var measured = this.measure();
        roundBox(measured);
        var prevLayout = this.layout;
        this.layout = {
          measured,
          actual: this.removeElementScroll(measured)
        };
        this.layoutCorrected = createBox();
        this.isLayoutDirty = false;
        this.projectionDelta = void 0;
        this.notifyListeners("measure");
        (_a3 = this.options.visualElement) === null || _a3 === void 0 ? void 0 : _a3.notifyLayoutMeasure(this.layout.actual, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.actual);
      };
      ProjectionNode.prototype.updateScroll = function() {
        if (this.options.layoutScroll && this.instance) {
          this.scroll = measureScroll(this.instance);
        }
      };
      ProjectionNode.prototype.resetTransform = function() {
        var _a3;
        if (!resetTransform)
          return;
        var isResetRequested = this.isLayoutDirty || this.shouldResetTransform;
        var hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);
        var transformTemplate = (_a3 = this.options.visualElement) === null || _a3 === void 0 ? void 0 : _a3.getProps().transformTemplate;
        var transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, "");
        var transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;
        if (isResetRequested && (hasProjection || hasTransform(this.latestValues) || transformTemplateHasChanged)) {
          resetTransform(this.instance, transformTemplateValue);
          this.shouldResetTransform = false;
          this.scheduleRender();
        }
      };
      ProjectionNode.prototype.measure = function() {
        var visualElement2 = this.options.visualElement;
        if (!visualElement2)
          return createBox();
        var box = visualElement2.measureViewportBox();
        var scroll = this.root.scroll;
        if (scroll) {
          translateAxis(box.x, scroll.x);
          translateAxis(box.y, scroll.y);
        }
        return box;
      };
      ProjectionNode.prototype.removeElementScroll = function(box) {
        var boxWithoutScroll = createBox();
        copyBoxInto(boxWithoutScroll, box);
        for (var i2 = 0; i2 < this.path.length; i2++) {
          var node = this.path[i2];
          var scroll_1 = node.scroll, options = node.options;
          if (node !== this.root && scroll_1 && options.layoutScroll) {
            translateAxis(boxWithoutScroll.x, scroll_1.x);
            translateAxis(boxWithoutScroll.y, scroll_1.y);
          }
        }
        return boxWithoutScroll;
      };
      ProjectionNode.prototype.applyTransform = function(box, transformOnly) {
        if (transformOnly === void 0) {
          transformOnly = false;
        }
        var withTransforms = createBox();
        copyBoxInto(withTransforms, box);
        for (var i2 = 0; i2 < this.path.length; i2++) {
          var node = this.path[i2];
          if (!transformOnly && node.options.layoutScroll && node.scroll && node !== node.root) {
            transformBox(withTransforms, {
              x: -node.scroll.x,
              y: -node.scroll.y
            });
          }
          if (!hasTransform(node.latestValues))
            continue;
          transformBox(withTransforms, node.latestValues);
        }
        if (hasTransform(this.latestValues)) {
          transformBox(withTransforms, this.latestValues);
        }
        return withTransforms;
      };
      ProjectionNode.prototype.removeTransform = function(box) {
        var _a3;
        var boxWithoutTransform = createBox();
        copyBoxInto(boxWithoutTransform, box);
        for (var i2 = 0; i2 < this.path.length; i2++) {
          var node = this.path[i2];
          if (!node.instance)
            continue;
          if (!hasTransform(node.latestValues))
            continue;
          hasScale(node.latestValues) && node.updateSnapshot();
          var sourceBox = createBox();
          var nodeBox = node.measure();
          copyBoxInto(sourceBox, nodeBox);
          removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a3 = node.snapshot) === null || _a3 === void 0 ? void 0 : _a3.layout, sourceBox);
        }
        if (hasTransform(this.latestValues)) {
          removeBoxTransforms(boxWithoutTransform, this.latestValues);
        }
        return boxWithoutTransform;
      };
      ProjectionNode.prototype.setTargetDelta = function(delta) {
        this.targetDelta = delta;
        this.root.scheduleUpdateProjection();
      };
      ProjectionNode.prototype.setOptions = function(options) {
        var _a3;
        this.options = __assign$2(__assign$2(__assign$2({}, this.options), options), { crossfade: (_a3 = options.crossfade) !== null && _a3 !== void 0 ? _a3 : true });
      };
      ProjectionNode.prototype.clearMeasurements = function() {
        this.scroll = void 0;
        this.layout = void 0;
        this.snapshot = void 0;
        this.prevTransformTemplateValue = void 0;
        this.targetDelta = void 0;
        this.target = void 0;
        this.isLayoutDirty = false;
      };
      ProjectionNode.prototype.resolveTargetDelta = function() {
        var _a3;
        var _b = this.options, layout = _b.layout, layoutId = _b.layoutId;
        if (!this.layout || !(layout || layoutId))
          return;
        if (!this.targetDelta && !this.relativeTarget) {
          this.relativeParent = this.getClosestProjectingParent();
          if (this.relativeParent && this.relativeParent.layout) {
            this.relativeTarget = createBox();
            this.relativeTargetOrigin = createBox();
            calcRelativePosition(this.relativeTargetOrigin, this.layout.actual, this.relativeParent.layout.actual);
            copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);
          }
        }
        if (!this.relativeTarget && !this.targetDelta)
          return;
        if (!this.target) {
          this.target = createBox();
          this.targetWithTransforms = createBox();
        }
        if (this.relativeTarget && this.relativeTargetOrigin && ((_a3 = this.relativeParent) === null || _a3 === void 0 ? void 0 : _a3.target)) {
          calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);
        } else if (this.targetDelta) {
          if (Boolean(this.resumingFrom)) {
            this.target = this.applyTransform(this.layout.actual);
          } else {
            copyBoxInto(this.target, this.layout.actual);
          }
          applyBoxDelta(this.target, this.targetDelta);
        } else {
          copyBoxInto(this.target, this.layout.actual);
        }
        if (this.attemptToResolveRelativeTarget) {
          this.attemptToResolveRelativeTarget = false;
          this.relativeParent = this.getClosestProjectingParent();
          if (this.relativeParent && Boolean(this.relativeParent.resumingFrom) === Boolean(this.resumingFrom) && !this.relativeParent.options.layoutScroll && this.relativeParent.target) {
            this.relativeTarget = createBox();
            this.relativeTargetOrigin = createBox();
            calcRelativePosition(this.relativeTargetOrigin, this.target, this.relativeParent.target);
            copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);
          }
        }
      };
      ProjectionNode.prototype.getClosestProjectingParent = function() {
        if (!this.parent || hasTransform(this.parent.latestValues))
          return void 0;
        if ((this.parent.relativeTarget || this.parent.targetDelta) && this.parent.layout) {
          return this.parent;
        } else {
          return this.parent.getClosestProjectingParent();
        }
      };
      ProjectionNode.prototype.calcProjection = function() {
        var _a3;
        var _b = this.options, layout = _b.layout, layoutId = _b.layoutId;
        this.isTreeAnimating = Boolean(((_a3 = this.parent) === null || _a3 === void 0 ? void 0 : _a3.isTreeAnimating) || this.currentAnimation || this.pendingAnimation);
        if (!this.isTreeAnimating) {
          this.targetDelta = this.relativeTarget = void 0;
        }
        if (!this.layout || !(layout || layoutId))
          return;
        var lead = this.getLead();
        copyBoxInto(this.layoutCorrected, this.layout.actual);
        applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, Boolean(this.resumingFrom) || this !== lead);
        var target = lead.target;
        if (!target)
          return;
        if (!this.projectionDelta) {
          this.projectionDelta = createDelta();
          this.projectionDeltaWithTransform = createDelta();
        }
        var prevTreeScaleX = this.treeScale.x;
        var prevTreeScaleY = this.treeScale.y;
        var prevProjectionTransform = this.projectionTransform;
        calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);
        this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);
        if (this.projectionTransform !== prevProjectionTransform || this.treeScale.x !== prevTreeScaleX || this.treeScale.y !== prevTreeScaleY) {
          this.hasProjected = true;
          this.scheduleRender();
        }
      };
      ProjectionNode.prototype.hide = function() {
        this.isVisible = false;
      };
      ProjectionNode.prototype.show = function() {
        this.isVisible = true;
      };
      ProjectionNode.prototype.scheduleRender = function(notifyAll) {
        var _a3, _b, _c;
        if (notifyAll === void 0) {
          notifyAll = true;
        }
        (_b = (_a3 = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a3);
        notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());
        if (this.resumingFrom && !this.resumingFrom.instance) {
          this.resumingFrom = void 0;
        }
      };
      ProjectionNode.prototype.setAnimationOrigin = function(delta, hasOnlyRelativeTargetChanged) {
        var _this = this;
        var _a3;
        if (hasOnlyRelativeTargetChanged === void 0) {
          hasOnlyRelativeTargetChanged = false;
        }
        var snapshot = this.snapshot;
        var snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};
        var mixedValues = __assign$2({}, this.latestValues);
        var targetDelta = createDelta();
        this.relativeTarget = this.relativeTargetOrigin = void 0;
        this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;
        var relativeLayout = createBox();
        var isSharedLayoutAnimation = snapshot === null || snapshot === void 0 ? void 0 : snapshot.isShared;
        var isOnlyMember = (((_a3 = this.getStack()) === null || _a3 === void 0 ? void 0 : _a3.members.length) || 0) <= 1;
        var shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation && !isOnlyMember && this.options.crossfade === true && !this.path.some(hasOpacityCrossfade));
        this.mixTargetDelta = function(latest) {
          var _a4;
          var progress2 = latest / 1e3;
          mixAxisDelta(targetDelta.x, delta.x, progress2);
          mixAxisDelta(targetDelta.y, delta.y, progress2);
          _this.setTargetDelta(targetDelta);
          if (_this.relativeTarget && _this.relativeTargetOrigin && _this.layout && ((_a4 = _this.relativeParent) === null || _a4 === void 0 ? void 0 : _a4.layout)) {
            calcRelativePosition(relativeLayout, _this.layout.actual, _this.relativeParent.layout.actual);
            mixBox(_this.relativeTarget, _this.relativeTargetOrigin, relativeLayout, progress2);
          }
          if (isSharedLayoutAnimation) {
            _this.animationValues = mixedValues;
            mixValues(mixedValues, snapshotLatestValues, _this.latestValues, progress2, shouldCrossfadeOpacity, isOnlyMember);
          }
          _this.root.scheduleUpdateProjection();
          _this.scheduleRender();
        };
        this.mixTargetDelta(0);
      };
      ProjectionNode.prototype.startAnimation = function(options) {
        var _this = this;
        var _a3, _b;
        (_a3 = this.currentAnimation) === null || _a3 === void 0 ? void 0 : _a3.stop();
        if (this.resumingFrom) {
          (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();
        }
        if (this.pendingAnimation) {
          cancelSync.update(this.pendingAnimation);
          this.pendingAnimation = void 0;
        }
        this.pendingAnimation = sync.update(function() {
          globalProjectionState.hasAnimatedSinceResize = true;
          _this.currentAnimation = animate(0, animationTarget, __assign$2(__assign$2({}, options), { onUpdate: function(latest) {
            var _a4;
            _this.mixTargetDelta(latest);
            (_a4 = options.onUpdate) === null || _a4 === void 0 ? void 0 : _a4.call(options, latest);
          }, onComplete: function() {
            var _a4;
            (_a4 = options.onComplete) === null || _a4 === void 0 ? void 0 : _a4.call(options);
            _this.completeAnimation();
          } }));
          if (_this.resumingFrom) {
            _this.resumingFrom.currentAnimation = _this.currentAnimation;
          }
          _this.pendingAnimation = void 0;
        });
      };
      ProjectionNode.prototype.completeAnimation = function() {
        var _a3;
        if (this.resumingFrom) {
          this.resumingFrom.currentAnimation = void 0;
          this.resumingFrom.preserveOpacity = void 0;
        }
        (_a3 = this.getStack()) === null || _a3 === void 0 ? void 0 : _a3.exitAnimationComplete();
        this.resumingFrom = this.currentAnimation = this.animationValues = void 0;
      };
      ProjectionNode.prototype.finishAnimation = function() {
        var _a3;
        if (this.currentAnimation) {
          (_a3 = this.mixTargetDelta) === null || _a3 === void 0 ? void 0 : _a3.call(this, animationTarget);
          this.currentAnimation.stop();
        }
        this.completeAnimation();
      };
      ProjectionNode.prototype.applyTransformsToTarget = function() {
        var _a3 = this.getLead(), targetWithTransforms = _a3.targetWithTransforms, target = _a3.target, layout = _a3.layout, latestValues = _a3.latestValues;
        if (!targetWithTransforms || !target || !layout)
          return;
        copyBoxInto(targetWithTransforms, target);
        transformBox(targetWithTransforms, latestValues);
        calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);
      };
      ProjectionNode.prototype.registerSharedNode = function(layoutId, node) {
        var _a3, _b, _c;
        if (!this.sharedNodes.has(layoutId)) {
          this.sharedNodes.set(layoutId, new NodeStack());
        }
        var stack = this.sharedNodes.get(layoutId);
        stack.add(node);
        node.promote({
          transition: (_a3 = node.options.initialPromotionConfig) === null || _a3 === void 0 ? void 0 : _a3.transition,
          preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node)
        });
      };
      ProjectionNode.prototype.isLead = function() {
        var stack = this.getStack();
        return stack ? stack.lead === this : true;
      };
      ProjectionNode.prototype.getLead = function() {
        var _a3;
        var layoutId = this.options.layoutId;
        return layoutId ? ((_a3 = this.getStack()) === null || _a3 === void 0 ? void 0 : _a3.lead) || this : this;
      };
      ProjectionNode.prototype.getPrevLead = function() {
        var _a3;
        var layoutId = this.options.layoutId;
        return layoutId ? (_a3 = this.getStack()) === null || _a3 === void 0 ? void 0 : _a3.prevLead : void 0;
      };
      ProjectionNode.prototype.getStack = function() {
        var layoutId = this.options.layoutId;
        if (layoutId)
          return this.root.sharedNodes.get(layoutId);
      };
      ProjectionNode.prototype.promote = function(_a3) {
        var _b = _a3 === void 0 ? {} : _a3, needsReset = _b.needsReset, transition2 = _b.transition, preserveFollowOpacity = _b.preserveFollowOpacity;
        var stack = this.getStack();
        if (stack)
          stack.promote(this, preserveFollowOpacity);
        if (needsReset) {
          this.projectionDelta = void 0;
          this.needsReset = true;
        }
        if (transition2)
          this.setOptions({ transition: transition2 });
      };
      ProjectionNode.prototype.relegate = function() {
        var stack = this.getStack();
        if (stack) {
          return stack.relegate(this);
        } else {
          return false;
        }
      };
      ProjectionNode.prototype.resetRotation = function() {
        var visualElement2 = this.options.visualElement;
        if (!visualElement2)
          return;
        var hasRotate = false;
        var resetValues = {};
        for (var i2 = 0; i2 < transformAxes.length; i2++) {
          var axis = transformAxes[i2];
          var key = "rotate" + axis;
          if (!visualElement2.getStaticValue(key)) {
            continue;
          }
          hasRotate = true;
          resetValues[key] = visualElement2.getStaticValue(key);
          visualElement2.setStaticValue(key, 0);
        }
        if (!hasRotate)
          return;
        visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.syncRender();
        for (var key in resetValues) {
          visualElement2.setStaticValue(key, resetValues[key]);
        }
        visualElement2.scheduleRender();
      };
      ProjectionNode.prototype.getProjectionStyles = function(styleProp) {
        var _a3, _b, _c, _d, _e, _f;
        if (styleProp === void 0) {
          styleProp = {};
        }
        var styles2 = {};
        if (!this.instance || this.isSVG)
          return styles2;
        if (!this.isVisible) {
          return { visibility: "hidden" };
        } else {
          styles2.visibility = "";
        }
        var transformTemplate = (_a3 = this.options.visualElement) === null || _a3 === void 0 ? void 0 : _a3.getProps().transformTemplate;
        if (this.needsReset) {
          this.needsReset = false;
          styles2.opacity = "";
          styles2.pointerEvents = resolveMotionValue(styleProp.pointerEvents) || "";
          styles2.transform = transformTemplate ? transformTemplate(this.latestValues, "") : "none";
          return styles2;
        }
        var lead = this.getLead();
        if (!this.projectionDelta || !this.layout || !lead.target) {
          var emptyStyles = {};
          if (this.options.layoutId) {
            emptyStyles.opacity = (_b = this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1;
            emptyStyles.pointerEvents = resolveMotionValue(styleProp.pointerEvents) || "";
          }
          if (this.hasProjected && !hasTransform(this.latestValues)) {
            emptyStyles.transform = transformTemplate ? transformTemplate({}, "") : "none";
            this.hasProjected = false;
          }
          return emptyStyles;
        }
        var valuesToRender = lead.animationValues || lead.latestValues;
        this.applyTransformsToTarget();
        styles2.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);
        if (transformTemplate) {
          styles2.transform = transformTemplate(valuesToRender, styles2.transform);
        }
        var _g = this.projectionDelta, x2 = _g.x, y2 = _g.y;
        styles2.transformOrigin = x2.origin * 100 + "% " + y2.origin * 100 + "% 0";
        if (lead.animationValues) {
          styles2.opacity = lead === this ? (_d = (_c = valuesToRender.opacity) !== null && _c !== void 0 ? _c : this.latestValues.opacity) !== null && _d !== void 0 ? _d : 1 : this.preserveOpacity ? this.latestValues.opacity : valuesToRender.opacityExit;
        } else {
          styles2.opacity = lead === this ? (_e = valuesToRender.opacity) !== null && _e !== void 0 ? _e : "" : (_f = valuesToRender.opacityExit) !== null && _f !== void 0 ? _f : 0;
        }
        for (var key in scaleCorrectors) {
          if (valuesToRender[key] === void 0)
            continue;
          var _h = scaleCorrectors[key], correct = _h.correct, applyTo = _h.applyTo;
          var corrected = correct(valuesToRender[key], lead);
          if (applyTo) {
            var num = applyTo.length;
            for (var i2 = 0; i2 < num; i2++) {
              styles2[applyTo[i2]] = corrected;
            }
          } else {
            styles2[key] = corrected;
          }
        }
        if (this.options.layoutId) {
          styles2.pointerEvents = lead === this ? resolveMotionValue(styleProp.pointerEvents) || "" : "none";
        }
        return styles2;
      };
      ProjectionNode.prototype.clearSnapshot = function() {
        this.resumeFrom = this.snapshot = void 0;
      };
      ProjectionNode.prototype.resetTree = function() {
        this.root.nodes.forEach(function(node) {
          var _a3;
          return (_a3 = node.currentAnimation) === null || _a3 === void 0 ? void 0 : _a3.stop();
        });
        this.root.nodes.forEach(clearMeasurements);
        this.root.sharedNodes.clear();
      };
      return ProjectionNode;
    }();
  }
  function updateLayout(node) {
    node.updateLayout();
  }
  function notifyLayoutUpdate(node) {
    var _a2, _b, _c, _d;
    var snapshot = (_b = (_a2 = node.resumeFrom) === null || _a2 === void 0 ? void 0 : _a2.snapshot) !== null && _b !== void 0 ? _b : node.snapshot;
    if (node.isLead() && node.layout && snapshot && node.hasListeners("didUpdate")) {
      var _e = node.layout, layout_1 = _e.actual, measuredLayout = _e.measured;
      if (node.options.animationType === "size") {
        eachAxis(function(axis) {
          var axisSnapshot = snapshot.isShared ? snapshot.measured[axis] : snapshot.layout[axis];
          var length = calcLength(axisSnapshot);
          axisSnapshot.min = layout_1[axis].min;
          axisSnapshot.max = axisSnapshot.min + length;
        });
      } else if (node.options.animationType === "position") {
        eachAxis(function(axis) {
          var axisSnapshot = snapshot.isShared ? snapshot.measured[axis] : snapshot.layout[axis];
          var length = calcLength(layout_1[axis]);
          axisSnapshot.max = axisSnapshot.min + length;
        });
      }
      var layoutDelta = createDelta();
      calcBoxDelta(layoutDelta, layout_1, snapshot.layout);
      var visualDelta = createDelta();
      if (snapshot.isShared) {
        calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measured);
      } else {
        calcBoxDelta(visualDelta, layout_1, snapshot.layout);
      }
      var hasLayoutChanged = !isDeltaZero(layoutDelta);
      var hasRelativeTargetChanged = false;
      if (!node.resumeFrom) {
        node.relativeParent = node.getClosestProjectingParent();
        if (node.relativeParent && !node.relativeParent.resumeFrom) {
          var _f = node.relativeParent, parentSnapshot = _f.snapshot, parentLayout = _f.layout;
          if (parentSnapshot && parentLayout) {
            var relativeSnapshot = createBox();
            calcRelativePosition(relativeSnapshot, snapshot.layout, parentSnapshot.layout);
            var relativeLayout = createBox();
            calcRelativePosition(relativeLayout, layout_1, parentLayout.actual);
            if (!boxEquals(relativeSnapshot, relativeLayout)) {
              hasRelativeTargetChanged = true;
            }
          }
        }
      }
      node.notifyListeners("didUpdate", {
        layout: layout_1,
        snapshot,
        delta: visualDelta,
        layoutDelta,
        hasLayoutChanged,
        hasRelativeTargetChanged
      });
    } else if (node.isLead()) {
      (_d = (_c = node.options).onExitComplete) === null || _d === void 0 ? void 0 : _d.call(_c);
    }
    node.options.transition = void 0;
  }
  function clearSnapshot(node) {
    node.clearSnapshot();
  }
  function clearMeasurements(node) {
    node.clearMeasurements();
  }
  function resetTransformStyle(node) {
    node.resetTransform();
  }
  function finishAnimation(node) {
    node.finishAnimation();
    node.targetDelta = node.relativeTarget = node.target = void 0;
  }
  function resolveTargetDelta(node) {
    node.resolveTargetDelta();
  }
  function calcProjection(node) {
    node.calcProjection();
  }
  function resetRotation(node) {
    node.resetRotation();
  }
  function removeLeadSnapshots(stack) {
    stack.removeLeadSnapshot();
  }
  function mixAxisDelta(output, delta, p2) {
    output.translate = mix(delta.translate, 0, p2);
    output.scale = mix(delta.scale, 1, p2);
    output.origin = delta.origin;
    output.originPoint = delta.originPoint;
  }
  function mixAxis(output, from, to, p2) {
    output.min = mix(from.min, to.min, p2);
    output.max = mix(from.max, to.max, p2);
  }
  function mixBox(output, from, to, p2) {
    mixAxis(output.x, from.x, to.x, p2);
    mixAxis(output.y, from.y, to.y, p2);
  }
  function hasOpacityCrossfade(node) {
    return node.animationValues && node.animationValues.opacityExit !== void 0;
  }
  var defaultLayoutTransition = {
    duration: 0.45,
    ease: [0.4, 0, 0.1, 1]
  };
  function mountNodeEarly(node, id2) {
    var searchNode = node.root;
    for (var i2 = node.path.length - 1; i2 >= 0; i2--) {
      if (Boolean(node.path[i2].instance)) {
        searchNode = node.path[i2];
        break;
      }
    }
    var searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;
    var element = searchElement.querySelector('[data-projection-id="' + id2 + '"]');
    if (element)
      node.mount(element, true);
  }
  function roundAxis(axis) {
    axis.min = Math.round(axis.min);
    axis.max = Math.round(axis.max);
  }
  function roundBox(box) {
    roundAxis(box.x);
    roundAxis(box.y);
  }
  var LayoutGroupContext = React__default.createContext({});
  var SwitchLayoutGroupContext = React__default.createContext({});
  (function(_super) {
    __extends(VisualElementHandler2, _super);
    function VisualElementHandler2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    VisualElementHandler2.prototype.getSnapshotBeforeUpdate = function() {
      this.updateProps();
      return null;
    };
    VisualElementHandler2.prototype.componentDidUpdate = function() {
    };
    VisualElementHandler2.prototype.updateProps = function() {
      var _a2 = this.props, visualElement2 = _a2.visualElement, props = _a2.props;
      if (visualElement2)
        visualElement2.setProps(props);
    };
    VisualElementHandler2.prototype.render = function() {
      return this.props.children;
    };
    return VisualElementHandler2;
  })(React__default__default["default"].Component);
  function isForcedMotionValue(key, _a2) {
    var layout = _a2.layout, layoutId = _a2.layoutId;
    return isTransformProp(key) || isTransformOriginProp(key) || (layout || layoutId !== void 0) && (!!scaleCorrectors[key] || key === "opacity");
  }
  var translateAlias = {
    x: "translateX",
    y: "translateY",
    z: "translateZ",
    transformPerspective: "perspective"
  };
  function buildTransform(_a2, _b, transformIsDefault, transformTemplate) {
    var transform3 = _a2.transform, transformKeys2 = _a2.transformKeys;
    var _c = _b.enableHardwareAcceleration, enableHardwareAcceleration = _c === void 0 ? true : _c, _d = _b.allowTransformNone, allowTransformNone = _d === void 0 ? true : _d;
    var transformString = "";
    transformKeys2.sort(sortTransformProps);
    var transformHasZ = false;
    var numTransformKeys = transformKeys2.length;
    for (var i2 = 0; i2 < numTransformKeys; i2++) {
      var key = transformKeys2[i2];
      transformString += (translateAlias[key] || key) + "(" + transform3[key] + ") ";
      if (key === "z")
        transformHasZ = true;
    }
    if (!transformHasZ && enableHardwareAcceleration) {
      transformString += "translateZ(0)";
    } else {
      transformString = transformString.trim();
    }
    if (transformTemplate) {
      transformString = transformTemplate(transform3, transformIsDefault ? "" : transformString);
    } else if (allowTransformNone && transformIsDefault) {
      transformString = "none";
    }
    return transformString;
  }
  function buildTransformOrigin(_a2) {
    var _b = _a2.originX, originX = _b === void 0 ? "50%" : _b, _c = _a2.originY, originY = _c === void 0 ? "50%" : _c, _d = _a2.originZ, originZ = _d === void 0 ? 0 : _d;
    return originX + " " + originY + " " + originZ;
  }
  function isCSSVariable$1(key) {
    return key.startsWith("--");
  }
  var getValueAsType = function(value, type) {
    return type && typeof value === "number" ? type.transform(value) : value;
  };
  function buildHTMLStyles(state, latestValues, options, transformTemplate) {
    var _a2;
    var style2 = state.style, vars = state.vars, transform3 = state.transform, transformKeys2 = state.transformKeys, transformOrigin = state.transformOrigin;
    transformKeys2.length = 0;
    var hasTransform2 = false;
    var hasTransformOrigin = false;
    var transformIsNone = true;
    for (var key in latestValues) {
      var value = latestValues[key];
      if (isCSSVariable$1(key)) {
        vars[key] = value;
        continue;
      }
      var valueType = numberValueTypes[key];
      var valueAsType = getValueAsType(value, valueType);
      if (isTransformProp(key)) {
        hasTransform2 = true;
        transform3[key] = valueAsType;
        transformKeys2.push(key);
        if (!transformIsNone)
          continue;
        if (value !== ((_a2 = valueType.default) !== null && _a2 !== void 0 ? _a2 : 0))
          transformIsNone = false;
      } else if (isTransformOriginProp(key)) {
        transformOrigin[key] = valueAsType;
        hasTransformOrigin = true;
      } else {
        style2[key] = valueAsType;
      }
    }
    if (hasTransform2) {
      style2.transform = buildTransform(state, options, transformIsNone, transformTemplate);
    } else if (transformTemplate) {
      style2.transform = transformTemplate({}, "");
    }
    if (hasTransformOrigin) {
      style2.transformOrigin = buildTransformOrigin(transformOrigin);
    }
  }
  var validMotionProps = /* @__PURE__ */ new Set([
    "initial",
    "animate",
    "exit",
    "style",
    "variants",
    "transition",
    "transformTemplate",
    "transformValues",
    "custom",
    "inherit",
    "layout",
    "layoutId",
    "onLayoutAnimationComplete",
    "onLayoutMeasure",
    "onBeforeLayoutMeasure",
    "onAnimationStart",
    "onAnimationComplete",
    "onUpdate",
    "onDragStart",
    "onDrag",
    "onDragEnd",
    "onMeasureDragConstraints",
    "onDirectionLock",
    "onDragTransitionEnd",
    "drag",
    "dragControls",
    "dragListener",
    "dragConstraints",
    "dragDirectionLock",
    "dragSnapToOrigin",
    "_dragX",
    "_dragY",
    "dragElastic",
    "dragMomentum",
    "dragPropagation",
    "dragTransition",
    "whileDrag",
    "onPan",
    "onPanStart",
    "onPanEnd",
    "onPanSessionStart",
    "onTap",
    "onTapStart",
    "onTapCancel",
    "onHoverStart",
    "onHoverEnd",
    "whileFocus",
    "whileTap",
    "whileHover",
    "layoutScroll"
  ]);
  function isValidMotionProp(key) {
    return validMotionProps.has(key);
  }
  var shouldForward = function(key) {
    return !isValidMotionProp(key);
  };
  try {
    emotionIsPropValid_1 = (init_is_prop_valid_esm(), __toCommonJS(is_prop_valid_esm_exports)).default;
    shouldForward = function(key) {
      if (key.startsWith("on")) {
        return !isValidMotionProp(key);
      } else {
        return emotionIsPropValid_1(key);
      }
    };
  } catch (_a2) {
  }
  var emotionIsPropValid_1;
  function calcOrigin$1(origin, offset2, size) {
    return typeof origin === "string" ? origin : px.transform(offset2 + size * origin);
  }
  function calcSVGTransformOrigin(dimensions, originX, originY) {
    var pxOriginX = calcOrigin$1(originX, dimensions.x, dimensions.width);
    var pxOriginY = calcOrigin$1(originY, dimensions.y, dimensions.height);
    return pxOriginX + " " + pxOriginY;
  }
  var dashKeys = {
    offset: "stroke-dashoffset",
    array: "stroke-dasharray"
  };
  var camelKeys = {
    offset: "strokeDashoffset",
    array: "strokeDasharray"
  };
  function buildSVGPath(attrs, length, spacing2, offset2, useDashCase) {
    if (spacing2 === void 0) {
      spacing2 = 1;
    }
    if (offset2 === void 0) {
      offset2 = 0;
    }
    if (useDashCase === void 0) {
      useDashCase = true;
    }
    attrs.pathLength = 1;
    var keys2 = useDashCase ? dashKeys : camelKeys;
    attrs[keys2.offset] = px.transform(-offset2);
    var pathLength = px.transform(length);
    var pathSpacing = px.transform(spacing2);
    attrs[keys2.array] = pathLength + " " + pathSpacing;
  }
  function buildSVGAttrs(state, _a2, options, transformTemplate) {
    var attrX = _a2.attrX, attrY = _a2.attrY, originX = _a2.originX, originY = _a2.originY, pathLength = _a2.pathLength, _b = _a2.pathSpacing, pathSpacing = _b === void 0 ? 1 : _b, _c = _a2.pathOffset, pathOffset = _c === void 0 ? 0 : _c, latest = __rest$2(_a2, ["attrX", "attrY", "originX", "originY", "pathLength", "pathSpacing", "pathOffset"]);
    buildHTMLStyles(state, latest, options, transformTemplate);
    state.attrs = state.style;
    state.style = {};
    var attrs = state.attrs, style2 = state.style, dimensions = state.dimensions;
    if (attrs.transform) {
      if (dimensions)
        style2.transform = attrs.transform;
      delete attrs.transform;
    }
    if (dimensions && (originX !== void 0 || originY !== void 0 || style2.transform)) {
      style2.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== void 0 ? originX : 0.5, originY !== void 0 ? originY : 0.5);
    }
    if (attrX !== void 0)
      attrs.x = attrX;
    if (attrY !== void 0)
      attrs.y = attrY;
    if (pathLength !== void 0) {
      buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);
    }
  }
  var CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g;
  var REPLACE_TEMPLATE = "$1-$2";
  var camelToDash = function(str) {
    return str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();
  };
  function renderHTML(element, _a2, styleProp, projection) {
    var style2 = _a2.style, vars = _a2.vars;
    Object.assign(element.style, style2, projection && projection.getProjectionStyles(styleProp));
    for (var key in vars) {
      element.style.setProperty(key, vars[key]);
    }
  }
  var camelCaseAttributes = /* @__PURE__ */ new Set([
    "baseFrequency",
    "diffuseConstant",
    "kernelMatrix",
    "kernelUnitLength",
    "keySplines",
    "keyTimes",
    "limitingConeAngle",
    "markerHeight",
    "markerWidth",
    "numOctaves",
    "targetX",
    "targetY",
    "surfaceScale",
    "specularConstant",
    "specularExponent",
    "stdDeviation",
    "tableValues",
    "viewBox",
    "gradientTransform",
    "pathLength"
  ]);
  function renderSVG(element, renderState) {
    renderHTML(element, renderState);
    for (var key in renderState.attrs) {
      element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);
    }
  }
  function scrapeMotionValuesFromProps$1(props) {
    var style2 = props.style;
    var newValues = {};
    for (var key in style2) {
      if (isMotionValue(style2[key]) || isForcedMotionValue(key, props)) {
        newValues[key] = style2[key];
      }
    }
    return newValues;
  }
  function scrapeMotionValuesFromProps(props) {
    var newValues = scrapeMotionValuesFromProps$1(props);
    for (var key in props) {
      if (isMotionValue(props[key])) {
        var targetKey = key === "x" || key === "y" ? "attr" + key.toUpperCase() : key;
        newValues[targetKey] = props[key];
      }
    }
    return newValues;
  }
  function isAnimationControls(v2) {
    return typeof v2 === "object" && typeof v2.start === "function";
  }
  var AnimationType;
  (function(AnimationType2) {
    AnimationType2["Animate"] = "animate";
    AnimationType2["Hover"] = "whileHover";
    AnimationType2["Tap"] = "whileTap";
    AnimationType2["Drag"] = "whileDrag";
    AnimationType2["Focus"] = "whileFocus";
    AnimationType2["Exit"] = "exit";
  })(AnimationType || (AnimationType = {}));
  function addDomEvent(target, eventName, handler, options) {
    target.addEventListener(eventName, handler, options);
    return function() {
      return target.removeEventListener(eventName, handler, options);
    };
  }
  function useDomEvent(ref, eventName, handler, options) {
    React__default.useEffect(function() {
      var element = ref.current;
      if (handler && element) {
        return addDomEvent(element, eventName, handler, options);
      }
    }, [ref, eventName, handler, options]);
  }
  function useFocusGesture(_a2) {
    var whileFocus = _a2.whileFocus, visualElement2 = _a2.visualElement;
    var onFocus = function() {
      var _a3;
      (_a3 = visualElement2.animationState) === null || _a3 === void 0 ? void 0 : _a3.setActive(AnimationType.Focus, true);
    };
    var onBlur = function() {
      var _a3;
      (_a3 = visualElement2.animationState) === null || _a3 === void 0 ? void 0 : _a3.setActive(AnimationType.Focus, false);
    };
    useDomEvent(visualElement2, "focus", whileFocus ? onFocus : void 0);
    useDomEvent(visualElement2, "blur", whileFocus ? onBlur : void 0);
  }
  function isMouseEvent(event) {
    if (typeof PointerEvent !== "undefined" && event instanceof PointerEvent) {
      return !!(event.pointerType === "mouse");
    }
    return event instanceof MouseEvent;
  }
  function isTouchEvent(event) {
    var hasTouches = !!event.touches;
    return hasTouches;
  }
  function filterPrimaryPointer(eventHandler) {
    return function(event) {
      var isMouseEvent2 = event instanceof MouseEvent;
      var isPrimaryPointer = !isMouseEvent2 || isMouseEvent2 && event.button === 0;
      if (isPrimaryPointer) {
        eventHandler(event);
      }
    };
  }
  var defaultPagePoint = { pageX: 0, pageY: 0 };
  function pointFromTouch(e2, pointType) {
    if (pointType === void 0) {
      pointType = "page";
    }
    var primaryTouch = e2.touches[0] || e2.changedTouches[0];
    var point = primaryTouch || defaultPagePoint;
    return {
      x: point[pointType + "X"],
      y: point[pointType + "Y"]
    };
  }
  function pointFromMouse(point, pointType) {
    if (pointType === void 0) {
      pointType = "page";
    }
    return {
      x: point[pointType + "X"],
      y: point[pointType + "Y"]
    };
  }
  function extractEventInfo(event, pointType) {
    if (pointType === void 0) {
      pointType = "page";
    }
    return {
      point: isTouchEvent(event) ? pointFromTouch(event, pointType) : pointFromMouse(event, pointType)
    };
  }
  var wrapHandler = function(handler, shouldFilterPrimaryPointer) {
    if (shouldFilterPrimaryPointer === void 0) {
      shouldFilterPrimaryPointer = false;
    }
    var listener = function(event) {
      return handler(event, extractEventInfo(event));
    };
    return shouldFilterPrimaryPointer ? filterPrimaryPointer(listener) : listener;
  };
  var supportsPointerEvents = function() {
    return isBrowser && window.onpointerdown === null;
  };
  var supportsTouchEvents = function() {
    return isBrowser && window.ontouchstart === null;
  };
  var supportsMouseEvents = function() {
    return isBrowser && window.onmousedown === null;
  };
  var mouseEventNames = {
    pointerdown: "mousedown",
    pointermove: "mousemove",
    pointerup: "mouseup",
    pointercancel: "mousecancel",
    pointerover: "mouseover",
    pointerout: "mouseout",
    pointerenter: "mouseenter",
    pointerleave: "mouseleave"
  };
  var touchEventNames = {
    pointerdown: "touchstart",
    pointermove: "touchmove",
    pointerup: "touchend",
    pointercancel: "touchcancel"
  };
  function getPointerEventName(name) {
    if (supportsPointerEvents()) {
      return name;
    } else if (supportsTouchEvents()) {
      return touchEventNames[name];
    } else if (supportsMouseEvents()) {
      return mouseEventNames[name];
    }
    return name;
  }
  function addPointerEvent(target, eventName, handler, options) {
    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === "pointerdown"), options);
  }
  function usePointerEvent(ref, eventName, handler, options) {
    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === "pointerdown"), options);
  }
  function createLock(name) {
    var lock = null;
    return function() {
      var openLock = function() {
        lock = null;
      };
      if (lock === null) {
        lock = name;
        return openLock;
      }
      return false;
    };
  }
  var globalHorizontalLock = createLock("dragHorizontal");
  var globalVerticalLock = createLock("dragVertical");
  function getGlobalLock(drag2) {
    var lock = false;
    if (drag2 === "y") {
      lock = globalVerticalLock();
    } else if (drag2 === "x") {
      lock = globalHorizontalLock();
    } else {
      var openHorizontal_1 = globalHorizontalLock();
      var openVertical_1 = globalVerticalLock();
      if (openHorizontal_1 && openVertical_1) {
        lock = function() {
          openHorizontal_1();
          openVertical_1();
        };
      } else {
        if (openHorizontal_1)
          openHorizontal_1();
        if (openVertical_1)
          openVertical_1();
      }
    }
    return lock;
  }
  function isDragActive() {
    var openGestureLock = getGlobalLock(true);
    if (!openGestureLock)
      return true;
    openGestureLock();
    return false;
  }
  function createHoverEvent(visualElement2, isActive, callback) {
    return function(event, info) {
      var _a2;
      if (!isMouseEvent(event) || isDragActive())
        return;
      callback === null || callback === void 0 ? void 0 : callback(event, info);
      (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Hover, isActive);
    };
  }
  function useHoverGesture(_a2) {
    var onHoverStart = _a2.onHoverStart, onHoverEnd = _a2.onHoverEnd, whileHover = _a2.whileHover, visualElement2 = _a2.visualElement;
    usePointerEvent(visualElement2, "pointerenter", onHoverStart || whileHover ? createHoverEvent(visualElement2, true, onHoverStart) : void 0);
    usePointerEvent(visualElement2, "pointerleave", onHoverEnd || whileHover ? createHoverEvent(visualElement2, false, onHoverEnd) : void 0);
  }
  var isNodeOrChild = function(parent, child) {
    if (!child) {
      return false;
    } else if (parent === child) {
      return true;
    } else {
      return isNodeOrChild(parent, child.parentElement);
    }
  };
  function useUnmountEffect(callback) {
    return React__default.useEffect(function() {
      return function() {
        return callback();
      };
    }, []);
  }
  function useTapGesture(_a2) {
    var onTap = _a2.onTap, onTapStart = _a2.onTapStart, onTapCancel = _a2.onTapCancel, whileTap = _a2.whileTap, visualElement2 = _a2.visualElement;
    var hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;
    var isPressing = React__default.useRef(false);
    var cancelPointerEndListeners = React__default.useRef(null);
    function removePointerEndListener() {
      var _a3;
      (_a3 = cancelPointerEndListeners.current) === null || _a3 === void 0 ? void 0 : _a3.call(cancelPointerEndListeners);
      cancelPointerEndListeners.current = null;
    }
    function checkPointerEnd() {
      var _a3;
      removePointerEndListener();
      isPressing.current = false;
      (_a3 = visualElement2.animationState) === null || _a3 === void 0 ? void 0 : _a3.setActive(AnimationType.Tap, false);
      return !isDragActive();
    }
    function onPointerUp(event, info) {
      if (!checkPointerEnd())
        return;
      !isNodeOrChild(visualElement2.getInstance(), event.target) ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info) : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);
    }
    function onPointerCancel(event, info) {
      if (!checkPointerEnd())
        return;
      onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);
    }
    function onPointerDown(event, info) {
      var _a3;
      removePointerEndListener();
      if (isPressing.current)
        return;
      isPressing.current = true;
      cancelPointerEndListeners.current = pipe(addPointerEvent(window, "pointerup", onPointerUp), addPointerEvent(window, "pointercancel", onPointerCancel));
      onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);
      (_a3 = visualElement2.animationState) === null || _a3 === void 0 ? void 0 : _a3.setActive(AnimationType.Tap, true);
    }
    usePointerEvent(visualElement2, "pointerdown", hasPressListeners ? onPointerDown : void 0);
    useUnmountEffect(removePointerEndListener);
  }
  var makeRenderlessComponent = function(hook) {
    return function(props) {
      hook(props);
      return null;
    };
  };
  var gestureAnimations = {
    tap: makeRenderlessComponent(useTapGesture),
    focus: makeRenderlessComponent(useFocusGesture),
    hover: makeRenderlessComponent(useHoverGesture)
  };
  function usePresence() {
    var context = React__default.useContext(PresenceContext);
    if (context === null)
      return [true, null];
    var isPresent = context.isPresent, onExitComplete = context.onExitComplete, register = context.register;
    var id2 = useUniqueId();
    React__default.useEffect(function() {
      return register(id2);
    }, []);
    var safeToRemove = function() {
      return onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete(id2);
    };
    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];
  }
  var counter = 0;
  var incrementId = function() {
    return counter++;
  };
  var useUniqueId = function() {
    return useConstant$1(incrementId);
  };
  function shallowCompare$1(next, prev) {
    if (!Array.isArray(prev))
      return false;
    var prevLength = prev.length;
    if (prevLength !== next.length)
      return false;
    for (var i2 = 0; i2 < prevLength; i2++) {
      if (prev[i2] !== next[i2])
        return false;
    }
    return true;
  }
  var isNumericalString = function(v2) {
    return /^\-?\d*\.?\d+$/.test(v2);
  };
  var isZeroValueString = function(v2) {
    return /^0[^.\s]+$/.test(v2);
  };
  var testValueType = function(v2) {
    return function(type) {
      return type.test(v2);
    };
  };
  var auto = {
    test: function(v2) {
      return v2 === "auto";
    },
    parse: function(v2) {
      return v2;
    }
  };
  var dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];
  var findDimensionValueType = function(v2) {
    return dimensionValueTypes.find(testValueType(v2));
  };
  var valueTypes = __spreadArray$2(__spreadArray$2([], __read$5(dimensionValueTypes), false), [color$2, complex], false);
  var findValueType = function(v2) {
    return valueTypes.find(testValueType(v2));
  };
  function setMotionValue(visualElement2, key, value) {
    if (visualElement2.hasValue(key)) {
      visualElement2.getValue(key).set(value);
    } else {
      visualElement2.addValue(key, motionValue(value));
    }
  }
  function setTarget(visualElement2, definition) {
    var resolved = resolveVariant(visualElement2, definition);
    var _a2 = resolved ? visualElement2.makeTargetAnimatable(resolved, false) : {}, _b = _a2.transitionEnd, transitionEnd2 = _b === void 0 ? {} : _b;
    _a2.transition;
    var target = __rest$2(_a2, ["transitionEnd", "transition"]);
    target = __assign$2(__assign$2({}, target), transitionEnd2);
    for (var key in target) {
      var value = resolveFinalValueInKeyframes(target[key]);
      setMotionValue(visualElement2, key, value);
    }
  }
  function checkTargetForNewValues(visualElement2, target, origin) {
    var _a2, _b, _c;
    var _d;
    var newValueKeys = Object.keys(target).filter(function(key2) {
      return !visualElement2.hasValue(key2);
    });
    var numNewValues = newValueKeys.length;
    if (!numNewValues)
      return;
    for (var i2 = 0; i2 < numNewValues; i2++) {
      var key = newValueKeys[i2];
      var targetValue = target[key];
      var value = null;
      if (Array.isArray(targetValue)) {
        value = targetValue[0];
      }
      if (value === null) {
        value = (_b = (_a2 = origin[key]) !== null && _a2 !== void 0 ? _a2 : visualElement2.readValue(key)) !== null && _b !== void 0 ? _b : target[key];
      }
      if (value === void 0 || value === null)
        continue;
      if (typeof value === "string" && (isNumericalString(value) || isZeroValueString(value))) {
        value = parseFloat(value);
      } else if (!findValueType(value) && complex.test(targetValue)) {
        value = getAnimatableNone(key, targetValue);
      }
      visualElement2.addValue(key, motionValue(value));
      (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : _d[key] = value;
      visualElement2.setBaseTarget(key, value);
    }
  }
  function getOriginFromTransition(key, transition2) {
    if (!transition2)
      return;
    var valueTransition = transition2[key] || transition2["default"] || transition2;
    return valueTransition.from;
  }
  function getOrigin(target, transition2, visualElement2) {
    var _a2, _b;
    var origin = {};
    for (var key in target) {
      origin[key] = (_a2 = getOriginFromTransition(key, transition2)) !== null && _a2 !== void 0 ? _a2 : (_b = visualElement2.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();
    }
    return origin;
  }
  function animateVisualElement(visualElement2, definition, options) {
    if (options === void 0) {
      options = {};
    }
    visualElement2.notifyAnimationStart(definition);
    var animation;
    if (Array.isArray(definition)) {
      var animations2 = definition.map(function(variant) {
        return animateVariant(visualElement2, variant, options);
      });
      animation = Promise.all(animations2);
    } else if (typeof definition === "string") {
      animation = animateVariant(visualElement2, definition, options);
    } else {
      var resolvedDefinition = typeof definition === "function" ? resolveVariant(visualElement2, definition, options.custom) : definition;
      animation = animateTarget(visualElement2, resolvedDefinition, options);
    }
    return animation.then(function() {
      return visualElement2.notifyAnimationComplete(definition);
    });
  }
  function animateVariant(visualElement2, variant, options) {
    var _a2;
    if (options === void 0) {
      options = {};
    }
    var resolved = resolveVariant(visualElement2, variant, options.custom);
    var _b = (resolved || {}).transition, transition2 = _b === void 0 ? visualElement2.getDefaultTransition() || {} : _b;
    if (options.transitionOverride) {
      transition2 = options.transitionOverride;
    }
    var getAnimation2 = resolved ? function() {
      return animateTarget(visualElement2, resolved, options);
    } : function() {
      return Promise.resolve();
    };
    var getChildAnimations = ((_a2 = visualElement2.variantChildren) === null || _a2 === void 0 ? void 0 : _a2.size) ? function(forwardDelay) {
      if (forwardDelay === void 0) {
        forwardDelay = 0;
      }
      var _a3 = transition2.delayChildren, delayChildren = _a3 === void 0 ? 0 : _a3, staggerChildren = transition2.staggerChildren, staggerDirection = transition2.staggerDirection;
      return animateChildren(visualElement2, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);
    } : function() {
      return Promise.resolve();
    };
    var when = transition2.when;
    if (when) {
      var _c = __read$5(when === "beforeChildren" ? [getAnimation2, getChildAnimations] : [getChildAnimations, getAnimation2], 2), first = _c[0], last = _c[1];
      return first().then(last);
    } else {
      return Promise.all([getAnimation2(), getChildAnimations(options.delay)]);
    }
  }
  function animateTarget(visualElement2, definition, _a2) {
    var _b;
    var _c = _a2 === void 0 ? {} : _a2, _d = _c.delay, delay = _d === void 0 ? 0 : _d, transitionOverride = _c.transitionOverride, type = _c.type;
    var _e = visualElement2.makeTargetAnimatable(definition), _f = _e.transition, transition2 = _f === void 0 ? visualElement2.getDefaultTransition() : _f, transitionEnd2 = _e.transitionEnd, target = __rest$2(_e, ["transition", "transitionEnd"]);
    if (transitionOverride)
      transition2 = transitionOverride;
    var animations2 = [];
    var animationTypeState = type && ((_b = visualElement2.animationState) === null || _b === void 0 ? void 0 : _b.getState()[type]);
    for (var key in target) {
      var value = visualElement2.getValue(key);
      var valueTarget = target[key];
      if (!value || valueTarget === void 0 || animationTypeState && shouldBlockAnimation(animationTypeState, key)) {
        continue;
      }
      var animation = startAnimation(key, value, valueTarget, __assign$2({ delay }, transition2));
      animations2.push(animation);
    }
    return Promise.all(animations2).then(function() {
      transitionEnd2 && setTarget(visualElement2, transitionEnd2);
    });
  }
  function animateChildren(visualElement2, variant, delayChildren, staggerChildren, staggerDirection, options) {
    if (delayChildren === void 0) {
      delayChildren = 0;
    }
    if (staggerChildren === void 0) {
      staggerChildren = 0;
    }
    if (staggerDirection === void 0) {
      staggerDirection = 1;
    }
    var animations2 = [];
    var maxStaggerDuration = (visualElement2.variantChildren.size - 1) * staggerChildren;
    var generateStaggerDuration = staggerDirection === 1 ? function(i2) {
      if (i2 === void 0) {
        i2 = 0;
      }
      return i2 * staggerChildren;
    } : function(i2) {
      if (i2 === void 0) {
        i2 = 0;
      }
      return maxStaggerDuration - i2 * staggerChildren;
    };
    Array.from(visualElement2.variantChildren).sort(sortByTreeOrder).forEach(function(child, i2) {
      animations2.push(animateVariant(child, variant, __assign$2(__assign$2({}, options), { delay: delayChildren + generateStaggerDuration(i2) })).then(function() {
        return child.notifyAnimationComplete(variant);
      }));
    });
    return Promise.all(animations2);
  }
  function sortByTreeOrder(a2, b2) {
    return a2.sortNodePosition(b2);
  }
  function shouldBlockAnimation(_a2, key) {
    var protectedKeys = _a2.protectedKeys, needsAnimating = _a2.needsAnimating;
    var shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;
    needsAnimating[key] = false;
    return shouldBlock;
  }
  var variantPriorityOrder = [
    AnimationType.Animate,
    AnimationType.Focus,
    AnimationType.Hover,
    AnimationType.Tap,
    AnimationType.Drag,
    AnimationType.Exit
  ];
  var reversePriorityOrder = __spreadArray$2([], __read$5(variantPriorityOrder), false).reverse();
  var numAnimationTypes = variantPriorityOrder.length;
  function animateList(visualElement2) {
    return function(animations2) {
      return Promise.all(animations2.map(function(_a2) {
        var animation = _a2.animation, options = _a2.options;
        return animateVisualElement(visualElement2, animation, options);
      }));
    };
  }
  function createAnimationState(visualElement2) {
    var animate2 = animateList(visualElement2);
    var state = createState();
    var allAnimatedKeys = {};
    var isInitialRender = true;
    var buildResolvedTypeValues = function(acc, definition) {
      var resolved = resolveVariant(visualElement2, definition);
      if (resolved) {
        resolved.transition;
        var transitionEnd2 = resolved.transitionEnd, target = __rest$2(resolved, ["transition", "transitionEnd"]);
        acc = __assign$2(__assign$2(__assign$2({}, acc), target), transitionEnd2);
      }
      return acc;
    };
    function isAnimated(key) {
      return allAnimatedKeys[key] !== void 0;
    }
    function setAnimateFunction(makeAnimator) {
      animate2 = makeAnimator(visualElement2);
    }
    function animateChanges(options, changedActiveType) {
      var _a2;
      var props = visualElement2.getProps();
      var context = visualElement2.getVariantContext(true) || {};
      var animations2 = [];
      var removedKeys = /* @__PURE__ */ new Set();
      var encounteredKeys = {};
      var removedVariantIndex = Infinity;
      var _loop_1 = function(i3) {
        var type = reversePriorityOrder[i3];
        var typeState = state[type];
        var prop = (_a2 = props[type]) !== null && _a2 !== void 0 ? _a2 : context[type];
        var propIsVariant = isVariantLabel(prop);
        var activeDelta = type === changedActiveType ? typeState.isActive : null;
        if (activeDelta === false)
          removedVariantIndex = i3;
        var isInherited = prop === context[type] && prop !== props[type] && propIsVariant;
        if (isInherited && isInitialRender && visualElement2.manuallyAnimateOnMount) {
          isInherited = false;
        }
        typeState.protectedKeys = __assign$2({}, encounteredKeys);
        if (!typeState.isActive && activeDelta === null || !prop && !typeState.prevProp || isAnimationControls(prop) || typeof prop === "boolean") {
          return "continue";
        }
        var shouldAnimateType = variantsHaveChanged(typeState.prevProp, prop) || type === changedActiveType && typeState.isActive && !isInherited && propIsVariant || i3 > removedVariantIndex && propIsVariant;
        var definitionList = Array.isArray(prop) ? prop : [prop];
        var resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});
        if (activeDelta === false)
          resolvedValues = {};
        var _b = typeState.prevResolvedValues, prevResolvedValues = _b === void 0 ? {} : _b;
        var allKeys = __assign$2(__assign$2({}, prevResolvedValues), resolvedValues);
        var markToAnimate = function(key2) {
          shouldAnimateType = true;
          removedKeys.delete(key2);
          typeState.needsAnimating[key2] = true;
        };
        for (var key in allKeys) {
          var next = resolvedValues[key];
          var prev = prevResolvedValues[key];
          if (encounteredKeys.hasOwnProperty(key))
            continue;
          if (next !== prev) {
            if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {
              if (!shallowCompare$1(next, prev)) {
                markToAnimate(key);
              } else {
                typeState.protectedKeys[key] = true;
              }
            } else if (next !== void 0) {
              markToAnimate(key);
            } else {
              removedKeys.add(key);
            }
          } else if (next !== void 0 && removedKeys.has(key)) {
            markToAnimate(key);
          } else {
            typeState.protectedKeys[key] = true;
          }
        }
        typeState.prevProp = prop;
        typeState.prevResolvedValues = resolvedValues;
        if (typeState.isActive) {
          encounteredKeys = __assign$2(__assign$2({}, encounteredKeys), resolvedValues);
        }
        if (isInitialRender && visualElement2.blockInitialAnimation) {
          shouldAnimateType = false;
        }
        if (shouldAnimateType && !isInherited) {
          animations2.push.apply(animations2, __spreadArray$2([], __read$5(definitionList.map(function(animation) {
            return {
              animation,
              options: __assign$2({ type }, options)
            };
          })), false));
        }
      };
      for (var i2 = 0; i2 < numAnimationTypes; i2++) {
        _loop_1(i2);
      }
      allAnimatedKeys = __assign$2({}, encounteredKeys);
      if (removedKeys.size) {
        var fallbackAnimation_1 = {};
        removedKeys.forEach(function(key) {
          var fallbackTarget = visualElement2.getBaseTarget(key);
          if (fallbackTarget !== void 0) {
            fallbackAnimation_1[key] = fallbackTarget;
          }
        });
        animations2.push({ animation: fallbackAnimation_1 });
      }
      var shouldAnimate = Boolean(animations2.length);
      if (isInitialRender && props.initial === false && !visualElement2.manuallyAnimateOnMount) {
        shouldAnimate = false;
      }
      isInitialRender = false;
      return shouldAnimate ? animate2(animations2) : Promise.resolve();
    }
    function setActive(type, isActive, options) {
      var _a2;
      if (state[type].isActive === isActive)
        return Promise.resolve();
      (_a2 = visualElement2.variantChildren) === null || _a2 === void 0 ? void 0 : _a2.forEach(function(child) {
        var _a3;
        return (_a3 = child.animationState) === null || _a3 === void 0 ? void 0 : _a3.setActive(type, isActive);
      });
      state[type].isActive = isActive;
      return animateChanges(options, type);
    }
    return {
      isAnimated,
      animateChanges,
      setActive,
      setAnimateFunction,
      getState: function() {
        return state;
      }
    };
  }
  function variantsHaveChanged(prev, next) {
    if (typeof next === "string") {
      return next !== prev;
    } else if (isVariantLabels(next)) {
      return !shallowCompare$1(next, prev);
    }
    return false;
  }
  function createTypeState(isActive) {
    if (isActive === void 0) {
      isActive = false;
    }
    return {
      isActive,
      protectedKeys: {},
      needsAnimating: {},
      prevResolvedValues: {}
    };
  }
  function createState() {
    var _a2;
    return _a2 = {}, _a2[AnimationType.Animate] = createTypeState(true), _a2[AnimationType.Hover] = createTypeState(), _a2[AnimationType.Tap] = createTypeState(), _a2[AnimationType.Drag] = createTypeState(), _a2[AnimationType.Focus] = createTypeState(), _a2[AnimationType.Exit] = createTypeState(), _a2;
  }
  var animations = {
    animation: makeRenderlessComponent(function(_a2) {
      var visualElement2 = _a2.visualElement, animate2 = _a2.animate;
      visualElement2.animationState || (visualElement2.animationState = createAnimationState(visualElement2));
      if (isAnimationControls(animate2)) {
        React__default.useEffect(function() {
          return animate2.subscribe(visualElement2);
        }, [animate2]);
      }
    }),
    exit: makeRenderlessComponent(function(props) {
      var custom = props.custom, visualElement2 = props.visualElement;
      var _a2 = __read$5(usePresence(), 2), isPresent = _a2[0], safeToRemove = _a2[1];
      var presenceContext = React__default.useContext(PresenceContext);
      React__default.useEffect(function() {
        var _a3, _b;
        visualElement2.isPresent = isPresent;
        var animation = (_a3 = visualElement2.animationState) === null || _a3 === void 0 ? void 0 : _a3.setActive(AnimationType.Exit, !isPresent, { custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom });
        !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(safeToRemove));
      }, [isPresent]);
    })
  };
  var PanSession = function() {
    function PanSession2(event, handlers, _a2) {
      var _this = this;
      var _b = _a2 === void 0 ? {} : _a2, transformPagePoint = _b.transformPagePoint;
      this.startEvent = null;
      this.lastMoveEvent = null;
      this.lastMoveEventInfo = null;
      this.handlers = {};
      this.updatePoint = function() {
        if (!(_this.lastMoveEvent && _this.lastMoveEventInfo))
          return;
        var info2 = getPanInfo(_this.lastMoveEventInfo, _this.history);
        var isPanStarted = _this.startEvent !== null;
        var isDistancePastThreshold = distance(info2.offset, { x: 0, y: 0 }) >= 3;
        if (!isPanStarted && !isDistancePastThreshold)
          return;
        var point2 = info2.point;
        var timestamp2 = getFrameData().timestamp;
        _this.history.push(__assign$2(__assign$2({}, point2), { timestamp: timestamp2 }));
        var _a3 = _this.handlers, onStart = _a3.onStart, onMove = _a3.onMove;
        if (!isPanStarted) {
          onStart && onStart(_this.lastMoveEvent, info2);
          _this.startEvent = _this.lastMoveEvent;
        }
        onMove && onMove(_this.lastMoveEvent, info2);
      };
      this.handlePointerMove = function(event2, info2) {
        _this.lastMoveEvent = event2;
        _this.lastMoveEventInfo = transformPoint(info2, _this.transformPagePoint);
        if (isMouseEvent(event2) && event2.buttons === 0) {
          _this.handlePointerUp(event2, info2);
          return;
        }
        sync.update(_this.updatePoint, true);
      };
      this.handlePointerUp = function(event2, info2) {
        _this.end();
        var _a3 = _this.handlers, onEnd = _a3.onEnd, onSessionEnd = _a3.onSessionEnd;
        var panInfo = getPanInfo(transformPoint(info2, _this.transformPagePoint), _this.history);
        if (_this.startEvent && onEnd) {
          onEnd(event2, panInfo);
        }
        onSessionEnd && onSessionEnd(event2, panInfo);
      };
      if (isTouchEvent(event) && event.touches.length > 1)
        return;
      this.handlers = handlers;
      this.transformPagePoint = transformPagePoint;
      var info = extractEventInfo(event);
      var initialInfo = transformPoint(info, this.transformPagePoint);
      var point = initialInfo.point;
      var timestamp = getFrameData().timestamp;
      this.history = [__assign$2(__assign$2({}, point), { timestamp })];
      var onSessionStart = handlers.onSessionStart;
      onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history));
      this.removeListeners = pipe(addPointerEvent(window, "pointermove", this.handlePointerMove), addPointerEvent(window, "pointerup", this.handlePointerUp), addPointerEvent(window, "pointercancel", this.handlePointerUp));
    }
    PanSession2.prototype.updateHandlers = function(handlers) {
      this.handlers = handlers;
    };
    PanSession2.prototype.end = function() {
      this.removeListeners && this.removeListeners();
      cancelSync.update(this.updatePoint);
    };
    return PanSession2;
  }();
  function transformPoint(info, transformPagePoint) {
    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;
  }
  function subtractPoint(a2, b2) {
    return { x: a2.x - b2.x, y: a2.y - b2.y };
  }
  function getPanInfo(_a2, history) {
    var point = _a2.point;
    return {
      point,
      delta: subtractPoint(point, lastDevicePoint(history)),
      offset: subtractPoint(point, startDevicePoint(history)),
      velocity: getVelocity(history, 0.1)
    };
  }
  function startDevicePoint(history) {
    return history[0];
  }
  function lastDevicePoint(history) {
    return history[history.length - 1];
  }
  function getVelocity(history, timeDelta) {
    if (history.length < 2) {
      return { x: 0, y: 0 };
    }
    var i2 = history.length - 1;
    var timestampedPoint = null;
    var lastPoint = lastDevicePoint(history);
    while (i2 >= 0) {
      timestampedPoint = history[i2];
      if (lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta)) {
        break;
      }
      i2--;
    }
    if (!timestampedPoint) {
      return { x: 0, y: 0 };
    }
    var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1e3;
    if (time === 0) {
      return { x: 0, y: 0 };
    }
    var currentVelocity = {
      x: (lastPoint.x - timestampedPoint.x) / time,
      y: (lastPoint.y - timestampedPoint.y) / time
    };
    if (currentVelocity.x === Infinity) {
      currentVelocity.x = 0;
    }
    if (currentVelocity.y === Infinity) {
      currentVelocity.y = 0;
    }
    return currentVelocity;
  }
  function applyConstraints(point, _a2, elastic) {
    var min2 = _a2.min, max2 = _a2.max;
    if (min2 !== void 0 && point < min2) {
      point = elastic ? mix(min2, point, elastic.min) : Math.max(point, min2);
    } else if (max2 !== void 0 && point > max2) {
      point = elastic ? mix(max2, point, elastic.max) : Math.min(point, max2);
    }
    return point;
  }
  function calcRelativeAxisConstraints(axis, min2, max2) {
    return {
      min: min2 !== void 0 ? axis.min + min2 : void 0,
      max: max2 !== void 0 ? axis.max + max2 - (axis.max - axis.min) : void 0
    };
  }
  function calcRelativeConstraints(layoutBox, _a2) {
    var top2 = _a2.top, left2 = _a2.left, bottom2 = _a2.bottom, right2 = _a2.right;
    return {
      x: calcRelativeAxisConstraints(layoutBox.x, left2, right2),
      y: calcRelativeAxisConstraints(layoutBox.y, top2, bottom2)
    };
  }
  function calcViewportAxisConstraints(layoutAxis, constraintsAxis) {
    var _a2;
    var min2 = constraintsAxis.min - layoutAxis.min;
    var max2 = constraintsAxis.max - layoutAxis.max;
    if (constraintsAxis.max - constraintsAxis.min < layoutAxis.max - layoutAxis.min) {
      _a2 = __read$5([max2, min2], 2), min2 = _a2[0], max2 = _a2[1];
    }
    return { min: min2, max: max2 };
  }
  function calcViewportConstraints(layoutBox, constraintsBox) {
    return {
      x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),
      y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y)
    };
  }
  function calcOrigin(source, target) {
    var origin = 0.5;
    var sourceLength = calcLength(source);
    var targetLength = calcLength(target);
    if (targetLength > sourceLength) {
      origin = progress(target.min, target.max - sourceLength, source.min);
    } else if (sourceLength > targetLength) {
      origin = progress(source.min, source.max - targetLength, target.min);
    }
    return clamp$1(0, 1, origin);
  }
  function rebaseAxisConstraints(layout, constraints) {
    var relativeConstraints = {};
    if (constraints.min !== void 0) {
      relativeConstraints.min = constraints.min - layout.min;
    }
    if (constraints.max !== void 0) {
      relativeConstraints.max = constraints.max - layout.min;
    }
    return relativeConstraints;
  }
  var defaultElastic = 0.35;
  function resolveDragElastic(dragElastic) {
    if (dragElastic === void 0) {
      dragElastic = defaultElastic;
    }
    if (dragElastic === false) {
      dragElastic = 0;
    } else if (dragElastic === true) {
      dragElastic = defaultElastic;
    }
    return {
      x: resolveAxisElastic(dragElastic, "left", "right"),
      y: resolveAxisElastic(dragElastic, "top", "bottom")
    };
  }
  function resolveAxisElastic(dragElastic, minLabel, maxLabel) {
    return {
      min: resolvePointElastic(dragElastic, minLabel),
      max: resolvePointElastic(dragElastic, maxLabel)
    };
  }
  function resolvePointElastic(dragElastic, label) {
    var _a2;
    return typeof dragElastic === "number" ? dragElastic : (_a2 = dragElastic[label]) !== null && _a2 !== void 0 ? _a2 : 0;
  }
  function convertBoundingBoxToBox(_a2) {
    var top2 = _a2.top, left2 = _a2.left, right2 = _a2.right, bottom2 = _a2.bottom;
    return {
      x: { min: left2, max: right2 },
      y: { min: top2, max: bottom2 }
    };
  }
  function convertBoxToBoundingBox(_a2) {
    var x2 = _a2.x, y2 = _a2.y;
    return { top: y2.min, right: x2.max, bottom: y2.max, left: x2.min };
  }
  function transformBoxPoints(point, transformPoint2) {
    if (!transformPoint2)
      return point;
    var topLeft = transformPoint2({ x: point.left, y: point.top });
    var bottomRight = transformPoint2({ x: point.right, y: point.bottom });
    return {
      top: topLeft.y,
      left: topLeft.x,
      bottom: bottomRight.y,
      right: bottomRight.x
    };
  }
  function measureViewportBox(instance, transformPoint2) {
    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint2));
  }
  function measurePageBox(element, rootProjectionNode2, transformPagePoint) {
    var viewportBox = measureViewportBox(element, transformPagePoint);
    var scroll = rootProjectionNode2.scroll;
    if (scroll) {
      translateAxis(viewportBox.x, scroll.x);
      translateAxis(viewportBox.y, scroll.y);
    }
    return viewportBox;
  }
  var elementDragControls = /* @__PURE__ */ new WeakMap();
  var VisualElementDragControls = function() {
    function VisualElementDragControls2(visualElement2) {
      this.openGlobalLock = null;
      this.isDragging = false;
      this.currentDirection = null;
      this.originPoint = { x: 0, y: 0 };
      this.constraints = false;
      this.hasMutatedConstraints = false;
      this.elastic = createBox();
      this.visualElement = visualElement2;
    }
    VisualElementDragControls2.prototype.start = function(originEvent, _a2) {
      var _this = this;
      var _b = _a2 === void 0 ? {} : _a2, _c = _b.snapToCursor, snapToCursor = _c === void 0 ? false : _c;
      if (this.visualElement.isPresent === false)
        return;
      var onSessionStart = function(event) {
        _this.stopAnimation();
        if (snapToCursor) {
          _this.snapToCursor(extractEventInfo(event, "page").point);
        }
      };
      var onStart = function(event, info) {
        var _a3;
        var _b2 = _this.getProps(), drag2 = _b2.drag, dragPropagation = _b2.dragPropagation, onDragStart = _b2.onDragStart;
        if (drag2 && !dragPropagation) {
          if (_this.openGlobalLock)
            _this.openGlobalLock();
          _this.openGlobalLock = getGlobalLock(drag2);
          if (!_this.openGlobalLock)
            return;
        }
        _this.isDragging = true;
        _this.currentDirection = null;
        _this.resolveConstraints();
        if (_this.visualElement.projection) {
          _this.visualElement.projection.isAnimationBlocked = true;
          _this.visualElement.projection.target = void 0;
        }
        eachAxis(function(axis) {
          var _a4, _b3;
          var current = _this.getAxisMotionValue(axis).get() || 0;
          if (percent.test(current)) {
            var measuredAxis = (_b3 = (_a4 = _this.visualElement.projection) === null || _a4 === void 0 ? void 0 : _a4.layout) === null || _b3 === void 0 ? void 0 : _b3.actual[axis];
            if (measuredAxis) {
              var length_1 = calcLength(measuredAxis);
              current = length_1 * (parseFloat(current) / 100);
            }
          }
          _this.originPoint[axis] = current;
        });
        onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);
        (_a3 = _this.visualElement.animationState) === null || _a3 === void 0 ? void 0 : _a3.setActive(AnimationType.Drag, true);
      };
      var onMove = function(event, info) {
        var _a3 = _this.getProps(), dragPropagation = _a3.dragPropagation, dragDirectionLock = _a3.dragDirectionLock, onDirectionLock = _a3.onDirectionLock, onDrag = _a3.onDrag;
        if (!dragPropagation && !_this.openGlobalLock)
          return;
        var offset2 = info.offset;
        if (dragDirectionLock && _this.currentDirection === null) {
          _this.currentDirection = getCurrentDirection(offset2);
          if (_this.currentDirection !== null) {
            onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(_this.currentDirection);
          }
          return;
        }
        _this.updateAxis("x", info.point, offset2);
        _this.updateAxis("y", info.point, offset2);
        _this.visualElement.syncRender();
        onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);
      };
      var onSessionEnd = function(event, info) {
        return _this.stop(event, info);
      };
      this.panSession = new PanSession(originEvent, {
        onSessionStart,
        onStart,
        onMove,
        onSessionEnd
      }, { transformPagePoint: this.visualElement.getTransformPagePoint() });
    };
    VisualElementDragControls2.prototype.stop = function(event, info) {
      var isDragging = this.isDragging;
      this.cancel();
      if (!isDragging)
        return;
      var velocity = info.velocity;
      this.startAnimation(velocity);
      var onDragEnd = this.getProps().onDragEnd;
      onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);
    };
    VisualElementDragControls2.prototype.cancel = function() {
      var _a2, _b;
      this.isDragging = false;
      if (this.visualElement.projection) {
        this.visualElement.projection.isAnimationBlocked = false;
      }
      (_a2 = this.panSession) === null || _a2 === void 0 ? void 0 : _a2.end();
      this.panSession = void 0;
      var dragPropagation = this.getProps().dragPropagation;
      if (!dragPropagation && this.openGlobalLock) {
        this.openGlobalLock();
        this.openGlobalLock = null;
      }
      (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);
    };
    VisualElementDragControls2.prototype.updateAxis = function(axis, _point, offset2) {
      var drag2 = this.getProps().drag;
      if (!offset2 || !shouldDrag(axis, drag2, this.currentDirection))
        return;
      var axisValue = this.getAxisMotionValue(axis);
      var next = this.originPoint[axis] + offset2[axis];
      if (this.constraints && this.constraints[axis]) {
        next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);
      }
      axisValue.set(next);
    };
    VisualElementDragControls2.prototype.resolveConstraints = function() {
      var _this = this;
      var _a2 = this.getProps(), dragConstraints = _a2.dragConstraints, dragElastic = _a2.dragElastic;
      var layout = (this.visualElement.projection || {}).layout;
      var prevConstraints = this.constraints;
      if (dragConstraints && isRefObject(dragConstraints)) {
        if (!this.constraints) {
          this.constraints = this.resolveRefConstraints();
        }
      } else {
        if (dragConstraints && layout) {
          this.constraints = calcRelativeConstraints(layout.actual, dragConstraints);
        } else {
          this.constraints = false;
        }
      }
      this.elastic = resolveDragElastic(dragElastic);
      if (prevConstraints !== this.constraints && layout && this.constraints && !this.hasMutatedConstraints) {
        eachAxis(function(axis) {
          if (_this.getAxisMotionValue(axis)) {
            _this.constraints[axis] = rebaseAxisConstraints(layout.actual[axis], _this.constraints[axis]);
          }
        });
      }
    };
    VisualElementDragControls2.prototype.resolveRefConstraints = function() {
      var _a2 = this.getProps(), constraints = _a2.dragConstraints, onMeasureDragConstraints = _a2.onMeasureDragConstraints;
      if (!constraints || !isRefObject(constraints))
        return false;
      var constraintsElement = constraints.current;
      var projection = this.visualElement.projection;
      if (!projection || !projection.layout)
        return false;
      var constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());
      var measuredConstraints = calcViewportConstraints(projection.layout.actual, constraintsBox);
      if (onMeasureDragConstraints) {
        var userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));
        this.hasMutatedConstraints = !!userConstraints;
        if (userConstraints) {
          measuredConstraints = convertBoundingBoxToBox(userConstraints);
        }
      }
      return measuredConstraints;
    };
    VisualElementDragControls2.prototype.startAnimation = function(velocity) {
      var _this = this;
      var _a2 = this.getProps(), drag2 = _a2.drag, dragMomentum = _a2.dragMomentum, dragElastic = _a2.dragElastic, dragTransition = _a2.dragTransition, dragSnapToOrigin = _a2.dragSnapToOrigin, onDragTransitionEnd = _a2.onDragTransitionEnd;
      var constraints = this.constraints || {};
      var momentumAnimations = eachAxis(function(axis) {
        var _a3;
        if (!shouldDrag(axis, drag2, _this.currentDirection)) {
          return;
        }
        var transition2 = (_a3 = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a3 !== void 0 ? _a3 : {};
        if (dragSnapToOrigin)
          transition2 = { min: 0, max: 0 };
        var bounceStiffness = dragElastic ? 200 : 1e6;
        var bounceDamping = dragElastic ? 40 : 1e7;
        var inertia2 = __assign$2(__assign$2({ type: "inertia", velocity: dragMomentum ? velocity[axis] : 0, bounceStiffness, bounceDamping, timeConstant: 750, restDelta: 1, restSpeed: 10 }, dragTransition), transition2);
        return _this.startAxisValueAnimation(axis, inertia2);
      });
      return Promise.all(momentumAnimations).then(onDragTransitionEnd);
    };
    VisualElementDragControls2.prototype.startAxisValueAnimation = function(axis, transition2) {
      var axisValue = this.getAxisMotionValue(axis);
      return startAnimation(axis, axisValue, 0, transition2);
    };
    VisualElementDragControls2.prototype.stopAnimation = function() {
      var _this = this;
      eachAxis(function(axis) {
        return _this.getAxisMotionValue(axis).stop();
      });
    };
    VisualElementDragControls2.prototype.getAxisMotionValue = function(axis) {
      var _a2, _b;
      var dragKey = "_drag" + axis.toUpperCase();
      var externalMotionValue = this.visualElement.getProps()[dragKey];
      return externalMotionValue ? externalMotionValue : this.visualElement.getValue(axis, (_b = (_a2 = this.visualElement.getProps().initial) === null || _a2 === void 0 ? void 0 : _a2[axis]) !== null && _b !== void 0 ? _b : 0);
    };
    VisualElementDragControls2.prototype.snapToCursor = function(point) {
      var _this = this;
      eachAxis(function(axis) {
        var drag2 = _this.getProps().drag;
        if (!shouldDrag(axis, drag2, _this.currentDirection))
          return;
        var projection = _this.visualElement.projection;
        var axisValue = _this.getAxisMotionValue(axis);
        if (projection && projection.layout) {
          var _a2 = projection.layout.actual[axis], min2 = _a2.min, max2 = _a2.max;
          axisValue.set(point[axis] - mix(min2, max2, 0.5));
        }
      });
    };
    VisualElementDragControls2.prototype.scalePositionWithinConstraints = function() {
      var _this = this;
      var _a2;
      var _b = this.getProps(), drag2 = _b.drag, dragConstraints = _b.dragConstraints;
      var projection = this.visualElement.projection;
      if (!isRefObject(dragConstraints) || !projection || !this.constraints)
        return;
      this.stopAnimation();
      var boxProgress = { x: 0, y: 0 };
      eachAxis(function(axis) {
        var axisValue = _this.getAxisMotionValue(axis);
        if (axisValue) {
          var latest = axisValue.get();
          boxProgress[axis] = calcOrigin({ min: latest, max: latest }, _this.constraints[axis]);
        }
      });
      var transformTemplate = this.visualElement.getProps().transformTemplate;
      this.visualElement.getInstance().style.transform = transformTemplate ? transformTemplate({}, "") : "none";
      (_a2 = projection.root) === null || _a2 === void 0 ? void 0 : _a2.updateScroll();
      projection.updateLayout();
      this.resolveConstraints();
      eachAxis(function(axis) {
        if (!shouldDrag(axis, drag2, null))
          return;
        var axisValue = _this.getAxisMotionValue(axis);
        var _a3 = _this.constraints[axis], min2 = _a3.min, max2 = _a3.max;
        axisValue.set(mix(min2, max2, boxProgress[axis]));
      });
    };
    VisualElementDragControls2.prototype.addListeners = function() {
      var _this = this;
      var _a2;
      elementDragControls.set(this.visualElement, this);
      var element = this.visualElement.getInstance();
      var stopPointerListener = addPointerEvent(element, "pointerdown", function(event) {
        var _a3 = _this.getProps(), drag2 = _a3.drag, _b = _a3.dragListener, dragListener = _b === void 0 ? true : _b;
        drag2 && dragListener && _this.start(event);
      });
      var measureDragConstraints = function() {
        var dragConstraints = _this.getProps().dragConstraints;
        if (isRefObject(dragConstraints)) {
          _this.constraints = _this.resolveRefConstraints();
        }
      };
      var projection = this.visualElement.projection;
      var stopMeasureLayoutListener = projection.addEventListener("measure", measureDragConstraints);
      if (projection && !projection.layout) {
        (_a2 = projection.root) === null || _a2 === void 0 ? void 0 : _a2.updateScroll();
        projection.updateLayout();
      }
      measureDragConstraints();
      var stopResizeListener = addDomEvent(window, "resize", function() {
        _this.scalePositionWithinConstraints();
      });
      projection.addEventListener("didUpdate", function(_a3) {
        var delta = _a3.delta, hasLayoutChanged = _a3.hasLayoutChanged;
        if (_this.isDragging && hasLayoutChanged) {
          eachAxis(function(axis) {
            var motionValue2 = _this.getAxisMotionValue(axis);
            if (!motionValue2)
              return;
            _this.originPoint[axis] += delta[axis].translate;
            motionValue2.set(motionValue2.get() + delta[axis].translate);
          });
          _this.visualElement.syncRender();
        }
      });
      return function() {
        stopResizeListener();
        stopPointerListener();
        stopMeasureLayoutListener();
      };
    };
    VisualElementDragControls2.prototype.getProps = function() {
      var props = this.visualElement.getProps();
      var _a2 = props.drag, drag2 = _a2 === void 0 ? false : _a2, _b = props.dragDirectionLock, dragDirectionLock = _b === void 0 ? false : _b, _c = props.dragPropagation, dragPropagation = _c === void 0 ? false : _c, _d = props.dragConstraints, dragConstraints = _d === void 0 ? false : _d, _e = props.dragElastic, dragElastic = _e === void 0 ? defaultElastic : _e, _f = props.dragMomentum, dragMomentum = _f === void 0 ? true : _f;
      return __assign$2(__assign$2({}, props), { drag: drag2, dragDirectionLock, dragPropagation, dragConstraints, dragElastic, dragMomentum });
    };
    return VisualElementDragControls2;
  }();
  function shouldDrag(direction2, drag2, currentDirection) {
    return (drag2 === true || drag2 === direction2) && (currentDirection === null || currentDirection === direction2);
  }
  function getCurrentDirection(offset2, lockThreshold) {
    if (lockThreshold === void 0) {
      lockThreshold = 10;
    }
    var direction2 = null;
    if (Math.abs(offset2.y) > lockThreshold) {
      direction2 = "y";
    } else if (Math.abs(offset2.x) > lockThreshold) {
      direction2 = "x";
    }
    return direction2;
  }
  function useDrag(props) {
    var groupDragControls = props.dragControls, visualElement2 = props.visualElement;
    var dragControls = useConstant$1(function() {
      return new VisualElementDragControls(visualElement2);
    });
    React__default.useEffect(function() {
      return groupDragControls && groupDragControls.subscribe(dragControls);
    }, [dragControls, groupDragControls]);
    React__default.useEffect(function() {
      return dragControls.addListeners();
    }, [dragControls]);
  }
  function usePanGesture(_a2) {
    var onPan = _a2.onPan, onPanStart = _a2.onPanStart, onPanEnd = _a2.onPanEnd, onPanSessionStart = _a2.onPanSessionStart, visualElement2 = _a2.visualElement;
    var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;
    var panSession = React__default.useRef(null);
    var transformPagePoint = React__default.useContext(MotionConfigContext).transformPagePoint;
    var handlers = {
      onSessionStart: onPanSessionStart,
      onStart: onPanStart,
      onMove: onPan,
      onEnd: function(event, info) {
        panSession.current = null;
        onPanEnd && onPanEnd(event, info);
      }
    };
    React__default.useEffect(function() {
      if (panSession.current !== null) {
        panSession.current.updateHandlers(handlers);
      }
    });
    function onPointerDown(event) {
      panSession.current = new PanSession(event, handlers, {
        transformPagePoint
      });
    }
    usePointerEvent(visualElement2, "pointerdown", hasPanEvents && onPointerDown);
    useUnmountEffect(function() {
      return panSession.current && panSession.current.end();
    });
  }
  var drag = {
    pan: makeRenderlessComponent(usePanGesture),
    drag: makeRenderlessComponent(useDrag)
  };
  var names = [
    "LayoutMeasure",
    "BeforeLayoutMeasure",
    "LayoutUpdate",
    "ViewportBoxUpdate",
    "Update",
    "Render",
    "AnimationComplete",
    "LayoutAnimationComplete",
    "AnimationStart",
    "SetAxisTarget",
    "Unmount"
  ];
  function createLifecycles() {
    var managers = names.map(function() {
      return new SubscriptionManager();
    });
    var propSubscriptions = {};
    var lifecycles = {
      clearAllListeners: function() {
        return managers.forEach(function(manager) {
          return manager.clear();
        });
      },
      updatePropListeners: function(props) {
        names.forEach(function(name) {
          var _a2;
          var on2 = "on" + name;
          var propListener = props[on2];
          (_a2 = propSubscriptions[name]) === null || _a2 === void 0 ? void 0 : _a2.call(propSubscriptions);
          if (propListener) {
            propSubscriptions[name] = lifecycles[on2](propListener);
          }
        });
      }
    };
    managers.forEach(function(manager, i2) {
      lifecycles["on" + names[i2]] = function(handler) {
        return manager.add(handler);
      };
      lifecycles["notify" + names[i2]] = function() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }
        manager.notify.apply(manager, __spreadArray$2([], __read$5(args), false));
      };
    });
    return lifecycles;
  }
  function updateMotionValuesFromProps(element, next, prev) {
    var _a2;
    for (var key in next) {
      var nextValue = next[key];
      var prevValue = prev[key];
      if (isMotionValue(nextValue)) {
        element.addValue(key, nextValue);
      } else if (isMotionValue(prevValue)) {
        element.addValue(key, motionValue(nextValue));
      } else if (prevValue !== nextValue) {
        if (element.hasValue(key)) {
          var existingValue = element.getValue(key);
          !existingValue.hasAnimated && existingValue.set(nextValue);
        } else {
          element.addValue(key, motionValue((_a2 = element.getStaticValue(key)) !== null && _a2 !== void 0 ? _a2 : nextValue));
        }
      }
    }
    for (var key in prev) {
      if (next[key] === void 0)
        element.removeValue(key);
    }
    return next;
  }
  var visualElement = function(_a2) {
    var _b = _a2.treeType, treeType = _b === void 0 ? "" : _b, build = _a2.build, getBaseTarget = _a2.getBaseTarget, makeTargetAnimatable = _a2.makeTargetAnimatable, measureViewportBox2 = _a2.measureViewportBox, renderInstance = _a2.render, readValueFromInstance = _a2.readValueFromInstance, removeValueFromRenderState = _a2.removeValueFromRenderState, sortNodePosition = _a2.sortNodePosition, scrapeMotionValuesFromProps2 = _a2.scrapeMotionValuesFromProps;
    return function(_a3, options) {
      var parent = _a3.parent, props = _a3.props, presenceId2 = _a3.presenceId, blockInitialAnimation = _a3.blockInitialAnimation, visualState = _a3.visualState;
      if (options === void 0) {
        options = {};
      }
      var isMounted = false;
      var latestValues = visualState.latestValues, renderState = visualState.renderState;
      var instance;
      var lifecycles = createLifecycles();
      var values = /* @__PURE__ */ new Map();
      var valueSubscriptions = /* @__PURE__ */ new Map();
      var prevMotionValues = {};
      var baseTarget = __assign$2({}, latestValues);
      var removeFromVariantTree;
      function render3() {
        if (!instance || !isMounted)
          return;
        triggerBuild();
        renderInstance(instance, renderState, props.style, element.projection);
      }
      function triggerBuild() {
        build(element, renderState, latestValues, options, props);
      }
      function update2() {
        lifecycles.notifyUpdate(latestValues);
      }
      function bindToMotionValue(key2, value2) {
        var removeOnChange = value2.onChange(function(latestValue) {
          latestValues[key2] = latestValue;
          props.onUpdate && sync.update(update2, false, true);
        });
        var removeOnRenderRequest = value2.onRenderRequest(element.scheduleRender);
        valueSubscriptions.set(key2, function() {
          removeOnChange();
          removeOnRenderRequest();
        });
      }
      var initialMotionValues = scrapeMotionValuesFromProps2(props);
      for (var key in initialMotionValues) {
        var value = initialMotionValues[key];
        if (latestValues[key] !== void 0 && isMotionValue(value)) {
          value.set(latestValues[key], false);
        }
      }
      var isControllingVariants = checkIfControllingVariants(props);
      var isVariantNode = checkIfVariantNode(props);
      var element = __assign$2(__assign$2({
        treeType,
        current: null,
        depth: parent ? parent.depth + 1 : 0,
        parent,
        children: /* @__PURE__ */ new Set(),
        presenceId: presenceId2,
        variantChildren: isVariantNode ? /* @__PURE__ */ new Set() : void 0,
        isVisible: void 0,
        manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()),
        blockInitialAnimation,
        isMounted: function() {
          return Boolean(instance);
        },
        mount: function(newInstance) {
          isMounted = true;
          instance = element.current = newInstance;
          if (element.projection) {
            element.projection.mount(newInstance);
          }
          if (isVariantNode && parent && !isControllingVariants) {
            removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);
          }
          parent === null || parent === void 0 ? void 0 : parent.children.add(element);
          element.setProps(props);
        },
        unmount: function() {
          var _a4;
          (_a4 = element.projection) === null || _a4 === void 0 ? void 0 : _a4.unmount();
          cancelSync.update(update2);
          cancelSync.render(render3);
          valueSubscriptions.forEach(function(remove) {
            return remove();
          });
          removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();
          parent === null || parent === void 0 ? void 0 : parent.children.delete(element);
          lifecycles.clearAllListeners();
          instance = void 0;
          isMounted = false;
        },
        addVariantChild: function(child) {
          var _a4;
          var closestVariantNode = element.getClosestVariantNode();
          if (closestVariantNode) {
            (_a4 = closestVariantNode.variantChildren) === null || _a4 === void 0 ? void 0 : _a4.add(child);
            return function() {
              return closestVariantNode.variantChildren.delete(child);
            };
          }
        },
        sortNodePosition: function(other) {
          if (!sortNodePosition || treeType !== other.treeType)
            return 0;
          return sortNodePosition(element.getInstance(), other.getInstance());
        },
        getClosestVariantNode: function() {
          return isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode();
        },
        getLayoutId: function() {
          return props.layoutId;
        },
        getInstance: function() {
          return instance;
        },
        getStaticValue: function(key2) {
          return latestValues[key2];
        },
        setStaticValue: function(key2, value2) {
          return latestValues[key2] = value2;
        },
        getLatestValues: function() {
          return latestValues;
        },
        setVisibility: function(visibility) {
          if (element.isVisible === visibility)
            return;
          element.isVisible = visibility;
          element.scheduleRender();
        },
        makeTargetAnimatable: function(target, canMutate) {
          if (canMutate === void 0) {
            canMutate = true;
          }
          return makeTargetAnimatable(element, target, props, canMutate);
        },
        measureViewportBox: function() {
          return measureViewportBox2(instance, props);
        },
        addValue: function(key2, value2) {
          if (element.hasValue(key2))
            element.removeValue(key2);
          values.set(key2, value2);
          latestValues[key2] = value2.get();
          bindToMotionValue(key2, value2);
        },
        removeValue: function(key2) {
          var _a4;
          values.delete(key2);
          (_a4 = valueSubscriptions.get(key2)) === null || _a4 === void 0 ? void 0 : _a4();
          valueSubscriptions.delete(key2);
          delete latestValues[key2];
          removeValueFromRenderState(key2, renderState);
        },
        hasValue: function(key2) {
          return values.has(key2);
        },
        getValue: function(key2, defaultValue) {
          var value2 = values.get(key2);
          if (value2 === void 0 && defaultValue !== void 0) {
            value2 = motionValue(defaultValue);
            element.addValue(key2, value2);
          }
          return value2;
        },
        forEachValue: function(callback) {
          return values.forEach(callback);
        },
        readValue: function(key2) {
          var _a4;
          return (_a4 = latestValues[key2]) !== null && _a4 !== void 0 ? _a4 : readValueFromInstance(instance, key2, options);
        },
        setBaseTarget: function(key2, value2) {
          baseTarget[key2] = value2;
        },
        getBaseTarget: function(key2) {
          if (getBaseTarget) {
            var target = getBaseTarget(props, key2);
            if (target !== void 0 && !isMotionValue(target))
              return target;
          }
          return baseTarget[key2];
        }
      }, lifecycles), {
        build: function() {
          triggerBuild();
          return renderState;
        },
        scheduleRender: function() {
          sync.render(render3, false, true);
        },
        syncRender: render3,
        setProps: function(newProps) {
          props = newProps;
          lifecycles.updatePropListeners(newProps);
          prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps2(props), prevMotionValues);
        },
        getProps: function() {
          return props;
        },
        getVariant: function(name) {
          var _a4;
          return (_a4 = props.variants) === null || _a4 === void 0 ? void 0 : _a4[name];
        },
        getDefaultTransition: function() {
          return props.transition;
        },
        getTransformPagePoint: function() {
          return props.transformPagePoint;
        },
        getVariantContext: function(startAtParent) {
          if (startAtParent === void 0) {
            startAtParent = false;
          }
          if (startAtParent)
            return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();
          if (!isControllingVariants) {
            var context_1 = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};
            if (props.initial !== void 0) {
              context_1.initial = props.initial;
            }
            return context_1;
          }
          var context = {};
          for (var i2 = 0; i2 < numVariantProps; i2++) {
            var name_1 = variantProps[i2];
            var prop = props[name_1];
            if (isVariantLabel(prop) || prop === false) {
              context[name_1] = prop;
            }
          }
          return context;
        }
      });
      return element;
    };
  };
  var variantProps = __spreadArray$2(["initial"], __read$5(variantPriorityOrder), false);
  var numVariantProps = variantProps.length;
  function isCSSVariable(value) {
    return typeof value === "string" && value.startsWith("var(--");
  }
  var cssVariableRegex = /var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;
  function parseCSSVariable(current) {
    var match = cssVariableRegex.exec(current);
    if (!match)
      return [,];
    var _a2 = __read$5(match, 3), token = _a2[1], fallback = _a2[2];
    return [token, fallback];
  }
  function getVariableValue(current, element, depth) {
    var _a2 = __read$5(parseCSSVariable(current), 2), token = _a2[0], fallback = _a2[1];
    if (!token)
      return;
    var resolved = window.getComputedStyle(element).getPropertyValue(token);
    if (resolved) {
      return resolved.trim();
    } else if (isCSSVariable(fallback)) {
      return getVariableValue(fallback, element);
    } else {
      return fallback;
    }
  }
  function resolveCSSVariables(visualElement2, _a2, transitionEnd2) {
    var _b;
    var target = __rest$2(_a2, []);
    var element = visualElement2.getInstance();
    if (!(element instanceof HTMLElement))
      return { target, transitionEnd: transitionEnd2 };
    if (transitionEnd2) {
      transitionEnd2 = __assign$2({}, transitionEnd2);
    }
    visualElement2.forEachValue(function(value) {
      var current2 = value.get();
      if (!isCSSVariable(current2))
        return;
      var resolved2 = getVariableValue(current2, element);
      if (resolved2)
        value.set(resolved2);
    });
    for (var key in target) {
      var current = target[key];
      if (!isCSSVariable(current))
        continue;
      var resolved = getVariableValue(current, element);
      if (!resolved)
        continue;
      target[key] = resolved;
      if (transitionEnd2)
        (_b = transitionEnd2[key]) !== null && _b !== void 0 ? _b : transitionEnd2[key] = current;
    }
    return { target, transitionEnd: transitionEnd2 };
  }
  var positionalKeys = /* @__PURE__ */ new Set([
    "width",
    "height",
    "top",
    "left",
    "right",
    "bottom",
    "x",
    "y"
  ]);
  var isPositionalKey = function(key) {
    return positionalKeys.has(key);
  };
  var hasPositionalKey = function(target) {
    return Object.keys(target).some(isPositionalKey);
  };
  var setAndResetVelocity = function(value, to) {
    value.set(to, false);
    value.set(to);
  };
  var isNumOrPxType = function(v2) {
    return v2 === number || v2 === px;
  };
  var BoundingBoxDimension;
  (function(BoundingBoxDimension2) {
    BoundingBoxDimension2["width"] = "width";
    BoundingBoxDimension2["height"] = "height";
    BoundingBoxDimension2["left"] = "left";
    BoundingBoxDimension2["right"] = "right";
    BoundingBoxDimension2["top"] = "top";
    BoundingBoxDimension2["bottom"] = "bottom";
  })(BoundingBoxDimension || (BoundingBoxDimension = {}));
  var getPosFromMatrix = function(matrix, pos) {
    return parseFloat(matrix.split(", ")[pos]);
  };
  var getTranslateFromMatrix = function(pos2, pos3) {
    return function(_bbox, _a2) {
      var transform3 = _a2.transform;
      if (transform3 === "none" || !transform3)
        return 0;
      var matrix3d = transform3.match(/^matrix3d\((.+)\)$/);
      if (matrix3d) {
        return getPosFromMatrix(matrix3d[1], pos3);
      } else {
        var matrix = transform3.match(/^matrix\((.+)\)$/);
        if (matrix) {
          return getPosFromMatrix(matrix[1], pos2);
        } else {
          return 0;
        }
      }
    };
  };
  var transformKeys = /* @__PURE__ */ new Set(["x", "y", "z"]);
  var nonTranslationalTransformKeys = transformProps.filter(function(key) {
    return !transformKeys.has(key);
  });
  function removeNonTranslationalTransform(visualElement2) {
    var removedTransforms = [];
    nonTranslationalTransformKeys.forEach(function(key) {
      var value = visualElement2.getValue(key);
      if (value !== void 0) {
        removedTransforms.push([key, value.get()]);
        value.set(key.startsWith("scale") ? 1 : 0);
      }
    });
    if (removedTransforms.length)
      visualElement2.syncRender();
    return removedTransforms;
  }
  var positionalValues = {
    width: function(_a2, _b) {
      var x2 = _a2.x;
      var _c = _b.paddingLeft, paddingLeft = _c === void 0 ? "0" : _c, _d = _b.paddingRight, paddingRight = _d === void 0 ? "0" : _d;
      return x2.max - x2.min - parseFloat(paddingLeft) - parseFloat(paddingRight);
    },
    height: function(_a2, _b) {
      var y2 = _a2.y;
      var _c = _b.paddingTop, paddingTop = _c === void 0 ? "0" : _c, _d = _b.paddingBottom, paddingBottom = _d === void 0 ? "0" : _d;
      return y2.max - y2.min - parseFloat(paddingTop) - parseFloat(paddingBottom);
    },
    top: function(_bbox, _a2) {
      var top2 = _a2.top;
      return parseFloat(top2);
    },
    left: function(_bbox, _a2) {
      var left2 = _a2.left;
      return parseFloat(left2);
    },
    bottom: function(_a2, _b) {
      var y2 = _a2.y;
      var top2 = _b.top;
      return parseFloat(top2) + (y2.max - y2.min);
    },
    right: function(_a2, _b) {
      var x2 = _a2.x;
      var left2 = _b.left;
      return parseFloat(left2) + (x2.max - x2.min);
    },
    x: getTranslateFromMatrix(4, 13),
    y: getTranslateFromMatrix(5, 14)
  };
  var convertChangedValueTypes = function(target, visualElement2, changedKeys) {
    var originBbox = visualElement2.measureViewportBox();
    var element = visualElement2.getInstance();
    var elementComputedStyle = getComputedStyle(element);
    var display = elementComputedStyle.display;
    var origin = {};
    if (display === "none") {
      visualElement2.setStaticValue("display", target.display || "block");
    }
    changedKeys.forEach(function(key) {
      origin[key] = positionalValues[key](originBbox, elementComputedStyle);
    });
    visualElement2.syncRender();
    var targetBbox = visualElement2.measureViewportBox();
    changedKeys.forEach(function(key) {
      var value = visualElement2.getValue(key);
      setAndResetVelocity(value, origin[key]);
      target[key] = positionalValues[key](targetBbox, elementComputedStyle);
    });
    return target;
  };
  var checkAndConvertChangedValueTypes = function(visualElement2, target, origin, transitionEnd2) {
    if (origin === void 0) {
      origin = {};
    }
    if (transitionEnd2 === void 0) {
      transitionEnd2 = {};
    }
    target = __assign$2({}, target);
    transitionEnd2 = __assign$2({}, transitionEnd2);
    var targetPositionalKeys = Object.keys(target).filter(isPositionalKey);
    var removedTransformValues = [];
    var hasAttemptedToRemoveTransformValues = false;
    var changedValueTypeKeys = [];
    targetPositionalKeys.forEach(function(key) {
      var value = visualElement2.getValue(key);
      if (!visualElement2.hasValue(key))
        return;
      var from = origin[key];
      var fromType = findDimensionValueType(from);
      var to = target[key];
      var toType;
      if (isKeyframesTarget(to)) {
        var numKeyframes = to.length;
        var fromIndex = to[0] === null ? 1 : 0;
        from = to[fromIndex];
        fromType = findDimensionValueType(from);
        for (var i2 = fromIndex; i2 < numKeyframes; i2++) {
          if (!toType) {
            toType = findDimensionValueType(to[i2]);
          } else {
            invariant(findDimensionValueType(to[i2]) === toType);
          }
        }
      } else {
        toType = findDimensionValueType(to);
      }
      if (fromType !== toType) {
        if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {
          var current = value.get();
          if (typeof current === "string") {
            value.set(parseFloat(current));
          }
          if (typeof to === "string") {
            target[key] = parseFloat(to);
          } else if (Array.isArray(to) && toType === px) {
            target[key] = to.map(parseFloat);
          }
        } else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) && (toType === null || toType === void 0 ? void 0 : toType.transform) && (from === 0 || to === 0)) {
          if (from === 0) {
            value.set(toType.transform(from));
          } else {
            target[key] = fromType.transform(to);
          }
        } else {
          if (!hasAttemptedToRemoveTransformValues) {
            removedTransformValues = removeNonTranslationalTransform(visualElement2);
            hasAttemptedToRemoveTransformValues = true;
          }
          changedValueTypeKeys.push(key);
          transitionEnd2[key] = transitionEnd2[key] !== void 0 ? transitionEnd2[key] : target[key];
          setAndResetVelocity(value, to);
        }
      }
    });
    if (changedValueTypeKeys.length) {
      var convertedTarget = convertChangedValueTypes(target, visualElement2, changedValueTypeKeys);
      if (removedTransformValues.length) {
        removedTransformValues.forEach(function(_a2) {
          var _b = __read$5(_a2, 2), key = _b[0], value = _b[1];
          visualElement2.getValue(key).set(value);
        });
      }
      visualElement2.syncRender();
      return { target: convertedTarget, transitionEnd: transitionEnd2 };
    } else {
      return { target, transitionEnd: transitionEnd2 };
    }
  };
  function unitConversion(visualElement2, target, origin, transitionEnd2) {
    return hasPositionalKey(target) ? checkAndConvertChangedValueTypes(visualElement2, target, origin, transitionEnd2) : { target, transitionEnd: transitionEnd2 };
  }
  var parseDomVariant = function(visualElement2, target, origin, transitionEnd2) {
    var resolved = resolveCSSVariables(visualElement2, target, transitionEnd2);
    target = resolved.target;
    transitionEnd2 = resolved.transitionEnd;
    return unitConversion(visualElement2, target, origin, transitionEnd2);
  };
  function getComputedStyle$2(element) {
    return window.getComputedStyle(element);
  }
  var htmlConfig = {
    treeType: "dom",
    readValueFromInstance: function(domElement, key) {
      if (isTransformProp(key)) {
        var defaultType = getDefaultValueType(key);
        return defaultType ? defaultType.default || 0 : 0;
      } else {
        var computedStyle = getComputedStyle$2(domElement);
        return (isCSSVariable$1(key) ? computedStyle.getPropertyValue(key) : computedStyle[key]) || 0;
      }
    },
    sortNodePosition: function(a2, b2) {
      return a2.compareDocumentPosition(b2) & 2 ? 1 : -1;
    },
    getBaseTarget: function(props, key) {
      var _a2;
      return (_a2 = props.style) === null || _a2 === void 0 ? void 0 : _a2[key];
    },
    measureViewportBox: function(element, _a2) {
      var transformPagePoint = _a2.transformPagePoint;
      return measureViewportBox(element, transformPagePoint);
    },
    resetTransform: function(element, domElement, props) {
      var transformTemplate = props.transformTemplate;
      domElement.style.transform = transformTemplate ? transformTemplate({}, "") : "none";
      element.scheduleRender();
    },
    restoreTransform: function(instance, mutableState) {
      instance.style.transform = mutableState.style.transform;
    },
    removeValueFromRenderState: function(key, _a2) {
      var vars = _a2.vars, style2 = _a2.style;
      delete vars[key];
      delete style2[key];
    },
    makeTargetAnimatable: function(element, _a2, _b, isMounted) {
      var transformValues = _b.transformValues;
      if (isMounted === void 0) {
        isMounted = true;
      }
      var transition2 = _a2.transition, transitionEnd2 = _a2.transitionEnd, target = __rest$2(_a2, ["transition", "transitionEnd"]);
      var origin = getOrigin(target, transition2 || {}, element);
      if (transformValues) {
        if (transitionEnd2)
          transitionEnd2 = transformValues(transitionEnd2);
        if (target)
          target = transformValues(target);
        if (origin)
          origin = transformValues(origin);
      }
      if (isMounted) {
        checkTargetForNewValues(element, target, origin);
        var parsed = parseDomVariant(element, target, origin, transitionEnd2);
        transitionEnd2 = parsed.transitionEnd;
        target = parsed.target;
      }
      return __assign$2({ transition: transition2, transitionEnd: transitionEnd2 }, target);
    },
    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,
    build: function(element, renderState, latestValues, options, props) {
      if (element.isVisible !== void 0) {
        renderState.style.visibility = element.isVisible ? "visible" : "hidden";
      }
      buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);
    },
    render: renderHTML
  };
  visualElement(htmlConfig);
  visualElement(__assign$2(__assign$2({}, htmlConfig), { getBaseTarget: function(props, key) {
    return props[key];
  }, readValueFromInstance: function(domElement, key) {
    var _a2;
    if (isTransformProp(key)) {
      return ((_a2 = getDefaultValueType(key)) === null || _a2 === void 0 ? void 0 : _a2.default) || 0;
    }
    key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;
    return domElement.getAttribute(key);
  }, scrapeMotionValuesFromProps, build: function(_element, renderState, latestValues, options, props) {
    buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);
  }, render: renderSVG }));
  function pixelsToPercent(pixels, axis) {
    if (axis.max === axis.min)
      return 0;
    return pixels / (axis.max - axis.min) * 100;
  }
  var correctBorderRadius = {
    correct: function(latest, node) {
      if (!node.target)
        return latest;
      if (typeof latest === "string") {
        if (px.test(latest)) {
          latest = parseFloat(latest);
        } else {
          return latest;
        }
      }
      var x2 = pixelsToPercent(latest, node.target.x);
      var y2 = pixelsToPercent(latest, node.target.y);
      return x2 + "% " + y2 + "%";
    }
  };
  var varToken = "_$css";
  var correctBoxShadow = {
    correct: function(latest, _a2) {
      var treeScale = _a2.treeScale, projectionDelta = _a2.projectionDelta;
      var original = latest;
      var containsCSSVariables = latest.includes("var(");
      var cssVariables = [];
      if (containsCSSVariables) {
        latest = latest.replace(cssVariableRegex, function(match) {
          cssVariables.push(match);
          return varToken;
        });
      }
      var shadow = complex.parse(latest);
      if (shadow.length > 5)
        return original;
      var template = complex.createTransformer(latest);
      var offset2 = typeof shadow[0] !== "number" ? 1 : 0;
      var xScale = projectionDelta.x.scale * treeScale.x;
      var yScale = projectionDelta.y.scale * treeScale.y;
      shadow[0 + offset2] /= xScale;
      shadow[1 + offset2] /= yScale;
      var averageScale = mix(xScale, yScale, 0.5);
      if (typeof shadow[2 + offset2] === "number")
        shadow[2 + offset2] /= averageScale;
      if (typeof shadow[3 + offset2] === "number")
        shadow[3 + offset2] /= averageScale;
      var output = template(shadow);
      if (containsCSSVariables) {
        var i_1 = 0;
        output = output.replace(varToken, function() {
          var cssVariable = cssVariables[i_1];
          i_1++;
          return cssVariable;
        });
      }
      return output;
    }
  };
  var MeasureLayoutWithContext = function(_super) {
    __extends(MeasureLayoutWithContext2, _super);
    function MeasureLayoutWithContext2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    MeasureLayoutWithContext2.prototype.componentDidMount = function() {
      var _this = this;
      var _a2 = this.props, visualElement2 = _a2.visualElement, layoutGroup = _a2.layoutGroup, switchLayoutGroup = _a2.switchLayoutGroup, layoutId = _a2.layoutId;
      var projection = visualElement2.projection;
      addScaleCorrector(defaultScaleCorrectors);
      if (projection) {
        if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)
          layoutGroup.group.add(projection);
        if ((switchLayoutGroup === null || switchLayoutGroup === void 0 ? void 0 : switchLayoutGroup.register) && layoutId) {
          switchLayoutGroup.register(projection);
        }
        projection.root.didUpdate();
        projection.addEventListener("animationComplete", function() {
          _this.safeToRemove();
        });
        projection.setOptions(__assign$2(__assign$2({}, projection.options), { onExitComplete: function() {
          return _this.safeToRemove();
        } }));
      }
      globalProjectionState.hasEverUpdated = true;
    };
    MeasureLayoutWithContext2.prototype.getSnapshotBeforeUpdate = function(prevProps) {
      var _this = this;
      var _a2 = this.props, layoutDependency = _a2.layoutDependency, visualElement2 = _a2.visualElement, drag2 = _a2.drag, isPresent = _a2.isPresent;
      var projection = visualElement2.projection;
      if (!projection)
        return null;
      projection.isPresent = isPresent;
      if (drag2 || prevProps.layoutDependency !== layoutDependency || layoutDependency === void 0) {
        projection.willUpdate();
      } else {
        this.safeToRemove();
      }
      if (prevProps.isPresent !== isPresent) {
        if (isPresent) {
          projection.promote();
        } else if (!projection.relegate()) {
          sync.postRender(function() {
            var _a3;
            if (!((_a3 = projection.getStack()) === null || _a3 === void 0 ? void 0 : _a3.members.length)) {
              _this.safeToRemove();
            }
          });
        }
      }
      return null;
    };
    MeasureLayoutWithContext2.prototype.componentDidUpdate = function() {
      var projection = this.props.visualElement.projection;
      if (projection) {
        projection.root.didUpdate();
        if (!projection.currentAnimation && projection.isLead()) {
          this.safeToRemove();
        }
      }
    };
    MeasureLayoutWithContext2.prototype.componentWillUnmount = function() {
      var _a2 = this.props, visualElement2 = _a2.visualElement, layoutGroup = _a2.layoutGroup, promoteContext = _a2.switchLayoutGroup;
      var projection = visualElement2.projection;
      if (projection) {
        projection.scheduleCheckAfterUnmount();
        if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)
          layoutGroup.group.remove(projection);
        if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)
          promoteContext.deregister(projection);
      }
    };
    MeasureLayoutWithContext2.prototype.safeToRemove = function() {
      var safeToRemove = this.props.safeToRemove;
      safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();
    };
    MeasureLayoutWithContext2.prototype.render = function() {
      return null;
    };
    return MeasureLayoutWithContext2;
  }(React__default__default["default"].Component);
  function MeasureLayout(props) {
    var _a2 = __read$5(usePresence(), 2), isPresent = _a2[0], safeToRemove = _a2[1];
    var layoutGroup = React__default.useContext(LayoutGroupContext);
    return React__default__default["default"].createElement(MeasureLayoutWithContext, __assign$2({}, props, { layoutGroup, switchLayoutGroup: React__default.useContext(SwitchLayoutGroupContext), isPresent, safeToRemove }));
  }
  var defaultScaleCorrectors = {
    borderRadius: __assign$2(__assign$2({}, correctBorderRadius), { applyTo: [
      "borderTopLeftRadius",
      "borderTopRightRadius",
      "borderBottomLeftRadius",
      "borderBottomRightRadius"
    ] }),
    borderTopLeftRadius: correctBorderRadius,
    borderTopRightRadius: correctBorderRadius,
    borderBottomLeftRadius: correctBorderRadius,
    borderBottomRightRadius: correctBorderRadius,
    boxShadow: correctBoxShadow
  };
  var layoutFeatures = {
    measureLayout: MeasureLayout
  };
  var DocumentProjectionNode = createProjectionNode({
    attachResizeListener: function(ref, notify2) {
      ref.addEventListener("resize", notify2, { passive: true });
      return function() {
        return ref.removeEventListener("resize", notify2);
      };
    },
    measureScroll: function() {
      return {
        x: document.documentElement.scrollLeft || document.body.scrollLeft,
        y: document.documentElement.scrollTop || document.body.scrollTop
      };
    }
  });
  var rootProjectionNode = {
    current: void 0
  };
  createProjectionNode({
    measureScroll: function(instance) {
      return {
        x: instance.scrollLeft,
        y: instance.scrollTop
      };
    },
    defaultParent: function() {
      if (!rootProjectionNode.current) {
        var documentNode = new DocumentProjectionNode(0, {});
        documentNode.mount(window);
        documentNode.setOptions({ layoutScroll: true });
        rootProjectionNode.current = documentNode;
      }
      return rootProjectionNode.current;
    },
    resetTransform: function(instance, value) {
      instance.style.transform = value !== null && value !== void 0 ? value : "none";
    }
  });
  __assign$2(__assign$2(__assign$2(__assign$2({}, animations), gestureAnimations), drag), layoutFeatures);
  React__default.createContext(null);
  var AddBlockButtonDirection;
  (function(AddBlockButtonDirection2) {
    AddBlockButtonDirection2["Horizontal"] = "Horizontal";
    AddBlockButtonDirection2["Vertical"] = "Vertical";
  })(AddBlockButtonDirection || (AddBlockButtonDirection = {}));
  var AriaList = React__default.forwardRef(({ ariaProps, children: children2 }, ref) => /* @__PURE__ */ React__default__default["default"].createElement("ul", __spreadProps(__spreadValues({}, ariaProps), {
    ref,
    className: "tw-list-none tw-p-0 tw-m-0 tw-bg-white tw-border tw-border-black-10 tw-rounded tw-z-20 focus-visible:tw-outline-none"
  }), children2));
  AriaList.displayName = "AriaList";
  var MenuItemContentSize;
  (function(MenuItemContentSize2) {
    MenuItemContentSize2["Small"] = "Small";
    MenuItemContentSize2["Large"] = "Large";
  })(MenuItemContentSize || (MenuItemContentSize = {}));
  var MenuItemContentStyle;
  (function(MenuItemContentStyle2) {
    MenuItemContentStyle2["Primary"] = "Primary";
    MenuItemContentStyle2["Danger"] = "Danger";
  })(MenuItemContentStyle || (MenuItemContentStyle = {}));
  var MenuItemContent = ({
    title,
    decorator,
    subtitle,
    ariaProps,
    size = MenuItemContentSize.Small
  }) => /* @__PURE__ */ React__default__default["default"].createElement("div", __spreadProps(__spreadValues({}, ariaProps), {
    "data-test-id": "menu-item-content",
    className: merge$1([
      "tw-flex tw-box-border tw-items-center tw-font-sans tw-text-s",
      size === MenuItemContentSize.Large ? "tw-gap-3" : "tw-gap-2"
    ])
  }), decorator && /* @__PURE__ */ React__default__default["default"].createElement("span", {
    className: "tw-flex-shrink-0",
    "data-test-id": "menu-item-decorator"
  }, React__default.cloneElement(decorator, {
    size: size === MenuItemContentSize.Small ? IconSize.Size16 : IconSize.Size20
  })), /* @__PURE__ */ React__default__default["default"].createElement("div", {
    className: "tw-flex-1 tw-overflow-hidden tw-overflow-ellipsis tw-whitespace-nowrap"
  }, /* @__PURE__ */ React__default__default["default"].createElement("div", {
    "data-test-id": "menu-item-title",
    className: "tw-select-none",
    title: typeof title === "string" ? title : ""
  }, title), subtitle && size === MenuItemContentSize.Large && /* @__PURE__ */ React__default__default["default"].createElement("div", {
    "data-test-id": "menu-item-subtitle",
    className: "tw-select-none tw-text-xxs",
    title: subtitle
  }, subtitle)));
  function IconCaretRight(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconCaretRight"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M8.48 5.138a.83.83 0 01-.23-.576.83.83 0 01.23-.576.751.751 0 011.093 0l7.677 8.034-7.677 8.035a.75.75 0 01-1.053-.043.84.84 0 01-.04-1.101l6.575-6.89L8.48 5.137z"
    }));
  }
  var MemoIconCaretRight = React__default__default["default"].memo(IconCaretRight);
  var MenuItemStyle;
  (function(MenuItemStyle2) {
    MenuItemStyle2["Primary"] = "Primary";
    MenuItemStyle2["Danger"] = "Danger";
  })(MenuItemStyle || (MenuItemStyle = {}));
  var SelectionIndicatorIcon;
  (function(SelectionIndicatorIcon2) {
    SelectionIndicatorIcon2["Check"] = "Check";
    SelectionIndicatorIcon2["CaretRight"] = "CaretRight";
  })(SelectionIndicatorIcon || (SelectionIndicatorIcon = {}));
  var MenuItem = ({
    title,
    decorator,
    subtitle,
    size = MenuItemContentSize.Small,
    style: style2 = MenuItemStyle.Primary,
    disabled = false,
    active: active3 = false,
    selectionIndicator = SelectionIndicatorIcon.Check
  }) => {
    const isDangerStyle = style2 === MenuItemStyle.Danger;
    return /* @__PURE__ */ React__default__default["default"].createElement("div", {
      className: merge$1([
        "tw-rounded tw-cursor-pointer tw-flex tw-items-center tw-justify-between tw-transition-colors",
        isDangerStyle ? "hover:tw-text-red-70" : "hover:tw-text-black",
        size === MenuItemContentSize.Small ? "tw-px-5 tw-py-2.5 tw-min-h-[36px]" : "tw-px-5 tw-py-3 tw-min-h-[60px]",
        disabled && `tw-bg-black-0 tw-pointer-events-none ${isDangerStyle ? "tw-text-red-40" : "tw-text-black-40"}`,
        active3 && `tw-font-medium ${isDangerStyle ? "tw-text-red-70" : "tw-text-black"}`,
        !disabled && !active3 && (isDangerStyle ? "tw-text-red-60" : "tw-text-black-80")
      ])
    }, size === MenuItemContentSize.Small ? /* @__PURE__ */ React__default__default["default"].createElement(MenuItemContent, {
      title,
      decorator,
      size
    }) : /* @__PURE__ */ React__default__default["default"].createElement(MenuItemContent, {
      title,
      decorator,
      subtitle,
      size
    }), selectionIndicator === SelectionIndicatorIcon.CaretRight ? /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCaretRight, {
      "data-test-id": "menu-item-caret",
      size: IconSize.Size20
    }) : active3 && /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCheck, {
      "data-test-id": "menu-item-active",
      size: IconSize.Size20
    }));
  };
  var AriaMenuItem = React__default.forwardRef(({ menuItem, ariaProps, isSelected }, ref) => {
    const { title, decorator, subtitle, size, style: style2, disabled, selectionIndicator } = menuItem;
    const { isFocusVisible: isFocusVisible2, focusProps } = useFocusRing();
    return /* @__PURE__ */ React__default__default["default"].createElement("li", __spreadProps(__spreadValues({}, mergeProps(ariaProps, focusProps)), {
      "data-test-id": "menu-item",
      className: merge$1([
        "tw-relative hover:tw-bg-black-0 tw-list-none tw-outline-none",
        disabled && "tw-pointer-events-none tw-top-px",
        isFocusVisible2 && FOCUS_STYLE_INSET
      ]),
      ref
    }), /* @__PURE__ */ React__default__default["default"].createElement(MenuItem, {
      title,
      decorator,
      subtitle,
      size,
      style: style2,
      disabled,
      active: isSelected,
      selectionIndicator
    }));
  });
  AriaMenuItem.displayName = "AriaMenuItem";
  var $f431c2c11cc559fa3c5864caafbcfd19$var$styles = {
    border: 0,
    clip: "rect(0 0 0 0)",
    clipPath: "inset(50%)",
    height: 1,
    margin: "0 -1px -1px 0",
    overflow: "hidden",
    padding: 0,
    position: "absolute",
    width: 1,
    whiteSpace: "nowrap"
  };
  function useVisuallyHidden(props) {
    if (props === void 0) {
      props = {};
    }
    let {
      style: style2,
      isFocusable
    } = props;
    let [isFocused, setFocused] = React__default.useState(false);
    let {
      focusProps
    } = useFocus({
      isDisabled: !isFocusable,
      onFocusChange: setFocused
    });
    let combinedStyles = React__default.useMemo(() => {
      if (isFocused) {
        return style2;
      } else if (style2) {
        return _extends$a({}, $f431c2c11cc559fa3c5864caafbcfd19$var$styles, style2);
      } else {
        return $f431c2c11cc559fa3c5864caafbcfd19$var$styles;
      }
    }, [isFocused]);
    return {
      visuallyHiddenProps: _extends$a({}, focusProps, {
        style: combinedStyles
      })
    };
  }
  function VisuallyHidden(props) {
    let {
      children: children2,
      elementType: Element2 = "div"
    } = props, otherProps = _objectWithoutPropertiesLoose$2(props, ["children", "elementType", "isFocusable", "style"]);
    let {
      visuallyHiddenProps
    } = useVisuallyHidden(props);
    return /* @__PURE__ */ React__default__default["default"].createElement(Element2, mergeProps(otherProps, visuallyHiddenProps), children2);
  }
  function _interopRequireDefault$h(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }
  var ownerDocument = { exports: {} };
  (function(module, exports) {
    exports.__esModule = true;
    exports.default = ownerDocument2;
    function ownerDocument2(node) {
      return node && node.ownerDocument || document;
    }
    module.exports = exports["default"];
  })(ownerDocument, ownerDocument.exports);
  /* @__PURE__ */ getDefaultExportFromCjs(ownerDocument.exports);
  var scrollTop = { exports: {} };
  var interopRequireDefault = { exports: {} };
  (function(module) {
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : {
        "default": obj
      };
    }
    module.exports = _interopRequireDefault2;
    module.exports["default"] = module.exports, module.exports.__esModule = true;
  })(interopRequireDefault);
  var isWindow = { exports: {} };
  (function(module, exports) {
    exports.__esModule = true;
    exports.default = getWindow2;
    function getWindow2(node) {
      return node === node.window ? node : node.nodeType === 9 ? node.defaultView || node.parentWindow : false;
    }
    module.exports = exports["default"];
  })(isWindow, isWindow.exports);
  (function(module, exports) {
    var _interopRequireDefault2 = interopRequireDefault.exports;
    exports.__esModule = true;
    exports.default = scrollTop2;
    var _isWindow = _interopRequireDefault2(isWindow.exports);
    function scrollTop2(node, val) {
      var win = (0, _isWindow.default)(node);
      if (val === void 0)
        return win ? "pageYOffset" in win ? win.pageYOffset : win.document.documentElement.scrollTop : node.scrollTop;
      if (win)
        win.scrollTo("pageXOffset" in win ? win.pageXOffset : win.document.documentElement.scrollLeft, val);
      else
        node.scrollTop = val;
    }
    module.exports = exports["default"];
  })(scrollTop, scrollTop.exports);
  /* @__PURE__ */ getDefaultExportFromCjs(scrollTop.exports);
  var scrollLeft = { exports: {} };
  (function(module, exports) {
    var _interopRequireDefault2 = interopRequireDefault.exports;
    exports.__esModule = true;
    exports.default = scrollTop2;
    var _isWindow = _interopRequireDefault2(isWindow.exports);
    function scrollTop2(node, val) {
      var win = (0, _isWindow.default)(node);
      if (val === void 0)
        return win ? "pageXOffset" in win ? win.pageXOffset : win.document.documentElement.scrollLeft : node.scrollLeft;
      if (win)
        win.scrollTo(val, "pageYOffset" in win ? win.pageYOffset : win.document.documentElement.scrollTop);
      else
        node.scrollLeft = val;
    }
    module.exports = exports["default"];
  })(scrollLeft, scrollLeft.exports);
  /* @__PURE__ */ getDefaultExportFromCjs(scrollLeft.exports);
  var position = { exports: {} };
  var _extends$9 = { exports: {} };
  (function(module) {
    function _extends2() {
      module.exports = _extends2 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      module.exports["default"] = module.exports, module.exports.__esModule = true;
      return _extends2.apply(this, arguments);
    }
    module.exports = _extends2;
    module.exports["default"] = module.exports, module.exports.__esModule = true;
  })(_extends$9);
  var offset = { exports: {} };
  var contains = { exports: {} };
  var inDOM = { exports: {} };
  (function(module, exports) {
    exports.__esModule = true;
    exports.default = void 0;
    var _default2 = !!(typeof window !== "undefined" && window.document && window.document.createElement);
    exports.default = _default2;
    module.exports = exports["default"];
  })(inDOM, inDOM.exports);
  (function(module, exports) {
    var _interopRequireDefault2 = interopRequireDefault.exports;
    exports.__esModule = true;
    exports.default = void 0;
    var _inDOM2 = _interopRequireDefault2(inDOM.exports);
    var _default2 = function() {
      return _inDOM2.default ? function(context, node) {
        if (context.contains) {
          return context.contains(node);
        } else if (context.compareDocumentPosition) {
          return context === node || !!(context.compareDocumentPosition(node) & 16);
        } else {
          return fallback(context, node);
        }
      } : fallback;
    }();
    exports.default = _default2;
    function fallback(context, node) {
      if (node)
        do {
          if (node === context)
            return true;
        } while (node = node.parentNode);
      return false;
    }
    module.exports = exports["default"];
  })(contains, contains.exports);
  (function(module, exports) {
    var _interopRequireDefault2 = interopRequireDefault.exports;
    exports.__esModule = true;
    exports.default = offset2;
    var _contains = _interopRequireDefault2(contains.exports);
    var _isWindow = _interopRequireDefault2(isWindow.exports);
    var _ownerDocument = _interopRequireDefault2(ownerDocument.exports);
    function offset2(node) {
      var doc = (0, _ownerDocument.default)(node), win = (0, _isWindow.default)(doc), docElem = doc && doc.documentElement, box = {
        top: 0,
        left: 0,
        height: 0,
        width: 0
      };
      if (!doc)
        return;
      if (!(0, _contains.default)(docElem, node))
        return box;
      if (node.getBoundingClientRect !== void 0)
        box = node.getBoundingClientRect();
      box = {
        top: box.top + (win.pageYOffset || docElem.scrollTop) - (docElem.clientTop || 0),
        left: box.left + (win.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || 0),
        width: (box.width == null ? node.offsetWidth : box.width) || 0,
        height: (box.height == null ? node.offsetHeight : box.height) || 0
      };
      return box;
    }
    module.exports = exports["default"];
  })(offset, offset.exports);
  /* @__PURE__ */ getDefaultExportFromCjs(offset.exports);
  var offsetParent = { exports: {} };
  var style = { exports: {} };
  var camelizeStyle = { exports: {} };
  var camelize = { exports: {} };
  (function(module, exports) {
    exports.__esModule = true;
    exports.default = camelize2;
    var rHyphen = /-(.)/g;
    function camelize2(string) {
      return string.replace(rHyphen, function(_2, chr) {
        return chr.toUpperCase();
      });
    }
    module.exports = exports["default"];
  })(camelize, camelize.exports);
  (function(module, exports) {
    var _interopRequireDefault2 = interopRequireDefault.exports;
    exports.__esModule = true;
    exports.default = camelizeStyleName;
    var _camelize = _interopRequireDefault2(camelize.exports);
    var msPattern = /^-ms-/;
    function camelizeStyleName(string) {
      return (0, _camelize.default)(string.replace(msPattern, "ms-"));
    }
    module.exports = exports["default"];
  })(camelizeStyle, camelizeStyle.exports);
  var hyphenateStyle = { exports: {} };
  var hyphenate = { exports: {} };
  (function(module, exports) {
    exports.__esModule = true;
    exports.default = hyphenate2;
    var rUpper = /([A-Z])/g;
    function hyphenate2(string) {
      return string.replace(rUpper, "-$1").toLowerCase();
    }
    module.exports = exports["default"];
  })(hyphenate, hyphenate.exports);
  (function(module, exports) {
    var _interopRequireDefault2 = interopRequireDefault.exports;
    exports.__esModule = true;
    exports.default = hyphenateStyleName;
    var _hyphenate = _interopRequireDefault2(hyphenate.exports);
    var msPattern = /^ms-/;
    function hyphenateStyleName(string) {
      return (0, _hyphenate.default)(string).replace(msPattern, "-ms-");
    }
    module.exports = exports["default"];
  })(hyphenateStyle, hyphenateStyle.exports);
  var getComputedStyle$1 = { exports: {} };
  (function(module, exports) {
    var _interopRequireDefault2 = interopRequireDefault.exports;
    exports.__esModule = true;
    exports.default = _getComputedStyle;
    var _camelizeStyle = _interopRequireDefault2(camelizeStyle.exports);
    var rposition = /^(top|right|bottom|left)$/;
    var rnumnonpx = /^([+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|))(?!px)[a-z%]+$/i;
    function _getComputedStyle(node) {
      if (!node)
        throw new TypeError("No Element passed to `getComputedStyle()`");
      var doc = node.ownerDocument;
      return "defaultView" in doc ? doc.defaultView.opener ? node.ownerDocument.defaultView.getComputedStyle(node, null) : window.getComputedStyle(node, null) : {
        getPropertyValue: function getPropertyValue(prop) {
          var style2 = node.style;
          prop = (0, _camelizeStyle.default)(prop);
          if (prop == "float")
            prop = "styleFloat";
          var current = node.currentStyle[prop] || null;
          if (current == null && style2 && style2[prop])
            current = style2[prop];
          if (rnumnonpx.test(current) && !rposition.test(prop)) {
            var left2 = style2.left;
            var runStyle = node.runtimeStyle;
            var rsLeft = runStyle && runStyle.left;
            if (rsLeft)
              runStyle.left = node.currentStyle.left;
            style2.left = prop === "fontSize" ? "1em" : current;
            current = style2.pixelLeft + "px";
            style2.left = left2;
            if (rsLeft)
              runStyle.left = rsLeft;
          }
          return current;
        }
      };
    }
    module.exports = exports["default"];
  })(getComputedStyle$1, getComputedStyle$1.exports);
  var removeStyle = { exports: {} };
  (function(module, exports) {
    exports.__esModule = true;
    exports.default = removeStyle2;
    function removeStyle2(node, key) {
      return "removeProperty" in node.style ? node.style.removeProperty(key) : node.style.removeAttribute(key);
    }
    module.exports = exports["default"];
  })(removeStyle, removeStyle.exports);
  var properties = {};
  var _interopRequireDefault$g = interopRequireDefault.exports;
  properties.__esModule = true;
  properties.default = properties.animationEnd = properties.animationDelay = properties.animationTiming = properties.animationDuration = properties.animationName = properties.transitionEnd = properties.transitionDuration = properties.transitionDelay = properties.transitionTiming = properties.transitionProperty = properties.transform = void 0;
  var _inDOM = _interopRequireDefault$g(inDOM.exports);
  var transform = "transform";
  properties.transform = transform;
  var prefix;
  var transitionEnd;
  var animationEnd;
  properties.animationEnd = animationEnd;
  properties.transitionEnd = transitionEnd;
  var transitionProperty;
  var transitionDuration;
  var transitionTiming;
  var transitionDelay;
  properties.transitionDelay = transitionDelay;
  properties.transitionTiming = transitionTiming;
  properties.transitionDuration = transitionDuration;
  properties.transitionProperty = transitionProperty;
  var animationName;
  var animationDuration;
  var animationTiming;
  var animationDelay;
  properties.animationDelay = animationDelay;
  properties.animationTiming = animationTiming;
  properties.animationDuration = animationDuration;
  properties.animationName = animationName;
  if (_inDOM.default) {
    _getTransitionPropert = getTransitionProperties();
    prefix = _getTransitionPropert.prefix;
    properties.transitionEnd = transitionEnd = _getTransitionPropert.transitionEnd;
    properties.animationEnd = animationEnd = _getTransitionPropert.animationEnd;
    properties.transform = transform = prefix + "-" + transform;
    properties.transitionProperty = transitionProperty = prefix + "-transition-property";
    properties.transitionDuration = transitionDuration = prefix + "-transition-duration";
    properties.transitionDelay = transitionDelay = prefix + "-transition-delay";
    properties.transitionTiming = transitionTiming = prefix + "-transition-timing-function";
    properties.animationName = animationName = prefix + "-animation-name";
    properties.animationDuration = animationDuration = prefix + "-animation-duration";
    properties.animationTiming = animationTiming = prefix + "-animation-delay";
    properties.animationDelay = animationDelay = prefix + "-animation-timing-function";
  }
  var _getTransitionPropert;
  var _default = {
    transform,
    end: transitionEnd,
    property: transitionProperty,
    timing: transitionTiming,
    delay: transitionDelay,
    duration: transitionDuration
  };
  properties.default = _default;
  function getTransitionProperties() {
    var style2 = document.createElement("div").style;
    var vendorMap = {
      O: function O2(e2) {
        return "o" + e2.toLowerCase();
      },
      Moz: function Moz(e2) {
        return e2.toLowerCase();
      },
      Webkit: function Webkit(e2) {
        return "webkit" + e2;
      },
      ms: function ms(e2) {
        return "MS" + e2;
      }
    };
    var vendors = Object.keys(vendorMap);
    var transitionEnd2, animationEnd2;
    var prefix2 = "";
    for (var i2 = 0; i2 < vendors.length; i2++) {
      var vendor = vendors[i2];
      if (vendor + "TransitionProperty" in style2) {
        prefix2 = "-" + vendor.toLowerCase();
        transitionEnd2 = vendorMap[vendor]("TransitionEnd");
        animationEnd2 = vendorMap[vendor]("AnimationEnd");
        break;
      }
    }
    if (!transitionEnd2 && "transitionProperty" in style2)
      transitionEnd2 = "transitionend";
    if (!animationEnd2 && "animationName" in style2)
      animationEnd2 = "animationend";
    style2 = null;
    return {
      animationEnd: animationEnd2,
      transitionEnd: transitionEnd2,
      prefix: prefix2
    };
  }
  var isTransform = { exports: {} };
  (function(module, exports) {
    exports.__esModule = true;
    exports.default = isTransform2;
    var supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;
    function isTransform2(property2) {
      return !!(property2 && supportedTransforms.test(property2));
    }
    module.exports = exports["default"];
  })(isTransform, isTransform.exports);
  (function(module, exports) {
    var _interopRequireDefault2 = interopRequireDefault.exports;
    exports.__esModule = true;
    exports.default = style2;
    var _camelizeStyle = _interopRequireDefault2(camelizeStyle.exports);
    var _hyphenateStyle = _interopRequireDefault2(hyphenateStyle.exports);
    var _getComputedStyle2 = _interopRequireDefault2(getComputedStyle$1.exports);
    var _removeStyle = _interopRequireDefault2(removeStyle.exports);
    var _properties = properties;
    var _isTransform = _interopRequireDefault2(isTransform.exports);
    function style2(node, property2, value) {
      var css = "";
      var transforms2 = "";
      var props = property2;
      if (typeof property2 === "string") {
        if (value === void 0) {
          return node.style[(0, _camelizeStyle.default)(property2)] || (0, _getComputedStyle2.default)(node).getPropertyValue((0, _hyphenateStyle.default)(property2));
        } else {
          (props = {})[property2] = value;
        }
      }
      Object.keys(props).forEach(function(key) {
        var value2 = props[key];
        if (!value2 && value2 !== 0) {
          (0, _removeStyle.default)(node, (0, _hyphenateStyle.default)(key));
        } else if ((0, _isTransform.default)(key)) {
          transforms2 += key + "(" + value2 + ") ";
        } else {
          css += (0, _hyphenateStyle.default)(key) + ": " + value2 + ";";
        }
      });
      if (transforms2) {
        css += _properties.transform + ": " + transforms2 + ";";
      }
      node.style.cssText += ";" + css;
    }
    module.exports = exports["default"];
  })(style, style.exports);
  /* @__PURE__ */ getDefaultExportFromCjs(style.exports);
  (function(module, exports) {
    var _interopRequireDefault2 = interopRequireDefault.exports;
    exports.__esModule = true;
    exports.default = offsetParent2;
    var _ownerDocument = _interopRequireDefault2(ownerDocument.exports);
    var _style = _interopRequireDefault2(style.exports);
    function nodeName(node) {
      return node.nodeName && node.nodeName.toLowerCase();
    }
    function offsetParent2(node) {
      var doc = (0, _ownerDocument.default)(node), offsetParent3 = node && node.offsetParent;
      while (offsetParent3 && nodeName(node) !== "html" && (0, _style.default)(offsetParent3, "position") === "static") {
        offsetParent3 = offsetParent3.offsetParent;
      }
      return offsetParent3 || doc.documentElement;
    }
    module.exports = exports["default"];
  })(offsetParent, offsetParent.exports);
  (function(module, exports) {
    var _interopRequireDefault2 = interopRequireDefault.exports;
    exports.__esModule = true;
    exports.default = position2;
    var _extends2 = _interopRequireDefault2(_extends$9.exports);
    var _offset = _interopRequireDefault2(offset.exports);
    var _offsetParent = _interopRequireDefault2(offsetParent.exports);
    var _scrollTop = _interopRequireDefault2(scrollTop.exports);
    var _scrollLeft = _interopRequireDefault2(scrollLeft.exports);
    var _style = _interopRequireDefault2(style.exports);
    function nodeName(node) {
      return node.nodeName && node.nodeName.toLowerCase();
    }
    function position2(node, offsetParent2) {
      var parentOffset = {
        top: 0,
        left: 0
      }, offset2;
      if ((0, _style.default)(node, "position") === "fixed") {
        offset2 = node.getBoundingClientRect();
      } else {
        offsetParent2 = offsetParent2 || (0, _offsetParent.default)(node);
        offset2 = (0, _offset.default)(node);
        if (nodeName(offsetParent2) !== "html")
          parentOffset = (0, _offset.default)(offsetParent2);
        parentOffset.top += parseInt((0, _style.default)(offsetParent2, "borderTopWidth"), 10) - (0, _scrollTop.default)(offsetParent2) || 0;
        parentOffset.left += parseInt((0, _style.default)(offsetParent2, "borderLeftWidth"), 10) - (0, _scrollLeft.default)(offsetParent2) || 0;
      }
      return (0, _extends2.default)({}, offset2, {
        top: offset2.top - parentOffset.top - (parseInt((0, _style.default)(node, "marginTop"), 10) || 0),
        left: offset2.left - parentOffset.left - (parseInt((0, _style.default)(node, "marginLeft"), 10) || 0)
      });
    }
    module.exports = exports["default"];
  })(position, position.exports);
  /* @__PURE__ */ getDefaultExportFromCjs(position.exports);
  var $e4d5b842fe0e1058e95712442330b88c$var$visibleOverlays = [];
  function useOverlay(props, ref) {
    let {
      onClose,
      shouldCloseOnBlur,
      isOpen,
      isDismissable = false,
      isKeyboardDismissDisabled = false,
      shouldCloseOnInteractOutside
    } = props;
    React__default.useEffect(() => {
      if (isOpen) {
        $e4d5b842fe0e1058e95712442330b88c$var$visibleOverlays.push(ref);
      }
      return () => {
        let index2 = $e4d5b842fe0e1058e95712442330b88c$var$visibleOverlays.indexOf(ref);
        if (index2 >= 0) {
          $e4d5b842fe0e1058e95712442330b88c$var$visibleOverlays.splice(index2, 1);
        }
      };
    }, [isOpen, ref]);
    let onHide = () => {
      if ($e4d5b842fe0e1058e95712442330b88c$var$visibleOverlays[$e4d5b842fe0e1058e95712442330b88c$var$visibleOverlays.length - 1] === ref && onClose) {
        onClose();
      }
    };
    let onInteractOutsideStart = (e2) => {
      if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e2.target)) {
        if ($e4d5b842fe0e1058e95712442330b88c$var$visibleOverlays[$e4d5b842fe0e1058e95712442330b88c$var$visibleOverlays.length - 1] === ref) {
          e2.stopPropagation();
          e2.preventDefault();
        }
      }
    };
    let onInteractOutside = (e2) => {
      if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e2.target)) {
        if ($e4d5b842fe0e1058e95712442330b88c$var$visibleOverlays[$e4d5b842fe0e1058e95712442330b88c$var$visibleOverlays.length - 1] === ref) {
          e2.stopPropagation();
          e2.preventDefault();
        }
        onHide();
      }
    };
    let onKeyDown = (e2) => {
      if (e2.key === "Escape" && !isKeyboardDismissDisabled) {
        e2.preventDefault();
        onHide();
      }
    };
    useInteractOutside({
      ref,
      onInteractOutside: isDismissable ? onInteractOutside : null,
      onInteractOutsideStart
    });
    let {
      focusWithinProps
    } = useFocusWithin({
      isDisabled: !shouldCloseOnBlur,
      onBlurWithin: (e2) => {
        if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e2.relatedTarget)) {
          onClose();
        }
      }
    });
    let onPointerDownUnderlay = (e2) => {
      if (e2.target === e2.currentTarget) {
        e2.preventDefault();
      }
    };
    return {
      overlayProps: _extends$a({
        onKeyDown
      }, focusWithinProps),
      underlayProps: {
        onPointerDown: onPointerDownUnderlay
      }
    };
  }
  var $b876e5ac9c98db373bf726bce3d604e$var$Context = /* @__PURE__ */ React__default__default["default"].createContext(null);
  function useModal(options) {
    let context = React__default.useContext($b876e5ac9c98db373bf726bce3d604e$var$Context);
    if (!context) {
      throw new Error("Modal is not contained within a provider");
    }
    React__default.useEffect(() => {
      if (options != null && options.isDisabled || !context || !context.parent) {
        return;
      }
      context.parent.addModal();
      return () => {
        if (context && context.parent) {
          context.parent.removeModal();
        }
      };
    }, [context, context.parent, options == null ? void 0 : options.isDisabled]);
    return {
      modalProps: {
        "data-ismodal": !(options != null && options.isDisabled)
      }
    };
  }
  var $e325a364098e05bf51160d06dcffdbe$exports = {};
  $e325a364098e05bf51160d06dcffdbe$exports = JSON.parse('{"dismiss":"\u062A\u062C\u0627\u0647\u0644"}');
  var $ab088cc547d59c1be83369f8351a064$exports = {};
  $ab088cc547d59c1be83369f8351a064$exports = JSON.parse('{"dismiss":"\u041E\u0442\u0445\u0432\u044A\u0440\u043B\u044F\u043D\u0435"}');
  var $cec67ea16ca47059e10ca5e77187d8c2$exports = {};
  $cec67ea16ca47059e10ca5e77187d8c2$exports = JSON.parse('{"dismiss":"Odstranit"}');
  var $d962fe1ed718c5ca37da1414136036f8$exports = {};
  $d962fe1ed718c5ca37da1414136036f8$exports = JSON.parse('{"dismiss":"Luk"}');
  var $c5167dda40dde69038848f007e5$exports = {};
  $c5167dda40dde69038848f007e5$exports = JSON.parse('{"dismiss":"Schlie\xDFen"}');
  var $ecdd1ac0020e47f58a9ed51b5fb$exports = {};
  $ecdd1ac0020e47f58a9ed51b5fb$exports = JSON.parse('{"dismiss":"\u0391\u03C0\u03CC\u03C1\u03C1\u03B9\u03C8\u03B7"}');
  var $f33e30a89f4dff807f90ebe8c$exports = {};
  $f33e30a89f4dff807f90ebe8c$exports = JSON.parse('{"dismiss":"Dismiss"}');
  var $ba353e2c61dcc5141af4537eeb3ef85c$exports = {};
  $ba353e2c61dcc5141af4537eeb3ef85c$exports = JSON.parse('{"dismiss":"Descartar"}');
  var $dd3e8aaecbf1f2c2c0f9d51aacfd$exports = {};
  $dd3e8aaecbf1f2c2c0f9d51aacfd$exports = JSON.parse('{"dismiss":"L\xF5peta"}');
  var $f730aaed9f4652842b2a8f94a4a$exports = {};
  $f730aaed9f4652842b2a8f94a4a$exports = JSON.parse('{"dismiss":"Hylk\xE4\xE4"}');
  var $e76b22aab4e46b7806205b4af9ca3$exports = {};
  $e76b22aab4e46b7806205b4af9ca3$exports = JSON.parse('{"dismiss":"Rejeter"}');
  var $c33ffdd5a9931bfc82c1c9b55e98de2f$exports = {};
  $c33ffdd5a9931bfc82c1c9b55e98de2f$exports = JSON.parse('{"dismiss":"\u05D4\u05EA\u05E2\u05DC\u05DD"}');
  var $d64cb70d4ce170f599f4df5adf4e9898$exports = {};
  $d64cb70d4ce170f599f4df5adf4e9898$exports = JSON.parse('{"dismiss":"Odbaci"}');
  var $c05270a6513a8b6d8a6552a35a162$exports = {};
  $c05270a6513a8b6d8a6552a35a162$exports = JSON.parse('{"dismiss":"Elutas\xEDt\xE1s"}');
  var $df915df637af1f3c14c8376c69dfd$exports = {};
  $df915df637af1f3c14c8376c69dfd$exports = JSON.parse('{"dismiss":"Ignora"}');
  var $e8bf1e6480d2c65d558c3537ec0d59ce$exports = {};
  $e8bf1e6480d2c65d558c3537ec0d59ce$exports = JSON.parse('{"dismiss":"\u9589\u3058\u308B"}');
  var $e06e93e1c9472a7e2fc5b26a87ea7$exports = {};
  $e06e93e1c9472a7e2fc5b26a87ea7$exports = JSON.parse('{"dismiss":"\uBB34\uC2DC"}');
  var $fef82498418eab30c69349263b64e050$exports = {};
  $fef82498418eab30c69349263b64e050$exports = JSON.parse('{"dismiss":"Atmesti"}');
  var $c4df2502cb7b65c6578bcb8a165f6fc$exports = {};
  $c4df2502cb7b65c6578bcb8a165f6fc$exports = JSON.parse('{"dismiss":"Ner\u0101d\u012Bt"}');
  var $b50f4e499c19f4d55113139bba$exports = {};
  $b50f4e499c19f4d55113139bba$exports = JSON.parse('{"dismiss":"Lukk"}');
  var $e45d2f0079f29e4f5c6469cca7c$exports = {};
  $e45d2f0079f29e4f5c6469cca7c$exports = JSON.parse('{"dismiss":"Negeren"}');
  var $fcb5bfa87b2378a249bd7fb591ec22c2$exports = {};
  $fcb5bfa87b2378a249bd7fb591ec22c2$exports = JSON.parse('{"dismiss":"Zignoruj"}');
  var $edae5c6f18c937cf0015f2aa266d9fea$exports = {};
  $edae5c6f18c937cf0015f2aa266d9fea$exports = JSON.parse('{"dismiss":"Descartar"}');
  var $c016edcd88f37a017208da7518133d$exports = {};
  $c016edcd88f37a017208da7518133d$exports = JSON.parse('{"dismiss":"Dispensar"}');
  var $df1162b231d383d942e0fdb2bbf$exports = {};
  $df1162b231d383d942e0fdb2bbf$exports = JSON.parse('{"dismiss":"Revocare"}');
  var $fa17537bfd201c57fa41fd31dbd9f074$exports = {};
  $fa17537bfd201c57fa41fd31dbd9f074$exports = JSON.parse('{"dismiss":"\u041F\u0440\u043E\u043F\u0443\u0441\u0442\u0438\u0442\u044C"}');
  var $c30db5bcff54a9e266ee7379a6cb8$exports = {};
  $c30db5bcff54a9e266ee7379a6cb8$exports = JSON.parse('{"dismiss":"Zru\u0161i\u0165"}');
  var $c86d8cad7c0045ad51a1fea185411a61$exports = {};
  $c86d8cad7c0045ad51a1fea185411a61$exports = JSON.parse('{"dismiss":"Opusti"}');
  var $c610b0b50ebc0061e6c42c420a2e1be$exports = {};
  $c610b0b50ebc0061e6c42c420a2e1be$exports = JSON.parse('{"dismiss":"Odbaci"}');
  var $c298c5c92c55ce8d8289d8cc18ea512$exports = {};
  $c298c5c92c55ce8d8289d8cc18ea512$exports = JSON.parse('{"dismiss":"Avvisa"}');
  var $f438196d9674b9d180ea6e74d7$exports = {};
  $f438196d9674b9d180ea6e74d7$exports = JSON.parse('{"dismiss":"Kapat"}');
  var $fa842ebaf07187d5bc74e0fa6c4679b$exports = {};
  $fa842ebaf07187d5bc74e0fa6c4679b$exports = JSON.parse('{"dismiss":"\u0421\u043A\u0430\u0441\u0443\u0432\u0430\u0442\u0438"}');
  var $cdcbe39f22ae1814551e7f30dcfc8$exports = {};
  $cdcbe39f22ae1814551e7f30dcfc8$exports = JSON.parse('{"dismiss":"\u53D6\u6D88"}');
  var $a8c729d90cde82a4eb34bebfb46a6$exports = {};
  $a8c729d90cde82a4eb34bebfb46a6$exports = JSON.parse('{"dismiss":"\u95DC\u9589"}');
  var $c94f95b3263b356bb2e58a3832a84$var$intlMessages = {
    "ar-AE": _interopRequireDefault$h($e325a364098e05bf51160d06dcffdbe$exports).default,
    "bg-BG": _interopRequireDefault$h($ab088cc547d59c1be83369f8351a064$exports).default,
    "cs-CZ": _interopRequireDefault$h($cec67ea16ca47059e10ca5e77187d8c2$exports).default,
    "da-DK": _interopRequireDefault$h($d962fe1ed718c5ca37da1414136036f8$exports).default,
    "de-DE": _interopRequireDefault$h($c5167dda40dde69038848f007e5$exports).default,
    "el-GR": _interopRequireDefault$h($ecdd1ac0020e47f58a9ed51b5fb$exports).default,
    "en-US": _interopRequireDefault$h($f33e30a89f4dff807f90ebe8c$exports).default,
    "es-ES": _interopRequireDefault$h($ba353e2c61dcc5141af4537eeb3ef85c$exports).default,
    "et-EE": _interopRequireDefault$h($dd3e8aaecbf1f2c2c0f9d51aacfd$exports).default,
    "fi-FI": _interopRequireDefault$h($f730aaed9f4652842b2a8f94a4a$exports).default,
    "fr-FR": _interopRequireDefault$h($e76b22aab4e46b7806205b4af9ca3$exports).default,
    "he-IL": _interopRequireDefault$h($c33ffdd5a9931bfc82c1c9b55e98de2f$exports).default,
    "hr-HR": _interopRequireDefault$h($d64cb70d4ce170f599f4df5adf4e9898$exports).default,
    "hu-HU": _interopRequireDefault$h($c05270a6513a8b6d8a6552a35a162$exports).default,
    "it-IT": _interopRequireDefault$h($df915df637af1f3c14c8376c69dfd$exports).default,
    "ja-JP": _interopRequireDefault$h($e8bf1e6480d2c65d558c3537ec0d59ce$exports).default,
    "ko-KR": _interopRequireDefault$h($e06e93e1c9472a7e2fc5b26a87ea7$exports).default,
    "lt-LT": _interopRequireDefault$h($fef82498418eab30c69349263b64e050$exports).default,
    "lv-LV": _interopRequireDefault$h($c4df2502cb7b65c6578bcb8a165f6fc$exports).default,
    "nb-NO": _interopRequireDefault$h($b50f4e499c19f4d55113139bba$exports).default,
    "nl-NL": _interopRequireDefault$h($e45d2f0079f29e4f5c6469cca7c$exports).default,
    "pl-PL": _interopRequireDefault$h($fcb5bfa87b2378a249bd7fb591ec22c2$exports).default,
    "pt-BR": _interopRequireDefault$h($edae5c6f18c937cf0015f2aa266d9fea$exports).default,
    "pt-PT": _interopRequireDefault$h($c016edcd88f37a017208da7518133d$exports).default,
    "ro-RO": _interopRequireDefault$h($df1162b231d383d942e0fdb2bbf$exports).default,
    "ru-RU": _interopRequireDefault$h($fa17537bfd201c57fa41fd31dbd9f074$exports).default,
    "sk-SK": _interopRequireDefault$h($c30db5bcff54a9e266ee7379a6cb8$exports).default,
    "sl-SI": _interopRequireDefault$h($c86d8cad7c0045ad51a1fea185411a61$exports).default,
    "sr-SP": _interopRequireDefault$h($c610b0b50ebc0061e6c42c420a2e1be$exports).default,
    "sv-SE": _interopRequireDefault$h($c298c5c92c55ce8d8289d8cc18ea512$exports).default,
    "tr-TR": _interopRequireDefault$h($f438196d9674b9d180ea6e74d7$exports).default,
    "uk-UA": _interopRequireDefault$h($fa842ebaf07187d5bc74e0fa6c4679b$exports).default,
    "zh-CN": _interopRequireDefault$h($cdcbe39f22ae1814551e7f30dcfc8$exports).default,
    "zh-TW": _interopRequireDefault$h($a8c729d90cde82a4eb34bebfb46a6$exports).default
  };
  function DismissButton(props) {
    let {
      onDismiss
    } = props;
    let formatMessage = useMessageFormatter($c94f95b3263b356bb2e58a3832a84$var$intlMessages);
    let onClick = () => {
      if (onDismiss) {
        onDismiss();
      }
    };
    return /* @__PURE__ */ React__default__default["default"].createElement(VisuallyHidden, null, /* @__PURE__ */ React__default__default["default"].createElement("button", {
      tabIndex: -1,
      "aria-label": formatMessage("dismiss"),
      onClick
    }));
  }
  function IconAudio(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconAudio"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M9.5 7.457v9.913a.825.825 0 01-.01.131c.006.093.01.187.01.282 0 2.053-1.679 3.717-3.75 3.717C3.679 21.5 2 19.836 2 17.783s1.679-3.718 3.75-3.718c.77 0 1.487.23 2.083.626V3.326a.83.83 0 01.834-.826h12.5c.46 0 .833.37.833.826V17.37a.825.825 0 01-.01.131c.006.093.01.187.01.282 0 2.053-1.679 3.717-3.75 3.717-2.071 0-3.75-1.664-3.75-3.717s1.679-3.718 3.75-3.718c.77 0 1.487.23 2.083.626V7.457H9.5zm0-1.653h10.833V4.152H9.5v1.652zM5.75 19.848c1.15 0 2.083-.925 2.083-2.065 0-1.141-.932-2.066-2.083-2.066-1.15 0-2.083.925-2.083 2.066 0 1.14.932 2.065 2.083 2.065zm12.5 0c1.15 0 2.083-.925 2.083-2.065 0-1.141-.932-2.066-2.083-2.066-1.15 0-2.083.925-2.083 2.066 0 1.14.932 2.065 2.083 2.065z"
    }));
  }
  var MemoIconAudio = React__default__default["default"].memo(IconAudio);
  function IconImageLibrary(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconImageLibrary"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M14.949 19.934h.901c.421 0 .782-.15 1.082-.45.3-.301.451-.662.451-1.083V9.15c0-.421-.15-.782-.45-1.082-.301-.3-.662-.451-1.083-.451H5.066c-.421 0-.782.15-1.082.45-.3.301-.451.662-.451 1.083v7.827l4.238-2.471 7.178 5.428zm-2.796 0l-4.418-3.426-4.148 2.236c.072.337.246.62.523.848.277.228.595.342.956.342h7.087zm6.781-1.55v.775c0 .637-.225 1.18-.676 1.632-.451.45-.995.676-1.632.676H4.308a2.224 2.224 0 01-1.632-.676A2.224 2.224 0 012 19.159V8.374c0-.625.225-1.163.676-1.614.451-.45.995-.676 1.632-.676h.776v-.776c0-.637.225-1.18.676-1.632.451-.45.995-.676 1.632-.676h12.3c.637 0 1.18.225 1.632.676.45.451.676.995.676 1.632v10.785c0 .625-.225 1.163-.676 1.614-.451.45-.995.676-1.632.676h-.758zm0-1.534c.421 0 .782-.15 1.082-.45.3-.301.451-.662.451-1.083V6.066c0-.421-.15-.782-.45-1.082-.301-.3-.662-.451-1.083-.451H8.15c-.421 0-.782.15-1.082.45-.3.301-.451.662-.451 1.083l10.009.018c.637 0 1.181.225 1.632.676.45.451.676.989.676 1.614v8.476zm-6.168-1.533c-.841 0-1.563-.3-2.164-.901a2.972 2.972 0 01-.901-2.182c0-.854.3-1.581.901-2.183a2.951 2.951 0 012.164-.901c.854 0 1.581.3 2.183.901.6.602.901 1.329.901 2.183 0 .853-.3 1.58-.901 2.182a2.972 2.972 0 01-2.183.901zm0-1.55c.433 0 .8-.15 1.1-.451.301-.301.451-.662.451-1.082 0-.421-.15-.782-.45-1.083-.301-.3-.668-.45-1.1-.45-.421 0-.782.15-1.083.45-.3.301-.45.662-.45 1.083 0 .42.15.781.45 1.082.301.3.662.45 1.082.45z"
    }));
  }
  var MemoIconImageLibrary = React__default__default["default"].memo(IconImageLibrary);
  function IconUploadAlternative(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconUploadAlternative"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M11.286 9.577v6.171c0 .394.32.711.714.711a.711.711 0 00.714-.71V9.566l1.818 1.817a.716.716 0 001.008-.001c.281-.281.28-.73.002-1.009l-3.034-3.033a.71.71 0 00-.501-.207.701.701 0 00-.506.207l-3.033 3.033a.716.716 0 00.001 1.009c.281.28.73.28 1.009.001l1.808-1.807zM12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-1.429A8.571 8.571 0 1012 3.43a8.571 8.571 0 000 17.142z"
    }));
  }
  var MemoIconUploadAlternative = React__default__default["default"].memo(IconUploadAlternative);
  var AssetInputSize;
  (function(AssetInputSize2) {
    AssetInputSize2["Small"] = "Small";
    AssetInputSize2["Large"] = "Large";
  })(AssetInputSize || (AssetInputSize = {}));
  function IconReject(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconReject"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M13.507 12l6.18 6.178c.416.416.417 1.091.003 1.508a1.061 1.061 0 01-1.504.003L12 13.506l-6.186 6.183a1.061 1.061 0 01-1.504-.003 1.069 1.069 0 01.003-1.508L10.493 12l-6.18-6.178a1.069 1.069 0 01-.003-1.508 1.061 1.061 0 011.504-.003L12 10.494l6.186-6.183a1.061 1.061 0 011.504.003 1.069 1.069 0 01-.003 1.508L13.507 12z"
    }));
  }
  var MemoIconReject = React__default__default["default"].memo(IconReject);
  var BadgeStatus;
  (function(BadgeStatus2) {
    BadgeStatus2["Positive"] = "Positive";
    BadgeStatus2["Progress"] = "Progress";
    BadgeStatus2["Warning"] = "Warning";
    BadgeStatus2["Danger"] = "Danger";
  })(BadgeStatus || (BadgeStatus = {}));
  var statusClasses = {
    [BadgeStatus.Positive]: "tw-bg-green-60",
    [BadgeStatus.Progress]: "tw-bg-violet-60",
    [BadgeStatus.Warning]: "tw-bg-yellow-60",
    [BadgeStatus.Danger]: "tw-bg-red-60"
  };
  var BadgeStyle;
  (function(BadgeStyle2) {
    BadgeStyle2["Primary"] = "Primary";
    BadgeStyle2["Positive"] = "Positive";
    BadgeStyle2["Progress"] = "Progress";
    BadgeStyle2["Warning"] = "Warning";
    BadgeStyle2["Danger"] = "Danger";
  })(BadgeStyle || (BadgeStyle = {}));
  var getStyleClasses = (style2, hasHover) => {
    var _a2;
    return (_a2 = {
      [BadgeStyle.Primary]: merge$1([
        "tw-bg-black-5 tw-text-black-90 dark:tw-text-black-10",
        hasHover && "hover:tw-bg-black-10"
      ]),
      [BadgeStyle.Positive]: merge$1([
        "tw-bg-green-20 tw-text-green-90 dark:tw-text-green-50",
        hasHover && "hover:tw-bg-green-40"
      ]),
      [BadgeStyle.Progress]: merge$1([
        "tw-bg-violet-20 tw-text-violet-90 dark:tw-text-violet-40",
        hasHover && "hover:tw-bg-violet-40"
      ]),
      [BadgeStyle.Warning]: merge$1([
        "tw-bg-yellow-20 tw-text-yellow-90 dark:tw-text-yellow-50",
        hasHover && "hover:tw-bg-yellow-40"
      ]),
      [BadgeStyle.Danger]: merge$1([
        "tw-bg-red-20 tw-text-red-90 dark:tw-text-red-50",
        hasHover && "hover:tw-bg-red-40"
      ])
    }[style2]) != null ? _a2 : "";
  };
  var getDismissClasses = (style2, hasHover) => {
    var _a2;
    const hoverClass = hasHover && "dark:hover:tw-text-white";
    return (_a2 = {
      [BadgeStyle.Primary]: merge$1(["tw-text-black-60 dark:tw-text-black-40", hoverClass]),
      [BadgeStyle.Positive]: merge$1(["tw-text-green-90 dark:tw-text-black-4", hoverClass]),
      [BadgeStyle.Progress]: merge$1(["tw-text-violet-90 dark:tw-text-black-40", hoverClass]),
      [BadgeStyle.Warning]: merge$1(["tw-text-yellow-90 dark:tw-text-black-40", hoverClass]),
      [BadgeStyle.Danger]: merge$1(["tw-text-red-90 dark:tw-text-black-40", hoverClass])
    }[style2]) != null ? _a2 : "";
  };
  var isBadgeStatus = (style2) => Object.values(BadgeStatus).includes(style2);
  var Badge = ({ children: children2, status, icon, style: style2 = BadgeStyle.Primary, onClick, onDismiss }) => {
    if (!children2 && !icon && !status) {
      return null;
    }
    const Container = onClick ? "a" : "span";
    return /* @__PURE__ */ React__default__default["default"].createElement("span", {
      className: "tw-inline-block"
    }, /* @__PURE__ */ React__default__default["default"].createElement(Container, {
      onClick: () => onClick && onClick(),
      className: merge$1([
        "tw-float-left tw-h-6 tw-inline-flex tw-items-center tw-justify-center tw-rounded-full tw-transition-color tw-select-none dark:tw-bg-black-95",
        getStyleClasses(style2, !!onClick),
        onClick ? "hover:tw-cursor-pointer dark:hover:tw-bg-black-superdark" : "tw-cursor-default",
        !children2 && (!status || !icon) ? "tw-w-6" : children2 && !icon && !status ? "tw-gap-x-1 tw-px-2" : "tw-gap-x-1 tw-pl-2 tw-pr-[0.625rem]"
      ]),
      "data-test-id": "badge"
    }, status && /* @__PURE__ */ React__default__default["default"].createElement("span", {
      "data-test-id": "badge-status",
      className: merge$1([
        "tw-w-2 tw-h-2 tw-rounded-full",
        isBadgeStatus(status) && statusClasses[status]
      ]),
      style: isBadgeStatus(status) ? {} : { backgroundColor: status }
    }), icon && /* @__PURE__ */ React__default__default["default"].createElement("span", {
      "data-test-id": "badge-icon"
    }, React__default.cloneElement(icon, { size: IconSize.Size12 })), /* @__PURE__ */ React__default__default["default"].createElement("span", {
      className: "tw-text-center tw-text-xxs tw-font-sans tw-font-normal"
    }, children2), onDismiss && /* @__PURE__ */ React__default__default["default"].createElement("button", {
      "data-test-id": "badge-icon",
      className: getDismissClasses(style2, !!onClick),
      onClick: (event) => {
        event.stopPropagation();
        onDismiss();
      }
    }, /* @__PURE__ */ React__default__default["default"].createElement(MemoIconReject, {
      size: IconSize.Size12
    }))));
  };
  var Separator = () => /* @__PURE__ */ React__default__default["default"].createElement("svg", {
    "aria-hidden": "true",
    width: "13",
    height: "17",
    viewBox: "0 0 13 17",
    fill: "none",
    className: "tw-stroke-current tw-text-black-20",
    xmlns: "http://www.w3.org/2000/svg"
  }, /* @__PURE__ */ React__default__default["default"].createElement("line", {
    x1: "3.52447",
    y1: "16.0623",
    x2: "8.46874",
    y2: "0.845385"
  }));
  var BreadcrumbItem = React__default.forwardRef(({ label, link, onClick, showSeparator, ariaProps }, ref) => {
    const { isFocusVisible: isFocusVisible2, focusProps } = useFocusRing();
    const props = mergeProps(ariaProps, focusProps);
    return /* @__PURE__ */ React__default__default["default"].createElement("li", {
      className: "tw-flex tw-items-center tw-text-black-80 hover:tw-text-black-100 tw-text-xs dark:tw-text-black-10 dark:hover:tw-text-black-30 tw-transition-colors",
      "data-test-id": "breadcrumb-item"
    }, link ? /* @__PURE__ */ React__default__default["default"].createElement("a", __spreadProps(__spreadValues({
      ref
    }, props), {
      href: link,
      className: isFocusVisible2 ? FOCUS_STYLE : ""
    }), label) : onClick ? /* @__PURE__ */ React__default__default["default"].createElement("button", __spreadProps(__spreadValues({
      ref
    }, props), {
      onClick,
      className: isFocusVisible2 ? FOCUS_STYLE : ""
    }), label) : /* @__PURE__ */ React__default__default["default"].createElement("span", __spreadProps(__spreadValues({
      ref
    }, props), {
      className: isFocusVisible2 ? FOCUS_STYLE : ""
    }), label), showSeparator && /* @__PURE__ */ React__default__default["default"].createElement(Separator, null));
  });
  BreadcrumbItem.displayName = "BreadcrumbItem";
  var $d2a366f9ef6a15581c8f385d812e3e2$exports = {};
  $d2a366f9ef6a15581c8f385d812e3e2$exports = JSON.parse('{"breadcrumbs":"\u0639\u0646\u0627\u0635\u0631 \u0627\u0644\u0648\u0627\u062C\u0647\u0629"}');
  var $f9f9c99937388844ad0bead1bd3585f$exports = {};
  $f9f9c99937388844ad0bead1bd3585f$exports = JSON.parse('{"breadcrumbs":"\u0422\u0440\u043E\u0445\u0438 \u0445\u043B\u044F\u0431"}');
  var $f192850f1579efff51dd56faff116$exports = {};
  $f192850f1579efff51dd56faff116$exports = JSON.parse('{"breadcrumbs":"Popis cesty"}');
  var $d90361384aaec77f7807bb3c5c62b5a2$exports = {};
  $d90361384aaec77f7807bb3c5c62b5a2$exports = JSON.parse('{"breadcrumbs":"Br\xF8dkrummer"}');
  var $c35b920d8565cbdbcd55701920c3993$exports = {};
  $c35b920d8565cbdbcd55701920c3993$exports = JSON.parse('{"breadcrumbs":"Breadcrumbs"}');
  var $fa1fbe238ab9bf2e486f9adc712b3124$exports = {};
  $fa1fbe238ab9bf2e486f9adc712b3124$exports = JSON.parse('{"breadcrumbs":"\u03A0\u03BB\u03BF\u03B7\u03B3\u03AE\u03C3\u03B5\u03B9\u03C2 breadcrumb"}');
  var $b4f3cb2c289455c29956b19718a4483$exports = {};
  $b4f3cb2c289455c29956b19718a4483$exports = JSON.parse('{"breadcrumbs":"Breadcrumbs"}');
  var $a2cb32cace4987be0cac5adbab26f3$exports = {};
  $a2cb32cace4987be0cac5adbab26f3$exports = JSON.parse('{"breadcrumbs":"Migas de pan"}');
  var $f026400686fc156cbd4c163a7c5$exports = {};
  $f026400686fc156cbd4c163a7c5$exports = JSON.parse('{"breadcrumbs":"Lingiread"}');
  var $c8786744df6857419a8c32db6996841$exports = {};
  $c8786744df6857419a8c32db6996841$exports = JSON.parse('{"breadcrumbs":"Navigointilinkit"}');
  var $a5398fb928a7d679a782c6faa52e3e8$exports = {};
  $a5398fb928a7d679a782c6faa52e3e8$exports = JSON.parse('{"breadcrumbs":"Chemin de navigation"}');
  var $a47148d4d9738765550190d928c1$exports = {};
  $a47148d4d9738765550190d928c1$exports = JSON.parse('{"breadcrumbs":"\u05E9\u05D1\u05D9\u05DC\u05D9 \u05E0\u05D9\u05D5\u05D5\u05D8"}');
  var $f621d038c75189be0be4f132f6c3$exports = {};
  $f621d038c75189be0be4f132f6c3$exports = JSON.parse('{"breadcrumbs":"Navigacijski putovi"}');
  var $c7906303dee64b9ea7408608de8a0cb$exports = {};
  $c7906303dee64b9ea7408608de8a0cb$exports = JSON.parse('{"breadcrumbs":"Morzsamen\xFC"}');
  var $f45b84561852c1fcb341b81caa1f8c1f$exports = {};
  $f45b84561852c1fcb341b81caa1f8c1f$exports = JSON.parse('{"breadcrumbs":"Breadcrumb"}');
  var $cceb23a57a4015eb92565c9d69a51f86$exports = {};
  $cceb23a57a4015eb92565c9d69a51f86$exports = JSON.parse('{"breadcrumbs":"\u30D1\u30F3\u304F\u305A\u30EA\u30B9\u30C8"}');
  var $c3596c15f32f0ef4e74ae9b268064555$exports = {};
  $c3596c15f32f0ef4e74ae9b268064555$exports = JSON.parse('{"breadcrumbs":"\uD0D0\uC0C9 \uD45C\uC2DC"}');
  var $ca55715e7cdd5bd87592aba57be03$exports = {};
  $ca55715e7cdd5bd87592aba57be03$exports = JSON.parse('{"breadcrumbs":"Nar\u0161ymo kelias"}');
  var $b630e8ea2c93677f99892ac5242053e4$exports = {};
  $b630e8ea2c93677f99892ac5242053e4$exports = JSON.parse('{"breadcrumbs":"Atpaka\u013Cce\u013Ci"}');
  var $e1a31e86616b4a1633f4b5a41336957$exports = {};
  $e1a31e86616b4a1633f4b5a41336957$exports = JSON.parse('{"breadcrumbs":"Navigasjonsstier"}');
  var $d57fd6b5b7ed8bbba63ecfdc71928b08$exports = {};
  $d57fd6b5b7ed8bbba63ecfdc71928b08$exports = JSON.parse('{"breadcrumbs":"Broodkruimels"}');
  var $ae72552922425db75bd15ad733313c3$exports = {};
  $ae72552922425db75bd15ad733313c3$exports = JSON.parse('{"breadcrumbs":"Struktura nawigacyjna"}');
  var $b1c418c75419654d626acd2e$exports = {};
  $b1c418c75419654d626acd2e$exports = JSON.parse('{"breadcrumbs":"Caminho detalhado"}');
  var $e84314c4fc3effbddec4352438f202f5$exports = {};
  $e84314c4fc3effbddec4352438f202f5$exports = JSON.parse('{"breadcrumbs":"Categorias"}');
  var $c26f5fad5cededd87d599b9f971cb914$exports = {};
  $c26f5fad5cededd87d599b9f971cb914$exports = JSON.parse('{"breadcrumbs":"Miez de p\xE2ine"}');
  var $e93ae8917a534c3e2eec413fe98$exports = {};
  $e93ae8917a534c3e2eec413fe98$exports = JSON.parse('{"breadcrumbs":"\u041D\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u044F"}');
  var $f5bdc2c6dd93f1f59eb5a8ba7be951d9$exports = {};
  $f5bdc2c6dd93f1f59eb5a8ba7be951d9$exports = JSON.parse('{"breadcrumbs":"Naviga\u010Dn\xE9 prvky Breadcrumbs"}');
  var $f496feec0cbf7872d6498d44f433229$exports = {};
  $f496feec0cbf7872d6498d44f433229$exports = JSON.parse('{"breadcrumbs":"Drobtine"}');
  var $cc132b0f84216676b0ba95ca836bcc$exports = {};
  $cc132b0f84216676b0ba95ca836bcc$exports = JSON.parse('{"breadcrumbs":"Putanje navigacije"}');
  var $dbc6c44fba6a795aa14c27df994c100$exports = {};
  $dbc6c44fba6a795aa14c27df994c100$exports = JSON.parse('{"breadcrumbs":"S\xF6kv\xE4gar"}');
  var $eef46c35901b7e908f9dd95d6cd395c$exports = {};
  $eef46c35901b7e908f9dd95d6cd395c$exports = JSON.parse('{"breadcrumbs":"\u0130\xE7erik haritalar\u0131"}');
  var $c058458278a484711eae6423d5faea7$exports = {};
  $c058458278a484711eae6423d5faea7$exports = JSON.parse('{"breadcrumbs":"\u041D\u0430\u0432\u0456\u0433\u0430\u0446\u0456\u0439\u043D\u0430 \u0441\u0442\u0435\u0436\u043A\u0430"}');
  var $ac75bd68aa4384fd08b594c88a$exports = {};
  $ac75bd68aa4384fd08b594c88a$exports = JSON.parse('{"breadcrumbs":"\u5BFC\u822A\u680F"}');
  var $e2c147cd213ac3936c165ae720c4372b$exports = {};
  $e2c147cd213ac3936c165ae720c4372b$exports = JSON.parse('{"breadcrumbs":"\u5C0E\u89BD\u5217"}');
  ({
    "ar-AE": _interopRequireDefault$h($d2a366f9ef6a15581c8f385d812e3e2$exports).default,
    "bg-BG": _interopRequireDefault$h($f9f9c99937388844ad0bead1bd3585f$exports).default,
    "cs-CZ": _interopRequireDefault$h($f192850f1579efff51dd56faff116$exports).default,
    "da-DK": _interopRequireDefault$h($d90361384aaec77f7807bb3c5c62b5a2$exports).default,
    "de-DE": _interopRequireDefault$h($c35b920d8565cbdbcd55701920c3993$exports).default,
    "el-GR": _interopRequireDefault$h($fa1fbe238ab9bf2e486f9adc712b3124$exports).default,
    "en-US": _interopRequireDefault$h($b4f3cb2c289455c29956b19718a4483$exports).default,
    "es-ES": _interopRequireDefault$h($a2cb32cace4987be0cac5adbab26f3$exports).default,
    "et-EE": _interopRequireDefault$h($f026400686fc156cbd4c163a7c5$exports).default,
    "fi-FI": _interopRequireDefault$h($c8786744df6857419a8c32db6996841$exports).default,
    "fr-FR": _interopRequireDefault$h($a5398fb928a7d679a782c6faa52e3e8$exports).default,
    "he-IL": _interopRequireDefault$h($a47148d4d9738765550190d928c1$exports).default,
    "hr-HR": _interopRequireDefault$h($f621d038c75189be0be4f132f6c3$exports).default,
    "hu-HU": _interopRequireDefault$h($c7906303dee64b9ea7408608de8a0cb$exports).default,
    "it-IT": _interopRequireDefault$h($f45b84561852c1fcb341b81caa1f8c1f$exports).default,
    "ja-JP": _interopRequireDefault$h($cceb23a57a4015eb92565c9d69a51f86$exports).default,
    "ko-KR": _interopRequireDefault$h($c3596c15f32f0ef4e74ae9b268064555$exports).default,
    "lt-LT": _interopRequireDefault$h($ca55715e7cdd5bd87592aba57be03$exports).default,
    "lv-LV": _interopRequireDefault$h($b630e8ea2c93677f99892ac5242053e4$exports).default,
    "nb-NO": _interopRequireDefault$h($e1a31e86616b4a1633f4b5a41336957$exports).default,
    "nl-NL": _interopRequireDefault$h($d57fd6b5b7ed8bbba63ecfdc71928b08$exports).default,
    "pl-PL": _interopRequireDefault$h($ae72552922425db75bd15ad733313c3$exports).default,
    "pt-BR": _interopRequireDefault$h($b1c418c75419654d626acd2e$exports).default,
    "pt-PT": _interopRequireDefault$h($e84314c4fc3effbddec4352438f202f5$exports).default,
    "ro-RO": _interopRequireDefault$h($c26f5fad5cededd87d599b9f971cb914$exports).default,
    "ru-RU": _interopRequireDefault$h($e93ae8917a534c3e2eec413fe98$exports).default,
    "sk-SK": _interopRequireDefault$h($f5bdc2c6dd93f1f59eb5a8ba7be951d9$exports).default,
    "sl-SI": _interopRequireDefault$h($f496feec0cbf7872d6498d44f433229$exports).default,
    "sr-SP": _interopRequireDefault$h($cc132b0f84216676b0ba95ca836bcc$exports).default,
    "sv-SE": _interopRequireDefault$h($dbc6c44fba6a795aa14c27df994c100$exports).default,
    "tr-TR": _interopRequireDefault$h($eef46c35901b7e908f9dd95d6cd395c$exports).default,
    "uk-UA": _interopRequireDefault$h($c058458278a484711eae6423d5faea7$exports).default,
    "zh-CN": _interopRequireDefault$h($ac75bd68aa4384fd08b594c88a$exports).default,
    "zh-TW": _interopRequireDefault$h($e2c147cd213ac3936c165ae720c4372b$exports).default
  });
  var ItemWithBadges = ({ badges, children: children2 }) => /* @__PURE__ */ React__default__default["default"].createElement("span", {
    className: "tw-inline-flex tw-gap-x-2 tw-items-center"
  }, children2, badges == null ? void 0 : badges.map((_a2, index2) => {
    var _b = _a2, { children: badge } = _b, props = __objRest(_b, ["children"]);
    return /* @__PURE__ */ React__default__default["default"].createElement(Badge, __spreadProps(__spreadValues({}, props), {
      key: `breadcrumb-badge-${index2}`
    }), badge);
  }));
  var CurrentBreadcrumbItem = React__default.forwardRef(({ label, badges, bold, decorator, link, onClick, ariaProps }, ref) => {
    const classNames = merge$1([decorator && "tw-flex tw-gap-x-1 tw-items-center", bold && "tw-font-bold"]);
    const { isFocusVisible: isFocusVisible2, focusProps } = useFocusRing();
    const props = mergeProps(ariaProps, focusProps);
    return /* @__PURE__ */ React__default__default["default"].createElement("li", {
      className: "tw-w-full tw-h-6 tw-flex tw-gap-x-1 tw-items-center tw-text-m tw-text-black dark:tw-text-white",
      "data-test-id": "breadcrumb-item"
    }, link ? /* @__PURE__ */ React__default__default["default"].createElement(ItemWithBadges, {
      badges
    }, /* @__PURE__ */ React__default__default["default"].createElement("a", __spreadProps(__spreadValues({
      ref
    }, props), {
      href: link,
      className: merge$1([classNames, isFocusVisible2 ? FOCUS_STYLE : ""])
    }), decorator, /* @__PURE__ */ React__default__default["default"].createElement("span", {
      className: bold ? "tw-font-bold" : ""
    }, label))) : onClick ? /* @__PURE__ */ React__default__default["default"].createElement(ItemWithBadges, {
      badges
    }, /* @__PURE__ */ React__default__default["default"].createElement("button", __spreadProps(__spreadValues({
      ref
    }, props), {
      onClick,
      className: merge$1([classNames, isFocusVisible2 ? FOCUS_STYLE : ""])
    }), decorator, label)) : /* @__PURE__ */ React__default__default["default"].createElement(React__default__default["default"].Fragment, null, decorator, /* @__PURE__ */ React__default__default["default"].createElement(ItemWithBadges, {
      badges
    }, /* @__PURE__ */ React__default__default["default"].createElement("span", __spreadProps(__spreadValues({
      ref
    }, props), {
      className: merge$1([bold && "tw-font-bold", isFocusVisible2 && FOCUS_STYLE])
    }), label))));
  });
  CurrentBreadcrumbItem.displayName = "CurrentBreadcrumbItem";
  ({
    [ButtonSize.Small]: "tw-gap-x-1",
    [ButtonSize.Medium]: "tw-gap-x-2",
    [ButtonSize.Large]: "tw-gap-x-3"
  });
  function useToggleState(props) {
    if (props === void 0) {
      props = {};
    }
    let {
      isReadOnly,
      onChange
    } = props;
    let [isSelected, setSelected] = useControlledState(props.isSelected, props.defaultSelected || false, () => {
    });
    function updateSelected(value) {
      if (!isReadOnly) {
        setSelected(value);
        if (onChange) {
          onChange(value);
        }
      }
    }
    function toggleState() {
      if (!isReadOnly) {
        setSelected((prev) => {
          let newVal = !prev;
          if (onChange) {
            onChange(newVal);
          }
          return newVal;
        });
      }
    }
    return {
      isSelected,
      setSelected: updateSelected,
      toggle: toggleState
    };
  }
  function useToggle(props, state, ref) {
    let {
      isDisabled = false,
      isRequired,
      isReadOnly,
      value,
      name,
      children: children2,
      "aria-label": ariaLabel,
      "aria-labelledby": ariaLabelledby,
      validationState = "valid"
    } = props;
    let onChange = (e2) => {
      e2.stopPropagation();
      state.setSelected(e2.target.checked);
    };
    let hasChildren = children2 != null;
    let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;
    if (!hasChildren && !hasAriaLabel) {
      console.warn("If you do not provide children, you must specify an aria-label for accessibility");
    }
    let {
      pressProps
    } = usePress({
      isDisabled
    });
    let {
      focusableProps
    } = useFocusable(props, ref);
    let interactions = mergeProps(pressProps, focusableProps);
    let domProps = filterDOMProps(props, {
      labelable: true
    });
    return {
      inputProps: mergeProps(domProps, _extends$a({
        "aria-invalid": validationState === "invalid" || void 0,
        "aria-errormessage": props["aria-errormessage"],
        "aria-controls": props["aria-controls"],
        "aria-readonly": isReadOnly || void 0,
        onChange,
        disabled: isDisabled,
        required: isRequired,
        value,
        name,
        type: "checkbox"
      }, interactions))
    };
  }
  function useCheckbox(props, state, inputRef) {
    let {
      inputProps
    } = useToggle(props, state, inputRef);
    let {
      isSelected
    } = state;
    let {
      isIndeterminate
    } = props;
    React__default.useEffect(() => {
      if (inputRef.current) {
        inputRef.current.indeterminate = isIndeterminate;
      }
    });
    return {
      inputProps: _extends$a({}, inputProps, {
        checked: isSelected,
        "aria-checked": isIndeterminate ? "mixed" : isSelected
      })
    };
  }
  function useForwardedRef(ref) {
    const innerRef = React__default.useRef(null);
    React__default.useEffect(() => {
      if (!ref)
        return;
      if (typeof ref === "function") {
        ref(innerRef.current);
      } else {
        ref.current = innerRef.current;
      }
    });
    return innerRef;
  }
  var CheckboxState;
  (function(CheckboxState2) {
    CheckboxState2["Checked"] = "Checked";
    CheckboxState2["Unchecked"] = "Unchecked";
    CheckboxState2["Mixed"] = "Mixed";
  })(CheckboxState || (CheckboxState = {}));
  var isCheckedOrMixed = (checked) => {
    return checked === CheckboxState.Checked || checked === CheckboxState.Mixed;
  };
  React__default.forwardRef(({
    id: propId,
    disabled,
    required,
    label,
    tooltip,
    note,
    ariaLabel,
    value,
    groupInputProps,
    onChange,
    state = CheckboxState.Unchecked
  }, ref) => {
    const id2 = useMemoizedId(propId);
    const inputRef = useForwardedRef(ref);
    const { isFocusVisible: isFocusVisible2, focusProps } = useFocusRing();
    const toggleState = useToggleState({
      value,
      onChange: disabled ? void 0 : onChange,
      isSelected: state === CheckboxState.Checked
    });
    const { inputProps } = useCheckbox({
      isDisabled: disabled,
      isRequired: required,
      isIndeterminate: state === CheckboxState.Mixed,
      "aria-label": ariaLabel || label
    }, toggleState, inputRef);
    return /* @__PURE__ */ React__default__default["default"].createElement("div", {
      className: "tw-flex tw-flex-col tw-gap-1 tw-transition-colors",
      "data-test-id": "checkbox"
    }, /* @__PURE__ */ React__default__default["default"].createElement("label", {
      className: merge$1([
        "tw-group tw-flex tw-items-center tw-gap-2 tw-select-none tw-outline-none",
        !disabled && "hover:tw-cursor-pointer"
      ])
    }, /* @__PURE__ */ React__default__default["default"].createElement("input", __spreadProps(__spreadValues({}, mergeProps(groupInputProps || inputProps, focusProps)), {
      id: id2,
      ref: inputRef,
      className: "tw-sr-only",
      "data-test-id": "checkbox-input"
    })), /* @__PURE__ */ React__default__default["default"].createElement("span", {
      "aria-hidden": "true",
      className: merge$1([
        "tw-relative tw-flex tw-w-4 tw-h-4 tw-items-center tw-justify-center tw-rounded tw-border tw-flex-shrink-0",
        isFocusVisible2 && FOCUS_STYLE,
        disabled ? merge$1([
          "tw-text-white tw-pointer-events-none",
          !isCheckedOrMixed(state) && "tw-border-black-20 tw-bg-white dark:tw-border-black-80 dark:tw-bg-black-90",
          isCheckedOrMixed(state) && "tw-border-black-40 tw-bg-black-40 dark:tw-border-black-60 dark:tw-bg-black-60"
        ]) : merge$1([
          !isCheckedOrMixed(state) && "tw-border-black-80 tw-bg-white hover:tw-border-black dark:tw-border-white dark:tw-bg-black dark:hover:tw-border-black-20 dark:hover:tw-bg-black-90 group-hover:tw-bg-white group-hover:tw-border-black dark:group-hover:tw-border-black-20 dark:group-hover:tw-bg-black-90",
          isCheckedOrMixed(state) && "tw-border-violet-60 tw-bg-violet-60 tw-text-white hover:tw-border-violet-70 hover:tw-bg-violet-70 dark:tw-border-violet-50 dark:tw-bg-violet-50 dark:hover:tw-border-violet-60 dark:hover:tw-bg-violet-60 group-hover:tw-text-white group-hover:tw-border-violet-70 group-hover:tw-bg-violet-70 dark:group-hover:tw-border-violet-60 dark:group-hover:tw-bg-violet-60"
        ])
      ])
    }, state === CheckboxState.Checked && /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCheck, null), state === CheckboxState.Mixed && /* @__PURE__ */ React__default__default["default"].createElement(MemoIconMinus, null)), label && /* @__PURE__ */ React__default__default["default"].createElement(InputLabel, {
      disabled,
      htmlFor: id2,
      tooltip: tooltip != null ? tooltip : void 0,
      required,
      bold: isCheckedOrMixed(state)
    }, label)), note && /* @__PURE__ */ React__default__default["default"].createElement("span", {
      className: "tw-text-black-60 tw-font-sans tw-text-xs tw-font-normal"
    }, note));
  });
  var ChecklistDirection;
  (function(ChecklistDirection2) {
    ChecklistDirection2["Horizontal"] = "Horizontal";
    ChecklistDirection2["Vertical"] = "Vertical";
  })(ChecklistDirection || (ChecklistDirection = {}));
  var color$1 = {};
  function arrayEach$2(array, iteratee) {
    var index2 = -1, length = array == null ? 0 : array.length;
    while (++index2 < length) {
      if (iteratee(array[index2], index2, array) === false) {
        break;
      }
    }
    return array;
  }
  var _arrayEach = arrayEach$2;
  function createBaseFor$1(fromRight) {
    return function(object, iteratee, keysFunc) {
      var index2 = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
      while (length--) {
        var key = props[fromRight ? length : ++index2];
        if (iteratee(iterable[key], key, iterable) === false) {
          break;
        }
      }
      return object;
    };
  }
  var _createBaseFor = createBaseFor$1;
  var createBaseFor = _createBaseFor;
  var baseFor$2 = createBaseFor();
  var _baseFor = baseFor$2;
  function baseTimes$1(n2, iteratee) {
    var index2 = -1, result = Array(n2);
    while (++index2 < n2) {
      result[index2] = iteratee(index2);
    }
    return result;
  }
  var _baseTimes = baseTimes$1;
  var freeGlobal$1 = typeof commonjsGlobal == "object" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
  var _freeGlobal = freeGlobal$1;
  var freeGlobal = _freeGlobal;
  var freeSelf = typeof self == "object" && self && self.Object === Object && self;
  var root$9 = freeGlobal || freeSelf || Function("return this")();
  var _root = root$9;
  var root$8 = _root;
  var Symbol$6 = root$8.Symbol;
  var _Symbol = Symbol$6;
  var Symbol$5 = _Symbol;
  var objectProto$f = Object.prototype;
  var hasOwnProperty$c = objectProto$f.hasOwnProperty;
  var nativeObjectToString$1 = objectProto$f.toString;
  var symToStringTag$1 = Symbol$5 ? Symbol$5.toStringTag : void 0;
  function getRawTag$1(value) {
    var isOwn = hasOwnProperty$c.call(value, symToStringTag$1), tag = value[symToStringTag$1];
    try {
      value[symToStringTag$1] = void 0;
      var unmasked = true;
    } catch (e2) {
    }
    var result = nativeObjectToString$1.call(value);
    if (unmasked) {
      if (isOwn) {
        value[symToStringTag$1] = tag;
      } else {
        delete value[symToStringTag$1];
      }
    }
    return result;
  }
  var _getRawTag = getRawTag$1;
  var objectProto$e = Object.prototype;
  var nativeObjectToString = objectProto$e.toString;
  function objectToString$1(value) {
    return nativeObjectToString.call(value);
  }
  var _objectToString = objectToString$1;
  var Symbol$4 = _Symbol;
  var getRawTag = _getRawTag;
  var objectToString = _objectToString;
  var nullTag = "[object Null]";
  var undefinedTag = "[object Undefined]";
  var symToStringTag = Symbol$4 ? Symbol$4.toStringTag : void 0;
  function baseGetTag$7(value) {
    if (value == null) {
      return value === void 0 ? undefinedTag : nullTag;
    }
    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
  }
  var _baseGetTag = baseGetTag$7;
  function isObjectLike$a(value) {
    return value != null && typeof value == "object";
  }
  var isObjectLike_1 = isObjectLike$a;
  var baseGetTag$6 = _baseGetTag;
  var isObjectLike$9 = isObjectLike_1;
  var argsTag$3 = "[object Arguments]";
  function baseIsArguments$1(value) {
    return isObjectLike$9(value) && baseGetTag$6(value) == argsTag$3;
  }
  var _baseIsArguments = baseIsArguments$1;
  var baseIsArguments = _baseIsArguments;
  var isObjectLike$8 = isObjectLike_1;
  var objectProto$d = Object.prototype;
  var hasOwnProperty$b = objectProto$d.hasOwnProperty;
  var propertyIsEnumerable$1 = objectProto$d.propertyIsEnumerable;
  var isArguments$3 = baseIsArguments(function() {
    return arguments;
  }()) ? baseIsArguments : function(value) {
    return isObjectLike$8(value) && hasOwnProperty$b.call(value, "callee") && !propertyIsEnumerable$1.call(value, "callee");
  };
  var isArguments_1 = isArguments$3;
  var isArray$e = Array.isArray;
  var isArray_1 = isArray$e;
  var isBuffer$4 = { exports: {} };
  function stubFalse() {
    return false;
  }
  var stubFalse_1 = stubFalse;
  (function(module, exports) {
    var root2 = _root, stubFalse2 = stubFalse_1;
    var freeExports = exports && !exports.nodeType && exports;
    var freeModule = freeExports && true && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer2 = moduleExports ? root2.Buffer : void 0;
    var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
    var isBuffer2 = nativeIsBuffer || stubFalse2;
    module.exports = isBuffer2;
  })(isBuffer$4, isBuffer$4.exports);
  var MAX_SAFE_INTEGER$1 = 9007199254740991;
  var reIsUint = /^(?:0|[1-9]\d*)$/;
  function isIndex$3(value, length) {
    var type = typeof value;
    length = length == null ? MAX_SAFE_INTEGER$1 : length;
    return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
  }
  var _isIndex = isIndex$3;
  var MAX_SAFE_INTEGER = 9007199254740991;
  function isLength$3(value) {
    return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
  }
  var isLength_1 = isLength$3;
  var baseGetTag$5 = _baseGetTag;
  var isLength$2 = isLength_1;
  var isObjectLike$7 = isObjectLike_1;
  var argsTag$2 = "[object Arguments]";
  var arrayTag$2 = "[object Array]";
  var boolTag$3 = "[object Boolean]";
  var dateTag$3 = "[object Date]";
  var errorTag$2 = "[object Error]";
  var funcTag$2 = "[object Function]";
  var mapTag$5 = "[object Map]";
  var numberTag$3 = "[object Number]";
  var objectTag$4 = "[object Object]";
  var regexpTag$3 = "[object RegExp]";
  var setTag$5 = "[object Set]";
  var stringTag$4 = "[object String]";
  var weakMapTag$2 = "[object WeakMap]";
  var arrayBufferTag$3 = "[object ArrayBuffer]";
  var dataViewTag$4 = "[object DataView]";
  var float32Tag$2 = "[object Float32Array]";
  var float64Tag$2 = "[object Float64Array]";
  var int8Tag$2 = "[object Int8Array]";
  var int16Tag$2 = "[object Int16Array]";
  var int32Tag$2 = "[object Int32Array]";
  var uint8Tag$2 = "[object Uint8Array]";
  var uint8ClampedTag$2 = "[object Uint8ClampedArray]";
  var uint16Tag$2 = "[object Uint16Array]";
  var uint32Tag$2 = "[object Uint32Array]";
  var typedArrayTags = {};
  typedArrayTags[float32Tag$2] = typedArrayTags[float64Tag$2] = typedArrayTags[int8Tag$2] = typedArrayTags[int16Tag$2] = typedArrayTags[int32Tag$2] = typedArrayTags[uint8Tag$2] = typedArrayTags[uint8ClampedTag$2] = typedArrayTags[uint16Tag$2] = typedArrayTags[uint32Tag$2] = true;
  typedArrayTags[argsTag$2] = typedArrayTags[arrayTag$2] = typedArrayTags[arrayBufferTag$3] = typedArrayTags[boolTag$3] = typedArrayTags[dataViewTag$4] = typedArrayTags[dateTag$3] = typedArrayTags[errorTag$2] = typedArrayTags[funcTag$2] = typedArrayTags[mapTag$5] = typedArrayTags[numberTag$3] = typedArrayTags[objectTag$4] = typedArrayTags[regexpTag$3] = typedArrayTags[setTag$5] = typedArrayTags[stringTag$4] = typedArrayTags[weakMapTag$2] = false;
  function baseIsTypedArray$1(value) {
    return isObjectLike$7(value) && isLength$2(value.length) && !!typedArrayTags[baseGetTag$5(value)];
  }
  var _baseIsTypedArray = baseIsTypedArray$1;
  function baseUnary$3(func) {
    return function(value) {
      return func(value);
    };
  }
  var _baseUnary = baseUnary$3;
  var _nodeUtil = { exports: {} };
  (function(module, exports) {
    var freeGlobal2 = _freeGlobal;
    var freeExports = exports && !exports.nodeType && exports;
    var freeModule = freeExports && true && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal2.process;
    var nodeUtil2 = function() {
      try {
        var types2 = freeModule && freeModule.require && freeModule.require("util").types;
        if (types2) {
          return types2;
        }
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e2) {
      }
    }();
    module.exports = nodeUtil2;
  })(_nodeUtil, _nodeUtil.exports);
  var baseIsTypedArray = _baseIsTypedArray;
  var baseUnary$2 = _baseUnary;
  var nodeUtil$2 = _nodeUtil.exports;
  var nodeIsTypedArray = nodeUtil$2 && nodeUtil$2.isTypedArray;
  var isTypedArray$3 = nodeIsTypedArray ? baseUnary$2(nodeIsTypedArray) : baseIsTypedArray;
  var isTypedArray_1 = isTypedArray$3;
  var baseTimes = _baseTimes;
  var isArguments$2 = isArguments_1;
  var isArray$d = isArray_1;
  var isBuffer$3 = isBuffer$4.exports;
  var isIndex$2 = _isIndex;
  var isTypedArray$2 = isTypedArray_1;
  var objectProto$c = Object.prototype;
  var hasOwnProperty$a = objectProto$c.hasOwnProperty;
  function arrayLikeKeys$2(value, inherited) {
    var isArr = isArray$d(value), isArg = !isArr && isArguments$2(value), isBuff = !isArr && !isArg && isBuffer$3(value), isType = !isArr && !isArg && !isBuff && isTypedArray$2(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
    for (var key in value) {
      if ((inherited || hasOwnProperty$a.call(value, key)) && !(skipIndexes && (key == "length" || isBuff && (key == "offset" || key == "parent") || isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || isIndex$2(key, length)))) {
        result.push(key);
      }
    }
    return result;
  }
  var _arrayLikeKeys = arrayLikeKeys$2;
  var objectProto$b = Object.prototype;
  function isPrototype$3(value) {
    var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto$b;
    return value === proto;
  }
  var _isPrototype = isPrototype$3;
  function overArg$2(func, transform3) {
    return function(arg) {
      return func(transform3(arg));
    };
  }
  var _overArg = overArg$2;
  var overArg$1 = _overArg;
  var nativeKeys$1 = overArg$1(Object.keys, Object);
  var _nativeKeys = nativeKeys$1;
  var isPrototype$2 = _isPrototype;
  var nativeKeys = _nativeKeys;
  var objectProto$a = Object.prototype;
  var hasOwnProperty$9 = objectProto$a.hasOwnProperty;
  function baseKeys$1(object) {
    if (!isPrototype$2(object)) {
      return nativeKeys(object);
    }
    var result = [];
    for (var key in Object(object)) {
      if (hasOwnProperty$9.call(object, key) && key != "constructor") {
        result.push(key);
      }
    }
    return result;
  }
  var _baseKeys = baseKeys$1;
  function isObject$f(value) {
    var type = typeof value;
    return value != null && (type == "object" || type == "function");
  }
  var isObject_1 = isObject$f;
  var baseGetTag$4 = _baseGetTag;
  var isObject$e = isObject_1;
  var asyncTag = "[object AsyncFunction]";
  var funcTag$1 = "[object Function]";
  var genTag$1 = "[object GeneratorFunction]";
  var proxyTag = "[object Proxy]";
  function isFunction$4(value) {
    if (!isObject$e(value)) {
      return false;
    }
    var tag = baseGetTag$4(value);
    return tag == funcTag$1 || tag == genTag$1 || tag == asyncTag || tag == proxyTag;
  }
  var isFunction_1 = isFunction$4;
  var isFunction$3 = isFunction_1;
  var isLength$1 = isLength_1;
  function isArrayLike$6(value) {
    return value != null && isLength$1(value.length) && !isFunction$3(value);
  }
  var isArrayLike_1 = isArrayLike$6;
  var arrayLikeKeys$1 = _arrayLikeKeys;
  var baseKeys = _baseKeys;
  var isArrayLike$5 = isArrayLike_1;
  function keys$6(object) {
    return isArrayLike$5(object) ? arrayLikeKeys$1(object) : baseKeys(object);
  }
  var keys_1 = keys$6;
  var baseFor$1 = _baseFor;
  var keys$5 = keys_1;
  function baseForOwn$2(object, iteratee) {
    return object && baseFor$1(object, iteratee, keys$5);
  }
  var _baseForOwn = baseForOwn$2;
  var isArrayLike$4 = isArrayLike_1;
  function createBaseEach$1(eachFunc, fromRight) {
    return function(collection, iteratee) {
      if (collection == null) {
        return collection;
      }
      if (!isArrayLike$4(collection)) {
        return eachFunc(collection, iteratee);
      }
      var length = collection.length, index2 = fromRight ? length : -1, iterable = Object(collection);
      while (fromRight ? index2-- : ++index2 < length) {
        if (iteratee(iterable[index2], index2, iterable) === false) {
          break;
        }
      }
      return collection;
    };
  }
  var _createBaseEach = createBaseEach$1;
  var baseForOwn$1 = _baseForOwn;
  var createBaseEach = _createBaseEach;
  var baseEach$2 = createBaseEach(baseForOwn$1);
  var _baseEach = baseEach$2;
  function identity$4(value) {
    return value;
  }
  var identity_1 = identity$4;
  var identity$3 = identity_1;
  function castFunction$2(value) {
    return typeof value == "function" ? value : identity$3;
  }
  var _castFunction = castFunction$2;
  var arrayEach$1 = _arrayEach;
  var baseEach$1 = _baseEach;
  var castFunction$1 = _castFunction;
  var isArray$c = isArray_1;
  function forEach(collection, iteratee) {
    var func = isArray$c(collection) ? arrayEach$1 : baseEach$1;
    return func(collection, castFunction$1(iteratee));
  }
  var forEach_1 = forEach;
  var each = forEach_1;
  var tinycolor = { exports: {} };
  (function(module) {
    (function(Math2) {
      var trimLeft = /^\s+/, trimRight = /\s+$/, tinyCounter = 0, mathRound = Math2.round, mathMin = Math2.min, mathMax = Math2.max, mathRandom = Math2.random;
      function tinycolor2(color2, opts) {
        color2 = color2 ? color2 : "";
        opts = opts || {};
        if (color2 instanceof tinycolor2) {
          return color2;
        }
        if (!(this instanceof tinycolor2)) {
          return new tinycolor2(color2, opts);
        }
        var rgb = inputToRGB(color2);
        this._originalInput = color2, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = mathRound(100 * this._a) / 100, this._format = opts.format || rgb.format;
        this._gradientType = opts.gradientType;
        if (this._r < 1) {
          this._r = mathRound(this._r);
        }
        if (this._g < 1) {
          this._g = mathRound(this._g);
        }
        if (this._b < 1) {
          this._b = mathRound(this._b);
        }
        this._ok = rgb.ok;
        this._tc_id = tinyCounter++;
      }
      tinycolor2.prototype = {
        isDark: function() {
          return this.getBrightness() < 128;
        },
        isLight: function() {
          return !this.isDark();
        },
        isValid: function() {
          return this._ok;
        },
        getOriginalInput: function() {
          return this._originalInput;
        },
        getFormat: function() {
          return this._format;
        },
        getAlpha: function() {
          return this._a;
        },
        getBrightness: function() {
          var rgb = this.toRgb();
          return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1e3;
        },
        getLuminance: function() {
          var rgb = this.toRgb();
          var RsRGB, GsRGB, BsRGB, R2, G2, B2;
          RsRGB = rgb.r / 255;
          GsRGB = rgb.g / 255;
          BsRGB = rgb.b / 255;
          if (RsRGB <= 0.03928) {
            R2 = RsRGB / 12.92;
          } else {
            R2 = Math2.pow((RsRGB + 0.055) / 1.055, 2.4);
          }
          if (GsRGB <= 0.03928) {
            G2 = GsRGB / 12.92;
          } else {
            G2 = Math2.pow((GsRGB + 0.055) / 1.055, 2.4);
          }
          if (BsRGB <= 0.03928) {
            B2 = BsRGB / 12.92;
          } else {
            B2 = Math2.pow((BsRGB + 0.055) / 1.055, 2.4);
          }
          return 0.2126 * R2 + 0.7152 * G2 + 0.0722 * B2;
        },
        setAlpha: function(value) {
          this._a = boundAlpha(value);
          this._roundA = mathRound(100 * this._a) / 100;
          return this;
        },
        toHsv: function() {
          var hsv = rgbToHsv(this._r, this._g, this._b);
          return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };
        },
        toHsvString: function() {
          var hsv = rgbToHsv(this._r, this._g, this._b);
          var h2 = mathRound(hsv.h * 360), s2 = mathRound(hsv.s * 100), v2 = mathRound(hsv.v * 100);
          return this._a == 1 ? "hsv(" + h2 + ", " + s2 + "%, " + v2 + "%)" : "hsva(" + h2 + ", " + s2 + "%, " + v2 + "%, " + this._roundA + ")";
        },
        toHsl: function() {
          var hsl = rgbToHsl(this._r, this._g, this._b);
          return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };
        },
        toHslString: function() {
          var hsl = rgbToHsl(this._r, this._g, this._b);
          var h2 = mathRound(hsl.h * 360), s2 = mathRound(hsl.s * 100), l2 = mathRound(hsl.l * 100);
          return this._a == 1 ? "hsl(" + h2 + ", " + s2 + "%, " + l2 + "%)" : "hsla(" + h2 + ", " + s2 + "%, " + l2 + "%, " + this._roundA + ")";
        },
        toHex: function(allow3Char) {
          return rgbToHex(this._r, this._g, this._b, allow3Char);
        },
        toHexString: function(allow3Char) {
          return "#" + this.toHex(allow3Char);
        },
        toHex8: function(allow4Char) {
          return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);
        },
        toHex8String: function(allow4Char) {
          return "#" + this.toHex8(allow4Char);
        },
        toRgb: function() {
          return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };
        },
        toRgbString: function() {
          return this._a == 1 ? "rgb(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ")" : "rgba(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ", " + this._roundA + ")";
        },
        toPercentageRgb: function() {
          return { r: mathRound(bound01(this._r, 255) * 100) + "%", g: mathRound(bound01(this._g, 255) * 100) + "%", b: mathRound(bound01(this._b, 255) * 100) + "%", a: this._a };
        },
        toPercentageRgbString: function() {
          return this._a == 1 ? "rgb(" + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%)" : "rgba(" + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%, " + this._roundA + ")";
        },
        toName: function() {
          if (this._a === 0) {
            return "transparent";
          }
          if (this._a < 1) {
            return false;
          }
          return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;
        },
        toFilter: function(secondColor) {
          var hex8String = "#" + rgbaToArgbHex(this._r, this._g, this._b, this._a);
          var secondHex8String = hex8String;
          var gradientType = this._gradientType ? "GradientType = 1, " : "";
          if (secondColor) {
            var s2 = tinycolor2(secondColor);
            secondHex8String = "#" + rgbaToArgbHex(s2._r, s2._g, s2._b, s2._a);
          }
          return "progid:DXImageTransform.Microsoft.gradient(" + gradientType + "startColorstr=" + hex8String + ",endColorstr=" + secondHex8String + ")";
        },
        toString: function(format) {
          var formatSet = !!format;
          format = format || this._format;
          var formattedString = false;
          var hasAlpha = this._a < 1 && this._a >= 0;
          var needsAlphaFormat = !formatSet && hasAlpha && (format === "hex" || format === "hex6" || format === "hex3" || format === "hex4" || format === "hex8" || format === "name");
          if (needsAlphaFormat) {
            if (format === "name" && this._a === 0) {
              return this.toName();
            }
            return this.toRgbString();
          }
          if (format === "rgb") {
            formattedString = this.toRgbString();
          }
          if (format === "prgb") {
            formattedString = this.toPercentageRgbString();
          }
          if (format === "hex" || format === "hex6") {
            formattedString = this.toHexString();
          }
          if (format === "hex3") {
            formattedString = this.toHexString(true);
          }
          if (format === "hex4") {
            formattedString = this.toHex8String(true);
          }
          if (format === "hex8") {
            formattedString = this.toHex8String();
          }
          if (format === "name") {
            formattedString = this.toName();
          }
          if (format === "hsl") {
            formattedString = this.toHslString();
          }
          if (format === "hsv") {
            formattedString = this.toHsvString();
          }
          return formattedString || this.toHexString();
        },
        clone: function() {
          return tinycolor2(this.toString());
        },
        _applyModification: function(fn3, args) {
          var color2 = fn3.apply(null, [this].concat([].slice.call(args)));
          this._r = color2._r;
          this._g = color2._g;
          this._b = color2._b;
          this.setAlpha(color2._a);
          return this;
        },
        lighten: function() {
          return this._applyModification(lighten, arguments);
        },
        brighten: function() {
          return this._applyModification(brighten, arguments);
        },
        darken: function() {
          return this._applyModification(darken, arguments);
        },
        desaturate: function() {
          return this._applyModification(desaturate, arguments);
        },
        saturate: function() {
          return this._applyModification(saturate, arguments);
        },
        greyscale: function() {
          return this._applyModification(greyscale, arguments);
        },
        spin: function() {
          return this._applyModification(spin, arguments);
        },
        _applyCombination: function(fn3, args) {
          return fn3.apply(null, [this].concat([].slice.call(args)));
        },
        analogous: function() {
          return this._applyCombination(analogous, arguments);
        },
        complement: function() {
          return this._applyCombination(complement, arguments);
        },
        monochromatic: function() {
          return this._applyCombination(monochromatic, arguments);
        },
        splitcomplement: function() {
          return this._applyCombination(splitcomplement, arguments);
        },
        triad: function() {
          return this._applyCombination(triad, arguments);
        },
        tetrad: function() {
          return this._applyCombination(tetrad, arguments);
        }
      };
      tinycolor2.fromRatio = function(color2, opts) {
        if (typeof color2 == "object") {
          var newColor = {};
          for (var i2 in color2) {
            if (color2.hasOwnProperty(i2)) {
              if (i2 === "a") {
                newColor[i2] = color2[i2];
              } else {
                newColor[i2] = convertToPercentage(color2[i2]);
              }
            }
          }
          color2 = newColor;
        }
        return tinycolor2(color2, opts);
      };
      function inputToRGB(color2) {
        var rgb = { r: 0, g: 0, b: 0 };
        var a2 = 1;
        var s2 = null;
        var v2 = null;
        var l2 = null;
        var ok = false;
        var format = false;
        if (typeof color2 == "string") {
          color2 = stringInputToObject(color2);
        }
        if (typeof color2 == "object") {
          if (isValidCSSUnit(color2.r) && isValidCSSUnit(color2.g) && isValidCSSUnit(color2.b)) {
            rgb = rgbToRgb(color2.r, color2.g, color2.b);
            ok = true;
            format = String(color2.r).substr(-1) === "%" ? "prgb" : "rgb";
          } else if (isValidCSSUnit(color2.h) && isValidCSSUnit(color2.s) && isValidCSSUnit(color2.v)) {
            s2 = convertToPercentage(color2.s);
            v2 = convertToPercentage(color2.v);
            rgb = hsvToRgb(color2.h, s2, v2);
            ok = true;
            format = "hsv";
          } else if (isValidCSSUnit(color2.h) && isValidCSSUnit(color2.s) && isValidCSSUnit(color2.l)) {
            s2 = convertToPercentage(color2.s);
            l2 = convertToPercentage(color2.l);
            rgb = hslToRgb(color2.h, s2, l2);
            ok = true;
            format = "hsl";
          }
          if (color2.hasOwnProperty("a")) {
            a2 = color2.a;
          }
        }
        a2 = boundAlpha(a2);
        return {
          ok,
          format: color2.format || format,
          r: mathMin(255, mathMax(rgb.r, 0)),
          g: mathMin(255, mathMax(rgb.g, 0)),
          b: mathMin(255, mathMax(rgb.b, 0)),
          a: a2
        };
      }
      function rgbToRgb(r2, g2, b2) {
        return {
          r: bound01(r2, 255) * 255,
          g: bound01(g2, 255) * 255,
          b: bound01(b2, 255) * 255
        };
      }
      function rgbToHsl(r2, g2, b2) {
        r2 = bound01(r2, 255);
        g2 = bound01(g2, 255);
        b2 = bound01(b2, 255);
        var max2 = mathMax(r2, g2, b2), min2 = mathMin(r2, g2, b2);
        var h2, s2, l2 = (max2 + min2) / 2;
        if (max2 == min2) {
          h2 = s2 = 0;
        } else {
          var d2 = max2 - min2;
          s2 = l2 > 0.5 ? d2 / (2 - max2 - min2) : d2 / (max2 + min2);
          switch (max2) {
            case r2:
              h2 = (g2 - b2) / d2 + (g2 < b2 ? 6 : 0);
              break;
            case g2:
              h2 = (b2 - r2) / d2 + 2;
              break;
            case b2:
              h2 = (r2 - g2) / d2 + 4;
              break;
          }
          h2 /= 6;
        }
        return { h: h2, s: s2, l: l2 };
      }
      function hslToRgb(h2, s2, l2) {
        var r2, g2, b2;
        h2 = bound01(h2, 360);
        s2 = bound01(s2, 100);
        l2 = bound01(l2, 100);
        function hue2rgb(p3, q3, t2) {
          if (t2 < 0)
            t2 += 1;
          if (t2 > 1)
            t2 -= 1;
          if (t2 < 1 / 6)
            return p3 + (q3 - p3) * 6 * t2;
          if (t2 < 1 / 2)
            return q3;
          if (t2 < 2 / 3)
            return p3 + (q3 - p3) * (2 / 3 - t2) * 6;
          return p3;
        }
        if (s2 === 0) {
          r2 = g2 = b2 = l2;
        } else {
          var q2 = l2 < 0.5 ? l2 * (1 + s2) : l2 + s2 - l2 * s2;
          var p2 = 2 * l2 - q2;
          r2 = hue2rgb(p2, q2, h2 + 1 / 3);
          g2 = hue2rgb(p2, q2, h2);
          b2 = hue2rgb(p2, q2, h2 - 1 / 3);
        }
        return { r: r2 * 255, g: g2 * 255, b: b2 * 255 };
      }
      function rgbToHsv(r2, g2, b2) {
        r2 = bound01(r2, 255);
        g2 = bound01(g2, 255);
        b2 = bound01(b2, 255);
        var max2 = mathMax(r2, g2, b2), min2 = mathMin(r2, g2, b2);
        var h2, s2, v2 = max2;
        var d2 = max2 - min2;
        s2 = max2 === 0 ? 0 : d2 / max2;
        if (max2 == min2) {
          h2 = 0;
        } else {
          switch (max2) {
            case r2:
              h2 = (g2 - b2) / d2 + (g2 < b2 ? 6 : 0);
              break;
            case g2:
              h2 = (b2 - r2) / d2 + 2;
              break;
            case b2:
              h2 = (r2 - g2) / d2 + 4;
              break;
          }
          h2 /= 6;
        }
        return { h: h2, s: s2, v: v2 };
      }
      function hsvToRgb(h2, s2, v2) {
        h2 = bound01(h2, 360) * 6;
        s2 = bound01(s2, 100);
        v2 = bound01(v2, 100);
        var i2 = Math2.floor(h2), f = h2 - i2, p2 = v2 * (1 - s2), q2 = v2 * (1 - f * s2), t2 = v2 * (1 - (1 - f) * s2), mod = i2 % 6, r2 = [v2, q2, p2, p2, t2, v2][mod], g2 = [t2, v2, v2, q2, p2, p2][mod], b2 = [p2, p2, t2, v2, v2, q2][mod];
        return { r: r2 * 255, g: g2 * 255, b: b2 * 255 };
      }
      function rgbToHex(r2, g2, b2, allow3Char) {
        var hex2 = [
          pad2(mathRound(r2).toString(16)),
          pad2(mathRound(g2).toString(16)),
          pad2(mathRound(b2).toString(16))
        ];
        if (allow3Char && hex2[0].charAt(0) == hex2[0].charAt(1) && hex2[1].charAt(0) == hex2[1].charAt(1) && hex2[2].charAt(0) == hex2[2].charAt(1)) {
          return hex2[0].charAt(0) + hex2[1].charAt(0) + hex2[2].charAt(0);
        }
        return hex2.join("");
      }
      function rgbaToHex(r2, g2, b2, a2, allow4Char) {
        var hex2 = [
          pad2(mathRound(r2).toString(16)),
          pad2(mathRound(g2).toString(16)),
          pad2(mathRound(b2).toString(16)),
          pad2(convertDecimalToHex(a2))
        ];
        if (allow4Char && hex2[0].charAt(0) == hex2[0].charAt(1) && hex2[1].charAt(0) == hex2[1].charAt(1) && hex2[2].charAt(0) == hex2[2].charAt(1) && hex2[3].charAt(0) == hex2[3].charAt(1)) {
          return hex2[0].charAt(0) + hex2[1].charAt(0) + hex2[2].charAt(0) + hex2[3].charAt(0);
        }
        return hex2.join("");
      }
      function rgbaToArgbHex(r2, g2, b2, a2) {
        var hex2 = [
          pad2(convertDecimalToHex(a2)),
          pad2(mathRound(r2).toString(16)),
          pad2(mathRound(g2).toString(16)),
          pad2(mathRound(b2).toString(16))
        ];
        return hex2.join("");
      }
      tinycolor2.equals = function(color1, color2) {
        if (!color1 || !color2) {
          return false;
        }
        return tinycolor2(color1).toRgbString() == tinycolor2(color2).toRgbString();
      };
      tinycolor2.random = function() {
        return tinycolor2.fromRatio({
          r: mathRandom(),
          g: mathRandom(),
          b: mathRandom()
        });
      };
      function desaturate(color2, amount) {
        amount = amount === 0 ? 0 : amount || 10;
        var hsl = tinycolor2(color2).toHsl();
        hsl.s -= amount / 100;
        hsl.s = clamp01(hsl.s);
        return tinycolor2(hsl);
      }
      function saturate(color2, amount) {
        amount = amount === 0 ? 0 : amount || 10;
        var hsl = tinycolor2(color2).toHsl();
        hsl.s += amount / 100;
        hsl.s = clamp01(hsl.s);
        return tinycolor2(hsl);
      }
      function greyscale(color2) {
        return tinycolor2(color2).desaturate(100);
      }
      function lighten(color2, amount) {
        amount = amount === 0 ? 0 : amount || 10;
        var hsl = tinycolor2(color2).toHsl();
        hsl.l += amount / 100;
        hsl.l = clamp01(hsl.l);
        return tinycolor2(hsl);
      }
      function brighten(color2, amount) {
        amount = amount === 0 ? 0 : amount || 10;
        var rgb = tinycolor2(color2).toRgb();
        rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * -(amount / 100))));
        rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * -(amount / 100))));
        rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * -(amount / 100))));
        return tinycolor2(rgb);
      }
      function darken(color2, amount) {
        amount = amount === 0 ? 0 : amount || 10;
        var hsl = tinycolor2(color2).toHsl();
        hsl.l -= amount / 100;
        hsl.l = clamp01(hsl.l);
        return tinycolor2(hsl);
      }
      function spin(color2, amount) {
        var hsl = tinycolor2(color2).toHsl();
        var hue2 = (hsl.h + amount) % 360;
        hsl.h = hue2 < 0 ? 360 + hue2 : hue2;
        return tinycolor2(hsl);
      }
      function complement(color2) {
        var hsl = tinycolor2(color2).toHsl();
        hsl.h = (hsl.h + 180) % 360;
        return tinycolor2(hsl);
      }
      function triad(color2) {
        var hsl = tinycolor2(color2).toHsl();
        var h2 = hsl.h;
        return [
          tinycolor2(color2),
          tinycolor2({ h: (h2 + 120) % 360, s: hsl.s, l: hsl.l }),
          tinycolor2({ h: (h2 + 240) % 360, s: hsl.s, l: hsl.l })
        ];
      }
      function tetrad(color2) {
        var hsl = tinycolor2(color2).toHsl();
        var h2 = hsl.h;
        return [
          tinycolor2(color2),
          tinycolor2({ h: (h2 + 90) % 360, s: hsl.s, l: hsl.l }),
          tinycolor2({ h: (h2 + 180) % 360, s: hsl.s, l: hsl.l }),
          tinycolor2({ h: (h2 + 270) % 360, s: hsl.s, l: hsl.l })
        ];
      }
      function splitcomplement(color2) {
        var hsl = tinycolor2(color2).toHsl();
        var h2 = hsl.h;
        return [
          tinycolor2(color2),
          tinycolor2({ h: (h2 + 72) % 360, s: hsl.s, l: hsl.l }),
          tinycolor2({ h: (h2 + 216) % 360, s: hsl.s, l: hsl.l })
        ];
      }
      function analogous(color2, results, slices) {
        results = results || 6;
        slices = slices || 30;
        var hsl = tinycolor2(color2).toHsl();
        var part = 360 / slices;
        var ret = [tinycolor2(color2)];
        for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results; ) {
          hsl.h = (hsl.h + part) % 360;
          ret.push(tinycolor2(hsl));
        }
        return ret;
      }
      function monochromatic(color2, results) {
        results = results || 6;
        var hsv = tinycolor2(color2).toHsv();
        var h2 = hsv.h, s2 = hsv.s, v2 = hsv.v;
        var ret = [];
        var modification = 1 / results;
        while (results--) {
          ret.push(tinycolor2({ h: h2, s: s2, v: v2 }));
          v2 = (v2 + modification) % 1;
        }
        return ret;
      }
      tinycolor2.mix = function(color1, color2, amount) {
        amount = amount === 0 ? 0 : amount || 50;
        var rgb1 = tinycolor2(color1).toRgb();
        var rgb2 = tinycolor2(color2).toRgb();
        var p2 = amount / 100;
        var rgba2 = {
          r: (rgb2.r - rgb1.r) * p2 + rgb1.r,
          g: (rgb2.g - rgb1.g) * p2 + rgb1.g,
          b: (rgb2.b - rgb1.b) * p2 + rgb1.b,
          a: (rgb2.a - rgb1.a) * p2 + rgb1.a
        };
        return tinycolor2(rgba2);
      };
      tinycolor2.readability = function(color1, color2) {
        var c1 = tinycolor2(color1);
        var c2 = tinycolor2(color2);
        return (Math2.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math2.min(c1.getLuminance(), c2.getLuminance()) + 0.05);
      };
      tinycolor2.isReadable = function(color1, color2, wcag2) {
        var readability = tinycolor2.readability(color1, color2);
        var wcag2Parms, out;
        out = false;
        wcag2Parms = validateWCAG2Parms(wcag2);
        switch (wcag2Parms.level + wcag2Parms.size) {
          case "AAsmall":
          case "AAAlarge":
            out = readability >= 4.5;
            break;
          case "AAlarge":
            out = readability >= 3;
            break;
          case "AAAsmall":
            out = readability >= 7;
            break;
        }
        return out;
      };
      tinycolor2.mostReadable = function(baseColor, colorList, args) {
        var bestColor = null;
        var bestScore = 0;
        var readability;
        var includeFallbackColors, level, size;
        args = args || {};
        includeFallbackColors = args.includeFallbackColors;
        level = args.level;
        size = args.size;
        for (var i2 = 0; i2 < colorList.length; i2++) {
          readability = tinycolor2.readability(baseColor, colorList[i2]);
          if (readability > bestScore) {
            bestScore = readability;
            bestColor = tinycolor2(colorList[i2]);
          }
        }
        if (tinycolor2.isReadable(baseColor, bestColor, { "level": level, "size": size }) || !includeFallbackColors) {
          return bestColor;
        } else {
          args.includeFallbackColors = false;
          return tinycolor2.mostReadable(baseColor, ["#fff", "#000"], args);
        }
      };
      var names2 = tinycolor2.names = {
        aliceblue: "f0f8ff",
        antiquewhite: "faebd7",
        aqua: "0ff",
        aquamarine: "7fffd4",
        azure: "f0ffff",
        beige: "f5f5dc",
        bisque: "ffe4c4",
        black: "000",
        blanchedalmond: "ffebcd",
        blue: "00f",
        blueviolet: "8a2be2",
        brown: "a52a2a",
        burlywood: "deb887",
        burntsienna: "ea7e5d",
        cadetblue: "5f9ea0",
        chartreuse: "7fff00",
        chocolate: "d2691e",
        coral: "ff7f50",
        cornflowerblue: "6495ed",
        cornsilk: "fff8dc",
        crimson: "dc143c",
        cyan: "0ff",
        darkblue: "00008b",
        darkcyan: "008b8b",
        darkgoldenrod: "b8860b",
        darkgray: "a9a9a9",
        darkgreen: "006400",
        darkgrey: "a9a9a9",
        darkkhaki: "bdb76b",
        darkmagenta: "8b008b",
        darkolivegreen: "556b2f",
        darkorange: "ff8c00",
        darkorchid: "9932cc",
        darkred: "8b0000",
        darksalmon: "e9967a",
        darkseagreen: "8fbc8f",
        darkslateblue: "483d8b",
        darkslategray: "2f4f4f",
        darkslategrey: "2f4f4f",
        darkturquoise: "00ced1",
        darkviolet: "9400d3",
        deeppink: "ff1493",
        deepskyblue: "00bfff",
        dimgray: "696969",
        dimgrey: "696969",
        dodgerblue: "1e90ff",
        firebrick: "b22222",
        floralwhite: "fffaf0",
        forestgreen: "228b22",
        fuchsia: "f0f",
        gainsboro: "dcdcdc",
        ghostwhite: "f8f8ff",
        gold: "ffd700",
        goldenrod: "daa520",
        gray: "808080",
        green: "008000",
        greenyellow: "adff2f",
        grey: "808080",
        honeydew: "f0fff0",
        hotpink: "ff69b4",
        indianred: "cd5c5c",
        indigo: "4b0082",
        ivory: "fffff0",
        khaki: "f0e68c",
        lavender: "e6e6fa",
        lavenderblush: "fff0f5",
        lawngreen: "7cfc00",
        lemonchiffon: "fffacd",
        lightblue: "add8e6",
        lightcoral: "f08080",
        lightcyan: "e0ffff",
        lightgoldenrodyellow: "fafad2",
        lightgray: "d3d3d3",
        lightgreen: "90ee90",
        lightgrey: "d3d3d3",
        lightpink: "ffb6c1",
        lightsalmon: "ffa07a",
        lightseagreen: "20b2aa",
        lightskyblue: "87cefa",
        lightslategray: "789",
        lightslategrey: "789",
        lightsteelblue: "b0c4de",
        lightyellow: "ffffe0",
        lime: "0f0",
        limegreen: "32cd32",
        linen: "faf0e6",
        magenta: "f0f",
        maroon: "800000",
        mediumaquamarine: "66cdaa",
        mediumblue: "0000cd",
        mediumorchid: "ba55d3",
        mediumpurple: "9370db",
        mediumseagreen: "3cb371",
        mediumslateblue: "7b68ee",
        mediumspringgreen: "00fa9a",
        mediumturquoise: "48d1cc",
        mediumvioletred: "c71585",
        midnightblue: "191970",
        mintcream: "f5fffa",
        mistyrose: "ffe4e1",
        moccasin: "ffe4b5",
        navajowhite: "ffdead",
        navy: "000080",
        oldlace: "fdf5e6",
        olive: "808000",
        olivedrab: "6b8e23",
        orange: "ffa500",
        orangered: "ff4500",
        orchid: "da70d6",
        palegoldenrod: "eee8aa",
        palegreen: "98fb98",
        paleturquoise: "afeeee",
        palevioletred: "db7093",
        papayawhip: "ffefd5",
        peachpuff: "ffdab9",
        peru: "cd853f",
        pink: "ffc0cb",
        plum: "dda0dd",
        powderblue: "b0e0e6",
        purple: "800080",
        rebeccapurple: "663399",
        red: "f00",
        rosybrown: "bc8f8f",
        royalblue: "4169e1",
        saddlebrown: "8b4513",
        salmon: "fa8072",
        sandybrown: "f4a460",
        seagreen: "2e8b57",
        seashell: "fff5ee",
        sienna: "a0522d",
        silver: "c0c0c0",
        skyblue: "87ceeb",
        slateblue: "6a5acd",
        slategray: "708090",
        slategrey: "708090",
        snow: "fffafa",
        springgreen: "00ff7f",
        steelblue: "4682b4",
        tan: "d2b48c",
        teal: "008080",
        thistle: "d8bfd8",
        tomato: "ff6347",
        turquoise: "40e0d0",
        violet: "ee82ee",
        wheat: "f5deb3",
        white: "fff",
        whitesmoke: "f5f5f5",
        yellow: "ff0",
        yellowgreen: "9acd32"
      };
      var hexNames = tinycolor2.hexNames = flip2(names2);
      function flip2(o2) {
        var flipped = {};
        for (var i2 in o2) {
          if (o2.hasOwnProperty(i2)) {
            flipped[o2[i2]] = i2;
          }
        }
        return flipped;
      }
      function boundAlpha(a2) {
        a2 = parseFloat(a2);
        if (isNaN(a2) || a2 < 0 || a2 > 1) {
          a2 = 1;
        }
        return a2;
      }
      function bound01(n2, max2) {
        if (isOnePointZero(n2)) {
          n2 = "100%";
        }
        var processPercent = isPercentage(n2);
        n2 = mathMin(max2, mathMax(0, parseFloat(n2)));
        if (processPercent) {
          n2 = parseInt(n2 * max2, 10) / 100;
        }
        if (Math2.abs(n2 - max2) < 1e-6) {
          return 1;
        }
        return n2 % max2 / parseFloat(max2);
      }
      function clamp01(val) {
        return mathMin(1, mathMax(0, val));
      }
      function parseIntFromHex(val) {
        return parseInt(val, 16);
      }
      function isOnePointZero(n2) {
        return typeof n2 == "string" && n2.indexOf(".") != -1 && parseFloat(n2) === 1;
      }
      function isPercentage(n2) {
        return typeof n2 === "string" && n2.indexOf("%") != -1;
      }
      function pad2(c2) {
        return c2.length == 1 ? "0" + c2 : "" + c2;
      }
      function convertToPercentage(n2) {
        if (n2 <= 1) {
          n2 = n2 * 100 + "%";
        }
        return n2;
      }
      function convertDecimalToHex(d2) {
        return Math2.round(parseFloat(d2) * 255).toString(16);
      }
      function convertHexToDecimal(h2) {
        return parseIntFromHex(h2) / 255;
      }
      var matchers = function() {
        var CSS_INTEGER = "[-\\+]?\\d+%?";
        var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?";
        var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")";
        var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
        var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
        return {
          CSS_UNIT: new RegExp(CSS_UNIT),
          rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
          rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
          hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
          hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
          hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
          hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
          hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
          hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
          hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
          hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
        };
      }();
      function isValidCSSUnit(color2) {
        return !!matchers.CSS_UNIT.exec(color2);
      }
      function stringInputToObject(color2) {
        color2 = color2.replace(trimLeft, "").replace(trimRight, "").toLowerCase();
        var named = false;
        if (names2[color2]) {
          color2 = names2[color2];
          named = true;
        } else if (color2 == "transparent") {
          return { r: 0, g: 0, b: 0, a: 0, format: "name" };
        }
        var match;
        if (match = matchers.rgb.exec(color2)) {
          return { r: match[1], g: match[2], b: match[3] };
        }
        if (match = matchers.rgba.exec(color2)) {
          return { r: match[1], g: match[2], b: match[3], a: match[4] };
        }
        if (match = matchers.hsl.exec(color2)) {
          return { h: match[1], s: match[2], l: match[3] };
        }
        if (match = matchers.hsla.exec(color2)) {
          return { h: match[1], s: match[2], l: match[3], a: match[4] };
        }
        if (match = matchers.hsv.exec(color2)) {
          return { h: match[1], s: match[2], v: match[3] };
        }
        if (match = matchers.hsva.exec(color2)) {
          return { h: match[1], s: match[2], v: match[3], a: match[4] };
        }
        if (match = matchers.hex8.exec(color2)) {
          return {
            r: parseIntFromHex(match[1]),
            g: parseIntFromHex(match[2]),
            b: parseIntFromHex(match[3]),
            a: convertHexToDecimal(match[4]),
            format: named ? "name" : "hex8"
          };
        }
        if (match = matchers.hex6.exec(color2)) {
          return {
            r: parseIntFromHex(match[1]),
            g: parseIntFromHex(match[2]),
            b: parseIntFromHex(match[3]),
            format: named ? "name" : "hex"
          };
        }
        if (match = matchers.hex4.exec(color2)) {
          return {
            r: parseIntFromHex(match[1] + "" + match[1]),
            g: parseIntFromHex(match[2] + "" + match[2]),
            b: parseIntFromHex(match[3] + "" + match[3]),
            a: convertHexToDecimal(match[4] + "" + match[4]),
            format: named ? "name" : "hex8"
          };
        }
        if (match = matchers.hex3.exec(color2)) {
          return {
            r: parseIntFromHex(match[1] + "" + match[1]),
            g: parseIntFromHex(match[2] + "" + match[2]),
            b: parseIntFromHex(match[3] + "" + match[3]),
            format: named ? "name" : "hex"
          };
        }
        return false;
      }
      function validateWCAG2Parms(parms) {
        var level, size;
        parms = parms || { "level": "AA", "size": "small" };
        level = (parms.level || "AA").toUpperCase();
        size = (parms.size || "small").toLowerCase();
        if (level !== "AA" && level !== "AAA") {
          level = "AA";
        }
        if (size !== "small" && size !== "large") {
          size = "small";
        }
        return { "level": level, "size": size };
      }
      if (module.exports) {
        module.exports = tinycolor2;
      } else {
        window.tinycolor = tinycolor2;
      }
    })(Math);
  })(tinycolor);
  Object.defineProperty(color$1, "__esModule", {
    value: true
  });
  color$1.isvalidColorString = color$1.red = color$1.getContrastingColor = color$1.isValidHex = color$1.toState = color$1.simpleCheckForValidColor = void 0;
  var _each = each;
  var _each2 = _interopRequireDefault$f(_each);
  var _tinycolor = tinycolor.exports;
  var _tinycolor2 = _interopRequireDefault$f(_tinycolor);
  function _interopRequireDefault$f(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  color$1.simpleCheckForValidColor = function simpleCheckForValidColor(data) {
    var keysToCheck = ["r", "g", "b", "a", "h", "s", "l", "v"];
    var checked = 0;
    var passed = 0;
    (0, _each2.default)(keysToCheck, function(letter) {
      if (data[letter]) {
        checked += 1;
        if (!isNaN(data[letter])) {
          passed += 1;
        }
        if (letter === "s" || letter === "l") {
          var percentPatt = /^\d+%$/;
          if (percentPatt.test(data[letter])) {
            passed += 1;
          }
        }
      }
    });
    return checked === passed ? data : false;
  };
  var toState = color$1.toState = function toState2(data, oldHue) {
    var color2 = data.hex ? (0, _tinycolor2.default)(data.hex) : (0, _tinycolor2.default)(data);
    var hsl = color2.toHsl();
    var hsv = color2.toHsv();
    var rgb = color2.toRgb();
    var hex2 = color2.toHex();
    if (hsl.s === 0) {
      hsl.h = oldHue || 0;
      hsv.h = oldHue || 0;
    }
    var transparent = hex2 === "000000" && rgb.a === 0;
    return {
      hsl,
      hex: transparent ? "transparent" : "#" + hex2,
      rgb,
      hsv,
      oldHue: data.h || oldHue || hsl.h,
      source: data.source
    };
  };
  color$1.isValidHex = function isValidHex(hex2) {
    if (hex2 === "transparent") {
      return true;
    }
    var lh = String(hex2).charAt(0) === "#" ? 1 : 0;
    return hex2.length !== 4 + lh && hex2.length < 7 + lh && (0, _tinycolor2.default)(hex2).isValid();
  };
  color$1.getContrastingColor = function getContrastingColor(data) {
    if (!data) {
      return "#fff";
    }
    var col = toState(data);
    if (col.hex === "transparent") {
      return "rgba(0,0,0,0.4)";
    }
    var yiq = (col.rgb.r * 299 + col.rgb.g * 587 + col.rgb.b * 114) / 1e3;
    return yiq >= 128 ? "#000" : "#fff";
  };
  color$1.red = {
    hsl: { a: 1, h: 0, l: 0.5, s: 1 },
    hex: "#ff0000",
    rgb: { r: 255, g: 0, b: 0, a: 1 },
    hsv: { h: 0, s: 1, v: 1, a: 1 }
  };
  color$1.isvalidColorString = function isvalidColorString(string, type) {
    var stringWithoutDegree = string.replace("\xB0", "");
    return (0, _tinycolor2.default)(type + " (" + stringWithoutDegree + ")")._ok;
  };
  [
    {
      id: "red",
      title: "Red",
      colors: ["#992136", "#cc2c48", "#ff375a", "#ff8066", "#e1c4be", "#f0e1de"]
    },
    {
      id: "green",
      title: "Green",
      colors: ["#006452", "#00866e", "#00c8a5", "#80dbb7", "#bee1d4", "#def0e9"]
    },
    {
      id: "yellow",
      title: "Yellow",
      colors: ["#cc9000", "#e6a200", "#ffb400", "#eec779", "#e1d4be", "#f0e9de"]
    }
  ].map((palette) => __spreadProps(__spreadValues({}, palette), {
    colors: palette.colors.map((hex2, index2) => {
      let name = "";
      switch (index2) {
        case 0:
          name = "90";
          break;
        case 1:
          name = "70";
          break;
        case 2:
          name = "60";
          break;
        case 3:
          name = "50";
          break;
        case 4:
          name = "40";
          break;
        case 5:
          name = "20";
          break;
      }
      return { hex: hex2, name, alpha: 1 };
    })
  }));
  function IconView(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconView"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3.02 12.826a1.644 1.644 0 010-1.652A10.371 10.371 0 0112 6c3.833 0 7.183 2.079 8.98 5.174.296.511.296 1.14 0 1.652A10.371 10.371 0 0112 18a10.371 10.371 0 01-8.98-5.174zm19.706-1.553c.22.46.22.994 0 1.454A11.876 11.876 0 0112 19.5a11.876 11.876 0 01-10.726-6.773 1.69 1.69 0 010-1.454A11.876 11.876 0 0112 4.5c4.732 0 8.818 2.768 10.726 6.773zM16 12a4 4 0 11-7.839-1.129c.122-.413.607-.551.98-.336.347.2.465.637.396 1.031a2.5 2.5 0 101.732-1.958c-.276.085-.58.089-.83-.056-.504-.29-.56-.994-.025-1.225A4 4 0 0116 12z"
    }));
  }
  var MemoIconView = React__default__default["default"].memo(IconView);
  function IconViewSlash(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconViewSlash"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4.222 19.778a.75.75 0 010-1.06L18.717 4.221a.75.75 0 011.061 1.06l-1.203 1.203a11.926 11.926 0 014.151 4.788c.22.46.22.994 0 1.454A11.876 11.876 0 0112 19.5c-1.877 0-3.651-.435-5.23-1.21l-1.488 1.488a.75.75 0 01-1.06 0zM15.309 9.752L17.49 7.57a10.427 10.427 0 013.489 3.604c.296.51.296 1.14 0 1.652A10.372 10.372 0 0112 18c-1.455 0-2.841-.3-4.098-.841l1.85-1.85a4 4 0 005.557-5.557zm-1.092 1.091l-3.373 3.374a2.5 2.5 0 003.373-3.373zm.296-4.537C13.71 6.106 12.867 6 12 6a10.372 10.372 0 00-8.98 5.174 1.644 1.644 0 000 1.652 10.423 10.423 0 002.265 2.708l-1.063 1.064a11.916 11.916 0 01-2.948-3.871 1.69 1.69 0 010-1.454A11.876 11.876 0 0112 4.5c1.3 0 2.553.209 3.724.596l-1.21 1.21z"
    }));
  }
  var MemoIconViewSlash = React__default__default["default"].memo(IconViewSlash);
  var TextInputType;
  (function(TextInputType2) {
    TextInputType2["Text"] = "text";
    TextInputType2["Password"] = "password";
    TextInputType2["Number"] = "number";
  })(TextInputType || (TextInputType = {}));
  var Validation;
  (function(Validation2) {
    Validation2["Default"] = "Default";
    Validation2["Loading"] = "Loading";
    Validation2["Success"] = "Success";
    Validation2["Error"] = "Error";
  })(Validation || (Validation = {}));
  ({
    [Validation.Default]: "tw-border-black-20",
    [Validation.Loading]: "tw-border-black-10",
    [Validation.Success]: "tw-border-green-50",
    [Validation.Error]: "tw-border-red-60"
  });
  function IconImageGrid2(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconImageGrid2"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M4.5 8.667a.833.833 0 00-.833.833v5c0 .46.373.833.833.833h4.167c.46 0 .833-.373.833-.833v-5a.833.833 0 00-.833-.833H4.5zM4.5 7h4.167a2.5 2.5 0 012.5 2.5v5a2.5 2.5 0 01-2.5 2.5H4.5A2.5 2.5 0 012 14.5v-5A2.5 2.5 0 014.5 7zm10.833 1.667a.833.833 0 00-.833.833v5c0 .46.373.833.833.833H19.5c.46 0 .833-.373.833-.833v-5a.833.833 0 00-.833-.833h-4.167zm0-1.667H19.5A2.5 2.5 0 0122 9.5v5a2.5 2.5 0 01-2.5 2.5h-4.167a2.5 2.5 0 01-2.5-2.5v-5a2.5 2.5 0 012.5-2.5z"
    }));
  }
  var MemoIconImageGrid2 = React__default__default["default"].memo(IconImageGrid2);
  function IconListBullets(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconListBullets"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M21 6a1 1 0 01-1 1H8a1 1 0 110-2h12a1 1 0 011 1zM7 18a1 1 0 011-1h10a1 1 0 110 2H8a1 1 0 01-1-1zM19 10a1 1 0 01-1 1H8a1 1 0 110-2h10a1 1 0 011 1zM21 14a1 1 0 01-1 1H8a1 1 0 110-2h12a1 1 0 011 1z"
    }), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M3 18.2a1.2 1.2 0 112.4 0 1.2 1.2 0 01-2.4 0zM3 10.2a1.2 1.2 0 112.4 0 1.2 1.2 0 01-2.4 0zM3 14.2a1.2 1.2 0 112.4 0 1.2 1.2 0 01-2.4 0zM3 6.2a1.2 1.2 0 112.4 0 1.2 1.2 0 01-2.4 0z"
    }));
  }
  var MemoIconListBullets = React__default__default["default"].memo(IconListBullets);
  function IconSearch(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconSearch"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M18.246 17.017c.06.036.118.08.172.13l3.26 3.078c.41.386.431 1.035.049 1.45a1.007 1.007 0 01-1.434.049l-3.26-3.077a1.024 1.024 0 01-.179-.223 9.032 9.032 0 01-5.723 2.038C6.088 20.462 2 16.329 2 11.23S6.088 2 11.13 2c5.044 0 9.132 4.133 9.132 9.23 0 2.191-.755 4.204-2.016 5.787zM11.13 18.41c3.922 0 7.102-3.214 7.102-7.18 0-3.964-3.18-7.179-7.102-7.179s-7.102 3.215-7.102 7.18 3.18 7.18 7.102 7.18z"
    }));
  }
  var MemoIconSearch = React__default__default["default"].memo(IconSearch);
  var BrandColorView;
  (function(BrandColorView2) {
    BrandColorView2["List"] = "List";
    BrandColorView2["Grid"] = "Grid";
  })(BrandColorView || (BrandColorView = {}));
  var DropdownSize;
  (function(DropdownSize2) {
    DropdownSize2["Small"] = "Small";
    DropdownSize2["Large"] = "Large";
  })(DropdownSize || (DropdownSize = {}));
  var common = {};
  var Alpha$1 = {};
  var lib$1 = {};
  var flattenNames$1 = {};
  var baseGetTag$3 = _baseGetTag;
  var isArray$b = isArray_1;
  var isObjectLike$6 = isObjectLike_1;
  var stringTag$3 = "[object String]";
  function isString$1(value) {
    return typeof value == "string" || !isArray$b(value) && isObjectLike$6(value) && baseGetTag$3(value) == stringTag$3;
  }
  var isString_1 = isString$1;
  var baseForOwn = _baseForOwn;
  var castFunction = _castFunction;
  function forOwn(object, iteratee) {
    return object && baseForOwn(object, castFunction(iteratee));
  }
  var forOwn_1 = forOwn;
  var overArg = _overArg;
  var getPrototype$3 = overArg(Object.getPrototypeOf, Object);
  var _getPrototype = getPrototype$3;
  var baseGetTag$2 = _baseGetTag;
  var getPrototype$2 = _getPrototype;
  var isObjectLike$5 = isObjectLike_1;
  var objectTag$3 = "[object Object]";
  var funcProto$2 = Function.prototype;
  var objectProto$9 = Object.prototype;
  var funcToString$2 = funcProto$2.toString;
  var hasOwnProperty$8 = objectProto$9.hasOwnProperty;
  var objectCtorString = funcToString$2.call(Object);
  function isPlainObject$4(value) {
    if (!isObjectLike$5(value) || baseGetTag$2(value) != objectTag$3) {
      return false;
    }
    var proto = getPrototype$2(value);
    if (proto === null) {
      return true;
    }
    var Ctor = hasOwnProperty$8.call(proto, "constructor") && proto.constructor;
    return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString$2.call(Ctor) == objectCtorString;
  }
  var isPlainObject_1 = isPlainObject$4;
  function arrayMap$2(array, iteratee) {
    var index2 = -1, length = array == null ? 0 : array.length, result = Array(length);
    while (++index2 < length) {
      result[index2] = iteratee(array[index2], index2, array);
    }
    return result;
  }
  var _arrayMap = arrayMap$2;
  function listCacheClear$1() {
    this.__data__ = [];
    this.size = 0;
  }
  var _listCacheClear = listCacheClear$1;
  function eq$5(value, other) {
    return value === other || value !== value && other !== other;
  }
  var eq_1 = eq$5;
  var eq$4 = eq_1;
  function assocIndexOf$4(array, key) {
    var length = array.length;
    while (length--) {
      if (eq$4(array[length][0], key)) {
        return length;
      }
    }
    return -1;
  }
  var _assocIndexOf = assocIndexOf$4;
  var assocIndexOf$3 = _assocIndexOf;
  var arrayProto = Array.prototype;
  var splice = arrayProto.splice;
  function listCacheDelete$1(key) {
    var data = this.__data__, index2 = assocIndexOf$3(data, key);
    if (index2 < 0) {
      return false;
    }
    var lastIndex = data.length - 1;
    if (index2 == lastIndex) {
      data.pop();
    } else {
      splice.call(data, index2, 1);
    }
    --this.size;
    return true;
  }
  var _listCacheDelete = listCacheDelete$1;
  var assocIndexOf$2 = _assocIndexOf;
  function listCacheGet$1(key) {
    var data = this.__data__, index2 = assocIndexOf$2(data, key);
    return index2 < 0 ? void 0 : data[index2][1];
  }
  var _listCacheGet = listCacheGet$1;
  var assocIndexOf$1 = _assocIndexOf;
  function listCacheHas$1(key) {
    return assocIndexOf$1(this.__data__, key) > -1;
  }
  var _listCacheHas = listCacheHas$1;
  var assocIndexOf = _assocIndexOf;
  function listCacheSet$1(key, value) {
    var data = this.__data__, index2 = assocIndexOf(data, key);
    if (index2 < 0) {
      ++this.size;
      data.push([key, value]);
    } else {
      data[index2][1] = value;
    }
    return this;
  }
  var _listCacheSet = listCacheSet$1;
  var listCacheClear = _listCacheClear;
  var listCacheDelete = _listCacheDelete;
  var listCacheGet = _listCacheGet;
  var listCacheHas = _listCacheHas;
  var listCacheSet = _listCacheSet;
  function ListCache$4(entries) {
    var index2 = -1, length = entries == null ? 0 : entries.length;
    this.clear();
    while (++index2 < length) {
      var entry = entries[index2];
      this.set(entry[0], entry[1]);
    }
  }
  ListCache$4.prototype.clear = listCacheClear;
  ListCache$4.prototype["delete"] = listCacheDelete;
  ListCache$4.prototype.get = listCacheGet;
  ListCache$4.prototype.has = listCacheHas;
  ListCache$4.prototype.set = listCacheSet;
  var _ListCache = ListCache$4;
  var ListCache$3 = _ListCache;
  function stackClear$1() {
    this.__data__ = new ListCache$3();
    this.size = 0;
  }
  var _stackClear = stackClear$1;
  function stackDelete$1(key) {
    var data = this.__data__, result = data["delete"](key);
    this.size = data.size;
    return result;
  }
  var _stackDelete = stackDelete$1;
  function stackGet$1(key) {
    return this.__data__.get(key);
  }
  var _stackGet = stackGet$1;
  function stackHas$1(key) {
    return this.__data__.has(key);
  }
  var _stackHas = stackHas$1;
  var root$7 = _root;
  var coreJsData$1 = root$7["__core-js_shared__"];
  var _coreJsData = coreJsData$1;
  var coreJsData = _coreJsData;
  var maskSrcKey = function() {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
    return uid ? "Symbol(src)_1." + uid : "";
  }();
  function isMasked$1(func) {
    return !!maskSrcKey && maskSrcKey in func;
  }
  var _isMasked = isMasked$1;
  var funcProto$1 = Function.prototype;
  var funcToString$1 = funcProto$1.toString;
  function toSource$2(func) {
    if (func != null) {
      try {
        return funcToString$1.call(func);
      } catch (e2) {
      }
      try {
        return func + "";
      } catch (e2) {
      }
    }
    return "";
  }
  var _toSource = toSource$2;
  var isFunction$2 = isFunction_1;
  var isMasked = _isMasked;
  var isObject$d = isObject_1;
  var toSource$1 = _toSource;
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
  var reIsHostCtor = /^\[object .+?Constructor\]$/;
  var funcProto = Function.prototype;
  var objectProto$8 = Object.prototype;
  var funcToString = funcProto.toString;
  var hasOwnProperty$7 = objectProto$8.hasOwnProperty;
  var reIsNative = RegExp("^" + funcToString.call(hasOwnProperty$7).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
  function baseIsNative$1(value) {
    if (!isObject$d(value) || isMasked(value)) {
      return false;
    }
    var pattern = isFunction$2(value) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource$1(value));
  }
  var _baseIsNative = baseIsNative$1;
  function getValue$2(object, key) {
    return object == null ? void 0 : object[key];
  }
  var _getValue = getValue$2;
  var baseIsNative = _baseIsNative;
  var getValue$1 = _getValue;
  function getNative$7(object, key) {
    var value = getValue$1(object, key);
    return baseIsNative(value) ? value : void 0;
  }
  var _getNative = getNative$7;
  var getNative$6 = _getNative;
  var root$6 = _root;
  var Map$4 = getNative$6(root$6, "Map");
  var _Map = Map$4;
  var getNative$5 = _getNative;
  var nativeCreate$4 = getNative$5(Object, "create");
  var _nativeCreate = nativeCreate$4;
  var nativeCreate$3 = _nativeCreate;
  function hashClear$1() {
    this.__data__ = nativeCreate$3 ? nativeCreate$3(null) : {};
    this.size = 0;
  }
  var _hashClear = hashClear$1;
  function hashDelete$1(key) {
    var result = this.has(key) && delete this.__data__[key];
    this.size -= result ? 1 : 0;
    return result;
  }
  var _hashDelete = hashDelete$1;
  var nativeCreate$2 = _nativeCreate;
  var HASH_UNDEFINED$2 = "__lodash_hash_undefined__";
  var objectProto$7 = Object.prototype;
  var hasOwnProperty$6 = objectProto$7.hasOwnProperty;
  function hashGet$1(key) {
    var data = this.__data__;
    if (nativeCreate$2) {
      var result = data[key];
      return result === HASH_UNDEFINED$2 ? void 0 : result;
    }
    return hasOwnProperty$6.call(data, key) ? data[key] : void 0;
  }
  var _hashGet = hashGet$1;
  var nativeCreate$1 = _nativeCreate;
  var objectProto$6 = Object.prototype;
  var hasOwnProperty$5 = objectProto$6.hasOwnProperty;
  function hashHas$1(key) {
    var data = this.__data__;
    return nativeCreate$1 ? data[key] !== void 0 : hasOwnProperty$5.call(data, key);
  }
  var _hashHas = hashHas$1;
  var nativeCreate = _nativeCreate;
  var HASH_UNDEFINED$1 = "__lodash_hash_undefined__";
  function hashSet$1(key, value) {
    var data = this.__data__;
    this.size += this.has(key) ? 0 : 1;
    data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED$1 : value;
    return this;
  }
  var _hashSet = hashSet$1;
  var hashClear = _hashClear;
  var hashDelete = _hashDelete;
  var hashGet = _hashGet;
  var hashHas = _hashHas;
  var hashSet = _hashSet;
  function Hash$1(entries) {
    var index2 = -1, length = entries == null ? 0 : entries.length;
    this.clear();
    while (++index2 < length) {
      var entry = entries[index2];
      this.set(entry[0], entry[1]);
    }
  }
  Hash$1.prototype.clear = hashClear;
  Hash$1.prototype["delete"] = hashDelete;
  Hash$1.prototype.get = hashGet;
  Hash$1.prototype.has = hashHas;
  Hash$1.prototype.set = hashSet;
  var _Hash = Hash$1;
  var Hash = _Hash;
  var ListCache$2 = _ListCache;
  var Map$3 = _Map;
  function mapCacheClear$1() {
    this.size = 0;
    this.__data__ = {
      "hash": new Hash(),
      "map": new (Map$3 || ListCache$2)(),
      "string": new Hash()
    };
  }
  var _mapCacheClear = mapCacheClear$1;
  function isKeyable$1(value) {
    var type = typeof value;
    return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
  }
  var _isKeyable = isKeyable$1;
  var isKeyable = _isKeyable;
  function getMapData$4(map2, key) {
    var data = map2.__data__;
    return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
  }
  var _getMapData = getMapData$4;
  var getMapData$3 = _getMapData;
  function mapCacheDelete$1(key) {
    var result = getMapData$3(this, key)["delete"](key);
    this.size -= result ? 1 : 0;
    return result;
  }
  var _mapCacheDelete = mapCacheDelete$1;
  var getMapData$2 = _getMapData;
  function mapCacheGet$1(key) {
    return getMapData$2(this, key).get(key);
  }
  var _mapCacheGet = mapCacheGet$1;
  var getMapData$1 = _getMapData;
  function mapCacheHas$1(key) {
    return getMapData$1(this, key).has(key);
  }
  var _mapCacheHas = mapCacheHas$1;
  var getMapData = _getMapData;
  function mapCacheSet$1(key, value) {
    var data = getMapData(this, key), size = data.size;
    data.set(key, value);
    this.size += data.size == size ? 0 : 1;
    return this;
  }
  var _mapCacheSet = mapCacheSet$1;
  var mapCacheClear = _mapCacheClear;
  var mapCacheDelete = _mapCacheDelete;
  var mapCacheGet = _mapCacheGet;
  var mapCacheHas = _mapCacheHas;
  var mapCacheSet = _mapCacheSet;
  function MapCache$3(entries) {
    var index2 = -1, length = entries == null ? 0 : entries.length;
    this.clear();
    while (++index2 < length) {
      var entry = entries[index2];
      this.set(entry[0], entry[1]);
    }
  }
  MapCache$3.prototype.clear = mapCacheClear;
  MapCache$3.prototype["delete"] = mapCacheDelete;
  MapCache$3.prototype.get = mapCacheGet;
  MapCache$3.prototype.has = mapCacheHas;
  MapCache$3.prototype.set = mapCacheSet;
  var _MapCache = MapCache$3;
  var ListCache$1 = _ListCache;
  var Map$2 = _Map;
  var MapCache$2 = _MapCache;
  var LARGE_ARRAY_SIZE = 200;
  function stackSet$1(key, value) {
    var data = this.__data__;
    if (data instanceof ListCache$1) {
      var pairs = data.__data__;
      if (!Map$2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
        pairs.push([key, value]);
        this.size = ++data.size;
        return this;
      }
      data = this.__data__ = new MapCache$2(pairs);
    }
    data.set(key, value);
    this.size = data.size;
    return this;
  }
  var _stackSet = stackSet$1;
  var ListCache = _ListCache;
  var stackClear = _stackClear;
  var stackDelete = _stackDelete;
  var stackGet = _stackGet;
  var stackHas = _stackHas;
  var stackSet = _stackSet;
  function Stack$4(entries) {
    var data = this.__data__ = new ListCache(entries);
    this.size = data.size;
  }
  Stack$4.prototype.clear = stackClear;
  Stack$4.prototype["delete"] = stackDelete;
  Stack$4.prototype.get = stackGet;
  Stack$4.prototype.has = stackHas;
  Stack$4.prototype.set = stackSet;
  var _Stack = Stack$4;
  var HASH_UNDEFINED = "__lodash_hash_undefined__";
  function setCacheAdd$1(value) {
    this.__data__.set(value, HASH_UNDEFINED);
    return this;
  }
  var _setCacheAdd = setCacheAdd$1;
  function setCacheHas$1(value) {
    return this.__data__.has(value);
  }
  var _setCacheHas = setCacheHas$1;
  var MapCache$1 = _MapCache;
  var setCacheAdd = _setCacheAdd;
  var setCacheHas = _setCacheHas;
  function SetCache$1(values) {
    var index2 = -1, length = values == null ? 0 : values.length;
    this.__data__ = new MapCache$1();
    while (++index2 < length) {
      this.add(values[index2]);
    }
  }
  SetCache$1.prototype.add = SetCache$1.prototype.push = setCacheAdd;
  SetCache$1.prototype.has = setCacheHas;
  var _SetCache = SetCache$1;
  function arraySome$1(array, predicate) {
    var index2 = -1, length = array == null ? 0 : array.length;
    while (++index2 < length) {
      if (predicate(array[index2], index2, array)) {
        return true;
      }
    }
    return false;
  }
  var _arraySome = arraySome$1;
  function cacheHas$1(cache, key) {
    return cache.has(key);
  }
  var _cacheHas = cacheHas$1;
  var SetCache = _SetCache;
  var arraySome = _arraySome;
  var cacheHas = _cacheHas;
  var COMPARE_PARTIAL_FLAG$5 = 1;
  var COMPARE_UNORDERED_FLAG$3 = 2;
  function equalArrays$2(array, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG$5, arrLength = array.length, othLength = other.length;
    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
      return false;
    }
    var arrStacked = stack.get(array);
    var othStacked = stack.get(other);
    if (arrStacked && othStacked) {
      return arrStacked == other && othStacked == array;
    }
    var index2 = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG$3 ? new SetCache() : void 0;
    stack.set(array, other);
    stack.set(other, array);
    while (++index2 < arrLength) {
      var arrValue = array[index2], othValue = other[index2];
      if (customizer) {
        var compared = isPartial ? customizer(othValue, arrValue, index2, other, array, stack) : customizer(arrValue, othValue, index2, array, other, stack);
      }
      if (compared !== void 0) {
        if (compared) {
          continue;
        }
        result = false;
        break;
      }
      if (seen) {
        if (!arraySome(other, function(othValue2, othIndex) {
          if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
            return seen.push(othIndex);
          }
        })) {
          result = false;
          break;
        }
      } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
        result = false;
        break;
      }
    }
    stack["delete"](array);
    stack["delete"](other);
    return result;
  }
  var _equalArrays = equalArrays$2;
  var root$5 = _root;
  var Uint8Array$2 = root$5.Uint8Array;
  var _Uint8Array = Uint8Array$2;
  function mapToArray$1(map2) {
    var index2 = -1, result = Array(map2.size);
    map2.forEach(function(value, key) {
      result[++index2] = [key, value];
    });
    return result;
  }
  var _mapToArray = mapToArray$1;
  function setToArray$1(set) {
    var index2 = -1, result = Array(set.size);
    set.forEach(function(value) {
      result[++index2] = value;
    });
    return result;
  }
  var _setToArray = setToArray$1;
  var Symbol$3 = _Symbol;
  var Uint8Array$1 = _Uint8Array;
  var eq$3 = eq_1;
  var equalArrays$1 = _equalArrays;
  var mapToArray = _mapToArray;
  var setToArray = _setToArray;
  var COMPARE_PARTIAL_FLAG$4 = 1;
  var COMPARE_UNORDERED_FLAG$2 = 2;
  var boolTag$2 = "[object Boolean]";
  var dateTag$2 = "[object Date]";
  var errorTag$1 = "[object Error]";
  var mapTag$4 = "[object Map]";
  var numberTag$2 = "[object Number]";
  var regexpTag$2 = "[object RegExp]";
  var setTag$4 = "[object Set]";
  var stringTag$2 = "[object String]";
  var symbolTag$3 = "[object Symbol]";
  var arrayBufferTag$2 = "[object ArrayBuffer]";
  var dataViewTag$3 = "[object DataView]";
  var symbolProto$2 = Symbol$3 ? Symbol$3.prototype : void 0;
  var symbolValueOf$1 = symbolProto$2 ? symbolProto$2.valueOf : void 0;
  function equalByTag$1(object, other, tag, bitmask, customizer, equalFunc, stack) {
    switch (tag) {
      case dataViewTag$3:
        if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
          return false;
        }
        object = object.buffer;
        other = other.buffer;
      case arrayBufferTag$2:
        if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array$1(object), new Uint8Array$1(other))) {
          return false;
        }
        return true;
      case boolTag$2:
      case dateTag$2:
      case numberTag$2:
        return eq$3(+object, +other);
      case errorTag$1:
        return object.name == other.name && object.message == other.message;
      case regexpTag$2:
      case stringTag$2:
        return object == other + "";
      case mapTag$4:
        var convert = mapToArray;
      case setTag$4:
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG$4;
        convert || (convert = setToArray);
        if (object.size != other.size && !isPartial) {
          return false;
        }
        var stacked = stack.get(object);
        if (stacked) {
          return stacked == other;
        }
        bitmask |= COMPARE_UNORDERED_FLAG$2;
        stack.set(object, other);
        var result = equalArrays$1(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
        stack["delete"](object);
        return result;
      case symbolTag$3:
        if (symbolValueOf$1) {
          return symbolValueOf$1.call(object) == symbolValueOf$1.call(other);
        }
    }
    return false;
  }
  var _equalByTag = equalByTag$1;
  function arrayPush$2(array, values) {
    var index2 = -1, length = values.length, offset2 = array.length;
    while (++index2 < length) {
      array[offset2 + index2] = values[index2];
    }
    return array;
  }
  var _arrayPush = arrayPush$2;
  var arrayPush$1 = _arrayPush;
  var isArray$a = isArray_1;
  function baseGetAllKeys$2(object, keysFunc, symbolsFunc) {
    var result = keysFunc(object);
    return isArray$a(object) ? result : arrayPush$1(result, symbolsFunc(object));
  }
  var _baseGetAllKeys = baseGetAllKeys$2;
  function arrayFilter$1(array, predicate) {
    var index2 = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
    while (++index2 < length) {
      var value = array[index2];
      if (predicate(value, index2, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }
  var _arrayFilter = arrayFilter$1;
  function stubArray$2() {
    return [];
  }
  var stubArray_1 = stubArray$2;
  var arrayFilter = _arrayFilter;
  var stubArray$1 = stubArray_1;
  var objectProto$5 = Object.prototype;
  var propertyIsEnumerable = objectProto$5.propertyIsEnumerable;
  var nativeGetSymbols$1 = Object.getOwnPropertySymbols;
  var getSymbols$3 = !nativeGetSymbols$1 ? stubArray$1 : function(object) {
    if (object == null) {
      return [];
    }
    object = Object(object);
    return arrayFilter(nativeGetSymbols$1(object), function(symbol) {
      return propertyIsEnumerable.call(object, symbol);
    });
  };
  var _getSymbols = getSymbols$3;
  var baseGetAllKeys$1 = _baseGetAllKeys;
  var getSymbols$2 = _getSymbols;
  var keys$4 = keys_1;
  function getAllKeys$2(object) {
    return baseGetAllKeys$1(object, keys$4, getSymbols$2);
  }
  var _getAllKeys = getAllKeys$2;
  var getAllKeys$1 = _getAllKeys;
  var COMPARE_PARTIAL_FLAG$3 = 1;
  var objectProto$4 = Object.prototype;
  var hasOwnProperty$4 = objectProto$4.hasOwnProperty;
  function equalObjects$1(object, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG$3, objProps = getAllKeys$1(object), objLength = objProps.length, othProps = getAllKeys$1(other), othLength = othProps.length;
    if (objLength != othLength && !isPartial) {
      return false;
    }
    var index2 = objLength;
    while (index2--) {
      var key = objProps[index2];
      if (!(isPartial ? key in other : hasOwnProperty$4.call(other, key))) {
        return false;
      }
    }
    var objStacked = stack.get(object);
    var othStacked = stack.get(other);
    if (objStacked && othStacked) {
      return objStacked == other && othStacked == object;
    }
    var result = true;
    stack.set(object, other);
    stack.set(other, object);
    var skipCtor = isPartial;
    while (++index2 < objLength) {
      key = objProps[index2];
      var objValue = object[key], othValue = other[key];
      if (customizer) {
        var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
      }
      if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
        result = false;
        break;
      }
      skipCtor || (skipCtor = key == "constructor");
    }
    if (result && !skipCtor) {
      var objCtor = object.constructor, othCtor = other.constructor;
      if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
        result = false;
      }
    }
    stack["delete"](object);
    stack["delete"](other);
    return result;
  }
  var _equalObjects = equalObjects$1;
  var getNative$4 = _getNative;
  var root$4 = _root;
  var DataView$1 = getNative$4(root$4, "DataView");
  var _DataView = DataView$1;
  var getNative$3 = _getNative;
  var root$3 = _root;
  var Promise$2 = getNative$3(root$3, "Promise");
  var _Promise = Promise$2;
  var getNative$2 = _getNative;
  var root$2 = _root;
  var Set$2 = getNative$2(root$2, "Set");
  var _Set = Set$2;
  var getNative$1 = _getNative;
  var root$1 = _root;
  var WeakMap$2 = getNative$1(root$1, "WeakMap");
  var _WeakMap = WeakMap$2;
  var DataView = _DataView;
  var Map$1 = _Map;
  var Promise$1 = _Promise;
  var Set$1 = _Set;
  var WeakMap$1 = _WeakMap;
  var baseGetTag$1 = _baseGetTag;
  var toSource = _toSource;
  var mapTag$3 = "[object Map]";
  var objectTag$2 = "[object Object]";
  var promiseTag = "[object Promise]";
  var setTag$3 = "[object Set]";
  var weakMapTag$1 = "[object WeakMap]";
  var dataViewTag$2 = "[object DataView]";
  var dataViewCtorString = toSource(DataView);
  var mapCtorString = toSource(Map$1);
  var promiseCtorString = toSource(Promise$1);
  var setCtorString = toSource(Set$1);
  var weakMapCtorString = toSource(WeakMap$1);
  var getTag$4 = baseGetTag$1;
  if (DataView && getTag$4(new DataView(new ArrayBuffer(1))) != dataViewTag$2 || Map$1 && getTag$4(new Map$1()) != mapTag$3 || Promise$1 && getTag$4(Promise$1.resolve()) != promiseTag || Set$1 && getTag$4(new Set$1()) != setTag$3 || WeakMap$1 && getTag$4(new WeakMap$1()) != weakMapTag$1) {
    getTag$4 = function(value) {
      var result = baseGetTag$1(value), Ctor = result == objectTag$2 ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
      if (ctorString) {
        switch (ctorString) {
          case dataViewCtorString:
            return dataViewTag$2;
          case mapCtorString:
            return mapTag$3;
          case promiseCtorString:
            return promiseTag;
          case setCtorString:
            return setTag$3;
          case weakMapCtorString:
            return weakMapTag$1;
        }
      }
      return result;
    };
  }
  var _getTag = getTag$4;
  var Stack$3 = _Stack;
  var equalArrays = _equalArrays;
  var equalByTag = _equalByTag;
  var equalObjects = _equalObjects;
  var getTag$3 = _getTag;
  var isArray$9 = isArray_1;
  var isBuffer$2 = isBuffer$4.exports;
  var isTypedArray$1 = isTypedArray_1;
  var COMPARE_PARTIAL_FLAG$2 = 1;
  var argsTag$1 = "[object Arguments]";
  var arrayTag$1 = "[object Array]";
  var objectTag$1 = "[object Object]";
  var objectProto$3 = Object.prototype;
  var hasOwnProperty$3 = objectProto$3.hasOwnProperty;
  function baseIsEqualDeep$1(object, other, bitmask, customizer, equalFunc, stack) {
    var objIsArr = isArray$9(object), othIsArr = isArray$9(other), objTag = objIsArr ? arrayTag$1 : getTag$3(object), othTag = othIsArr ? arrayTag$1 : getTag$3(other);
    objTag = objTag == argsTag$1 ? objectTag$1 : objTag;
    othTag = othTag == argsTag$1 ? objectTag$1 : othTag;
    var objIsObj = objTag == objectTag$1, othIsObj = othTag == objectTag$1, isSameTag = objTag == othTag;
    if (isSameTag && isBuffer$2(object)) {
      if (!isBuffer$2(other)) {
        return false;
      }
      objIsArr = true;
      objIsObj = false;
    }
    if (isSameTag && !objIsObj) {
      stack || (stack = new Stack$3());
      return objIsArr || isTypedArray$1(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
    }
    if (!(bitmask & COMPARE_PARTIAL_FLAG$2)) {
      var objIsWrapped = objIsObj && hasOwnProperty$3.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty$3.call(other, "__wrapped__");
      if (objIsWrapped || othIsWrapped) {
        var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
        stack || (stack = new Stack$3());
        return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
      }
    }
    if (!isSameTag) {
      return false;
    }
    stack || (stack = new Stack$3());
    return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
  }
  var _baseIsEqualDeep = baseIsEqualDeep$1;
  var baseIsEqualDeep = _baseIsEqualDeep;
  var isObjectLike$4 = isObjectLike_1;
  function baseIsEqual$2(value, other, bitmask, customizer, stack) {
    if (value === other) {
      return true;
    }
    if (value == null || other == null || !isObjectLike$4(value) && !isObjectLike$4(other)) {
      return value !== value && other !== other;
    }
    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual$2, stack);
  }
  var _baseIsEqual = baseIsEqual$2;
  var Stack$2 = _Stack;
  var baseIsEqual$1 = _baseIsEqual;
  var COMPARE_PARTIAL_FLAG$1 = 1;
  var COMPARE_UNORDERED_FLAG$1 = 2;
  function baseIsMatch$1(object, source, matchData, customizer) {
    var index2 = matchData.length, length = index2, noCustomizer = !customizer;
    if (object == null) {
      return !length;
    }
    object = Object(object);
    while (index2--) {
      var data = matchData[index2];
      if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
        return false;
      }
    }
    while (++index2 < length) {
      data = matchData[index2];
      var key = data[0], objValue = object[key], srcValue = data[1];
      if (noCustomizer && data[2]) {
        if (objValue === void 0 && !(key in object)) {
          return false;
        }
      } else {
        var stack = new Stack$2();
        if (customizer) {
          var result = customizer(objValue, srcValue, key, object, source, stack);
        }
        if (!(result === void 0 ? baseIsEqual$1(srcValue, objValue, COMPARE_PARTIAL_FLAG$1 | COMPARE_UNORDERED_FLAG$1, customizer, stack) : result)) {
          return false;
        }
      }
    }
    return true;
  }
  var _baseIsMatch = baseIsMatch$1;
  var isObject$c = isObject_1;
  function isStrictComparable$2(value) {
    return value === value && !isObject$c(value);
  }
  var _isStrictComparable = isStrictComparable$2;
  var isStrictComparable$1 = _isStrictComparable;
  var keys$3 = keys_1;
  function getMatchData$1(object) {
    var result = keys$3(object), length = result.length;
    while (length--) {
      var key = result[length], value = object[key];
      result[length] = [key, value, isStrictComparable$1(value)];
    }
    return result;
  }
  var _getMatchData = getMatchData$1;
  function matchesStrictComparable$2(key, srcValue) {
    return function(object) {
      if (object == null) {
        return false;
      }
      return object[key] === srcValue && (srcValue !== void 0 || key in Object(object));
    };
  }
  var _matchesStrictComparable = matchesStrictComparable$2;
  var baseIsMatch = _baseIsMatch;
  var getMatchData = _getMatchData;
  var matchesStrictComparable$1 = _matchesStrictComparable;
  function baseMatches$1(source) {
    var matchData = getMatchData(source);
    if (matchData.length == 1 && matchData[0][2]) {
      return matchesStrictComparable$1(matchData[0][0], matchData[0][1]);
    }
    return function(object) {
      return object === source || baseIsMatch(object, source, matchData);
    };
  }
  var _baseMatches = baseMatches$1;
  var baseGetTag = _baseGetTag;
  var isObjectLike$3 = isObjectLike_1;
  var symbolTag$2 = "[object Symbol]";
  function isSymbol$4(value) {
    return typeof value == "symbol" || isObjectLike$3(value) && baseGetTag(value) == symbolTag$2;
  }
  var isSymbol_1 = isSymbol$4;
  var isArray$8 = isArray_1;
  var isSymbol$3 = isSymbol_1;
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
  var reIsPlainProp = /^\w*$/;
  function isKey$3(value, object) {
    if (isArray$8(value)) {
      return false;
    }
    var type = typeof value;
    if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol$3(value)) {
      return true;
    }
    return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
  }
  var _isKey = isKey$3;
  var MapCache = _MapCache;
  var FUNC_ERROR_TEXT$2 = "Expected a function";
  function memoize$1(func, resolver) {
    if (typeof func != "function" || resolver != null && typeof resolver != "function") {
      throw new TypeError(FUNC_ERROR_TEXT$2);
    }
    var memoized = function() {
      var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
      if (cache.has(key)) {
        return cache.get(key);
      }
      var result = func.apply(this, args);
      memoized.cache = cache.set(key, result) || cache;
      return result;
    };
    memoized.cache = new (memoize$1.Cache || MapCache)();
    return memoized;
  }
  memoize$1.Cache = MapCache;
  var memoize_1 = memoize$1;
  var memoize2 = memoize_1;
  var MAX_MEMOIZE_SIZE = 500;
  function memoizeCapped$1(func) {
    var result = memoize2(func, function(key) {
      if (cache.size === MAX_MEMOIZE_SIZE) {
        cache.clear();
      }
      return key;
    });
    var cache = result.cache;
    return result;
  }
  var _memoizeCapped = memoizeCapped$1;
  var memoizeCapped = _memoizeCapped;
  var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
  var reEscapeChar = /\\(\\)?/g;
  var stringToPath$1 = memoizeCapped(function(string) {
    var result = [];
    if (string.charCodeAt(0) === 46) {
      result.push("");
    }
    string.replace(rePropName, function(match, number2, quote, subString) {
      result.push(quote ? subString.replace(reEscapeChar, "$1") : number2 || match);
    });
    return result;
  });
  var _stringToPath = stringToPath$1;
  var Symbol$2 = _Symbol;
  var arrayMap$1 = _arrayMap;
  var isArray$7 = isArray_1;
  var isSymbol$2 = isSymbol_1;
  var INFINITY$1 = 1 / 0;
  var symbolProto$1 = Symbol$2 ? Symbol$2.prototype : void 0;
  var symbolToString = symbolProto$1 ? symbolProto$1.toString : void 0;
  function baseToString$1(value) {
    if (typeof value == "string") {
      return value;
    }
    if (isArray$7(value)) {
      return arrayMap$1(value, baseToString$1) + "";
    }
    if (isSymbol$2(value)) {
      return symbolToString ? symbolToString.call(value) : "";
    }
    var result = value + "";
    return result == "0" && 1 / value == -INFINITY$1 ? "-0" : result;
  }
  var _baseToString = baseToString$1;
  var baseToString = _baseToString;
  function toString$1(value) {
    return value == null ? "" : baseToString(value);
  }
  var toString_1 = toString$1;
  var isArray$6 = isArray_1;
  var isKey$2 = _isKey;
  var stringToPath = _stringToPath;
  var toString = toString_1;
  function castPath$2(value, object) {
    if (isArray$6(value)) {
      return value;
    }
    return isKey$2(value, object) ? [value] : stringToPath(toString(value));
  }
  var _castPath = castPath$2;
  var isSymbol$1 = isSymbol_1;
  var INFINITY = 1 / 0;
  function toKey$4(value) {
    if (typeof value == "string" || isSymbol$1(value)) {
      return value;
    }
    var result = value + "";
    return result == "0" && 1 / value == -INFINITY ? "-0" : result;
  }
  var _toKey = toKey$4;
  var castPath$1 = _castPath;
  var toKey$3 = _toKey;
  function baseGet$2(object, path2) {
    path2 = castPath$1(path2, object);
    var index2 = 0, length = path2.length;
    while (object != null && index2 < length) {
      object = object[toKey$3(path2[index2++])];
    }
    return index2 && index2 == length ? object : void 0;
  }
  var _baseGet = baseGet$2;
  var baseGet$1 = _baseGet;
  function get$1(object, path2, defaultValue) {
    var result = object == null ? void 0 : baseGet$1(object, path2);
    return result === void 0 ? defaultValue : result;
  }
  var get_1 = get$1;
  function baseHasIn$1(object, key) {
    return object != null && key in Object(object);
  }
  var _baseHasIn = baseHasIn$1;
  var castPath = _castPath;
  var isArguments$1 = isArguments_1;
  var isArray$5 = isArray_1;
  var isIndex$1 = _isIndex;
  var isLength = isLength_1;
  var toKey$2 = _toKey;
  function hasPath$1(object, path2, hasFunc) {
    path2 = castPath(path2, object);
    var index2 = -1, length = path2.length, result = false;
    while (++index2 < length) {
      var key = toKey$2(path2[index2]);
      if (!(result = object != null && hasFunc(object, key))) {
        break;
      }
      object = object[key];
    }
    if (result || ++index2 != length) {
      return result;
    }
    length = object == null ? 0 : object.length;
    return !!length && isLength(length) && isIndex$1(key, length) && (isArray$5(object) || isArguments$1(object));
  }
  var _hasPath = hasPath$1;
  var baseHasIn = _baseHasIn;
  var hasPath = _hasPath;
  function hasIn$1(object, path2) {
    return object != null && hasPath(object, path2, baseHasIn);
  }
  var hasIn_1 = hasIn$1;
  var baseIsEqual = _baseIsEqual;
  var get = get_1;
  var hasIn = hasIn_1;
  var isKey$1 = _isKey;
  var isStrictComparable = _isStrictComparable;
  var matchesStrictComparable = _matchesStrictComparable;
  var toKey$1 = _toKey;
  var COMPARE_PARTIAL_FLAG = 1;
  var COMPARE_UNORDERED_FLAG = 2;
  function baseMatchesProperty$1(path2, srcValue) {
    if (isKey$1(path2) && isStrictComparable(srcValue)) {
      return matchesStrictComparable(toKey$1(path2), srcValue);
    }
    return function(object) {
      var objValue = get(object, path2);
      return objValue === void 0 && objValue === srcValue ? hasIn(object, path2) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
    };
  }
  var _baseMatchesProperty = baseMatchesProperty$1;
  function baseProperty$1(key) {
    return function(object) {
      return object == null ? void 0 : object[key];
    };
  }
  var _baseProperty = baseProperty$1;
  var baseGet = _baseGet;
  function basePropertyDeep$1(path2) {
    return function(object) {
      return baseGet(object, path2);
    };
  }
  var _basePropertyDeep = basePropertyDeep$1;
  var baseProperty = _baseProperty;
  var basePropertyDeep = _basePropertyDeep;
  var isKey = _isKey;
  var toKey = _toKey;
  function property$1(path2) {
    return isKey(path2) ? baseProperty(toKey(path2)) : basePropertyDeep(path2);
  }
  var property_1 = property$1;
  var baseMatches = _baseMatches;
  var baseMatchesProperty = _baseMatchesProperty;
  var identity$2 = identity_1;
  var isArray$4 = isArray_1;
  var property = property_1;
  function baseIteratee$1(value) {
    if (typeof value == "function") {
      return value;
    }
    if (value == null) {
      return identity$2;
    }
    if (typeof value == "object") {
      return isArray$4(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
    }
    return property(value);
  }
  var _baseIteratee = baseIteratee$1;
  var baseEach = _baseEach;
  var isArrayLike$3 = isArrayLike_1;
  function baseMap$1(collection, iteratee) {
    var index2 = -1, result = isArrayLike$3(collection) ? Array(collection.length) : [];
    baseEach(collection, function(value, key, collection2) {
      result[++index2] = iteratee(value, key, collection2);
    });
    return result;
  }
  var _baseMap = baseMap$1;
  var arrayMap = _arrayMap;
  var baseIteratee = _baseIteratee;
  var baseMap = _baseMap;
  var isArray$3 = isArray_1;
  function map(collection, iteratee) {
    var func = isArray$3(collection) ? arrayMap : baseMap;
    return func(collection, baseIteratee(iteratee));
  }
  var map_1 = map;
  Object.defineProperty(flattenNames$1, "__esModule", {
    value: true
  });
  flattenNames$1.flattenNames = void 0;
  var _isString2 = isString_1;
  var _isString3 = _interopRequireDefault$e(_isString2);
  var _forOwn2$2 = forOwn_1;
  var _forOwn3$2 = _interopRequireDefault$e(_forOwn2$2);
  var _isPlainObject2 = isPlainObject_1;
  var _isPlainObject3 = _interopRequireDefault$e(_isPlainObject2);
  var _map2 = map_1;
  var _map3 = _interopRequireDefault$e(_map2);
  function _interopRequireDefault$e(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var flattenNames = flattenNames$1.flattenNames = function flattenNames2() {
    var things = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
    var names2 = [];
    (0, _map3.default)(things, function(thing) {
      if (Array.isArray(thing)) {
        flattenNames2(thing).map(function(name) {
          return names2.push(name);
        });
      } else if ((0, _isPlainObject3.default)(thing)) {
        (0, _forOwn3$2.default)(thing, function(value, key) {
          value === true && names2.push(key);
          names2.push(key + "-" + value);
        });
      } else if ((0, _isString3.default)(thing)) {
        names2.push(thing);
      }
    });
    return names2;
  };
  flattenNames$1.default = flattenNames;
  var mergeClasses$1 = {};
  var getNative = _getNative;
  var defineProperty$2 = function() {
    try {
      var func = getNative(Object, "defineProperty");
      func({}, "", {});
      return func;
    } catch (e2) {
    }
  }();
  var _defineProperty$4 = defineProperty$2;
  var defineProperty$1 = _defineProperty$4;
  function baseAssignValue$3(object, key, value) {
    if (key == "__proto__" && defineProperty$1) {
      defineProperty$1(object, key, {
        "configurable": true,
        "enumerable": true,
        "value": value,
        "writable": true
      });
    } else {
      object[key] = value;
    }
  }
  var _baseAssignValue = baseAssignValue$3;
  var baseAssignValue$2 = _baseAssignValue;
  var eq$2 = eq_1;
  var objectProto$2 = Object.prototype;
  var hasOwnProperty$2 = objectProto$2.hasOwnProperty;
  function assignValue$2(object, key, value) {
    var objValue = object[key];
    if (!(hasOwnProperty$2.call(object, key) && eq$2(objValue, value)) || value === void 0 && !(key in object)) {
      baseAssignValue$2(object, key, value);
    }
  }
  var _assignValue = assignValue$2;
  var assignValue$1 = _assignValue;
  var baseAssignValue$1 = _baseAssignValue;
  function copyObject$5(source, props, object, customizer) {
    var isNew = !object;
    object || (object = {});
    var index2 = -1, length = props.length;
    while (++index2 < length) {
      var key = props[index2];
      var newValue = customizer ? customizer(object[key], source[key], key, object, source) : void 0;
      if (newValue === void 0) {
        newValue = source[key];
      }
      if (isNew) {
        baseAssignValue$1(object, key, newValue);
      } else {
        assignValue$1(object, key, newValue);
      }
    }
    return object;
  }
  var _copyObject = copyObject$5;
  var copyObject$4 = _copyObject;
  var keys$2 = keys_1;
  function baseAssign$1(object, source) {
    return object && copyObject$4(source, keys$2(source), object);
  }
  var _baseAssign = baseAssign$1;
  function nativeKeysIn$1(object) {
    var result = [];
    if (object != null) {
      for (var key in Object(object)) {
        result.push(key);
      }
    }
    return result;
  }
  var _nativeKeysIn = nativeKeysIn$1;
  var isObject$b = isObject_1;
  var isPrototype$1 = _isPrototype;
  var nativeKeysIn = _nativeKeysIn;
  var objectProto$1 = Object.prototype;
  var hasOwnProperty$1 = objectProto$1.hasOwnProperty;
  function baseKeysIn$1(object) {
    if (!isObject$b(object)) {
      return nativeKeysIn(object);
    }
    var isProto = isPrototype$1(object), result = [];
    for (var key in object) {
      if (!(key == "constructor" && (isProto || !hasOwnProperty$1.call(object, key)))) {
        result.push(key);
      }
    }
    return result;
  }
  var _baseKeysIn = baseKeysIn$1;
  var arrayLikeKeys = _arrayLikeKeys;
  var baseKeysIn = _baseKeysIn;
  var isArrayLike$2 = isArrayLike_1;
  function keysIn$5(object) {
    return isArrayLike$2(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
  }
  var keysIn_1 = keysIn$5;
  var copyObject$3 = _copyObject;
  var keysIn$4 = keysIn_1;
  function baseAssignIn$1(object, source) {
    return object && copyObject$3(source, keysIn$4(source), object);
  }
  var _baseAssignIn = baseAssignIn$1;
  var _cloneBuffer = { exports: {} };
  (function(module, exports) {
    var root2 = _root;
    var freeExports = exports && !exports.nodeType && exports;
    var freeModule = freeExports && true && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer2 = moduleExports ? root2.Buffer : void 0, allocUnsafe = Buffer2 ? Buffer2.allocUnsafe : void 0;
    function cloneBuffer2(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length, result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
      buffer.copy(result);
      return result;
    }
    module.exports = cloneBuffer2;
  })(_cloneBuffer, _cloneBuffer.exports);
  function copyArray$2(source, array) {
    var index2 = -1, length = source.length;
    array || (array = Array(length));
    while (++index2 < length) {
      array[index2] = source[index2];
    }
    return array;
  }
  var _copyArray = copyArray$2;
  var copyObject$2 = _copyObject;
  var getSymbols$1 = _getSymbols;
  function copySymbols$1(source, object) {
    return copyObject$2(source, getSymbols$1(source), object);
  }
  var _copySymbols = copySymbols$1;
  var arrayPush = _arrayPush;
  var getPrototype$1 = _getPrototype;
  var getSymbols = _getSymbols;
  var stubArray = stubArray_1;
  var nativeGetSymbols = Object.getOwnPropertySymbols;
  var getSymbolsIn$2 = !nativeGetSymbols ? stubArray : function(object) {
    var result = [];
    while (object) {
      arrayPush(result, getSymbols(object));
      object = getPrototype$1(object);
    }
    return result;
  };
  var _getSymbolsIn = getSymbolsIn$2;
  var copyObject$1 = _copyObject;
  var getSymbolsIn$1 = _getSymbolsIn;
  function copySymbolsIn$1(source, object) {
    return copyObject$1(source, getSymbolsIn$1(source), object);
  }
  var _copySymbolsIn = copySymbolsIn$1;
  var baseGetAllKeys = _baseGetAllKeys;
  var getSymbolsIn = _getSymbolsIn;
  var keysIn$3 = keysIn_1;
  function getAllKeysIn$1(object) {
    return baseGetAllKeys(object, keysIn$3, getSymbolsIn);
  }
  var _getAllKeysIn = getAllKeysIn$1;
  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;
  function initCloneArray$1(array) {
    var length = array.length, result = new array.constructor(length);
    if (length && typeof array[0] == "string" && hasOwnProperty.call(array, "index")) {
      result.index = array.index;
      result.input = array.input;
    }
    return result;
  }
  var _initCloneArray = initCloneArray$1;
  var Uint8Array2 = _Uint8Array;
  function cloneArrayBuffer$3(arrayBuffer) {
    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
    new Uint8Array2(result).set(new Uint8Array2(arrayBuffer));
    return result;
  }
  var _cloneArrayBuffer = cloneArrayBuffer$3;
  var cloneArrayBuffer$2 = _cloneArrayBuffer;
  function cloneDataView$1(dataView, isDeep) {
    var buffer = isDeep ? cloneArrayBuffer$2(dataView.buffer) : dataView.buffer;
    return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
  }
  var _cloneDataView = cloneDataView$1;
  var reFlags = /\w*$/;
  function cloneRegExp$1(regexp) {
    var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
    result.lastIndex = regexp.lastIndex;
    return result;
  }
  var _cloneRegExp = cloneRegExp$1;
  var Symbol$1 = _Symbol;
  var symbolProto = Symbol$1 ? Symbol$1.prototype : void 0;
  var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
  function cloneSymbol$1(symbol) {
    return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
  }
  var _cloneSymbol = cloneSymbol$1;
  var cloneArrayBuffer$1 = _cloneArrayBuffer;
  function cloneTypedArray$2(typedArray, isDeep) {
    var buffer = isDeep ? cloneArrayBuffer$1(typedArray.buffer) : typedArray.buffer;
    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
  }
  var _cloneTypedArray = cloneTypedArray$2;
  var cloneArrayBuffer = _cloneArrayBuffer;
  var cloneDataView = _cloneDataView;
  var cloneRegExp = _cloneRegExp;
  var cloneSymbol = _cloneSymbol;
  var cloneTypedArray$1 = _cloneTypedArray;
  var boolTag$1 = "[object Boolean]";
  var dateTag$1 = "[object Date]";
  var mapTag$2 = "[object Map]";
  var numberTag$1 = "[object Number]";
  var regexpTag$1 = "[object RegExp]";
  var setTag$2 = "[object Set]";
  var stringTag$1 = "[object String]";
  var symbolTag$1 = "[object Symbol]";
  var arrayBufferTag$1 = "[object ArrayBuffer]";
  var dataViewTag$1 = "[object DataView]";
  var float32Tag$1 = "[object Float32Array]";
  var float64Tag$1 = "[object Float64Array]";
  var int8Tag$1 = "[object Int8Array]";
  var int16Tag$1 = "[object Int16Array]";
  var int32Tag$1 = "[object Int32Array]";
  var uint8Tag$1 = "[object Uint8Array]";
  var uint8ClampedTag$1 = "[object Uint8ClampedArray]";
  var uint16Tag$1 = "[object Uint16Array]";
  var uint32Tag$1 = "[object Uint32Array]";
  function initCloneByTag$1(object, tag, isDeep) {
    var Ctor = object.constructor;
    switch (tag) {
      case arrayBufferTag$1:
        return cloneArrayBuffer(object);
      case boolTag$1:
      case dateTag$1:
        return new Ctor(+object);
      case dataViewTag$1:
        return cloneDataView(object, isDeep);
      case float32Tag$1:
      case float64Tag$1:
      case int8Tag$1:
      case int16Tag$1:
      case int32Tag$1:
      case uint8Tag$1:
      case uint8ClampedTag$1:
      case uint16Tag$1:
      case uint32Tag$1:
        return cloneTypedArray$1(object, isDeep);
      case mapTag$2:
        return new Ctor();
      case numberTag$1:
      case stringTag$1:
        return new Ctor(object);
      case regexpTag$1:
        return cloneRegExp(object);
      case setTag$2:
        return new Ctor();
      case symbolTag$1:
        return cloneSymbol(object);
    }
  }
  var _initCloneByTag = initCloneByTag$1;
  var isObject$a = isObject_1;
  var objectCreate = Object.create;
  var baseCreate$1 = function() {
    function object() {
    }
    return function(proto) {
      if (!isObject$a(proto)) {
        return {};
      }
      if (objectCreate) {
        return objectCreate(proto);
      }
      object.prototype = proto;
      var result = new object();
      object.prototype = void 0;
      return result;
    };
  }();
  var _baseCreate = baseCreate$1;
  var baseCreate = _baseCreate;
  var getPrototype = _getPrototype;
  var isPrototype = _isPrototype;
  function initCloneObject$2(object) {
    return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
  }
  var _initCloneObject = initCloneObject$2;
  var getTag$2 = _getTag;
  var isObjectLike$2 = isObjectLike_1;
  var mapTag$1 = "[object Map]";
  function baseIsMap$1(value) {
    return isObjectLike$2(value) && getTag$2(value) == mapTag$1;
  }
  var _baseIsMap = baseIsMap$1;
  var baseIsMap = _baseIsMap;
  var baseUnary$1 = _baseUnary;
  var nodeUtil$1 = _nodeUtil.exports;
  var nodeIsMap = nodeUtil$1 && nodeUtil$1.isMap;
  var isMap$1 = nodeIsMap ? baseUnary$1(nodeIsMap) : baseIsMap;
  var isMap_1 = isMap$1;
  var getTag$1 = _getTag;
  var isObjectLike$1 = isObjectLike_1;
  var setTag$1 = "[object Set]";
  function baseIsSet$1(value) {
    return isObjectLike$1(value) && getTag$1(value) == setTag$1;
  }
  var _baseIsSet = baseIsSet$1;
  var baseIsSet = _baseIsSet;
  var baseUnary = _baseUnary;
  var nodeUtil = _nodeUtil.exports;
  var nodeIsSet = nodeUtil && nodeUtil.isSet;
  var isSet$1 = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
  var isSet_1 = isSet$1;
  var Stack$1 = _Stack;
  var arrayEach = _arrayEach;
  var assignValue = _assignValue;
  var baseAssign = _baseAssign;
  var baseAssignIn = _baseAssignIn;
  var cloneBuffer$1 = _cloneBuffer.exports;
  var copyArray$1 = _copyArray;
  var copySymbols = _copySymbols;
  var copySymbolsIn = _copySymbolsIn;
  var getAllKeys = _getAllKeys;
  var getAllKeysIn = _getAllKeysIn;
  var getTag = _getTag;
  var initCloneArray = _initCloneArray;
  var initCloneByTag = _initCloneByTag;
  var initCloneObject$1 = _initCloneObject;
  var isArray$2 = isArray_1;
  var isBuffer$1 = isBuffer$4.exports;
  var isMap = isMap_1;
  var isObject$9 = isObject_1;
  var isSet = isSet_1;
  var keys$1 = keys_1;
  var keysIn$2 = keysIn_1;
  var CLONE_DEEP_FLAG$1 = 1;
  var CLONE_FLAT_FLAG = 2;
  var CLONE_SYMBOLS_FLAG$1 = 4;
  var argsTag = "[object Arguments]";
  var arrayTag = "[object Array]";
  var boolTag = "[object Boolean]";
  var dateTag = "[object Date]";
  var errorTag = "[object Error]";
  var funcTag = "[object Function]";
  var genTag = "[object GeneratorFunction]";
  var mapTag = "[object Map]";
  var numberTag = "[object Number]";
  var objectTag = "[object Object]";
  var regexpTag = "[object RegExp]";
  var setTag = "[object Set]";
  var stringTag = "[object String]";
  var symbolTag = "[object Symbol]";
  var weakMapTag = "[object WeakMap]";
  var arrayBufferTag = "[object ArrayBuffer]";
  var dataViewTag = "[object DataView]";
  var float32Tag = "[object Float32Array]";
  var float64Tag = "[object Float64Array]";
  var int8Tag = "[object Int8Array]";
  var int16Tag = "[object Int16Array]";
  var int32Tag = "[object Int32Array]";
  var uint8Tag = "[object Uint8Array]";
  var uint8ClampedTag = "[object Uint8ClampedArray]";
  var uint16Tag = "[object Uint16Array]";
  var uint32Tag = "[object Uint32Array]";
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
  function baseClone$1(value, bitmask, customizer, key, object, stack) {
    var result, isDeep = bitmask & CLONE_DEEP_FLAG$1, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG$1;
    if (customizer) {
      result = object ? customizer(value, key, object, stack) : customizer(value);
    }
    if (result !== void 0) {
      return result;
    }
    if (!isObject$9(value)) {
      return value;
    }
    var isArr = isArray$2(value);
    if (isArr) {
      result = initCloneArray(value);
      if (!isDeep) {
        return copyArray$1(value, result);
      }
    } else {
      var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
      if (isBuffer$1(value)) {
        return cloneBuffer$1(value, isDeep);
      }
      if (tag == objectTag || tag == argsTag || isFunc && !object) {
        result = isFlat || isFunc ? {} : initCloneObject$1(value);
        if (!isDeep) {
          return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
        }
      } else {
        if (!cloneableTags[tag]) {
          return object ? value : {};
        }
        result = initCloneByTag(value, tag, isDeep);
      }
    }
    stack || (stack = new Stack$1());
    var stacked = stack.get(value);
    if (stacked) {
      return stacked;
    }
    stack.set(value, result);
    if (isSet(value)) {
      value.forEach(function(subValue) {
        result.add(baseClone$1(subValue, bitmask, customizer, subValue, value, stack));
      });
    } else if (isMap(value)) {
      value.forEach(function(subValue, key2) {
        result.set(key2, baseClone$1(subValue, bitmask, customizer, key2, value, stack));
      });
    }
    var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn$2 : keys$1;
    var props = isArr ? void 0 : keysFunc(value);
    arrayEach(props || value, function(subValue, key2) {
      if (props) {
        key2 = subValue;
        subValue = value[key2];
      }
      assignValue(result, key2, baseClone$1(subValue, bitmask, customizer, key2, value, stack));
    });
    return result;
  }
  var _baseClone = baseClone$1;
  var baseClone = _baseClone;
  var CLONE_DEEP_FLAG = 1;
  var CLONE_SYMBOLS_FLAG = 4;
  function cloneDeep(value) {
    return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
  }
  var cloneDeep_1 = cloneDeep;
  Object.defineProperty(mergeClasses$1, "__esModule", {
    value: true
  });
  mergeClasses$1.mergeClasses = void 0;
  var _forOwn2$1 = forOwn_1;
  var _forOwn3$1 = _interopRequireDefault$d(_forOwn2$1);
  var _cloneDeep2 = cloneDeep_1;
  var _cloneDeep3 = _interopRequireDefault$d(_cloneDeep2);
  var _extends$8 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  function _interopRequireDefault$d(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var mergeClasses = mergeClasses$1.mergeClasses = function mergeClasses2(classes) {
    var activeNames = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    var styles2 = classes.default && (0, _cloneDeep3.default)(classes.default) || {};
    activeNames.map(function(name) {
      var toMerge = classes[name];
      if (toMerge) {
        (0, _forOwn3$1.default)(toMerge, function(value, key) {
          if (!styles2[key]) {
            styles2[key] = {};
          }
          styles2[key] = _extends$8({}, styles2[key], toMerge[key]);
        });
      }
      return name;
    });
    return styles2;
  };
  mergeClasses$1.default = mergeClasses;
  var autoprefix$1 = {};
  Object.defineProperty(autoprefix$1, "__esModule", {
    value: true
  });
  autoprefix$1.autoprefix = void 0;
  var _forOwn2 = forOwn_1;
  var _forOwn3 = _interopRequireDefault$c(_forOwn2);
  var _extends$7 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  function _interopRequireDefault$c(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var transforms = {
    borderRadius: function borderRadius(value) {
      return {
        msBorderRadius: value,
        MozBorderRadius: value,
        OBorderRadius: value,
        WebkitBorderRadius: value,
        borderRadius: value
      };
    },
    boxShadow: function boxShadow(value) {
      return {
        msBoxShadow: value,
        MozBoxShadow: value,
        OBoxShadow: value,
        WebkitBoxShadow: value,
        boxShadow: value
      };
    },
    userSelect: function userSelect(value) {
      return {
        WebkitTouchCallout: value,
        KhtmlUserSelect: value,
        MozUserSelect: value,
        msUserSelect: value,
        WebkitUserSelect: value,
        userSelect: value
      };
    },
    flex: function flex(value) {
      return {
        WebkitBoxFlex: value,
        MozBoxFlex: value,
        WebkitFlex: value,
        msFlex: value,
        flex: value
      };
    },
    flexBasis: function flexBasis(value) {
      return {
        WebkitFlexBasis: value,
        flexBasis: value
      };
    },
    justifyContent: function justifyContent(value) {
      return {
        WebkitJustifyContent: value,
        justifyContent: value
      };
    },
    transition: function transition(value) {
      return {
        msTransition: value,
        MozTransition: value,
        OTransition: value,
        WebkitTransition: value,
        transition: value
      };
    },
    transform: function transform2(value) {
      return {
        msTransform: value,
        MozTransform: value,
        OTransform: value,
        WebkitTransform: value,
        transform: value
      };
    },
    absolute: function absolute(value) {
      var direction2 = value && value.split(" ");
      return {
        position: "absolute",
        top: direction2 && direction2[0],
        right: direction2 && direction2[1],
        bottom: direction2 && direction2[2],
        left: direction2 && direction2[3]
      };
    },
    extend: function extend(name, otherElementStyles) {
      var otherStyle = otherElementStyles[name];
      if (otherStyle) {
        return otherStyle;
      }
      return {
        "extend": name
      };
    }
  };
  var autoprefix = autoprefix$1.autoprefix = function autoprefix2(elements) {
    var prefixed = {};
    (0, _forOwn3.default)(elements, function(styles2, element) {
      var expanded = {};
      (0, _forOwn3.default)(styles2, function(value, key) {
        var transform3 = transforms[key];
        if (transform3) {
          expanded = _extends$7({}, expanded, transform3(value));
        } else {
          expanded[key] = value;
        }
      });
      prefixed[element] = expanded;
    });
    return prefixed;
  };
  autoprefix$1.default = autoprefix;
  var hover$1 = {};
  Object.defineProperty(hover$1, "__esModule", {
    value: true
  });
  hover$1.hover = void 0;
  var _extends$6 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _react$a = React__default__default["default"];
  var _react2$a = _interopRequireDefault$b(_react$a);
  function _interopRequireDefault$b(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck$7(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn$7(self2, call) {
    if (!self2) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self2;
  }
  function _inherits$7(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var hover = hover$1.hover = function hover2(Component) {
    var Span2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "span";
    return function(_React$Component) {
      _inherits$7(Hover, _React$Component);
      function Hover() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck$7(this, Hover);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn$7(this, (_ref = Hover.__proto__ || Object.getPrototypeOf(Hover)).call.apply(_ref, [this].concat(args))), _this), _this.state = { hover: false }, _this.handleMouseOver = function() {
          return _this.setState({ hover: true });
        }, _this.handleMouseOut = function() {
          return _this.setState({ hover: false });
        }, _this.render = function() {
          return _react2$a.default.createElement(Span2, { onMouseOver: _this.handleMouseOver, onMouseOut: _this.handleMouseOut }, _react2$a.default.createElement(Component, _extends$6({}, _this.props, _this.state)));
        }, _temp), _possibleConstructorReturn$7(_this, _ret);
      }
      return Hover;
    }(_react2$a.default.Component);
  };
  hover$1.default = hover;
  var active$1 = {};
  Object.defineProperty(active$1, "__esModule", {
    value: true
  });
  active$1.active = void 0;
  var _extends$5 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _react$9 = React__default__default["default"];
  var _react2$9 = _interopRequireDefault$a(_react$9);
  function _interopRequireDefault$a(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck$6(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn$6(self2, call) {
    if (!self2) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self2;
  }
  function _inherits$6(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var active = active$1.active = function active2(Component) {
    var Span2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "span";
    return function(_React$Component) {
      _inherits$6(Active, _React$Component);
      function Active() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck$6(this, Active);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn$6(this, (_ref = Active.__proto__ || Object.getPrototypeOf(Active)).call.apply(_ref, [this].concat(args))), _this), _this.state = { active: false }, _this.handleMouseDown = function() {
          return _this.setState({ active: true });
        }, _this.handleMouseUp = function() {
          return _this.setState({ active: false });
        }, _this.render = function() {
          return _react2$9.default.createElement(Span2, { onMouseDown: _this.handleMouseDown, onMouseUp: _this.handleMouseUp }, _react2$9.default.createElement(Component, _extends$5({}, _this.props, _this.state)));
        }, _temp), _possibleConstructorReturn$6(_this, _ret);
      }
      return Active;
    }(_react2$9.default.Component);
  };
  active$1.default = active;
  var loop = {};
  Object.defineProperty(loop, "__esModule", {
    value: true
  });
  var loopable = function loopable2(i2, length) {
    var props = {};
    var setProp = function setProp2(name) {
      var value = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
      props[name] = value;
    };
    i2 === 0 && setProp("first-child");
    i2 === length - 1 && setProp("last-child");
    (i2 === 0 || i2 % 2 === 0) && setProp("even");
    Math.abs(i2 % 2) === 1 && setProp("odd");
    setProp("nth-child", i2);
    return props;
  };
  loop.default = loopable;
  Object.defineProperty(lib$1, "__esModule", {
    value: true
  });
  lib$1.ReactCSS = lib$1.loop = lib$1.handleActive = lib$1.handleHover = lib$1.hover = void 0;
  var _flattenNames = flattenNames$1;
  var _flattenNames2 = _interopRequireDefault$9(_flattenNames);
  var _mergeClasses = mergeClasses$1;
  var _mergeClasses2 = _interopRequireDefault$9(_mergeClasses);
  var _autoprefix = autoprefix$1;
  var _autoprefix2 = _interopRequireDefault$9(_autoprefix);
  var _hover2 = hover$1;
  var _hover3 = _interopRequireDefault$9(_hover2);
  var _active = active$1;
  var _active2 = _interopRequireDefault$9(_active);
  var _loop2 = loop;
  var _loop3 = _interopRequireDefault$9(_loop2);
  function _interopRequireDefault$9(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  lib$1.hover = _hover3.default;
  lib$1.handleHover = _hover3.default;
  lib$1.handleActive = _active2.default;
  lib$1.loop = _loop3.default;
  var ReactCSS = lib$1.ReactCSS = function ReactCSS2(classes) {
    for (var _len = arguments.length, activations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      activations[_key - 1] = arguments[_key];
    }
    var activeNames = (0, _flattenNames2.default)(activations);
    var merged = (0, _mergeClasses2.default)(classes, activeNames);
    return (0, _autoprefix2.default)(merged);
  };
  lib$1.default = ReactCSS;
  var alpha$1 = {};
  Object.defineProperty(alpha$1, "__esModule", {
    value: true
  });
  alpha$1.calculateChange = function calculateChange(e2, hsl, direction2, initialA, container) {
    var containerWidth = container.clientWidth;
    var containerHeight = container.clientHeight;
    var x2 = typeof e2.pageX === "number" ? e2.pageX : e2.touches[0].pageX;
    var y2 = typeof e2.pageY === "number" ? e2.pageY : e2.touches[0].pageY;
    var left2 = x2 - (container.getBoundingClientRect().left + window.pageXOffset);
    var top2 = y2 - (container.getBoundingClientRect().top + window.pageYOffset);
    if (direction2 === "vertical") {
      var a2 = void 0;
      if (top2 < 0) {
        a2 = 0;
      } else if (top2 > containerHeight) {
        a2 = 1;
      } else {
        a2 = Math.round(top2 * 100 / containerHeight) / 100;
      }
      if (hsl.a !== a2) {
        return {
          h: hsl.h,
          s: hsl.s,
          l: hsl.l,
          a: a2,
          source: "rgb"
        };
      }
    } else {
      var _a2 = void 0;
      if (left2 < 0) {
        _a2 = 0;
      } else if (left2 > containerWidth) {
        _a2 = 1;
      } else {
        _a2 = Math.round(left2 * 100 / containerWidth) / 100;
      }
      if (initialA !== _a2) {
        return {
          h: hsl.h,
          s: hsl.s,
          l: hsl.l,
          a: _a2,
          source: "rgb"
        };
      }
    }
    return null;
  };
  var Checkboard$1 = {};
  var checkboard$1 = {};
  Object.defineProperty(checkboard$1, "__esModule", {
    value: true
  });
  var checkboardCache = {};
  var render = checkboard$1.render = function render2(c1, c2, size, serverCanvas) {
    if (typeof document === "undefined" && !serverCanvas) {
      return null;
    }
    var canvas = serverCanvas ? new serverCanvas() : document.createElement("canvas");
    canvas.width = size * 2;
    canvas.height = size * 2;
    var ctx = canvas.getContext("2d");
    if (!ctx) {
      return null;
    }
    ctx.fillStyle = c1;
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    ctx.fillStyle = c2;
    ctx.fillRect(0, 0, size, size);
    ctx.translate(size, size);
    ctx.fillRect(0, 0, size, size);
    return canvas.toDataURL();
  };
  checkboard$1.get = function get2(c1, c2, size, serverCanvas) {
    var key = c1 + "-" + c2 + "-" + size + (serverCanvas ? "-server" : "");
    if (checkboardCache[key]) {
      return checkboardCache[key];
    }
    var checkboard2 = render(c1, c2, size, serverCanvas);
    checkboardCache[key] = checkboard2;
    return checkboard2;
  };
  Object.defineProperty(Checkboard$1, "__esModule", {
    value: true
  });
  Checkboard$1.Checkboard = void 0;
  var _extends$4 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _react$8 = React__default__default["default"];
  var _react2$8 = _interopRequireDefault$8(_react$8);
  var _reactcss$6 = lib$1;
  var _reactcss2$6 = _interopRequireDefault$8(_reactcss$6);
  var _checkboard = checkboard$1;
  var checkboard = _interopRequireWildcard$4(_checkboard);
  function _interopRequireWildcard$4(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault$8(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var Checkboard = Checkboard$1.Checkboard = function Checkboard2(_ref) {
    var white = _ref.white, grey = _ref.grey, size = _ref.size, renderers = _ref.renderers, borderRadius2 = _ref.borderRadius, boxShadow2 = _ref.boxShadow, children2 = _ref.children;
    var styles2 = (0, _reactcss2$6.default)({
      "default": {
        grid: {
          borderRadius: borderRadius2,
          boxShadow: boxShadow2,
          absolute: "0px 0px 0px 0px",
          background: "url(" + checkboard.get(white, grey, size, renderers.canvas) + ") center left"
        }
      }
    });
    return (0, _react$8.isValidElement)(children2) ? _react2$8.default.cloneElement(children2, _extends$4({}, children2.props, { style: _extends$4({}, children2.props.style, styles2.grid) })) : _react2$8.default.createElement("div", { style: styles2.grid });
  };
  Checkboard.defaultProps = {
    size: 8,
    white: "transparent",
    grey: "rgba(0,0,0,.08)",
    renderers: {}
  };
  Checkboard$1.default = Checkboard;
  Object.defineProperty(Alpha$1, "__esModule", {
    value: true
  });
  Alpha$1.Alpha = void 0;
  var _extends$3 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass$5 = function() {
    function defineProperties(target, props) {
      for (var i2 = 0; i2 < props.length; i2++) {
        var descriptor = props[i2];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react$7 = React__default__default["default"];
  var _react2$7 = _interopRequireDefault$7(_react$7);
  var _reactcss$5 = lib$1;
  var _reactcss2$5 = _interopRequireDefault$7(_reactcss$5);
  var _alpha = alpha$1;
  var alpha = _interopRequireWildcard$3(_alpha);
  var _Checkboard$1 = Checkboard$1;
  var _Checkboard2$1 = _interopRequireDefault$7(_Checkboard$1);
  function _interopRequireWildcard$3(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault$7(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck$5(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn$5(self2, call) {
    if (!self2) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self2;
  }
  function _inherits$5(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var Alpha = Alpha$1.Alpha = function(_ref) {
    _inherits$5(Alpha2, _ref);
    function Alpha2() {
      var _ref2;
      var _temp, _this, _ret;
      _classCallCheck$5(this, Alpha2);
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      return _ret = (_temp = (_this = _possibleConstructorReturn$5(this, (_ref2 = Alpha2.__proto__ || Object.getPrototypeOf(Alpha2)).call.apply(_ref2, [this].concat(args))), _this), _this.handleChange = function(e2) {
        var change = alpha.calculateChange(e2, _this.props.hsl, _this.props.direction, _this.props.a, _this.container);
        change && typeof _this.props.onChange === "function" && _this.props.onChange(change, e2);
      }, _this.handleMouseDown = function(e2) {
        _this.handleChange(e2);
        window.addEventListener("mousemove", _this.handleChange);
        window.addEventListener("mouseup", _this.handleMouseUp);
      }, _this.handleMouseUp = function() {
        _this.unbindEventListeners();
      }, _this.unbindEventListeners = function() {
        window.removeEventListener("mousemove", _this.handleChange);
        window.removeEventListener("mouseup", _this.handleMouseUp);
      }, _temp), _possibleConstructorReturn$5(_this, _ret);
    }
    _createClass$5(Alpha2, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.unbindEventListeners();
      }
    }, {
      key: "render",
      value: function render3() {
        var _this2 = this;
        var rgb = this.props.rgb;
        var styles2 = (0, _reactcss2$5.default)({
          "default": {
            alpha: {
              absolute: "0px 0px 0px 0px",
              borderRadius: this.props.radius
            },
            checkboard: {
              absolute: "0px 0px 0px 0px",
              overflow: "hidden",
              borderRadius: this.props.radius
            },
            gradient: {
              absolute: "0px 0px 0px 0px",
              background: "linear-gradient(to right, rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + ", 0) 0%,\n           rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + ", 1) 100%)",
              boxShadow: this.props.shadow,
              borderRadius: this.props.radius
            },
            container: {
              position: "relative",
              height: "100%",
              margin: "0 3px"
            },
            pointer: {
              position: "absolute",
              left: rgb.a * 100 + "%"
            },
            slider: {
              width: "4px",
              borderRadius: "1px",
              height: "8px",
              boxShadow: "0 0 2px rgba(0, 0, 0, .6)",
              background: "#fff",
              marginTop: "1px",
              transform: "translateX(-2px)"
            }
          },
          "vertical": {
            gradient: {
              background: "linear-gradient(to bottom, rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + ", 0) 0%,\n           rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + ", 1) 100%)"
            },
            pointer: {
              left: 0,
              top: rgb.a * 100 + "%"
            }
          },
          "overwrite": _extends$3({}, this.props.style)
        }, {
          vertical: this.props.direction === "vertical",
          overwrite: true
        });
        return _react2$7.default.createElement("div", { style: styles2.alpha }, _react2$7.default.createElement("div", { style: styles2.checkboard }, _react2$7.default.createElement(_Checkboard2$1.default, { renderers: this.props.renderers })), _react2$7.default.createElement("div", { style: styles2.gradient }), _react2$7.default.createElement("div", {
          style: styles2.container,
          ref: function ref(container) {
            return _this2.container = container;
          },
          onMouseDown: this.handleMouseDown,
          onTouchMove: this.handleChange,
          onTouchStart: this.handleChange
        }, _react2$7.default.createElement("div", { style: styles2.pointer }, this.props.pointer ? _react2$7.default.createElement(this.props.pointer, this.props) : _react2$7.default.createElement("div", { style: styles2.slider }))));
      }
    }]);
    return Alpha2;
  }(_react$7.PureComponent || _react$7.Component);
  Alpha$1.default = Alpha;
  var EditableInput$1 = {};
  Object.defineProperty(EditableInput$1, "__esModule", {
    value: true
  });
  EditableInput$1.EditableInput = void 0;
  var _createClass$4 = function() {
    function defineProperties(target, props) {
      for (var i2 = 0; i2 < props.length; i2++) {
        var descriptor = props[i2];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react$6 = React__default__default["default"];
  var _react2$6 = _interopRequireDefault$6(_react$6);
  var _reactcss$4 = lib$1;
  var _reactcss2$4 = _interopRequireDefault$6(_reactcss$4);
  function _interopRequireDefault$6(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _defineProperty$3(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
    } else {
      obj[key] = value;
    }
    return obj;
  }
  function _classCallCheck$4(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn$4(self2, call) {
    if (!self2) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self2;
  }
  function _inherits$4(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var DEFAULT_ARROW_OFFSET = 1;
  var UP_KEY_CODE = 38;
  var DOWN_KEY_CODE = 40;
  var VALID_KEY_CODES = [UP_KEY_CODE, DOWN_KEY_CODE];
  var isValidKeyCode = function isValidKeyCode2(keyCode) {
    return VALID_KEY_CODES.indexOf(keyCode) > -1;
  };
  var getNumberValue = function getNumberValue2(value) {
    return Number(String(value).replace(/%/g, ""));
  };
  var idCounter = 1;
  var EditableInput = EditableInput$1.EditableInput = function(_ref) {
    _inherits$4(EditableInput2, _ref);
    function EditableInput2(props) {
      _classCallCheck$4(this, EditableInput2);
      var _this = _possibleConstructorReturn$4(this, (EditableInput2.__proto__ || Object.getPrototypeOf(EditableInput2)).call(this));
      _this.handleBlur = function() {
        if (_this.state.blurValue) {
          _this.setState({ value: _this.state.blurValue, blurValue: null });
        }
      };
      _this.handleChange = function(e2) {
        _this.setUpdatedValue(e2.target.value, e2);
      };
      _this.handleKeyDown = function(e2) {
        var value = getNumberValue(e2.target.value);
        if (!isNaN(value) && isValidKeyCode(e2.keyCode)) {
          var offset2 = _this.getArrowOffset();
          var updatedValue = e2.keyCode === UP_KEY_CODE ? value + offset2 : value - offset2;
          _this.setUpdatedValue(updatedValue, e2);
        }
      };
      _this.handleDrag = function(e2) {
        if (_this.props.dragLabel) {
          var newValue = Math.round(_this.props.value + e2.movementX);
          if (newValue >= 0 && newValue <= _this.props.dragMax) {
            _this.props.onChange && _this.props.onChange(_this.getValueObjectWithLabel(newValue), e2);
          }
        }
      };
      _this.handleMouseDown = function(e2) {
        if (_this.props.dragLabel) {
          e2.preventDefault();
          _this.handleDrag(e2);
          window.addEventListener("mousemove", _this.handleDrag);
          window.addEventListener("mouseup", _this.handleMouseUp);
        }
      };
      _this.handleMouseUp = function() {
        _this.unbindEventListeners();
      };
      _this.unbindEventListeners = function() {
        window.removeEventListener("mousemove", _this.handleDrag);
        window.removeEventListener("mouseup", _this.handleMouseUp);
      };
      _this.state = {
        value: String(props.value).toUpperCase(),
        blurValue: String(props.value).toUpperCase()
      };
      _this.inputId = "rc-editable-input-" + idCounter++;
      return _this;
    }
    _createClass$4(EditableInput2, [{
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps, prevState) {
        if (this.props.value !== this.state.value && (prevProps.value !== this.props.value || prevState.value !== this.state.value)) {
          if (this.input === document.activeElement) {
            this.setState({ blurValue: String(this.props.value).toUpperCase() });
          } else {
            this.setState({ value: String(this.props.value).toUpperCase(), blurValue: !this.state.blurValue && String(this.props.value).toUpperCase() });
          }
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.unbindEventListeners();
      }
    }, {
      key: "getValueObjectWithLabel",
      value: function getValueObjectWithLabel(value) {
        return _defineProperty$3({}, this.props.label, value);
      }
    }, {
      key: "getArrowOffset",
      value: function getArrowOffset() {
        return this.props.arrowOffset || DEFAULT_ARROW_OFFSET;
      }
    }, {
      key: "setUpdatedValue",
      value: function setUpdatedValue(value, e2) {
        var onChangeValue = this.props.label ? this.getValueObjectWithLabel(value) : value;
        this.props.onChange && this.props.onChange(onChangeValue, e2);
        this.setState({ value });
      }
    }, {
      key: "render",
      value: function render3() {
        var _this2 = this;
        var styles2 = (0, _reactcss2$4.default)({
          "default": {
            wrap: {
              position: "relative"
            }
          },
          "user-override": {
            wrap: this.props.style && this.props.style.wrap ? this.props.style.wrap : {},
            input: this.props.style && this.props.style.input ? this.props.style.input : {},
            label: this.props.style && this.props.style.label ? this.props.style.label : {}
          },
          "dragLabel-true": {
            label: {
              cursor: "ew-resize"
            }
          }
        }, {
          "user-override": true
        }, this.props);
        return _react2$6.default.createElement("div", { style: styles2.wrap }, _react2$6.default.createElement("input", {
          id: this.inputId,
          style: styles2.input,
          ref: function ref(input) {
            return _this2.input = input;
          },
          value: this.state.value,
          onKeyDown: this.handleKeyDown,
          onChange: this.handleChange,
          onBlur: this.handleBlur,
          placeholder: this.props.placeholder,
          spellCheck: "false"
        }), this.props.label && !this.props.hideLabel ? _react2$6.default.createElement("label", {
          htmlFor: this.inputId,
          style: styles2.label,
          onMouseDown: this.handleMouseDown
        }, this.props.label) : null);
      }
    }]);
    return EditableInput2;
  }(_react$6.PureComponent || _react$6.Component);
  EditableInput$1.default = EditableInput;
  var Hue$1 = {};
  var hue$1 = {};
  Object.defineProperty(hue$1, "__esModule", {
    value: true
  });
  hue$1.calculateChange = function calculateChange2(e2, direction2, hsl, container) {
    var containerWidth = container.clientWidth;
    var containerHeight = container.clientHeight;
    var x2 = typeof e2.pageX === "number" ? e2.pageX : e2.touches[0].pageX;
    var y2 = typeof e2.pageY === "number" ? e2.pageY : e2.touches[0].pageY;
    var left2 = x2 - (container.getBoundingClientRect().left + window.pageXOffset);
    var top2 = y2 - (container.getBoundingClientRect().top + window.pageYOffset);
    if (direction2 === "vertical") {
      var h2 = void 0;
      if (top2 < 0) {
        h2 = 359;
      } else if (top2 > containerHeight) {
        h2 = 0;
      } else {
        var percent2 = -(top2 * 100 / containerHeight) + 100;
        h2 = 360 * percent2 / 100;
      }
      if (hsl.h !== h2) {
        return {
          h: h2,
          s: hsl.s,
          l: hsl.l,
          a: hsl.a,
          source: "hsl"
        };
      }
    } else {
      var _h = void 0;
      if (left2 < 0) {
        _h = 0;
      } else if (left2 > containerWidth) {
        _h = 359;
      } else {
        var _percent = left2 * 100 / containerWidth;
        _h = 360 * _percent / 100;
      }
      if (hsl.h !== _h) {
        return {
          h: _h,
          s: hsl.s,
          l: hsl.l,
          a: hsl.a,
          source: "hsl"
        };
      }
    }
    return null;
  };
  Object.defineProperty(Hue$1, "__esModule", {
    value: true
  });
  Hue$1.Hue = void 0;
  var _createClass$3 = function() {
    function defineProperties(target, props) {
      for (var i2 = 0; i2 < props.length; i2++) {
        var descriptor = props[i2];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react$5 = React__default__default["default"];
  var _react2$5 = _interopRequireDefault$5(_react$5);
  var _reactcss$3 = lib$1;
  var _reactcss2$3 = _interopRequireDefault$5(_reactcss$3);
  var _hue = hue$1;
  var hue = _interopRequireWildcard$2(_hue);
  function _interopRequireWildcard$2(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault$5(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck$3(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn$3(self2, call) {
    if (!self2) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self2;
  }
  function _inherits$3(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var Hue = Hue$1.Hue = function(_ref) {
    _inherits$3(Hue2, _ref);
    function Hue2() {
      var _ref2;
      var _temp, _this, _ret;
      _classCallCheck$3(this, Hue2);
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      return _ret = (_temp = (_this = _possibleConstructorReturn$3(this, (_ref2 = Hue2.__proto__ || Object.getPrototypeOf(Hue2)).call.apply(_ref2, [this].concat(args))), _this), _this.handleChange = function(e2) {
        var change = hue.calculateChange(e2, _this.props.direction, _this.props.hsl, _this.container);
        change && typeof _this.props.onChange === "function" && _this.props.onChange(change, e2);
      }, _this.handleMouseDown = function(e2) {
        _this.handleChange(e2);
        window.addEventListener("mousemove", _this.handleChange);
        window.addEventListener("mouseup", _this.handleMouseUp);
      }, _this.handleMouseUp = function() {
        _this.unbindEventListeners();
      }, _temp), _possibleConstructorReturn$3(_this, _ret);
    }
    _createClass$3(Hue2, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.unbindEventListeners();
      }
    }, {
      key: "unbindEventListeners",
      value: function unbindEventListeners() {
        window.removeEventListener("mousemove", this.handleChange);
        window.removeEventListener("mouseup", this.handleMouseUp);
      }
    }, {
      key: "render",
      value: function render3() {
        var _this2 = this;
        var _props$direction = this.props.direction, direction2 = _props$direction === void 0 ? "horizontal" : _props$direction;
        var styles2 = (0, _reactcss2$3.default)({
          "default": {
            hue: {
              absolute: "0px 0px 0px 0px",
              borderRadius: this.props.radius,
              boxShadow: this.props.shadow
            },
            container: {
              padding: "0 2px",
              position: "relative",
              height: "100%",
              borderRadius: this.props.radius
            },
            pointer: {
              position: "absolute",
              left: this.props.hsl.h * 100 / 360 + "%"
            },
            slider: {
              marginTop: "1px",
              width: "4px",
              borderRadius: "1px",
              height: "8px",
              boxShadow: "0 0 2px rgba(0, 0, 0, .6)",
              background: "#fff",
              transform: "translateX(-2px)"
            }
          },
          "vertical": {
            pointer: {
              left: "0px",
              top: -(this.props.hsl.h * 100 / 360) + 100 + "%"
            }
          }
        }, { vertical: direction2 === "vertical" });
        return _react2$5.default.createElement("div", { style: styles2.hue }, _react2$5.default.createElement("div", {
          className: "hue-" + direction2,
          style: styles2.container,
          ref: function ref(container) {
            return _this2.container = container;
          },
          onMouseDown: this.handleMouseDown,
          onTouchMove: this.handleChange,
          onTouchStart: this.handleChange
        }, _react2$5.default.createElement("style", null, "\n            .hue-horizontal {\n              background: linear-gradient(to right, #f00 0%, #ff0 17%, #0f0\n                33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n              background: -webkit-linear-gradient(to right, #f00 0%, #ff0\n                17%, #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n            }\n\n            .hue-vertical {\n              background: linear-gradient(to top, #f00 0%, #ff0 17%, #0f0 33%,\n                #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n              background: -webkit-linear-gradient(to top, #f00 0%, #ff0 17%,\n                #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n            }\n          "), _react2$5.default.createElement("div", { style: styles2.pointer }, this.props.pointer ? _react2$5.default.createElement(this.props.pointer, this.props) : _react2$5.default.createElement("div", { style: styles2.slider }))));
      }
    }]);
    return Hue2;
  }(_react$5.PureComponent || _react$5.Component);
  Hue$1.default = Hue;
  var Raised$1 = {};
  var propTypes = { exports: {} };
  var ReactPropTypesSecret$1 = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  var ReactPropTypesSecret_1 = ReactPropTypesSecret$1;
  var ReactPropTypesSecret = ReactPropTypesSecret_1;
  function emptyFunction() {
  }
  function emptyFunctionWithReset() {
  }
  emptyFunctionWithReset.resetWarningCache = emptyFunction;
  var factoryWithThrowingShims = function() {
    function shim(props, propName, componentName, location, propFullName, secret) {
      if (secret === ReactPropTypesSecret) {
        return;
      }
      var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
      err.name = "Invariant Violation";
      throw err;
    }
    shim.isRequired = shim;
    function getShim() {
      return shim;
    }
    var ReactPropTypes = {
      array: shim,
      bool: shim,
      func: shim,
      number: shim,
      object: shim,
      string: shim,
      symbol: shim,
      any: shim,
      arrayOf: getShim,
      element: shim,
      elementType: shim,
      instanceOf: getShim,
      node: shim,
      objectOf: getShim,
      oneOf: getShim,
      oneOfType: getShim,
      shape: getShim,
      exact: getShim,
      checkPropTypes: emptyFunctionWithReset,
      resetWarningCache: emptyFunction
    };
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
  };
  {
    propTypes.exports = factoryWithThrowingShims();
  }
  var baseAssignValue = _baseAssignValue;
  var eq$1 = eq_1;
  function assignMergeValue$2(object, key, value) {
    if (value !== void 0 && !eq$1(object[key], value) || value === void 0 && !(key in object)) {
      baseAssignValue(object, key, value);
    }
  }
  var _assignMergeValue = assignMergeValue$2;
  var isArrayLike$1 = isArrayLike_1;
  var isObjectLike = isObjectLike_1;
  function isArrayLikeObject$1(value) {
    return isObjectLike(value) && isArrayLike$1(value);
  }
  var isArrayLikeObject_1 = isArrayLikeObject$1;
  function safeGet$2(object, key) {
    if (key === "constructor" && typeof object[key] === "function") {
      return;
    }
    if (key == "__proto__") {
      return;
    }
    return object[key];
  }
  var _safeGet = safeGet$2;
  var copyObject = _copyObject;
  var keysIn$1 = keysIn_1;
  function toPlainObject$1(value) {
    return copyObject(value, keysIn$1(value));
  }
  var toPlainObject_1 = toPlainObject$1;
  var assignMergeValue$1 = _assignMergeValue;
  var cloneBuffer = _cloneBuffer.exports;
  var cloneTypedArray = _cloneTypedArray;
  var copyArray = _copyArray;
  var initCloneObject = _initCloneObject;
  var isArguments = isArguments_1;
  var isArray$1 = isArray_1;
  var isArrayLikeObject = isArrayLikeObject_1;
  var isBuffer = isBuffer$4.exports;
  var isFunction$1 = isFunction_1;
  var isObject$8 = isObject_1;
  var isPlainObject$3 = isPlainObject_1;
  var isTypedArray = isTypedArray_1;
  var safeGet$1 = _safeGet;
  var toPlainObject = toPlainObject_1;
  function baseMergeDeep$1(object, source, key, srcIndex, mergeFunc, customizer, stack) {
    var objValue = safeGet$1(object, key), srcValue = safeGet$1(source, key), stacked = stack.get(srcValue);
    if (stacked) {
      assignMergeValue$1(object, key, stacked);
      return;
    }
    var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : void 0;
    var isCommon = newValue === void 0;
    if (isCommon) {
      var isArr = isArray$1(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
      newValue = srcValue;
      if (isArr || isBuff || isTyped) {
        if (isArray$1(objValue)) {
          newValue = objValue;
        } else if (isArrayLikeObject(objValue)) {
          newValue = copyArray(objValue);
        } else if (isBuff) {
          isCommon = false;
          newValue = cloneBuffer(srcValue, true);
        } else if (isTyped) {
          isCommon = false;
          newValue = cloneTypedArray(srcValue, true);
        } else {
          newValue = [];
        }
      } else if (isPlainObject$3(srcValue) || isArguments(srcValue)) {
        newValue = objValue;
        if (isArguments(objValue)) {
          newValue = toPlainObject(objValue);
        } else if (!isObject$8(objValue) || isFunction$1(objValue)) {
          newValue = initCloneObject(srcValue);
        }
      } else {
        isCommon = false;
      }
    }
    if (isCommon) {
      stack.set(srcValue, newValue);
      mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
      stack["delete"](srcValue);
    }
    assignMergeValue$1(object, key, newValue);
  }
  var _baseMergeDeep = baseMergeDeep$1;
  var Stack = _Stack;
  var assignMergeValue = _assignMergeValue;
  var baseFor = _baseFor;
  var baseMergeDeep = _baseMergeDeep;
  var isObject$7 = isObject_1;
  var keysIn = keysIn_1;
  var safeGet = _safeGet;
  function baseMerge$1(object, source, srcIndex, customizer, stack) {
    if (object === source) {
      return;
    }
    baseFor(source, function(srcValue, key) {
      stack || (stack = new Stack());
      if (isObject$7(srcValue)) {
        baseMergeDeep(object, source, key, srcIndex, baseMerge$1, customizer, stack);
      } else {
        var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + "", object, source, stack) : void 0;
        if (newValue === void 0) {
          newValue = srcValue;
        }
        assignMergeValue(object, key, newValue);
      }
    }, keysIn);
  }
  var _baseMerge = baseMerge$1;
  function apply$1(func, thisArg, args) {
    switch (args.length) {
      case 0:
        return func.call(thisArg);
      case 1:
        return func.call(thisArg, args[0]);
      case 2:
        return func.call(thisArg, args[0], args[1]);
      case 3:
        return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }
  var _apply = apply$1;
  var apply = _apply;
  var nativeMax$1 = Math.max;
  function overRest$1(func, start2, transform3) {
    start2 = nativeMax$1(start2 === void 0 ? func.length - 1 : start2, 0);
    return function() {
      var args = arguments, index2 = -1, length = nativeMax$1(args.length - start2, 0), array = Array(length);
      while (++index2 < length) {
        array[index2] = args[start2 + index2];
      }
      index2 = -1;
      var otherArgs = Array(start2 + 1);
      while (++index2 < start2) {
        otherArgs[index2] = args[index2];
      }
      otherArgs[start2] = transform3(array);
      return apply(func, this, otherArgs);
    };
  }
  var _overRest = overRest$1;
  function constant$1(value) {
    return function() {
      return value;
    };
  }
  var constant_1 = constant$1;
  var constant = constant_1;
  var defineProperty = _defineProperty$4;
  var identity$1 = identity_1;
  var baseSetToString$1 = !defineProperty ? identity$1 : function(func, string) {
    return defineProperty(func, "toString", {
      "configurable": true,
      "enumerable": false,
      "value": constant(string),
      "writable": true
    });
  };
  var _baseSetToString = baseSetToString$1;
  var HOT_COUNT = 800;
  var HOT_SPAN = 16;
  var nativeNow = Date.now;
  function shortOut$1(func) {
    var count = 0, lastCalled = 0;
    return function() {
      var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
      lastCalled = stamp;
      if (remaining > 0) {
        if (++count >= HOT_COUNT) {
          return arguments[0];
        }
      } else {
        count = 0;
      }
      return func.apply(void 0, arguments);
    };
  }
  var _shortOut = shortOut$1;
  var baseSetToString = _baseSetToString;
  var shortOut = _shortOut;
  var setToString$1 = shortOut(baseSetToString);
  var _setToString = setToString$1;
  var identity = identity_1;
  var overRest = _overRest;
  var setToString = _setToString;
  function baseRest$1(func, start2) {
    return setToString(overRest(func, start2, identity), func + "");
  }
  var _baseRest = baseRest$1;
  var eq = eq_1;
  var isArrayLike = isArrayLike_1;
  var isIndex = _isIndex;
  var isObject$6 = isObject_1;
  function isIterateeCall$1(value, index2, object) {
    if (!isObject$6(object)) {
      return false;
    }
    var type = typeof index2;
    if (type == "number" ? isArrayLike(object) && isIndex(index2, object.length) : type == "string" && index2 in object) {
      return eq(object[index2], value);
    }
    return false;
  }
  var _isIterateeCall = isIterateeCall$1;
  var baseRest = _baseRest;
  var isIterateeCall = _isIterateeCall;
  function createAssigner$1(assigner) {
    return baseRest(function(object, sources) {
      var index2 = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : void 0, guard = length > 2 ? sources[2] : void 0;
      customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : void 0;
      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        customizer = length < 3 ? void 0 : customizer;
        length = 1;
      }
      object = Object(object);
      while (++index2 < length) {
        var source = sources[index2];
        if (source) {
          assigner(object, source, index2, customizer);
        }
      }
      return object;
    });
  }
  var _createAssigner = createAssigner$1;
  var baseMerge = _baseMerge;
  var createAssigner = _createAssigner;
  var merge = createAssigner(function(object, source, srcIndex) {
    baseMerge(object, source, srcIndex);
  });
  var merge_1 = merge;
  Object.defineProperty(Raised$1, "__esModule", {
    value: true
  });
  Raised$1.Raised = void 0;
  var _react$4 = React__default__default["default"];
  var _react2$4 = _interopRequireDefault$4(_react$4);
  var _propTypes = propTypes.exports;
  var _propTypes2 = _interopRequireDefault$4(_propTypes);
  var _reactcss$2 = lib$1;
  var _reactcss2$2 = _interopRequireDefault$4(_reactcss$2);
  var _merge = merge_1;
  var _merge2 = _interopRequireDefault$4(_merge);
  function _interopRequireDefault$4(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var Raised = Raised$1.Raised = function Raised2(_ref) {
    var zDepth = _ref.zDepth, radius = _ref.radius, background = _ref.background, children2 = _ref.children, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles;
    var styles2 = (0, _reactcss2$2.default)((0, _merge2.default)({
      "default": {
        wrap: {
          position: "relative",
          display: "inline-block"
        },
        content: {
          position: "relative"
        },
        bg: {
          absolute: "0px 0px 0px 0px",
          boxShadow: "0 " + zDepth + "px " + zDepth * 4 + "px rgba(0,0,0,.24)",
          borderRadius: radius,
          background
        }
      },
      "zDepth-0": {
        bg: {
          boxShadow: "none"
        }
      },
      "zDepth-1": {
        bg: {
          boxShadow: "0 2px 10px rgba(0,0,0,.12), 0 2px 5px rgba(0,0,0,.16)"
        }
      },
      "zDepth-2": {
        bg: {
          boxShadow: "0 6px 20px rgba(0,0,0,.19), 0 8px 17px rgba(0,0,0,.2)"
        }
      },
      "zDepth-3": {
        bg: {
          boxShadow: "0 17px 50px rgba(0,0,0,.19), 0 12px 15px rgba(0,0,0,.24)"
        }
      },
      "zDepth-4": {
        bg: {
          boxShadow: "0 25px 55px rgba(0,0,0,.21), 0 16px 28px rgba(0,0,0,.22)"
        }
      },
      "zDepth-5": {
        bg: {
          boxShadow: "0 40px 77px rgba(0,0,0,.22), 0 27px 24px rgba(0,0,0,.2)"
        }
      },
      "square": {
        bg: {
          borderRadius: "0"
        }
      },
      "circle": {
        bg: {
          borderRadius: "50%"
        }
      }
    }, passedStyles), { "zDepth-1": zDepth === 1 });
    return _react2$4.default.createElement("div", { style: styles2.wrap }, _react2$4.default.createElement("div", { style: styles2.bg }), _react2$4.default.createElement("div", { style: styles2.content }, children2));
  };
  Raised.propTypes = {
    background: _propTypes2.default.string,
    zDepth: _propTypes2.default.oneOf([0, 1, 2, 3, 4, 5]),
    radius: _propTypes2.default.number,
    styles: _propTypes2.default.object
  };
  Raised.defaultProps = {
    background: "#fff",
    zDepth: 1,
    radius: 2,
    styles: {}
  };
  Raised$1.default = Raised;
  var Saturation$1 = {};
  var root = _root;
  var now$1 = function() {
    return root.Date.now();
  };
  var now_1 = now$1;
  var reWhitespace = /\s/;
  function trimmedEndIndex$1(string) {
    var index2 = string.length;
    while (index2-- && reWhitespace.test(string.charAt(index2))) {
    }
    return index2;
  }
  var _trimmedEndIndex = trimmedEndIndex$1;
  var trimmedEndIndex = _trimmedEndIndex;
  var reTrimStart = /^\s+/;
  function baseTrim$1(string) {
    return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
  }
  var _baseTrim = baseTrim$1;
  var baseTrim = _baseTrim;
  var isObject$5 = isObject_1;
  var isSymbol = isSymbol_1;
  var NAN = 0 / 0;
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
  var reIsBinary = /^0b[01]+$/i;
  var reIsOctal = /^0o[0-7]+$/i;
  var freeParseInt = parseInt;
  function toNumber$1(value) {
    if (typeof value == "number") {
      return value;
    }
    if (isSymbol(value)) {
      return NAN;
    }
    if (isObject$5(value)) {
      var other = typeof value.valueOf == "function" ? value.valueOf() : value;
      value = isObject$5(other) ? other + "" : other;
    }
    if (typeof value != "string") {
      return value === 0 ? value : +value;
    }
    value = baseTrim(value);
    var isBinary = reIsBinary.test(value);
    return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
  }
  var toNumber_1 = toNumber$1;
  var isObject$4 = isObject_1;
  var now = now_1;
  var toNumber = toNumber_1;
  var FUNC_ERROR_TEXT$1 = "Expected a function";
  var nativeMax = Math.max;
  var nativeMin = Math.min;
  function debounce$1(func, wait, options) {
    var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
    if (typeof func != "function") {
      throw new TypeError(FUNC_ERROR_TEXT$1);
    }
    wait = toNumber(wait) || 0;
    if (isObject$4(options)) {
      leading = !!options.leading;
      maxing = "maxWait" in options;
      maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
      trailing = "trailing" in options ? !!options.trailing : trailing;
    }
    function invokeFunc(time) {
      var args = lastArgs, thisArg = lastThis;
      lastArgs = lastThis = void 0;
      lastInvokeTime = time;
      result = func.apply(thisArg, args);
      return result;
    }
    function leadingEdge(time) {
      lastInvokeTime = time;
      timerId = setTimeout(timerExpired, wait);
      return leading ? invokeFunc(time) : result;
    }
    function remainingWait(time) {
      var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
      return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
    }
    function shouldInvoke(time) {
      var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
      return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
    }
    function timerExpired() {
      var time = now();
      if (shouldInvoke(time)) {
        return trailingEdge(time);
      }
      timerId = setTimeout(timerExpired, remainingWait(time));
    }
    function trailingEdge(time) {
      timerId = void 0;
      if (trailing && lastArgs) {
        return invokeFunc(time);
      }
      lastArgs = lastThis = void 0;
      return result;
    }
    function cancel2() {
      if (timerId !== void 0) {
        clearTimeout(timerId);
      }
      lastInvokeTime = 0;
      lastArgs = lastCallTime = lastThis = timerId = void 0;
    }
    function flush() {
      return timerId === void 0 ? result : trailingEdge(now());
    }
    function debounced() {
      var time = now(), isInvoking = shouldInvoke(time);
      lastArgs = arguments;
      lastThis = this;
      lastCallTime = time;
      if (isInvoking) {
        if (timerId === void 0) {
          return leadingEdge(lastCallTime);
        }
        if (maxing) {
          clearTimeout(timerId);
          timerId = setTimeout(timerExpired, wait);
          return invokeFunc(lastCallTime);
        }
      }
      if (timerId === void 0) {
        timerId = setTimeout(timerExpired, wait);
      }
      return result;
    }
    debounced.cancel = cancel2;
    debounced.flush = flush;
    return debounced;
  }
  var debounce_1 = debounce$1;
  var debounce = debounce_1;
  var isObject$3 = isObject_1;
  var FUNC_ERROR_TEXT = "Expected a function";
  function throttle(func, wait, options) {
    var leading = true, trailing = true;
    if (typeof func != "function") {
      throw new TypeError(FUNC_ERROR_TEXT);
    }
    if (isObject$3(options)) {
      leading = "leading" in options ? !!options.leading : leading;
      trailing = "trailing" in options ? !!options.trailing : trailing;
    }
    return debounce(func, wait, {
      "leading": leading,
      "maxWait": wait,
      "trailing": trailing
    });
  }
  var throttle_1 = throttle;
  var saturation$1 = {};
  Object.defineProperty(saturation$1, "__esModule", {
    value: true
  });
  saturation$1.calculateChange = function calculateChange3(e2, hsl, container) {
    var _container$getBoundin = container.getBoundingClientRect(), containerWidth = _container$getBoundin.width, containerHeight = _container$getBoundin.height;
    var x2 = typeof e2.pageX === "number" ? e2.pageX : e2.touches[0].pageX;
    var y2 = typeof e2.pageY === "number" ? e2.pageY : e2.touches[0].pageY;
    var left2 = x2 - (container.getBoundingClientRect().left + window.pageXOffset);
    var top2 = y2 - (container.getBoundingClientRect().top + window.pageYOffset);
    if (left2 < 0) {
      left2 = 0;
    } else if (left2 > containerWidth) {
      left2 = containerWidth;
    }
    if (top2 < 0) {
      top2 = 0;
    } else if (top2 > containerHeight) {
      top2 = containerHeight;
    }
    var saturation2 = left2 / containerWidth;
    var bright = 1 - top2 / containerHeight;
    return {
      h: hsl.h,
      s: saturation2,
      v: bright,
      a: hsl.a,
      source: "hsv"
    };
  };
  Object.defineProperty(Saturation$1, "__esModule", {
    value: true
  });
  Saturation$1.Saturation = void 0;
  var _createClass$2 = function() {
    function defineProperties(target, props) {
      for (var i2 = 0; i2 < props.length; i2++) {
        var descriptor = props[i2];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react$3 = React__default__default["default"];
  var _react2$3 = _interopRequireDefault$3(_react$3);
  var _reactcss$1 = lib$1;
  var _reactcss2$1 = _interopRequireDefault$3(_reactcss$1);
  var _throttle = throttle_1;
  var _throttle2 = _interopRequireDefault$3(_throttle);
  var _saturation = saturation$1;
  var saturation = _interopRequireWildcard$1(_saturation);
  function _interopRequireWildcard$1(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault$3(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck$2(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn$2(self2, call) {
    if (!self2) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self2;
  }
  function _inherits$2(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var Saturation = Saturation$1.Saturation = function(_ref) {
    _inherits$2(Saturation2, _ref);
    function Saturation2(props) {
      _classCallCheck$2(this, Saturation2);
      var _this = _possibleConstructorReturn$2(this, (Saturation2.__proto__ || Object.getPrototypeOf(Saturation2)).call(this, props));
      _this.handleChange = function(e2) {
        typeof _this.props.onChange === "function" && _this.throttle(_this.props.onChange, saturation.calculateChange(e2, _this.props.hsl, _this.container), e2);
      };
      _this.handleMouseDown = function(e2) {
        _this.handleChange(e2);
        var renderWindow = _this.getContainerRenderWindow();
        renderWindow.addEventListener("mousemove", _this.handleChange);
        renderWindow.addEventListener("mouseup", _this.handleMouseUp);
      };
      _this.handleMouseUp = function() {
        _this.unbindEventListeners();
      };
      _this.throttle = (0, _throttle2.default)(function(fn3, data, e2) {
        fn3(data, e2);
      }, 50);
      return _this;
    }
    _createClass$2(Saturation2, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.throttle.cancel();
        this.unbindEventListeners();
      }
    }, {
      key: "getContainerRenderWindow",
      value: function getContainerRenderWindow() {
        var container = this.container;
        var renderWindow = window;
        while (!renderWindow.document.contains(container) && renderWindow.parent !== renderWindow) {
          renderWindow = renderWindow.parent;
        }
        return renderWindow;
      }
    }, {
      key: "unbindEventListeners",
      value: function unbindEventListeners() {
        var renderWindow = this.getContainerRenderWindow();
        renderWindow.removeEventListener("mousemove", this.handleChange);
        renderWindow.removeEventListener("mouseup", this.handleMouseUp);
      }
    }, {
      key: "render",
      value: function render3() {
        var _this2 = this;
        var _ref2 = this.props.style || {}, color2 = _ref2.color, white = _ref2.white, black = _ref2.black, pointer = _ref2.pointer, circle = _ref2.circle;
        var styles2 = (0, _reactcss2$1.default)({
          "default": {
            color: {
              absolute: "0px 0px 0px 0px",
              background: "hsl(" + this.props.hsl.h + ",100%, 50%)",
              borderRadius: this.props.radius
            },
            white: {
              absolute: "0px 0px 0px 0px",
              borderRadius: this.props.radius
            },
            black: {
              absolute: "0px 0px 0px 0px",
              boxShadow: this.props.shadow,
              borderRadius: this.props.radius
            },
            pointer: {
              position: "absolute",
              top: -(this.props.hsv.v * 100) + 100 + "%",
              left: this.props.hsv.s * 100 + "%",
              cursor: "default"
            },
            circle: {
              width: "4px",
              height: "4px",
              boxShadow: "0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3),\n            0 0 1px 2px rgba(0,0,0,.4)",
              borderRadius: "50%",
              cursor: "hand",
              transform: "translate(-2px, -2px)"
            }
          },
          "custom": {
            color: color2,
            white,
            black,
            pointer,
            circle
          }
        }, { "custom": !!this.props.style });
        return _react2$3.default.createElement("div", {
          style: styles2.color,
          ref: function ref(container) {
            return _this2.container = container;
          },
          onMouseDown: this.handleMouseDown,
          onTouchMove: this.handleChange,
          onTouchStart: this.handleChange
        }, _react2$3.default.createElement("style", null, "\n          .saturation-white {\n            background: -webkit-linear-gradient(to right, #fff, rgba(255,255,255,0));\n            background: linear-gradient(to right, #fff, rgba(255,255,255,0));\n          }\n          .saturation-black {\n            background: -webkit-linear-gradient(to top, #000, rgba(0,0,0,0));\n            background: linear-gradient(to top, #000, rgba(0,0,0,0));\n          }\n        "), _react2$3.default.createElement("div", { style: styles2.white, className: "saturation-white" }, _react2$3.default.createElement("div", { style: styles2.black, className: "saturation-black" }), _react2$3.default.createElement("div", { style: styles2.pointer }, this.props.pointer ? _react2$3.default.createElement(this.props.pointer, this.props) : _react2$3.default.createElement("div", { style: styles2.circle }))));
      }
    }]);
    return Saturation2;
  }(_react$3.PureComponent || _react$3.Component);
  Saturation$1.default = Saturation;
  var ColorWrap$1 = {};
  Object.defineProperty(ColorWrap$1, "__esModule", {
    value: true
  });
  ColorWrap$1.ColorWrap = void 0;
  var _extends$2 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass$1 = function() {
    function defineProperties(target, props) {
      for (var i2 = 0; i2 < props.length; i2++) {
        var descriptor = props[i2];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react$2 = React__default__default["default"];
  var _react2$2 = _interopRequireDefault$2(_react$2);
  var _debounce = debounce_1;
  var _debounce2 = _interopRequireDefault$2(_debounce);
  var _color = color$1;
  var color = _interopRequireWildcard(_color);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault$2(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck$1(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn$1(self2, call) {
    if (!self2) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self2;
  }
  function _inherits$1(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var ColorWrap = ColorWrap$1.ColorWrap = function ColorWrap2(Picker) {
    var ColorPicker2 = function(_ref) {
      _inherits$1(ColorPicker3, _ref);
      function ColorPicker3(props) {
        _classCallCheck$1(this, ColorPicker3);
        var _this = _possibleConstructorReturn$1(this, (ColorPicker3.__proto__ || Object.getPrototypeOf(ColorPicker3)).call(this));
        _this.handleChange = function(data, event) {
          var isValidColor = color.simpleCheckForValidColor(data);
          if (isValidColor) {
            var colors = color.toState(data, data.h || _this.state.oldHue);
            _this.setState(colors);
            _this.props.onChangeComplete && _this.debounce(_this.props.onChangeComplete, colors, event);
            _this.props.onChange && _this.props.onChange(colors, event);
          }
        };
        _this.handleSwatchHover = function(data, event) {
          var isValidColor = color.simpleCheckForValidColor(data);
          if (isValidColor) {
            var colors = color.toState(data, data.h || _this.state.oldHue);
            _this.props.onSwatchHover && _this.props.onSwatchHover(colors, event);
          }
        };
        _this.state = _extends$2({}, color.toState(props.color, 0));
        _this.debounce = (0, _debounce2.default)(function(fn3, data, event) {
          fn3(data, event);
        }, 100);
        return _this;
      }
      _createClass$1(ColorPicker3, [{
        key: "render",
        value: function render3() {
          var optionalEvents = {};
          if (this.props.onSwatchHover) {
            optionalEvents.onSwatchHover = this.handleSwatchHover;
          }
          return _react2$2.default.createElement(Picker, _extends$2({}, this.props, this.state, {
            onChange: this.handleChange
          }, optionalEvents));
        }
      }], [{
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(nextProps, state) {
          return _extends$2({}, color.toState(nextProps.color, state.oldHue));
        }
      }]);
      return ColorPicker3;
    }(_react$2.PureComponent || _react$2.Component);
    ColorPicker2.propTypes = _extends$2({}, Picker.propTypes);
    ColorPicker2.defaultProps = _extends$2({}, Picker.defaultProps, {
      color: {
        h: 250,
        s: 0.5,
        l: 0.2,
        a: 1
      }
    });
    return ColorPicker2;
  };
  ColorWrap$1.default = ColorWrap;
  var Swatch$1 = {};
  var interaction = {};
  Object.defineProperty(interaction, "__esModule", {
    value: true
  });
  interaction.handleFocus = void 0;
  var _extends$1 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i2 = 0; i2 < props.length; i2++) {
        var descriptor = props[i2];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react$1 = React__default__default["default"];
  var _react2$1 = _interopRequireDefault$1(_react$1);
  function _interopRequireDefault$1(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self2, call) {
    if (!self2) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self2;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  interaction.handleFocus = function handleFocus(Component) {
    var Span2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "span";
    return function(_React$Component) {
      _inherits(Focus, _React$Component);
      function Focus() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, Focus);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Focus.__proto__ || Object.getPrototypeOf(Focus)).call.apply(_ref, [this].concat(args))), _this), _this.state = { focus: false }, _this.handleFocus = function() {
          return _this.setState({ focus: true });
        }, _this.handleBlur = function() {
          return _this.setState({ focus: false });
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(Focus, [{
        key: "render",
        value: function render3() {
          return _react2$1.default.createElement(Span2, { onFocus: this.handleFocus, onBlur: this.handleBlur }, _react2$1.default.createElement(Component, _extends$1({}, this.props, this.state)));
        }
      }]);
      return Focus;
    }(_react2$1.default.Component);
  };
  Object.defineProperty(Swatch$1, "__esModule", {
    value: true
  });
  Swatch$1.Swatch = void 0;
  var _extends = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _react = React__default__default["default"];
  var _react2 = _interopRequireDefault(_react);
  var _reactcss = lib$1;
  var _reactcss2 = _interopRequireDefault(_reactcss);
  var _interaction = interaction;
  var _Checkboard = Checkboard$1;
  var _Checkboard2 = _interopRequireDefault(_Checkboard);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var ENTER = 13;
  var Swatch = Swatch$1.Swatch = function Swatch2(_ref) {
    var color2 = _ref.color, style2 = _ref.style, _ref$onClick = _ref.onClick, onClick = _ref$onClick === void 0 ? function() {
    } : _ref$onClick, onHover = _ref.onHover, _ref$title = _ref.title, title = _ref$title === void 0 ? color2 : _ref$title, children2 = _ref.children, focus = _ref.focus, _ref$focusStyle = _ref.focusStyle, focusStyle = _ref$focusStyle === void 0 ? {} : _ref$focusStyle;
    var transparent = color2 === "transparent";
    var styles2 = (0, _reactcss2.default)({
      default: {
        swatch: _extends({
          background: color2,
          height: "100%",
          width: "100%",
          cursor: "pointer",
          position: "relative",
          outline: "none"
        }, style2, focus ? focusStyle : {})
      }
    });
    var handleClick = function handleClick2(e2) {
      return onClick(color2, e2);
    };
    var handleKeyDown = function handleKeyDown2(e2) {
      return e2.keyCode === ENTER && onClick(color2, e2);
    };
    var handleHover = function handleHover2(e2) {
      return onHover(color2, e2);
    };
    var optionalEvents = {};
    if (onHover) {
      optionalEvents.onMouseOver = handleHover;
    }
    return _react2.default.createElement("div", _extends({
      style: styles2.swatch,
      onClick: handleClick,
      title,
      tabIndex: 0,
      onKeyDown: handleKeyDown
    }, optionalEvents), children2, transparent && _react2.default.createElement(_Checkboard2.default, {
      borderRadius: styles2.swatch.borderRadius,
      boxShadow: "inset 0 0 0 1px rgba(0,0,0,0.1)"
    }));
  };
  Swatch$1.default = (0, _interaction.handleFocus)(Swatch);
  (function(exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _Alpha = Alpha$1;
    Object.defineProperty(exports, "Alpha", {
      enumerable: true,
      get: function get3() {
        return _interopRequireDefault2(_Alpha).default;
      }
    });
    var _Checkboard3 = Checkboard$1;
    Object.defineProperty(exports, "Checkboard", {
      enumerable: true,
      get: function get3() {
        return _interopRequireDefault2(_Checkboard3).default;
      }
    });
    var _EditableInput = EditableInput$1;
    Object.defineProperty(exports, "EditableInput", {
      enumerable: true,
      get: function get3() {
        return _interopRequireDefault2(_EditableInput).default;
      }
    });
    var _Hue = Hue$1;
    Object.defineProperty(exports, "Hue", {
      enumerable: true,
      get: function get3() {
        return _interopRequireDefault2(_Hue).default;
      }
    });
    var _Raised = Raised$1;
    Object.defineProperty(exports, "Raised", {
      enumerable: true,
      get: function get3() {
        return _interopRequireDefault2(_Raised).default;
      }
    });
    var _Saturation = Saturation$1;
    Object.defineProperty(exports, "Saturation", {
      enumerable: true,
      get: function get3() {
        return _interopRequireDefault2(_Saturation).default;
      }
    });
    var _ColorWrap = ColorWrap$1;
    Object.defineProperty(exports, "ColorWrap", {
      enumerable: true,
      get: function get3() {
        return _interopRequireDefault2(_ColorWrap).default;
      }
    });
    var _Swatch = Swatch$1;
    Object.defineProperty(exports, "Swatch", {
      enumerable: true,
      get: function get3() {
        return _interopRequireDefault2(_Swatch).default;
      }
    });
    function _interopRequireDefault2(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
  })(common);
  var ColorType;
  (function(ColorType2) {
    ColorType2["Brand"] = "Brand";
    ColorType2["Custom"] = "Custom";
  })(ColorType || (ColorType = {}));
  [
    { id: ColorType.Brand, value: "Brand Colors" },
    { id: ColorType.Custom, value: "Custom Color" }
  ];
  function useDialog(props, ref) {
    let {
      role = "dialog"
    } = props;
    let titleId = useSlotId();
    titleId = props["aria-label"] ? void 0 : titleId;
    React__default.useEffect(() => {
      if (ref.current && !ref.current.contains(document.activeElement)) {
        focusSafely(ref.current);
        let timeout = setTimeout(() => {
          if (document.activeElement === ref.current) {
            ref.current.blur();
            focusSafely(ref.current);
          }
        }, 500);
        return () => {
          clearTimeout(timeout);
        };
      }
    }, [ref]);
    return {
      dialogProps: _extends$a({}, filterDOMProps(props, {
        labelable: true
      }), {
        role,
        tabIndex: -1,
        "aria-labelledby": props["aria-labelledby"] || titleId
      }),
      titleProps: {
        id: titleId
      }
    };
  }
  React__default.forwardRef(({
    title,
    decorator,
    badges = [],
    onClick,
    onClose,
    children: children2,
    isOpen,
    positionProps,
    overlayTriggerProps,
    scrollRef
  }, ref) => {
    const { overlayProps } = useOverlay({ onClose, isOpen, isDismissable: true }, ref);
    const { modalProps } = useModal();
    const { dialogProps, titleProps } = useDialog({}, ref);
    return /* @__PURE__ */ React__default__default["default"].createElement("div", __spreadProps(__spreadValues({}, mergeProps(overlayProps, dialogProps, modalProps, positionProps, overlayTriggerProps)), {
      ref,
      className: "tw-max-h-full tw-overflow-y-scroll tw-shadow-mid tw-min-w-[400px] tw-outline-none"
    }), /* @__PURE__ */ React__default__default["default"].createElement("div", {
      ref: scrollRef,
      className: "tw-flex tw-flex-col tw-divide-y tw-divide tw-divide-black-10 tw-rounded tw-bg-white tw-text-black dark:tw-text-white dark:tw-bg-black-95"
    }, title && /* @__PURE__ */ React__default__default["default"].createElement("div", {
      className: "tw-flex tw-justify-between tw-flex-wrap tw-gap-3 tw-p-8"
    }, /* @__PURE__ */ React__default__default["default"].createElement("div", __spreadProps(__spreadValues({}, titleProps), {
      className: "tw-inline-flex"
    }), /* @__PURE__ */ React__default__default["default"].createElement(FieldsetHeader, {
      decorator
    }, title)), /* @__PURE__ */ React__default__default["default"].createElement("div", {
      className: "tw-inline-flex tw-gap-2 tw-flex-wrap"
    }, badges.map((badgeProps, index2) => /* @__PURE__ */ React__default__default["default"].createElement(Badge, __spreadProps(__spreadValues({}, badgeProps), {
      key: `flyout-badge-${index2}`
    }))))), React__default.Children.map(children2, (child, index2) => /* @__PURE__ */ React__default__default["default"].createElement("div", {
      key: index2
    }, child)), /* @__PURE__ */ React__default__default["default"].createElement("div", {
      className: "tw-flex tw-gap-x-3 tw-justify-end tw-py-5 tw-px-8 tw-sticky tw-bottom-0 tw-bg-white dark:tw-bg-black-95"
    }, onClick ? /* @__PURE__ */ React__default__default["default"].createElement(React__default__default["default"].Fragment, null, /* @__PURE__ */ React__default__default["default"].createElement(Button, {
      onClick: onClose,
      style: ButtonStyle.Secondary
    }, "Cancel"), /* @__PURE__ */ React__default__default["default"].createElement(Button, {
      onClick,
      icon: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCheck, null)
    }, "Confirm")) : /* @__PURE__ */ React__default__default["default"].createElement(Button, {
      onClick: onClose,
      style: ButtonStyle.Secondary
    }, "Close")), /* @__PURE__ */ React__default__default["default"].createElement(DismissButton, {
      onDismiss: onClose
    })));
  });
  function IconColors(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconColors"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M11.924 4.16c-.368.394-.74.807-1.113 1.238-.385.443-.752.912-1.104 1.407-.495.677-.94 1.354-1.338 2.03-.397.678-.729 1.349-.996 2.013a12.48 12.48 0 00-.615 1.972 8.893 8.893 0 00-.215 1.914c0 .743.133 1.459.4 2.149s.638 1.299 1.114 1.826c.475.527 1.041.95 1.699 1.27a4.878 4.878 0 002.158.478c.794 0 1.52-.16 2.178-.478a5.604 5.604 0 001.709-1.27 5.76 5.76 0 001.123-1.826c.267-.69.394-1.406.38-2.149 0-.625-.074-1.26-.224-1.904a13.392 13.392 0 00-.625-1.963 15.897 15.897 0 00-.986-2.012 22.528 22.528 0 00-1.328-2.03c-.352-.496-.72-.968-1.104-1.417a38.55 38.55 0 00-1.113-1.248zm6.924 10.574c0 .795-.147 1.618-.44 2.471A7.567 7.567 0 0117.1 19.55a7.037 7.037 0 01-2.168 1.758c-.866.462-1.872.693-3.018.693-1.133 0-2.129-.231-2.988-.693a7.193 7.193 0 01-2.168-1.758 7.465 7.465 0 01-1.319-2.344C5.146 16.352 5 15.53 5 14.735c0-1.654.361-3.246 1.084-4.776.723-1.53 1.517-2.884 2.383-4.063.866-1.178 1.657-2.122 2.373-2.832L11.914 2l1.074 1.064c.716.71 1.507 1.654 2.373 2.832.866 1.179 1.66 2.533 2.383 4.063a11.267 11.267 0 011.104 4.775zm-6.934 1.114c0 .43-.15.794-.45 1.093-.299.3-.657.45-1.073.45-.43 0-.795-.15-1.094-.45-.3-.3-.45-.664-.45-1.093 0-.43.15-.795.45-1.094.3-.3.664-.45 1.094-.45.416 0 .774.15 1.074.45.3.3.45.664.45 1.094z"
    }));
  }
  var MemoIconColors = React__default__default["default"].memo(IconColors);
  var DividerStyle;
  (function(DividerStyle2) {
    DividerStyle2["NoLine"] = "noline";
    DividerStyle2["Dashed"] = "dashed";
    DividerStyle2["Solid"] = "solid";
    DividerStyle2["Dotted"] = "dotted";
  })(DividerStyle || (DividerStyle = {}));
  var DividerHeight;
  (function(DividerHeight2) {
    DividerHeight2["Small"] = "36px";
    DividerHeight2["Medium"] = "60px";
    DividerHeight2["Large"] = "96px";
  })(DividerHeight || (DividerHeight = {}));
  ({
    [DividerStyle.NoLine]: "tw-border-none",
    [DividerStyle.Dashed]: "tw-border-dashed",
    [DividerStyle.Solid]: "tw-border-solid",
    [DividerStyle.Dotted]: "tw-border-dotted"
  });
  var FormControlStyle;
  (function(FormControlStyle2) {
    FormControlStyle2["Primary"] = "Primary";
    FormControlStyle2["Positive"] = "Positive";
    FormControlStyle2["Danger"] = "Danger";
  })(FormControlStyle || (FormControlStyle = {}));
  ({
    [FormControlStyle.Primary]: Validation.Default,
    [FormControlStyle.Positive]: Validation.Success,
    [FormControlStyle.Danger]: Validation.Error
  });
  var HelperPosition;
  (function(HelperPosition2) {
    HelperPosition2["Before"] = "Before";
    HelperPosition2["After"] = "After";
  })(HelperPosition || (HelperPosition = {}));
  var FormControlDirection;
  (function(FormControlDirection2) {
    FormControlDirection2["Horizontal"] = "Horizontal";
    FormControlDirection2["Vertical"] = "Vertical";
  })(FormControlDirection || (FormControlDirection = {}));
  var MultiInputLayout;
  (function(MultiInputLayout2) {
    MultiInputLayout2["Columns"] = "Columns";
    MultiInputLayout2["Spider"] = "Spider";
  })(MultiInputLayout || (MultiInputLayout = {}));
  var TagType;
  (function(TagType2) {
    TagType2["Suggested"] = "Suggested";
    TagType2["Selected"] = "Selected";
    TagType2["SelectedWithFocus"] = "SelectedWithFocus";
    TagType2["PreviouslySelected"] = "PreviouslySelected";
  })(TagType || (TagType = {}));
  ({
    [TagType.Suggested]: "tw-bg-white dark:tw-bg-black-100 hover:tw-bg-black-0 dark:hover:tw-bg-black-superdark tw-border-black-20 dark:tw-border-white hover:tw-border-black-40 dark:hover:tw-border-black-20 tw-text-black-80 dark:tw-text-white dark:hover:tw-text-black-20",
    [TagType.Selected]: "tw-bg-black-5 hover:tw-bg-black-10 dark:hover:tw-bg-black-20 tw-border-black-5 hover:tw-border-black-10 dark:hover:tw-border-black-20 tw-text-black-80 hover:tw-text-black-100",
    [TagType.SelectedWithFocus]: "tw-bg-violet-60 dark:tw-bg-violet-50 hover:tw-bg-violet-70 dark:hover:tw-bg-violet-60 tw-border-violet-60 dark:tw-border-violet-50 hover:tw-border-violet-70 dark:hover:tw-border-violet-60 tw-text-white",
    [TagType.PreviouslySelected]: "tw-bg-white dark:tw-bg-black-100 hover:tw-bg-black-0 dark:hover:tw-bg-black-superdark tw-text-violet-60 dark:tw-text-violet-50 hover:tw-text-violet-70 dark:hover:tw-text-violet-60"
  });
  var MultiSelectType;
  (function(MultiSelectType2) {
    MultiSelectType2["Default"] = "Default";
    MultiSelectType2["Summarized"] = "Summarized";
  })(MultiSelectType || (MultiSelectType = {}));
  var __assign$1 = function() {
    __assign$1 = Object.assign || function __assign2(t2) {
      for (var s2, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
        s2 = arguments[i2];
        for (var p2 in s2)
          if (Object.prototype.hasOwnProperty.call(s2, p2))
            t2[p2] = s2[p2];
      }
      return t2;
    };
    return __assign$1.apply(this, arguments);
  };
  function __rest$1(s2, e2) {
    var t2 = {};
    for (var p2 in s2)
      if (Object.prototype.hasOwnProperty.call(s2, p2) && e2.indexOf(p2) < 0)
        t2[p2] = s2[p2];
    if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
      for (var i2 = 0, p2 = Object.getOwnPropertySymbols(s2); i2 < p2.length; i2++) {
        if (e2.indexOf(p2[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p2[i2]))
          t2[p2[i2]] = s2[p2[i2]];
      }
    return t2;
  }
  function __values$1(o2) {
    var s2 = typeof Symbol === "function" && Symbol.iterator, m = s2 && o2[s2], i2 = 0;
    if (m)
      return m.call(o2);
    if (o2 && typeof o2.length === "number")
      return {
        next: function() {
          if (o2 && i2 >= o2.length)
            o2 = void 0;
          return { value: o2 && o2[i2++], done: !o2 };
        }
      };
    throw new TypeError(s2 ? "Object is not iterable." : "Symbol.iterator is not defined.");
  }
  function __read$4(o2, n2) {
    var m = typeof Symbol === "function" && o2[Symbol.iterator];
    if (!m)
      return o2;
    var i2 = m.call(o2), r2, ar = [], e2;
    try {
      while ((n2 === void 0 || n2-- > 0) && !(r2 = i2.next()).done)
        ar.push(r2.value);
    } catch (error2) {
      e2 = { error: error2 };
    } finally {
      try {
        if (r2 && !r2.done && (m = i2["return"]))
          m.call(i2);
      } finally {
        if (e2)
          throw e2.error;
      }
    }
    return ar;
  }
  function __spreadArray$1(to, from) {
    for (var i2 = 0, il = from.length, j2 = to.length; i2 < il; i2++, j2++)
      to[j2] = from[i2];
    return to;
  }
  var STATE_DELIMITER = ".";
  var EMPTY_ACTIVITY_MAP = {};
  var DEFAULT_GUARD_TYPE = "xstate.guard";
  var TARGETLESS_KEY = "";
  function keys(value) {
    return Object.keys(value);
  }
  function matchesState(parentStateId, childStateId, delimiter) {
    if (delimiter === void 0) {
      delimiter = STATE_DELIMITER;
    }
    var parentStateValue = toStateValue(parentStateId, delimiter);
    var childStateValue = toStateValue(childStateId, delimiter);
    if (isString(childStateValue)) {
      if (isString(parentStateValue)) {
        return childStateValue === parentStateValue;
      }
      return false;
    }
    if (isString(parentStateValue)) {
      return parentStateValue in childStateValue;
    }
    return keys(parentStateValue).every(function(key) {
      if (!(key in childStateValue)) {
        return false;
      }
      return matchesState(parentStateValue[key], childStateValue[key]);
    });
  }
  function getEventType(event) {
    try {
      return isString(event) || typeof event === "number" ? "" + event : event.type;
    } catch (e2) {
      throw new Error("Events must be strings or objects with a string event.type property.");
    }
  }
  function toStatePath(stateId, delimiter) {
    try {
      if (isArray(stateId)) {
        return stateId;
      }
      return stateId.toString().split(delimiter);
    } catch (e2) {
      throw new Error("'" + stateId + "' is not a valid state path.");
    }
  }
  function isStateLike(state) {
    return typeof state === "object" && "value" in state && "context" in state && "event" in state && "_event" in state;
  }
  function toStateValue(stateValue, delimiter) {
    if (isStateLike(stateValue)) {
      return stateValue.value;
    }
    if (isArray(stateValue)) {
      return pathToStateValue(stateValue);
    }
    if (typeof stateValue !== "string") {
      return stateValue;
    }
    var statePath = toStatePath(stateValue, delimiter);
    return pathToStateValue(statePath);
  }
  function pathToStateValue(statePath) {
    if (statePath.length === 1) {
      return statePath[0];
    }
    var value = {};
    var marker = value;
    for (var i2 = 0; i2 < statePath.length - 1; i2++) {
      if (i2 === statePath.length - 2) {
        marker[statePath[i2]] = statePath[i2 + 1];
      } else {
        marker[statePath[i2]] = {};
        marker = marker[statePath[i2]];
      }
    }
    return value;
  }
  function mapValues(collection, iteratee) {
    var result = {};
    var collectionKeys = keys(collection);
    for (var i2 = 0; i2 < collectionKeys.length; i2++) {
      var key = collectionKeys[i2];
      result[key] = iteratee(collection[key], key, collection, i2);
    }
    return result;
  }
  function mapFilterValues(collection, iteratee, predicate) {
    var e_1, _a2;
    var result = {};
    try {
      for (var _b = __values$1(keys(collection)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var key = _c.value;
        var item = collection[key];
        if (!predicate(item)) {
          continue;
        }
        result[key] = iteratee(item, key, collection);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a2 = _b.return))
          _a2.call(_b);
      } finally {
        if (e_1)
          throw e_1.error;
      }
    }
    return result;
  }
  var path = function(props) {
    return function(object) {
      var e_2, _a2;
      var result = object;
      try {
        for (var props_1 = __values$1(props), props_1_1 = props_1.next(); !props_1_1.done; props_1_1 = props_1.next()) {
          var prop = props_1_1.value;
          result = result[prop];
        }
      } catch (e_2_1) {
        e_2 = {
          error: e_2_1
        };
      } finally {
        try {
          if (props_1_1 && !props_1_1.done && (_a2 = props_1.return))
            _a2.call(props_1);
        } finally {
          if (e_2)
            throw e_2.error;
        }
      }
      return result;
    };
  };
  function nestedPath(props, accessorProp) {
    return function(object) {
      var e_3, _a2;
      var result = object;
      try {
        for (var props_2 = __values$1(props), props_2_1 = props_2.next(); !props_2_1.done; props_2_1 = props_2.next()) {
          var prop = props_2_1.value;
          result = result[accessorProp][prop];
        }
      } catch (e_3_1) {
        e_3 = {
          error: e_3_1
        };
      } finally {
        try {
          if (props_2_1 && !props_2_1.done && (_a2 = props_2.return))
            _a2.call(props_2);
        } finally {
          if (e_3)
            throw e_3.error;
        }
      }
      return result;
    };
  }
  function toStatePaths(stateValue) {
    if (!stateValue) {
      return [[]];
    }
    if (isString(stateValue)) {
      return [[stateValue]];
    }
    var result = flatten(keys(stateValue).map(function(key) {
      var subStateValue = stateValue[key];
      if (typeof subStateValue !== "string" && (!subStateValue || !Object.keys(subStateValue).length)) {
        return [[key]];
      }
      return toStatePaths(stateValue[key]).map(function(subPath) {
        return [key].concat(subPath);
      });
    }));
    return result;
  }
  function flatten(array) {
    var _a2;
    return (_a2 = []).concat.apply(_a2, __spreadArray$1([], __read$4(array)));
  }
  function toArrayStrict(value) {
    if (isArray(value)) {
      return value;
    }
    return [value];
  }
  function toArray(value) {
    if (value === void 0) {
      return [];
    }
    return toArrayStrict(value);
  }
  function mapContext(mapper, context, _event) {
    var e_5, _a2;
    if (isFunction(mapper)) {
      return mapper(context, _event.data);
    }
    var result = {};
    try {
      for (var _b = __values$1(Object.keys(mapper)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var key = _c.value;
        var subMapper = mapper[key];
        if (isFunction(subMapper)) {
          result[key] = subMapper(context, _event.data);
        } else {
          result[key] = subMapper;
        }
      }
    } catch (e_5_1) {
      e_5 = {
        error: e_5_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a2 = _b.return))
          _a2.call(_b);
      } finally {
        if (e_5)
          throw e_5.error;
      }
    }
    return result;
  }
  function isBuiltInEvent(eventType) {
    return /^(done|error)\./.test(eventType);
  }
  function partition$1(items, predicate) {
    var e_6, _a2;
    var _b = __read$4([[], []], 2), truthy = _b[0], falsy = _b[1];
    try {
      for (var items_1 = __values$1(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {
        var item = items_1_1.value;
        if (predicate(item)) {
          truthy.push(item);
        } else {
          falsy.push(item);
        }
      }
    } catch (e_6_1) {
      e_6 = {
        error: e_6_1
      };
    } finally {
      try {
        if (items_1_1 && !items_1_1.done && (_a2 = items_1.return))
          _a2.call(items_1);
      } finally {
        if (e_6)
          throw e_6.error;
      }
    }
    return [truthy, falsy];
  }
  function updateHistoryStates(hist, stateValue) {
    return mapValues(hist.states, function(subHist, key) {
      if (!subHist) {
        return void 0;
      }
      var subStateValue = (isString(stateValue) ? void 0 : stateValue[key]) || (subHist ? subHist.current : void 0);
      if (!subStateValue) {
        return void 0;
      }
      return {
        current: subStateValue,
        states: updateHistoryStates(subHist, subStateValue)
      };
    });
  }
  function updateHistoryValue(hist, stateValue) {
    return {
      current: stateValue,
      states: updateHistoryStates(hist, stateValue)
    };
  }
  function updateContext(context, _event, assignActions, state) {
    var updatedContext = context ? assignActions.reduce(function(acc, assignAction) {
      var e_7, _a2;
      var assignment = assignAction.assignment;
      var meta = {
        state,
        action: assignAction,
        _event
      };
      var partialUpdate = {};
      if (isFunction(assignment)) {
        partialUpdate = assignment(acc, _event.data, meta);
      } else {
        try {
          for (var _b = __values$1(keys(assignment)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            var propAssignment = assignment[key];
            partialUpdate[key] = isFunction(propAssignment) ? propAssignment(acc, _event.data, meta) : propAssignment;
          }
        } catch (e_7_1) {
          e_7 = {
            error: e_7_1
          };
        } finally {
          try {
            if (_c && !_c.done && (_a2 = _b.return))
              _a2.call(_b);
          } finally {
            if (e_7)
              throw e_7.error;
          }
        }
      }
      return Object.assign({}, acc, partialUpdate);
    }, context) : context;
    return updatedContext;
  }
  var warn = function() {
  };
  function isArray(value) {
    return Array.isArray(value);
  }
  function isFunction(value) {
    return typeof value === "function";
  }
  function isString(value) {
    return typeof value === "string";
  }
  function toGuard(condition, guardMap) {
    if (!condition) {
      return void 0;
    }
    if (isString(condition)) {
      return {
        type: DEFAULT_GUARD_TYPE,
        name: condition,
        predicate: guardMap ? guardMap[condition] : void 0
      };
    }
    if (isFunction(condition)) {
      return {
        type: DEFAULT_GUARD_TYPE,
        name: condition.name,
        predicate: condition
      };
    }
    return condition;
  }
  function isMachine(value) {
    try {
      return "__xstatenode" in value;
    } catch (e2) {
      return false;
    }
  }
  function toEventObject(event, payload) {
    if (isString(event) || typeof event === "number") {
      return __assign$1({
        type: event
      }, payload);
    }
    return event;
  }
  function toSCXMLEvent(event, scxmlEvent) {
    if (!isString(event) && "$$type" in event && event.$$type === "scxml") {
      return event;
    }
    var eventObject = toEventObject(event);
    return __assign$1({
      name: eventObject.type,
      data: eventObject,
      $$type: "scxml",
      type: "external"
    }, scxmlEvent);
  }
  function toTransitionConfigArray(event, configLike) {
    var transitions = toArrayStrict(configLike).map(function(transitionLike) {
      if (typeof transitionLike === "undefined" || typeof transitionLike === "string" || isMachine(transitionLike)) {
        return {
          target: transitionLike,
          event
        };
      }
      return __assign$1(__assign$1({}, transitionLike), {
        event
      });
    });
    return transitions;
  }
  function normalizeTarget(target) {
    if (target === void 0 || target === TARGETLESS_KEY) {
      return void 0;
    }
    return toArray(target);
  }
  function evaluateGuard(machine, guard, context, _event, state) {
    var guards = machine.options.guards;
    var guardMeta = {
      state,
      cond: guard,
      _event
    };
    if (guard.type === DEFAULT_GUARD_TYPE) {
      return ((guards === null || guards === void 0 ? void 0 : guards[guard.name]) || guard.predicate)(context, _event.data, guardMeta);
    }
    var condFn = guards[guard.type];
    if (!condFn) {
      throw new Error("Guard '" + guard.type + "' is not implemented on machine '" + machine.id + "'.");
    }
    return condFn(context, _event.data, guardMeta);
  }
  function toInvokeSource$1(src) {
    if (typeof src === "string") {
      return {
        type: src
      };
    }
    return src;
  }
  var ActionTypes;
  (function(ActionTypes2) {
    ActionTypes2["Start"] = "xstate.start";
    ActionTypes2["Stop"] = "xstate.stop";
    ActionTypes2["Raise"] = "xstate.raise";
    ActionTypes2["Send"] = "xstate.send";
    ActionTypes2["Cancel"] = "xstate.cancel";
    ActionTypes2["NullEvent"] = "";
    ActionTypes2["Assign"] = "xstate.assign";
    ActionTypes2["After"] = "xstate.after";
    ActionTypes2["DoneState"] = "done.state";
    ActionTypes2["DoneInvoke"] = "done.invoke";
    ActionTypes2["Log"] = "xstate.log";
    ActionTypes2["Init"] = "xstate.init";
    ActionTypes2["Invoke"] = "xstate.invoke";
    ActionTypes2["ErrorExecution"] = "error.execution";
    ActionTypes2["ErrorCommunication"] = "error.communication";
    ActionTypes2["ErrorPlatform"] = "error.platform";
    ActionTypes2["ErrorCustom"] = "xstate.error";
    ActionTypes2["Update"] = "xstate.update";
    ActionTypes2["Pure"] = "xstate.pure";
    ActionTypes2["Choose"] = "xstate.choose";
  })(ActionTypes || (ActionTypes = {}));
  var SpecialTargets;
  (function(SpecialTargets2) {
    SpecialTargets2["Parent"] = "#_parent";
    SpecialTargets2["Internal"] = "#_internal";
  })(SpecialTargets || (SpecialTargets = {}));
  var start$1 = ActionTypes.Start;
  var stop$1 = ActionTypes.Stop;
  var raise$1 = ActionTypes.Raise;
  var send$1 = ActionTypes.Send;
  var cancel$1 = ActionTypes.Cancel;
  var nullEvent = ActionTypes.NullEvent;
  var assign = ActionTypes.Assign;
  ActionTypes.After;
  ActionTypes.DoneState;
  var log = ActionTypes.Log;
  var init = ActionTypes.Init;
  var invoke = ActionTypes.Invoke;
  ActionTypes.ErrorExecution;
  ActionTypes.ErrorPlatform;
  ActionTypes.ErrorCustom;
  var update = ActionTypes.Update;
  var choose = ActionTypes.Choose;
  var pure = ActionTypes.Pure;
  var initEvent = /* @__PURE__ */ toSCXMLEvent({
    type: init
  });
  function getActionFunction(actionType, actionFunctionMap) {
    return actionFunctionMap ? actionFunctionMap[actionType] || void 0 : void 0;
  }
  function toActionObject(action, actionFunctionMap) {
    var actionObject;
    if (isString(action) || typeof action === "number") {
      var exec = getActionFunction(action, actionFunctionMap);
      if (isFunction(exec)) {
        actionObject = {
          type: action,
          exec
        };
      } else if (exec) {
        actionObject = exec;
      } else {
        actionObject = {
          type: action,
          exec: void 0
        };
      }
    } else if (isFunction(action)) {
      actionObject = {
        type: action.name || action.toString(),
        exec: action
      };
    } else {
      var exec = getActionFunction(action.type, actionFunctionMap);
      if (isFunction(exec)) {
        actionObject = __assign$1(__assign$1({}, action), {
          exec
        });
      } else if (exec) {
        var actionType = exec.type || action.type;
        actionObject = __assign$1(__assign$1(__assign$1({}, exec), action), {
          type: actionType
        });
      } else {
        actionObject = action;
      }
    }
    return actionObject;
  }
  var toActionObjects = function(action, actionFunctionMap) {
    if (!action) {
      return [];
    }
    var actions = isArray(action) ? action : [action];
    return actions.map(function(subAction) {
      return toActionObject(subAction, actionFunctionMap);
    });
  };
  function toActivityDefinition(action) {
    var actionObject = toActionObject(action);
    return __assign$1(__assign$1({
      id: isString(action) ? action : actionObject.id
    }, actionObject), {
      type: actionObject.type
    });
  }
  function raise(event) {
    if (!isString(event)) {
      return send(event, {
        to: SpecialTargets.Internal
      });
    }
    return {
      type: raise$1,
      event
    };
  }
  function resolveRaise(action) {
    return {
      type: raise$1,
      _event: toSCXMLEvent(action.event)
    };
  }
  function send(event, options) {
    return {
      to: options ? options.to : void 0,
      type: send$1,
      event: isFunction(event) ? event : toEventObject(event),
      delay: options ? options.delay : void 0,
      id: options && options.id !== void 0 ? options.id : isFunction(event) ? event.name : getEventType(event)
    };
  }
  function resolveSend(action, ctx, _event, delaysMap) {
    var meta = {
      _event
    };
    var resolvedEvent = toSCXMLEvent(isFunction(action.event) ? action.event(ctx, _event.data, meta) : action.event);
    var resolvedDelay;
    if (isString(action.delay)) {
      var configDelay = delaysMap && delaysMap[action.delay];
      resolvedDelay = isFunction(configDelay) ? configDelay(ctx, _event.data, meta) : configDelay;
    } else {
      resolvedDelay = isFunction(action.delay) ? action.delay(ctx, _event.data, meta) : action.delay;
    }
    var resolvedTarget = isFunction(action.to) ? action.to(ctx, _event.data, meta) : action.to;
    return __assign$1(__assign$1({}, action), {
      to: resolvedTarget,
      _event: resolvedEvent,
      event: resolvedEvent.data,
      delay: resolvedDelay
    });
  }
  var resolveLog = function(action, ctx, _event) {
    return __assign$1(__assign$1({}, action), {
      value: isString(action.expr) ? action.expr : action.expr(ctx, _event.data, {
        _event
      })
    });
  };
  var cancel = function(sendId) {
    return {
      type: cancel$1,
      sendId
    };
  };
  function start(activity) {
    var activityDef = toActivityDefinition(activity);
    return {
      type: ActionTypes.Start,
      activity: activityDef,
      exec: void 0
    };
  }
  function stop(actorRef) {
    var activity = isFunction(actorRef) ? actorRef : toActivityDefinition(actorRef);
    return {
      type: ActionTypes.Stop,
      activity,
      exec: void 0
    };
  }
  function resolveStop(action, context, _event) {
    var actorRefOrString = isFunction(action.activity) ? action.activity(context, _event.data) : action.activity;
    var resolvedActorRef = typeof actorRefOrString === "string" ? {
      id: actorRefOrString
    } : actorRefOrString;
    var actionObject = {
      type: ActionTypes.Stop,
      activity: resolvedActorRef
    };
    return actionObject;
  }
  function after(delayRef, id2) {
    var idSuffix = id2 ? "#" + id2 : "";
    return ActionTypes.After + "(" + delayRef + ")" + idSuffix;
  }
  function done(id2, data) {
    var type = ActionTypes.DoneState + "." + id2;
    var eventObject = {
      type,
      data
    };
    eventObject.toString = function() {
      return type;
    };
    return eventObject;
  }
  function doneInvoke(id2, data) {
    var type = ActionTypes.DoneInvoke + "." + id2;
    var eventObject = {
      type,
      data
    };
    eventObject.toString = function() {
      return type;
    };
    return eventObject;
  }
  function error(id2, data) {
    var type = ActionTypes.ErrorPlatform + "." + id2;
    var eventObject = {
      type,
      data
    };
    eventObject.toString = function() {
      return type;
    };
    return eventObject;
  }
  function resolveActions(machine, currentState, currentContext, _event, actions, preserveActionOrder) {
    if (preserveActionOrder === void 0) {
      preserveActionOrder = false;
    }
    var _a2 = __read$4(preserveActionOrder ? [[], actions] : partition$1(actions, function(action) {
      return action.type === assign;
    }), 2), assignActions = _a2[0], otherActions = _a2[1];
    var updatedContext = assignActions.length ? updateContext(currentContext, _event, assignActions, currentState) : currentContext;
    var preservedContexts = preserveActionOrder ? [currentContext] : void 0;
    var resolvedActions = flatten(otherActions.map(function(actionObject) {
      var _a3;
      switch (actionObject.type) {
        case raise$1:
          return resolveRaise(actionObject);
        case send$1:
          var sendAction = resolveSend(actionObject, updatedContext, _event, machine.options.delays);
          return sendAction;
        case log:
          return resolveLog(actionObject, updatedContext, _event);
        case choose: {
          var chooseAction = actionObject;
          var matchedActions = (_a3 = chooseAction.conds.find(function(condition) {
            var guard = toGuard(condition.cond, machine.options.guards);
            return !guard || evaluateGuard(machine, guard, updatedContext, _event, currentState);
          })) === null || _a3 === void 0 ? void 0 : _a3.actions;
          if (!matchedActions) {
            return [];
          }
          var _b = __read$4(resolveActions(machine, currentState, updatedContext, _event, toActionObjects(toArray(matchedActions), machine.options.actions), preserveActionOrder), 2), resolvedActionsFromChoose = _b[0], resolvedContextFromChoose = _b[1];
          updatedContext = resolvedContextFromChoose;
          preservedContexts === null || preservedContexts === void 0 ? void 0 : preservedContexts.push(updatedContext);
          return resolvedActionsFromChoose;
        }
        case pure: {
          var matchedActions = actionObject.get(updatedContext, _event.data);
          if (!matchedActions) {
            return [];
          }
          var _c = __read$4(resolveActions(machine, currentState, updatedContext, _event, toActionObjects(toArray(matchedActions), machine.options.actions), preserveActionOrder), 2), resolvedActionsFromPure = _c[0], resolvedContext = _c[1];
          updatedContext = resolvedContext;
          preservedContexts === null || preservedContexts === void 0 ? void 0 : preservedContexts.push(updatedContext);
          return resolvedActionsFromPure;
        }
        case stop$1: {
          return resolveStop(actionObject, updatedContext, _event);
        }
        case assign: {
          updatedContext = updateContext(updatedContext, _event, [actionObject], currentState);
          preservedContexts === null || preservedContexts === void 0 ? void 0 : preservedContexts.push(updatedContext);
          break;
        }
        default:
          var resolvedActionObject = toActionObject(actionObject, machine.options.actions);
          var exec_1 = resolvedActionObject.exec;
          if (exec_1 && preservedContexts) {
            var contextIndex_1 = preservedContexts.length - 1;
            resolvedActionObject = __assign$1(__assign$1({}, resolvedActionObject), {
              exec: function(_ctx) {
                var args = [];
                for (var _i = 1; _i < arguments.length; _i++) {
                  args[_i - 1] = arguments[_i];
                }
                exec_1.apply(void 0, __spreadArray$1([preservedContexts[contextIndex_1]], __read$4(args)));
              }
            });
          }
          return resolvedActionObject;
      }
    }).filter(function(a2) {
      return !!a2;
    }));
    return [resolvedActions, updatedContext];
  }
  var isLeafNode = function(stateNode) {
    return stateNode.type === "atomic" || stateNode.type === "final";
  };
  function getChildren(stateNode) {
    return keys(stateNode.states).map(function(key) {
      return stateNode.states[key];
    });
  }
  function getAllStateNodes(stateNode) {
    var stateNodes = [stateNode];
    if (isLeafNode(stateNode)) {
      return stateNodes;
    }
    return stateNodes.concat(flatten(getChildren(stateNode).map(getAllStateNodes)));
  }
  function getConfiguration(prevStateNodes, stateNodes) {
    var e_1, _a2, e_2, _b, e_3, _c, e_4, _d;
    var prevConfiguration = new Set(prevStateNodes);
    var prevAdjList = getAdjList(prevConfiguration);
    var configuration = new Set(stateNodes);
    try {
      for (var configuration_1 = __values$1(configuration), configuration_1_1 = configuration_1.next(); !configuration_1_1.done; configuration_1_1 = configuration_1.next()) {
        var s2 = configuration_1_1.value;
        var m = s2.parent;
        while (m && !configuration.has(m)) {
          configuration.add(m);
          m = m.parent;
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (configuration_1_1 && !configuration_1_1.done && (_a2 = configuration_1.return))
          _a2.call(configuration_1);
      } finally {
        if (e_1)
          throw e_1.error;
      }
    }
    var adjList = getAdjList(configuration);
    try {
      for (var configuration_2 = __values$1(configuration), configuration_2_1 = configuration_2.next(); !configuration_2_1.done; configuration_2_1 = configuration_2.next()) {
        var s2 = configuration_2_1.value;
        if (s2.type === "compound" && (!adjList.get(s2) || !adjList.get(s2).length)) {
          if (prevAdjList.get(s2)) {
            prevAdjList.get(s2).forEach(function(sn) {
              return configuration.add(sn);
            });
          } else {
            s2.initialStateNodes.forEach(function(sn) {
              return configuration.add(sn);
            });
          }
        } else {
          if (s2.type === "parallel") {
            try {
              for (var _e = (e_3 = void 0, __values$1(getChildren(s2))), _f = _e.next(); !_f.done; _f = _e.next()) {
                var child = _f.value;
                if (child.type === "history") {
                  continue;
                }
                if (!configuration.has(child)) {
                  configuration.add(child);
                  if (prevAdjList.get(child)) {
                    prevAdjList.get(child).forEach(function(sn) {
                      return configuration.add(sn);
                    });
                  } else {
                    child.initialStateNodes.forEach(function(sn) {
                      return configuration.add(sn);
                    });
                  }
                }
              }
            } catch (e_3_1) {
              e_3 = {
                error: e_3_1
              };
            } finally {
              try {
                if (_f && !_f.done && (_c = _e.return))
                  _c.call(_e);
              } finally {
                if (e_3)
                  throw e_3.error;
              }
            }
          }
        }
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (configuration_2_1 && !configuration_2_1.done && (_b = configuration_2.return))
          _b.call(configuration_2);
      } finally {
        if (e_2)
          throw e_2.error;
      }
    }
    try {
      for (var configuration_3 = __values$1(configuration), configuration_3_1 = configuration_3.next(); !configuration_3_1.done; configuration_3_1 = configuration_3.next()) {
        var s2 = configuration_3_1.value;
        var m = s2.parent;
        while (m && !configuration.has(m)) {
          configuration.add(m);
          m = m.parent;
        }
      }
    } catch (e_4_1) {
      e_4 = {
        error: e_4_1
      };
    } finally {
      try {
        if (configuration_3_1 && !configuration_3_1.done && (_d = configuration_3.return))
          _d.call(configuration_3);
      } finally {
        if (e_4)
          throw e_4.error;
      }
    }
    return configuration;
  }
  function getValueFromAdj(baseNode, adjList) {
    var childStateNodes = adjList.get(baseNode);
    if (!childStateNodes) {
      return {};
    }
    if (baseNode.type === "compound") {
      var childStateNode = childStateNodes[0];
      if (childStateNode) {
        if (isLeafNode(childStateNode)) {
          return childStateNode.key;
        }
      } else {
        return {};
      }
    }
    var stateValue = {};
    childStateNodes.forEach(function(csn) {
      stateValue[csn.key] = getValueFromAdj(csn, adjList);
    });
    return stateValue;
  }
  function getAdjList(configuration) {
    var e_5, _a2;
    var adjList = /* @__PURE__ */ new Map();
    try {
      for (var configuration_4 = __values$1(configuration), configuration_4_1 = configuration_4.next(); !configuration_4_1.done; configuration_4_1 = configuration_4.next()) {
        var s2 = configuration_4_1.value;
        if (!adjList.has(s2)) {
          adjList.set(s2, []);
        }
        if (s2.parent) {
          if (!adjList.has(s2.parent)) {
            adjList.set(s2.parent, []);
          }
          adjList.get(s2.parent).push(s2);
        }
      }
    } catch (e_5_1) {
      e_5 = {
        error: e_5_1
      };
    } finally {
      try {
        if (configuration_4_1 && !configuration_4_1.done && (_a2 = configuration_4.return))
          _a2.call(configuration_4);
      } finally {
        if (e_5)
          throw e_5.error;
      }
    }
    return adjList;
  }
  function getValue(rootNode, configuration) {
    var config = getConfiguration([rootNode], configuration);
    return getValueFromAdj(rootNode, getAdjList(config));
  }
  function has(iterable, item) {
    if (Array.isArray(iterable)) {
      return iterable.some(function(member) {
        return member === item;
      });
    }
    if (iterable instanceof Set) {
      return iterable.has(item);
    }
    return false;
  }
  function nextEvents(configuration) {
    return __spreadArray$1([], __read$4(new Set(flatten(__spreadArray$1([], __read$4(configuration.map(function(sn) {
      return sn.ownEvents;
    })))))));
  }
  function isInFinalState(configuration, stateNode) {
    if (stateNode.type === "compound") {
      return getChildren(stateNode).some(function(s2) {
        return s2.type === "final" && has(configuration, s2);
      });
    }
    if (stateNode.type === "parallel") {
      return getChildren(stateNode).every(function(sn) {
        return isInFinalState(configuration, sn);
      });
    }
    return false;
  }
  function getMeta(configuration) {
    if (configuration === void 0) {
      configuration = [];
    }
    return configuration.reduce(function(acc, stateNode) {
      if (stateNode.meta !== void 0) {
        acc[stateNode.id] = stateNode.meta;
      }
      return acc;
    }, {});
  }
  function getTagsFromConfiguration(configuration) {
    return new Set(flatten(configuration.map(function(sn) {
      return sn.tags;
    })));
  }
  function stateValuesEqual(a2, b2) {
    if (a2 === b2) {
      return true;
    }
    if (a2 === void 0 || b2 === void 0) {
      return false;
    }
    if (isString(a2) || isString(b2)) {
      return a2 === b2;
    }
    var aKeys = keys(a2);
    var bKeys = keys(b2);
    return aKeys.length === bKeys.length && aKeys.every(function(key) {
      return stateValuesEqual(a2[key], b2[key]);
    });
  }
  var State = /* @__PURE__ */ function() {
    function State2(config) {
      var _this = this;
      var _a2;
      this.actions = [];
      this.activities = EMPTY_ACTIVITY_MAP;
      this.meta = {};
      this.events = [];
      this.value = config.value;
      this.context = config.context;
      this._event = config._event;
      this._sessionid = config._sessionid;
      this.event = this._event.data;
      this.historyValue = config.historyValue;
      this.history = config.history;
      this.actions = config.actions || [];
      this.activities = config.activities || EMPTY_ACTIVITY_MAP;
      this.meta = getMeta(config.configuration);
      this.events = config.events || [];
      this.matches = this.matches.bind(this);
      this.toStrings = this.toStrings.bind(this);
      this.configuration = config.configuration;
      this.transitions = config.transitions;
      this.children = config.children;
      this.done = !!config.done;
      this.tags = (_a2 = Array.isArray(config.tags) ? new Set(config.tags) : config.tags) !== null && _a2 !== void 0 ? _a2 : /* @__PURE__ */ new Set();
      this.machine = config.machine;
      Object.defineProperty(this, "nextEvents", {
        get: function() {
          return nextEvents(_this.configuration);
        }
      });
    }
    State2.from = function(stateValue, context) {
      if (stateValue instanceof State2) {
        if (stateValue.context !== context) {
          return new State2({
            value: stateValue.value,
            context,
            _event: stateValue._event,
            _sessionid: null,
            historyValue: stateValue.historyValue,
            history: stateValue.history,
            actions: [],
            activities: stateValue.activities,
            meta: {},
            events: [],
            configuration: [],
            transitions: [],
            children: {}
          });
        }
        return stateValue;
      }
      var _event = initEvent;
      return new State2({
        value: stateValue,
        context,
        _event,
        _sessionid: null,
        historyValue: void 0,
        history: void 0,
        actions: [],
        activities: void 0,
        meta: void 0,
        events: [],
        configuration: [],
        transitions: [],
        children: {}
      });
    };
    State2.create = function(config) {
      return new State2(config);
    };
    State2.inert = function(stateValue, context) {
      if (stateValue instanceof State2) {
        if (!stateValue.actions.length) {
          return stateValue;
        }
        var _event = initEvent;
        return new State2({
          value: stateValue.value,
          context,
          _event,
          _sessionid: null,
          historyValue: stateValue.historyValue,
          history: stateValue.history,
          activities: stateValue.activities,
          configuration: stateValue.configuration,
          transitions: [],
          children: {}
        });
      }
      return State2.from(stateValue, context);
    };
    State2.prototype.toStrings = function(stateValue, delimiter) {
      var _this = this;
      if (stateValue === void 0) {
        stateValue = this.value;
      }
      if (delimiter === void 0) {
        delimiter = ".";
      }
      if (isString(stateValue)) {
        return [stateValue];
      }
      var valueKeys = keys(stateValue);
      return valueKeys.concat.apply(valueKeys, __spreadArray$1([], __read$4(valueKeys.map(function(key) {
        return _this.toStrings(stateValue[key], delimiter).map(function(s2) {
          return key + delimiter + s2;
        });
      }))));
    };
    State2.prototype.toJSON = function() {
      var _a2 = this;
      _a2.configuration;
      _a2.transitions;
      var tags = _a2.tags;
      _a2.machine;
      var jsonValues = __rest$1(_a2, ["configuration", "transitions", "tags", "machine"]);
      return __assign$1(__assign$1({}, jsonValues), {
        tags: Array.from(tags)
      });
    };
    State2.prototype.matches = function(parentStateValue) {
      return matchesState(parentStateValue, this.value);
    };
    State2.prototype.hasTag = function(tag) {
      return this.tags.has(tag);
    };
    State2.prototype.can = function(event) {
      var _a2;
      {
        warn(!!this.machine);
      }
      return !!((_a2 = this.machine) === null || _a2 === void 0 ? void 0 : _a2.transition(this, event).changed);
    };
    return State2;
  }();
  var provide = function(service, fn3) {
    var result = fn3(service);
    return result;
  };
  function createNullActor(id2) {
    return {
      id: id2,
      send: function() {
        return void 0;
      },
      subscribe: function() {
        return {
          unsubscribe: function() {
            return void 0;
          }
        };
      },
      getSnapshot: function() {
        return void 0;
      },
      toJSON: function() {
        return {
          id: id2
        };
      }
    };
  }
  function createInvocableActor(invokeDefinition, machine, context, _event) {
    var _a2;
    var invokeSrc = toInvokeSource$1(invokeDefinition.src);
    var serviceCreator = (_a2 = machine === null || machine === void 0 ? void 0 : machine.options.services) === null || _a2 === void 0 ? void 0 : _a2[invokeSrc.type];
    var resolvedData = invokeDefinition.data ? mapContext(invokeDefinition.data, context, _event) : void 0;
    var tempActor = serviceCreator ? createDeferredActor(serviceCreator, invokeDefinition.id, resolvedData) : createNullActor(invokeDefinition.id);
    tempActor.meta = invokeDefinition;
    return tempActor;
  }
  function createDeferredActor(entity, id2, data) {
    var tempActor = createNullActor(id2);
    tempActor.deferred = true;
    if (isMachine(entity)) {
      var initialState_1 = tempActor.state = provide(void 0, function() {
        return (data ? entity.withContext(data) : entity).initialState;
      });
      tempActor.getSnapshot = function() {
        return initialState_1;
      };
    }
    return tempActor;
  }
  function toInvokeSource(src) {
    if (typeof src === "string") {
      var simpleSrc = {
        type: src
      };
      simpleSrc.toString = function() {
        return src;
      };
      return simpleSrc;
    }
    return src;
  }
  function toInvokeDefinition(invokeConfig) {
    return __assign$1(__assign$1({
      type: invoke
    }, invokeConfig), {
      toJSON: function() {
        invokeConfig.onDone;
        invokeConfig.onError;
        var invokeDef = __rest$1(invokeConfig, ["onDone", "onError"]);
        return __assign$1(__assign$1({}, invokeDef), {
          type: invoke,
          src: toInvokeSource(invokeConfig.src)
        });
      }
    });
  }
  var NULL_EVENT = "";
  var STATE_IDENTIFIER = "#";
  var WILDCARD = "*";
  var EMPTY_OBJECT = {};
  var isStateId = function(str) {
    return str[0] === STATE_IDENTIFIER;
  };
  var createDefaultOptions = function() {
    return {
      actions: {},
      guards: {},
      services: {},
      activities: {},
      delays: {}
    };
  };
  var StateNode = /* @__PURE__ */ function() {
    function StateNode2(config, options, _context) {
      var _this = this;
      if (_context === void 0) {
        _context = "context" in config ? config.context : void 0;
      }
      var _a2;
      this.config = config;
      this._context = _context;
      this.order = -1;
      this.__xstatenode = true;
      this.__cache = {
        events: void 0,
        relativeValue: /* @__PURE__ */ new Map(),
        initialStateValue: void 0,
        initialState: void 0,
        on: void 0,
        transitions: void 0,
        candidates: {},
        delayedTransitions: void 0
      };
      this.idMap = {};
      this.tags = [];
      this.options = Object.assign(createDefaultOptions(), options);
      this.parent = this.options._parent;
      this.key = this.config.key || this.options._key || this.config.id || "(machine)";
      this.machine = this.parent ? this.parent.machine : this;
      this.path = this.parent ? this.parent.path.concat(this.key) : [];
      this.delimiter = this.config.delimiter || (this.parent ? this.parent.delimiter : STATE_DELIMITER);
      this.id = this.config.id || __spreadArray$1([this.machine.key], __read$4(this.path)).join(this.delimiter);
      this.version = this.parent ? this.parent.version : this.config.version;
      this.type = this.config.type || (this.config.parallel ? "parallel" : this.config.states && keys(this.config.states).length ? "compound" : this.config.history ? "history" : "atomic");
      this.schema = this.parent ? this.machine.schema : (_a2 = this.config.schema) !== null && _a2 !== void 0 ? _a2 : {};
      this.description = this.config.description;
      this.initial = this.config.initial;
      this.states = this.config.states ? mapValues(this.config.states, function(stateConfig, key) {
        var _a3;
        var stateNode = new StateNode2(stateConfig, {
          _parent: _this,
          _key: key
        });
        Object.assign(_this.idMap, __assign$1((_a3 = {}, _a3[stateNode.id] = stateNode, _a3), stateNode.idMap));
        return stateNode;
      }) : EMPTY_OBJECT;
      var order2 = 0;
      function dfs(stateNode) {
        var e_1, _a3;
        stateNode.order = order2++;
        try {
          for (var _b = __values$1(getChildren(stateNode)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var child = _c.value;
            dfs(child);
          }
        } catch (e_1_1) {
          e_1 = {
            error: e_1_1
          };
        } finally {
          try {
            if (_c && !_c.done && (_a3 = _b.return))
              _a3.call(_b);
          } finally {
            if (e_1)
              throw e_1.error;
          }
        }
      }
      dfs(this);
      this.history = this.config.history === true ? "shallow" : this.config.history || false;
      this._transient = !!this.config.always || (!this.config.on ? false : Array.isArray(this.config.on) ? this.config.on.some(function(_a3) {
        var event = _a3.event;
        return event === NULL_EVENT;
      }) : NULL_EVENT in this.config.on);
      this.strict = !!this.config.strict;
      this.onEntry = toArray(this.config.entry || this.config.onEntry).map(function(action) {
        return toActionObject(action);
      });
      this.onExit = toArray(this.config.exit || this.config.onExit).map(function(action) {
        return toActionObject(action);
      });
      this.meta = this.config.meta;
      this.doneData = this.type === "final" ? this.config.data : void 0;
      this.invoke = toArray(this.config.invoke).map(function(invokeConfig, i2) {
        var _a3, _b;
        if (isMachine(invokeConfig)) {
          _this.machine.options.services = __assign$1((_a3 = {}, _a3[invokeConfig.id] = invokeConfig, _a3), _this.machine.options.services);
          return toInvokeDefinition({
            src: invokeConfig.id,
            id: invokeConfig.id
          });
        } else if (isString(invokeConfig.src)) {
          return toInvokeDefinition(__assign$1(__assign$1({}, invokeConfig), {
            id: invokeConfig.id || invokeConfig.src,
            src: invokeConfig.src
          }));
        } else if (isMachine(invokeConfig.src) || isFunction(invokeConfig.src)) {
          var invokeSrc = _this.id + ":invocation[" + i2 + "]";
          _this.machine.options.services = __assign$1((_b = {}, _b[invokeSrc] = invokeConfig.src, _b), _this.machine.options.services);
          return toInvokeDefinition(__assign$1(__assign$1({
            id: invokeSrc
          }, invokeConfig), {
            src: invokeSrc
          }));
        } else {
          var invokeSource = invokeConfig.src;
          return toInvokeDefinition(__assign$1(__assign$1({
            id: invokeSource.type
          }, invokeConfig), {
            src: invokeSource
          }));
        }
      });
      this.activities = toArray(this.config.activities).concat(this.invoke).map(function(activity) {
        return toActivityDefinition(activity);
      });
      this.transition = this.transition.bind(this);
      this.tags = toArray(this.config.tags);
    }
    StateNode2.prototype._init = function() {
      if (this.__cache.transitions) {
        return;
      }
      getAllStateNodes(this).forEach(function(stateNode) {
        return stateNode.on;
      });
    };
    StateNode2.prototype.withConfig = function(options, context) {
      var _a2 = this.options, actions = _a2.actions, activities = _a2.activities, guards = _a2.guards, services = _a2.services, delays = _a2.delays;
      return new StateNode2(this.config, {
        actions: __assign$1(__assign$1({}, actions), options.actions),
        activities: __assign$1(__assign$1({}, activities), options.activities),
        guards: __assign$1(__assign$1({}, guards), options.guards),
        services: __assign$1(__assign$1({}, services), options.services),
        delays: __assign$1(__assign$1({}, delays), options.delays)
      }, context !== null && context !== void 0 ? context : this.context);
    };
    StateNode2.prototype.withContext = function(context) {
      return new StateNode2(this.config, this.options, context);
    };
    Object.defineProperty(StateNode2.prototype, "context", {
      get: function() {
        return isFunction(this._context) ? this._context() : this._context;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(StateNode2.prototype, "definition", {
      get: function() {
        return {
          id: this.id,
          key: this.key,
          version: this.version,
          context: this.context,
          type: this.type,
          initial: this.initial,
          history: this.history,
          states: mapValues(this.states, function(state) {
            return state.definition;
          }),
          on: this.on,
          transitions: this.transitions,
          entry: this.onEntry,
          exit: this.onExit,
          activities: this.activities || [],
          meta: this.meta,
          order: this.order || -1,
          data: this.doneData,
          invoke: this.invoke,
          description: this.description,
          tags: this.tags
        };
      },
      enumerable: false,
      configurable: true
    });
    StateNode2.prototype.toJSON = function() {
      return this.definition;
    };
    Object.defineProperty(StateNode2.prototype, "on", {
      get: function() {
        if (this.__cache.on) {
          return this.__cache.on;
        }
        var transitions = this.transitions;
        return this.__cache.on = transitions.reduce(function(map2, transition2) {
          map2[transition2.eventType] = map2[transition2.eventType] || [];
          map2[transition2.eventType].push(transition2);
          return map2;
        }, {});
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(StateNode2.prototype, "after", {
      get: function() {
        return this.__cache.delayedTransitions || (this.__cache.delayedTransitions = this.getDelayedTransitions(), this.__cache.delayedTransitions);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(StateNode2.prototype, "transitions", {
      get: function() {
        return this.__cache.transitions || (this.__cache.transitions = this.formatTransitions(), this.__cache.transitions);
      },
      enumerable: false,
      configurable: true
    });
    StateNode2.prototype.getCandidates = function(eventName) {
      if (this.__cache.candidates[eventName]) {
        return this.__cache.candidates[eventName];
      }
      var transient = eventName === NULL_EVENT;
      var candidates = this.transitions.filter(function(transition2) {
        var sameEventType = transition2.eventType === eventName;
        return transient ? sameEventType : sameEventType || transition2.eventType === WILDCARD;
      });
      this.__cache.candidates[eventName] = candidates;
      return candidates;
    };
    StateNode2.prototype.getDelayedTransitions = function() {
      var _this = this;
      var afterConfig = this.config.after;
      if (!afterConfig) {
        return [];
      }
      var mutateEntryExit = function(delay, i2) {
        var delayRef = isFunction(delay) ? _this.id + ":delay[" + i2 + "]" : delay;
        var eventType = after(delayRef, _this.id);
        _this.onEntry.push(send(eventType, {
          delay
        }));
        _this.onExit.push(cancel(eventType));
        return eventType;
      };
      var delayedTransitions = isArray(afterConfig) ? afterConfig.map(function(transition2, i2) {
        var eventType = mutateEntryExit(transition2.delay, i2);
        return __assign$1(__assign$1({}, transition2), {
          event: eventType
        });
      }) : flatten(keys(afterConfig).map(function(delay, i2) {
        var configTransition = afterConfig[delay];
        var resolvedTransition = isString(configTransition) ? {
          target: configTransition
        } : configTransition;
        var resolvedDelay = !isNaN(+delay) ? +delay : delay;
        var eventType = mutateEntryExit(resolvedDelay, i2);
        return toArray(resolvedTransition).map(function(transition2) {
          return __assign$1(__assign$1({}, transition2), {
            event: eventType,
            delay: resolvedDelay
          });
        });
      }));
      return delayedTransitions.map(function(delayedTransition) {
        var delay = delayedTransition.delay;
        return __assign$1(__assign$1({}, _this.formatTransition(delayedTransition)), {
          delay
        });
      });
    };
    StateNode2.prototype.getStateNodes = function(state) {
      var _a2;
      var _this = this;
      if (!state) {
        return [];
      }
      var stateValue = state instanceof State ? state.value : toStateValue(state, this.delimiter);
      if (isString(stateValue)) {
        var initialStateValue = this.getStateNode(stateValue).initial;
        return initialStateValue !== void 0 ? this.getStateNodes((_a2 = {}, _a2[stateValue] = initialStateValue, _a2)) : [this, this.states[stateValue]];
      }
      var subStateKeys = keys(stateValue);
      var subStateNodes = subStateKeys.map(function(subStateKey) {
        return _this.getStateNode(subStateKey);
      });
      subStateNodes.push(this);
      return subStateNodes.concat(subStateKeys.reduce(function(allSubStateNodes, subStateKey) {
        var subStateNode = _this.getStateNode(subStateKey).getStateNodes(stateValue[subStateKey]);
        return allSubStateNodes.concat(subStateNode);
      }, []));
    };
    StateNode2.prototype.handles = function(event) {
      var eventType = getEventType(event);
      return this.events.includes(eventType);
    };
    StateNode2.prototype.resolveState = function(state) {
      var configuration = Array.from(getConfiguration([], this.getStateNodes(state.value)));
      return new State(__assign$1(__assign$1({}, state), {
        value: this.resolve(state.value),
        configuration,
        done: isInFinalState(configuration, this),
        tags: getTagsFromConfiguration(configuration)
      }));
    };
    StateNode2.prototype.transitionLeafNode = function(stateValue, state, _event) {
      var stateNode = this.getStateNode(stateValue);
      var next = stateNode.next(state, _event);
      if (!next || !next.transitions.length) {
        return this.next(state, _event);
      }
      return next;
    };
    StateNode2.prototype.transitionCompoundNode = function(stateValue, state, _event) {
      var subStateKeys = keys(stateValue);
      var stateNode = this.getStateNode(subStateKeys[0]);
      var next = stateNode._transition(stateValue[subStateKeys[0]], state, _event);
      if (!next || !next.transitions.length) {
        return this.next(state, _event);
      }
      return next;
    };
    StateNode2.prototype.transitionParallelNode = function(stateValue, state, _event) {
      var e_2, _a2;
      var transitionMap = {};
      try {
        for (var _b = __values$1(keys(stateValue)), _c = _b.next(); !_c.done; _c = _b.next()) {
          var subStateKey = _c.value;
          var subStateValue = stateValue[subStateKey];
          if (!subStateValue) {
            continue;
          }
          var subStateNode = this.getStateNode(subStateKey);
          var next = subStateNode._transition(subStateValue, state, _event);
          if (next) {
            transitionMap[subStateKey] = next;
          }
        }
      } catch (e_2_1) {
        e_2 = {
          error: e_2_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a2 = _b.return))
            _a2.call(_b);
        } finally {
          if (e_2)
            throw e_2.error;
        }
      }
      var stateTransitions = keys(transitionMap).map(function(key) {
        return transitionMap[key];
      });
      var enabledTransitions = flatten(stateTransitions.map(function(st) {
        return st.transitions;
      }));
      var willTransition = stateTransitions.some(function(st) {
        return st.transitions.length > 0;
      });
      if (!willTransition) {
        return this.next(state, _event);
      }
      var entryNodes = flatten(stateTransitions.map(function(t2) {
        return t2.entrySet;
      }));
      var configuration = flatten(keys(transitionMap).map(function(key) {
        return transitionMap[key].configuration;
      }));
      return {
        transitions: enabledTransitions,
        entrySet: entryNodes,
        exitSet: flatten(stateTransitions.map(function(t2) {
          return t2.exitSet;
        })),
        configuration,
        source: state,
        actions: flatten(keys(transitionMap).map(function(key) {
          return transitionMap[key].actions;
        }))
      };
    };
    StateNode2.prototype._transition = function(stateValue, state, _event) {
      if (isString(stateValue)) {
        return this.transitionLeafNode(stateValue, state, _event);
      }
      if (keys(stateValue).length === 1) {
        return this.transitionCompoundNode(stateValue, state, _event);
      }
      return this.transitionParallelNode(stateValue, state, _event);
    };
    StateNode2.prototype.next = function(state, _event) {
      var e_3, _a2;
      var _this = this;
      var eventName = _event.name;
      var actions = [];
      var nextStateNodes = [];
      var selectedTransition;
      try {
        for (var _b = __values$1(this.getCandidates(eventName)), _c = _b.next(); !_c.done; _c = _b.next()) {
          var candidate = _c.value;
          var cond = candidate.cond, stateIn = candidate.in;
          var resolvedContext = state.context;
          var isInState = stateIn ? isString(stateIn) && isStateId(stateIn) ? state.matches(toStateValue(this.getStateNodeById(stateIn).path, this.delimiter)) : matchesState(toStateValue(stateIn, this.delimiter), path(this.path.slice(0, -2))(state.value)) : true;
          var guardPassed = false;
          try {
            guardPassed = !cond || evaluateGuard(this.machine, cond, resolvedContext, _event, state);
          } catch (err) {
            throw new Error("Unable to evaluate guard '" + (cond.name || cond.type) + "' in transition for event '" + eventName + "' in state node '" + this.id + "':\n" + err.message);
          }
          if (guardPassed && isInState) {
            if (candidate.target !== void 0) {
              nextStateNodes = candidate.target;
            }
            actions.push.apply(actions, __spreadArray$1([], __read$4(candidate.actions)));
            selectedTransition = candidate;
            break;
          }
        }
      } catch (e_3_1) {
        e_3 = {
          error: e_3_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a2 = _b.return))
            _a2.call(_b);
        } finally {
          if (e_3)
            throw e_3.error;
        }
      }
      if (!selectedTransition) {
        return void 0;
      }
      if (!nextStateNodes.length) {
        return {
          transitions: [selectedTransition],
          entrySet: [],
          exitSet: [],
          configuration: state.value ? [this] : [],
          source: state,
          actions
        };
      }
      var allNextStateNodes = flatten(nextStateNodes.map(function(stateNode) {
        return _this.getRelativeStateNodes(stateNode, state.historyValue);
      }));
      var isInternal = !!selectedTransition.internal;
      var reentryNodes = isInternal ? [] : flatten(allNextStateNodes.map(function(n2) {
        return _this.nodesFromChild(n2);
      }));
      return {
        transitions: [selectedTransition],
        entrySet: reentryNodes,
        exitSet: isInternal ? [] : [this],
        configuration: allNextStateNodes,
        source: state,
        actions
      };
    };
    StateNode2.prototype.nodesFromChild = function(childStateNode) {
      if (childStateNode.escapes(this)) {
        return [];
      }
      var nodes = [];
      var marker = childStateNode;
      while (marker && marker !== this) {
        nodes.push(marker);
        marker = marker.parent;
      }
      nodes.push(this);
      return nodes;
    };
    StateNode2.prototype.escapes = function(stateNode) {
      if (this === stateNode) {
        return false;
      }
      var parent = this.parent;
      while (parent) {
        if (parent === stateNode) {
          return false;
        }
        parent = parent.parent;
      }
      return true;
    };
    StateNode2.prototype.getActions = function(transition2, currentContext, _event, prevState) {
      var e_4, _a2, e_5, _b;
      var prevConfig = getConfiguration([], prevState ? this.getStateNodes(prevState.value) : [this]);
      var resolvedConfig = transition2.configuration.length ? getConfiguration(prevConfig, transition2.configuration) : prevConfig;
      try {
        for (var resolvedConfig_1 = __values$1(resolvedConfig), resolvedConfig_1_1 = resolvedConfig_1.next(); !resolvedConfig_1_1.done; resolvedConfig_1_1 = resolvedConfig_1.next()) {
          var sn = resolvedConfig_1_1.value;
          if (!has(prevConfig, sn)) {
            transition2.entrySet.push(sn);
          }
        }
      } catch (e_4_1) {
        e_4 = {
          error: e_4_1
        };
      } finally {
        try {
          if (resolvedConfig_1_1 && !resolvedConfig_1_1.done && (_a2 = resolvedConfig_1.return))
            _a2.call(resolvedConfig_1);
        } finally {
          if (e_4)
            throw e_4.error;
        }
      }
      try {
        for (var prevConfig_1 = __values$1(prevConfig), prevConfig_1_1 = prevConfig_1.next(); !prevConfig_1_1.done; prevConfig_1_1 = prevConfig_1.next()) {
          var sn = prevConfig_1_1.value;
          if (!has(resolvedConfig, sn) || has(transition2.exitSet, sn.parent)) {
            transition2.exitSet.push(sn);
          }
        }
      } catch (e_5_1) {
        e_5 = {
          error: e_5_1
        };
      } finally {
        try {
          if (prevConfig_1_1 && !prevConfig_1_1.done && (_b = prevConfig_1.return))
            _b.call(prevConfig_1);
        } finally {
          if (e_5)
            throw e_5.error;
        }
      }
      if (!transition2.source) {
        transition2.exitSet = [];
        transition2.entrySet.push(this);
      }
      var doneEvents = flatten(transition2.entrySet.map(function(sn2) {
        var events = [];
        if (sn2.type !== "final") {
          return events;
        }
        var parent = sn2.parent;
        if (!parent.parent) {
          return events;
        }
        events.push(done(sn2.id, sn2.doneData), done(parent.id, sn2.doneData ? mapContext(sn2.doneData, currentContext, _event) : void 0));
        var grandparent = parent.parent;
        if (grandparent.type === "parallel") {
          if (getChildren(grandparent).every(function(parentNode) {
            return isInFinalState(transition2.configuration, parentNode);
          })) {
            events.push(done(grandparent.id));
          }
        }
        return events;
      }));
      transition2.exitSet.sort(function(a2, b2) {
        return b2.order - a2.order;
      });
      transition2.entrySet.sort(function(a2, b2) {
        return a2.order - b2.order;
      });
      var entryStates = new Set(transition2.entrySet);
      var exitStates = new Set(transition2.exitSet);
      var _c = __read$4([flatten(Array.from(entryStates).map(function(stateNode) {
        return __spreadArray$1(__spreadArray$1([], __read$4(stateNode.activities.map(function(activity) {
          return start(activity);
        }))), __read$4(stateNode.onEntry));
      })).concat(doneEvents.map(raise)), flatten(Array.from(exitStates).map(function(stateNode) {
        return __spreadArray$1(__spreadArray$1([], __read$4(stateNode.onExit)), __read$4(stateNode.activities.map(function(activity) {
          return stop(activity);
        })));
      }))], 2), entryActions = _c[0], exitActions = _c[1];
      var actions = toActionObjects(exitActions.concat(transition2.actions).concat(entryActions), this.machine.options.actions);
      return actions;
    };
    StateNode2.prototype.transition = function(state, event, context) {
      if (state === void 0) {
        state = this.initialState;
      }
      var _event = toSCXMLEvent(event);
      var currentState;
      if (state instanceof State) {
        currentState = context === void 0 ? state : this.resolveState(State.from(state, context));
      } else {
        var resolvedStateValue = isString(state) ? this.resolve(pathToStateValue(this.getResolvedPath(state))) : this.resolve(state);
        var resolvedContext = context !== null && context !== void 0 ? context : this.machine.context;
        currentState = this.resolveState(State.from(resolvedStateValue, resolvedContext));
      }
      if (this.strict) {
        if (!this.events.includes(_event.name) && !isBuiltInEvent(_event.name)) {
          throw new Error("Machine '" + this.id + "' does not accept event '" + _event.name + "'");
        }
      }
      var stateTransition = this._transition(currentState.value, currentState, _event) || {
        transitions: [],
        configuration: [],
        entrySet: [],
        exitSet: [],
        source: currentState,
        actions: []
      };
      var prevConfig = getConfiguration([], this.getStateNodes(currentState.value));
      var resolvedConfig = stateTransition.configuration.length ? getConfiguration(prevConfig, stateTransition.configuration) : prevConfig;
      stateTransition.configuration = __spreadArray$1([], __read$4(resolvedConfig));
      return this.resolveTransition(stateTransition, currentState, _event);
    };
    StateNode2.prototype.resolveRaisedTransition = function(state, _event, originalEvent) {
      var _a2;
      var currentActions = state.actions;
      state = this.transition(state, _event);
      state._event = originalEvent;
      state.event = originalEvent.data;
      (_a2 = state.actions).unshift.apply(_a2, __spreadArray$1([], __read$4(currentActions)));
      return state;
    };
    StateNode2.prototype.resolveTransition = function(stateTransition, currentState, _event, context) {
      var e_6, _a2;
      var _this = this;
      if (_event === void 0) {
        _event = initEvent;
      }
      if (context === void 0) {
        context = this.machine.context;
      }
      var configuration = stateTransition.configuration;
      var willTransition = !currentState || stateTransition.transitions.length > 0;
      var resolvedStateValue = willTransition ? getValue(this.machine, configuration) : void 0;
      var historyValue = currentState ? currentState.historyValue ? currentState.historyValue : stateTransition.source ? this.machine.historyValue(currentState.value) : void 0 : void 0;
      var currentContext = currentState ? currentState.context : context;
      var actions = this.getActions(stateTransition, currentContext, _event, currentState);
      var activities = currentState ? __assign$1({}, currentState.activities) : {};
      try {
        for (var actions_1 = __values$1(actions), actions_1_1 = actions_1.next(); !actions_1_1.done; actions_1_1 = actions_1.next()) {
          var action = actions_1_1.value;
          if (action.type === start$1) {
            activities[action.activity.id || action.activity.type] = action;
          } else if (action.type === stop$1) {
            activities[action.activity.id || action.activity.type] = false;
          }
        }
      } catch (e_6_1) {
        e_6 = {
          error: e_6_1
        };
      } finally {
        try {
          if (actions_1_1 && !actions_1_1.done && (_a2 = actions_1.return))
            _a2.call(actions_1);
        } finally {
          if (e_6)
            throw e_6.error;
        }
      }
      var _b = __read$4(resolveActions(this, currentState, currentContext, _event, actions, this.machine.config.preserveActionOrder), 2), resolvedActions = _b[0], updatedContext = _b[1];
      var _c = __read$4(partition$1(resolvedActions, function(action2) {
        return action2.type === raise$1 || action2.type === send$1 && action2.to === SpecialTargets.Internal;
      }), 2), raisedEvents = _c[0], nonRaisedActions = _c[1];
      var invokeActions = resolvedActions.filter(function(action2) {
        var _a3;
        return action2.type === start$1 && ((_a3 = action2.activity) === null || _a3 === void 0 ? void 0 : _a3.type) === invoke;
      });
      var children2 = invokeActions.reduce(function(acc, action2) {
        acc[action2.activity.id] = createInvocableActor(action2.activity, _this.machine, updatedContext, _event);
        return acc;
      }, currentState ? __assign$1({}, currentState.children) : {});
      var resolvedConfiguration = resolvedStateValue ? stateTransition.configuration : currentState ? currentState.configuration : [];
      var isDone = isInFinalState(resolvedConfiguration, this);
      var nextState = new State({
        value: resolvedStateValue || currentState.value,
        context: updatedContext,
        _event,
        _sessionid: currentState ? currentState._sessionid : null,
        historyValue: resolvedStateValue ? historyValue ? updateHistoryValue(historyValue, resolvedStateValue) : void 0 : currentState ? currentState.historyValue : void 0,
        history: !resolvedStateValue || stateTransition.source ? currentState : void 0,
        actions: resolvedStateValue ? nonRaisedActions : [],
        activities: resolvedStateValue ? activities : currentState ? currentState.activities : {},
        events: [],
        configuration: resolvedConfiguration,
        transitions: stateTransition.transitions,
        children: children2,
        done: isDone,
        tags: currentState === null || currentState === void 0 ? void 0 : currentState.tags,
        machine: this
      });
      var didUpdateContext = currentContext !== updatedContext;
      nextState.changed = _event.name === update || didUpdateContext;
      var history = nextState.history;
      if (history) {
        delete history.history;
      }
      var isTransient = !isDone && (this._transient || configuration.some(function(stateNode) {
        return stateNode._transient;
      }));
      if (!willTransition && (!isTransient || _event.name === NULL_EVENT)) {
        return nextState;
      }
      var maybeNextState = nextState;
      if (!isDone) {
        if (isTransient) {
          maybeNextState = this.resolveRaisedTransition(maybeNextState, {
            type: nullEvent
          }, _event);
        }
        while (raisedEvents.length) {
          var raisedEvent = raisedEvents.shift();
          maybeNextState = this.resolveRaisedTransition(maybeNextState, raisedEvent._event, _event);
        }
      }
      var changed = maybeNextState.changed || (history ? !!maybeNextState.actions.length || didUpdateContext || typeof history.value !== typeof maybeNextState.value || !stateValuesEqual(maybeNextState.value, history.value) : void 0);
      maybeNextState.changed = changed;
      maybeNextState.history = history;
      maybeNextState.tags = getTagsFromConfiguration(maybeNextState.configuration);
      return maybeNextState;
    };
    StateNode2.prototype.getStateNode = function(stateKey) {
      if (isStateId(stateKey)) {
        return this.machine.getStateNodeById(stateKey);
      }
      if (!this.states) {
        throw new Error("Unable to retrieve child state '" + stateKey + "' from '" + this.id + "'; no child states exist.");
      }
      var result = this.states[stateKey];
      if (!result) {
        throw new Error("Child state '" + stateKey + "' does not exist on '" + this.id + "'");
      }
      return result;
    };
    StateNode2.prototype.getStateNodeById = function(stateId) {
      var resolvedStateId = isStateId(stateId) ? stateId.slice(STATE_IDENTIFIER.length) : stateId;
      if (resolvedStateId === this.id) {
        return this;
      }
      var stateNode = this.machine.idMap[resolvedStateId];
      if (!stateNode) {
        throw new Error("Child state node '#" + resolvedStateId + "' does not exist on machine '" + this.id + "'");
      }
      return stateNode;
    };
    StateNode2.prototype.getStateNodeByPath = function(statePath) {
      if (typeof statePath === "string" && isStateId(statePath)) {
        try {
          return this.getStateNodeById(statePath.slice(1));
        } catch (e2) {
        }
      }
      var arrayStatePath = toStatePath(statePath, this.delimiter).slice();
      var currentStateNode = this;
      while (arrayStatePath.length) {
        var key = arrayStatePath.shift();
        if (!key.length) {
          break;
        }
        currentStateNode = currentStateNode.getStateNode(key);
      }
      return currentStateNode;
    };
    StateNode2.prototype.resolve = function(stateValue) {
      var _a2;
      var _this = this;
      if (!stateValue) {
        return this.initialStateValue || EMPTY_OBJECT;
      }
      switch (this.type) {
        case "parallel":
          return mapValues(this.initialStateValue, function(subStateValue, subStateKey) {
            return subStateValue ? _this.getStateNode(subStateKey).resolve(stateValue[subStateKey] || subStateValue) : EMPTY_OBJECT;
          });
        case "compound":
          if (isString(stateValue)) {
            var subStateNode = this.getStateNode(stateValue);
            if (subStateNode.type === "parallel" || subStateNode.type === "compound") {
              return _a2 = {}, _a2[stateValue] = subStateNode.initialStateValue, _a2;
            }
            return stateValue;
          }
          if (!keys(stateValue).length) {
            return this.initialStateValue || {};
          }
          return mapValues(stateValue, function(subStateValue, subStateKey) {
            return subStateValue ? _this.getStateNode(subStateKey).resolve(subStateValue) : EMPTY_OBJECT;
          });
        default:
          return stateValue || EMPTY_OBJECT;
      }
    };
    StateNode2.prototype.getResolvedPath = function(stateIdentifier) {
      if (isStateId(stateIdentifier)) {
        var stateNode = this.machine.idMap[stateIdentifier.slice(STATE_IDENTIFIER.length)];
        if (!stateNode) {
          throw new Error("Unable to find state node '" + stateIdentifier + "'");
        }
        return stateNode.path;
      }
      return toStatePath(stateIdentifier, this.delimiter);
    };
    Object.defineProperty(StateNode2.prototype, "initialStateValue", {
      get: function() {
        var _a2;
        if (this.__cache.initialStateValue) {
          return this.__cache.initialStateValue;
        }
        var initialStateValue;
        if (this.type === "parallel") {
          initialStateValue = mapFilterValues(this.states, function(state) {
            return state.initialStateValue || EMPTY_OBJECT;
          }, function(stateNode) {
            return !(stateNode.type === "history");
          });
        } else if (this.initial !== void 0) {
          if (!this.states[this.initial]) {
            throw new Error("Initial state '" + this.initial + "' not found on '" + this.key + "'");
          }
          initialStateValue = isLeafNode(this.states[this.initial]) ? this.initial : (_a2 = {}, _a2[this.initial] = this.states[this.initial].initialStateValue, _a2);
        } else {
          initialStateValue = {};
        }
        this.__cache.initialStateValue = initialStateValue;
        return this.__cache.initialStateValue;
      },
      enumerable: false,
      configurable: true
    });
    StateNode2.prototype.getInitialState = function(stateValue, context) {
      var configuration = this.getStateNodes(stateValue);
      return this.resolveTransition({
        configuration,
        entrySet: configuration,
        exitSet: [],
        transitions: [],
        source: void 0,
        actions: []
      }, void 0, void 0, context);
    };
    Object.defineProperty(StateNode2.prototype, "initialState", {
      get: function() {
        this._init();
        var initialStateValue = this.initialStateValue;
        if (!initialStateValue) {
          throw new Error("Cannot retrieve initial state from simple state '" + this.id + "'.");
        }
        return this.getInitialState(initialStateValue);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(StateNode2.prototype, "target", {
      get: function() {
        var target;
        if (this.type === "history") {
          var historyConfig = this.config;
          if (isString(historyConfig.target)) {
            target = isStateId(historyConfig.target) ? pathToStateValue(this.machine.getStateNodeById(historyConfig.target).path.slice(this.path.length - 1)) : historyConfig.target;
          } else {
            target = historyConfig.target;
          }
        }
        return target;
      },
      enumerable: false,
      configurable: true
    });
    StateNode2.prototype.getRelativeStateNodes = function(relativeStateId, historyValue, resolve) {
      if (resolve === void 0) {
        resolve = true;
      }
      return resolve ? relativeStateId.type === "history" ? relativeStateId.resolveHistory(historyValue) : relativeStateId.initialStateNodes : [relativeStateId];
    };
    Object.defineProperty(StateNode2.prototype, "initialStateNodes", {
      get: function() {
        var _this = this;
        if (isLeafNode(this)) {
          return [this];
        }
        if (this.type === "compound" && !this.initial) {
          return [this];
        }
        var initialStateNodePaths = toStatePaths(this.initialStateValue);
        return flatten(initialStateNodePaths.map(function(initialPath) {
          return _this.getFromRelativePath(initialPath);
        }));
      },
      enumerable: false,
      configurable: true
    });
    StateNode2.prototype.getFromRelativePath = function(relativePath) {
      if (!relativePath.length) {
        return [this];
      }
      var _a2 = __read$4(relativePath), stateKey = _a2[0], childStatePath = _a2.slice(1);
      if (!this.states) {
        throw new Error("Cannot retrieve subPath '" + stateKey + "' from node with no states");
      }
      var childStateNode = this.getStateNode(stateKey);
      if (childStateNode.type === "history") {
        return childStateNode.resolveHistory();
      }
      if (!this.states[stateKey]) {
        throw new Error("Child state '" + stateKey + "' does not exist on '" + this.id + "'");
      }
      return this.states[stateKey].getFromRelativePath(childStatePath);
    };
    StateNode2.prototype.historyValue = function(relativeStateValue) {
      if (!keys(this.states).length) {
        return void 0;
      }
      return {
        current: relativeStateValue || this.initialStateValue,
        states: mapFilterValues(this.states, function(stateNode, key) {
          if (!relativeStateValue) {
            return stateNode.historyValue();
          }
          var subStateValue = isString(relativeStateValue) ? void 0 : relativeStateValue[key];
          return stateNode.historyValue(subStateValue || stateNode.initialStateValue);
        }, function(stateNode) {
          return !stateNode.history;
        })
      };
    };
    StateNode2.prototype.resolveHistory = function(historyValue) {
      var _this = this;
      if (this.type !== "history") {
        return [this];
      }
      var parent = this.parent;
      if (!historyValue) {
        var historyTarget = this.target;
        return historyTarget ? flatten(toStatePaths(historyTarget).map(function(relativeChildPath) {
          return parent.getFromRelativePath(relativeChildPath);
        })) : parent.initialStateNodes;
      }
      var subHistoryValue = nestedPath(parent.path, "states")(historyValue).current;
      if (isString(subHistoryValue)) {
        return [parent.getStateNode(subHistoryValue)];
      }
      return flatten(toStatePaths(subHistoryValue).map(function(subStatePath) {
        return _this.history === "deep" ? parent.getFromRelativePath(subStatePath) : [parent.states[subStatePath[0]]];
      }));
    };
    Object.defineProperty(StateNode2.prototype, "stateIds", {
      get: function() {
        var _this = this;
        var childStateIds = flatten(keys(this.states).map(function(stateKey) {
          return _this.states[stateKey].stateIds;
        }));
        return [this.id].concat(childStateIds);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(StateNode2.prototype, "events", {
      get: function() {
        var e_7, _a2, e_8, _b;
        if (this.__cache.events) {
          return this.__cache.events;
        }
        var states = this.states;
        var events = new Set(this.ownEvents);
        if (states) {
          try {
            for (var _c = __values$1(keys(states)), _d = _c.next(); !_d.done; _d = _c.next()) {
              var stateId = _d.value;
              var state = states[stateId];
              if (state.states) {
                try {
                  for (var _e = (e_8 = void 0, __values$1(state.events)), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var event_1 = _f.value;
                    events.add("" + event_1);
                  }
                } catch (e_8_1) {
                  e_8 = {
                    error: e_8_1
                  };
                } finally {
                  try {
                    if (_f && !_f.done && (_b = _e.return))
                      _b.call(_e);
                  } finally {
                    if (e_8)
                      throw e_8.error;
                  }
                }
              }
            }
          } catch (e_7_1) {
            e_7 = {
              error: e_7_1
            };
          } finally {
            try {
              if (_d && !_d.done && (_a2 = _c.return))
                _a2.call(_c);
            } finally {
              if (e_7)
                throw e_7.error;
            }
          }
        }
        return this.__cache.events = Array.from(events);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(StateNode2.prototype, "ownEvents", {
      get: function() {
        var events = new Set(this.transitions.filter(function(transition2) {
          return !(!transition2.target && !transition2.actions.length && transition2.internal);
        }).map(function(transition2) {
          return transition2.eventType;
        }));
        return Array.from(events);
      },
      enumerable: false,
      configurable: true
    });
    StateNode2.prototype.resolveTarget = function(_target) {
      var _this = this;
      if (_target === void 0) {
        return void 0;
      }
      return _target.map(function(target) {
        if (!isString(target)) {
          return target;
        }
        var isInternalTarget = target[0] === _this.delimiter;
        if (isInternalTarget && !_this.parent) {
          return _this.getStateNodeByPath(target.slice(1));
        }
        var resolvedTarget = isInternalTarget ? _this.key + target : target;
        if (_this.parent) {
          try {
            var targetStateNode = _this.parent.getStateNodeByPath(resolvedTarget);
            return targetStateNode;
          } catch (err) {
            throw new Error("Invalid transition definition for state node '" + _this.id + "':\n" + err.message);
          }
        } else {
          return _this.getStateNodeByPath(resolvedTarget);
        }
      });
    };
    StateNode2.prototype.formatTransition = function(transitionConfig) {
      var _this = this;
      var normalizedTarget = normalizeTarget(transitionConfig.target);
      var internal = "internal" in transitionConfig ? transitionConfig.internal : normalizedTarget ? normalizedTarget.some(function(_target) {
        return isString(_target) && _target[0] === _this.delimiter;
      }) : true;
      var guards = this.machine.options.guards;
      var target = this.resolveTarget(normalizedTarget);
      var transition2 = __assign$1(__assign$1({}, transitionConfig), {
        actions: toActionObjects(toArray(transitionConfig.actions)),
        cond: toGuard(transitionConfig.cond, guards),
        target,
        source: this,
        internal,
        eventType: transitionConfig.event,
        toJSON: function() {
          return __assign$1(__assign$1({}, transition2), {
            target: transition2.target ? transition2.target.map(function(t2) {
              return "#" + t2.id;
            }) : void 0,
            source: "#" + _this.id
          });
        }
      });
      return transition2;
    };
    StateNode2.prototype.formatTransitions = function() {
      var e_9, _a2;
      var _this = this;
      var onConfig;
      if (!this.config.on) {
        onConfig = [];
      } else if (Array.isArray(this.config.on)) {
        onConfig = this.config.on;
      } else {
        var _b = this.config.on, _c = WILDCARD, _d = _b[_c], wildcardConfigs = _d === void 0 ? [] : _d, strictTransitionConfigs_1 = __rest$1(_b, [typeof _c === "symbol" ? _c : _c + ""]);
        onConfig = flatten(keys(strictTransitionConfigs_1).map(function(key) {
          var transitionConfigArray = toTransitionConfigArray(key, strictTransitionConfigs_1[key]);
          return transitionConfigArray;
        }).concat(toTransitionConfigArray(WILDCARD, wildcardConfigs)));
      }
      var eventlessConfig = this.config.always ? toTransitionConfigArray("", this.config.always) : [];
      var doneConfig = this.config.onDone ? toTransitionConfigArray(String(done(this.id)), this.config.onDone) : [];
      var invokeConfig = flatten(this.invoke.map(function(invokeDef) {
        var settleTransitions = [];
        if (invokeDef.onDone) {
          settleTransitions.push.apply(settleTransitions, __spreadArray$1([], __read$4(toTransitionConfigArray(String(doneInvoke(invokeDef.id)), invokeDef.onDone))));
        }
        if (invokeDef.onError) {
          settleTransitions.push.apply(settleTransitions, __spreadArray$1([], __read$4(toTransitionConfigArray(String(error(invokeDef.id)), invokeDef.onError))));
        }
        return settleTransitions;
      }));
      var delayedTransitions = this.after;
      var formattedTransitions = flatten(__spreadArray$1(__spreadArray$1(__spreadArray$1(__spreadArray$1([], __read$4(doneConfig)), __read$4(invokeConfig)), __read$4(onConfig)), __read$4(eventlessConfig)).map(function(transitionConfig) {
        return toArray(transitionConfig).map(function(transition2) {
          return _this.formatTransition(transition2);
        });
      }));
      try {
        for (var delayedTransitions_1 = __values$1(delayedTransitions), delayedTransitions_1_1 = delayedTransitions_1.next(); !delayedTransitions_1_1.done; delayedTransitions_1_1 = delayedTransitions_1.next()) {
          var delayedTransition = delayedTransitions_1_1.value;
          formattedTransitions.push(delayedTransition);
        }
      } catch (e_9_1) {
        e_9 = {
          error: e_9_1
        };
      } finally {
        try {
          if (delayedTransitions_1_1 && !delayedTransitions_1_1.done && (_a2 = delayedTransitions_1.return))
            _a2.call(delayedTransitions_1);
        } finally {
          if (e_9)
            throw e_9.error;
        }
      }
      return formattedTransitions;
    };
    return StateNode2;
  }();
  function createMachine(config, options) {
    return new StateNode(config, options);
  }
  var InterpreterStatus;
  (function(InterpreterStatus2) {
    InterpreterStatus2[InterpreterStatus2["NotStarted"] = 0] = "NotStarted";
    InterpreterStatus2[InterpreterStatus2["Running"] = 1] = "Running";
    InterpreterStatus2[InterpreterStatus2["Stopped"] = 2] = "Stopped";
  })(InterpreterStatus || (InterpreterStatus = {}));
  var ReactEffectType;
  (function(ReactEffectType2) {
    ReactEffectType2[ReactEffectType2["Effect"] = 1] = "Effect";
    ReactEffectType2[ReactEffectType2["LayoutEffect"] = 2] = "LayoutEffect";
  })(ReactEffectType || (ReactEffectType = {}));
  function isObject$2(o2) {
    return Object.prototype.toString.call(o2) === "[object Object]";
  }
  function isPlainObject$2(o2) {
    var ctor, prot;
    if (isObject$2(o2) === false)
      return false;
    ctor = o2.constructor;
    if (ctor === void 0)
      return true;
    prot = ctor.prototype;
    if (isObject$2(prot) === false)
      return false;
    if (prot.hasOwnProperty("isPrototypeOf") === false) {
      return false;
    }
    return true;
  }
  function n$2(n2) {
    for (var t2 = arguments.length, r2 = Array(t2 > 1 ? t2 - 1 : 0), e2 = 1; e2 < t2; e2++)
      r2[e2 - 1] = arguments[e2];
    throw Error("[Immer] minified error nr: " + n2 + (r2.length ? " " + r2.map(function(n3) {
      return "'" + n3 + "'";
    }).join(",") : "") + ". Find the full error at: https://bit.ly/3cXEKWf");
  }
  function t$1(n2) {
    return !!n2 && !!n2[Q];
  }
  function r$1(n2) {
    return !!n2 && (function(n3) {
      if (!n3 || typeof n3 != "object")
        return false;
      var t2 = Object.getPrototypeOf(n3);
      if (t2 === null)
        return true;
      var r2 = Object.hasOwnProperty.call(t2, "constructor") && t2.constructor;
      return r2 === Object || typeof r2 == "function" && Function.toString.call(r2) === Z;
    }(n2) || Array.isArray(n2) || !!n2[L] || !!n2.constructor[L] || s(n2) || v(n2));
  }
  function i(n2, t2, r2) {
    r2 === void 0 && (r2 = false), o(n2) === 0 ? (r2 ? Object.keys : nn)(n2).forEach(function(e2) {
      r2 && typeof e2 == "symbol" || t2(e2, n2[e2], n2);
    }) : n2.forEach(function(r3, e2) {
      return t2(e2, r3, n2);
    });
  }
  function o(n2) {
    var t2 = n2[Q];
    return t2 ? t2.i > 3 ? t2.i - 4 : t2.i : Array.isArray(n2) ? 1 : s(n2) ? 2 : v(n2) ? 3 : 0;
  }
  function u(n2, t2) {
    return o(n2) === 2 ? n2.has(t2) : Object.prototype.hasOwnProperty.call(n2, t2);
  }
  function a(n2, t2) {
    return o(n2) === 2 ? n2.get(t2) : n2[t2];
  }
  function f$1(n2, t2, r2) {
    var e2 = o(n2);
    e2 === 2 ? n2.set(t2, r2) : e2 === 3 ? (n2.delete(t2), n2.add(r2)) : n2[t2] = r2;
  }
  function c(n2, t2) {
    return n2 === t2 ? n2 !== 0 || 1 / n2 == 1 / t2 : n2 != n2 && t2 != t2;
  }
  function s(n2) {
    return X && n2 instanceof Map;
  }
  function v(n2) {
    return q && n2 instanceof Set;
  }
  function p(n2) {
    return n2.o || n2.t;
  }
  function l(n2) {
    if (Array.isArray(n2))
      return Array.prototype.slice.call(n2);
    var t2 = tn(n2);
    delete t2[Q];
    for (var r2 = nn(t2), e2 = 0; e2 < r2.length; e2++) {
      var i2 = r2[e2], o2 = t2[i2];
      o2.writable === false && (o2.writable = true, o2.configurable = true), (o2.get || o2.set) && (t2[i2] = { configurable: true, writable: true, enumerable: o2.enumerable, value: n2[i2] });
    }
    return Object.create(Object.getPrototypeOf(n2), t2);
  }
  function d(n2, e2) {
    return e2 === void 0 && (e2 = false), y(n2) || t$1(n2) || !r$1(n2) ? n2 : (o(n2) > 1 && (n2.set = n2.add = n2.clear = n2.delete = h), Object.freeze(n2), e2 && i(n2, function(n3, t2) {
      return d(t2, true);
    }, true), n2);
  }
  function h() {
    n$2(2);
  }
  function y(n2) {
    return n2 == null || typeof n2 != "object" || Object.isFrozen(n2);
  }
  function b(t2) {
    var r2 = rn[t2];
    return r2 || n$2(18, t2), r2;
  }
  function _() {
    return U;
  }
  function j(n2, t2) {
    t2 && (b("Patches"), n2.u = [], n2.s = [], n2.v = t2);
  }
  function O(n2) {
    g(n2), n2.p.forEach(S), n2.p = null;
  }
  function g(n2) {
    n2 === U && (U = n2.l);
  }
  function w(n2) {
    return U = { p: [], l: U, h: n2, m: true, _: 0 };
  }
  function S(n2) {
    var t2 = n2[Q];
    t2.i === 0 || t2.i === 1 ? t2.j() : t2.O = true;
  }
  function P(t2, e2) {
    e2._ = e2.p.length;
    var i2 = e2.p[0], o2 = t2 !== void 0 && t2 !== i2;
    return e2.h.g || b("ES5").S(e2, t2, o2), o2 ? (i2[Q].P && (O(e2), n$2(4)), r$1(t2) && (t2 = M(e2, t2), e2.l || x(e2, t2)), e2.u && b("Patches").M(i2[Q], t2, e2.u, e2.s)) : t2 = M(e2, i2, []), O(e2), e2.u && e2.v(e2.u, e2.s), t2 !== H ? t2 : void 0;
  }
  function M(n2, t2, r2) {
    if (y(t2))
      return t2;
    var e2 = t2[Q];
    if (!e2)
      return i(t2, function(i2, o3) {
        return A(n2, e2, t2, i2, o3, r2);
      }, true), t2;
    if (e2.A !== n2)
      return t2;
    if (!e2.P)
      return x(n2, e2.t, true), e2.t;
    if (!e2.I) {
      e2.I = true, e2.A._--;
      var o2 = e2.i === 4 || e2.i === 5 ? e2.o = l(e2.k) : e2.o;
      i(e2.i === 3 ? new Set(o2) : o2, function(t3, i2) {
        return A(n2, e2, o2, t3, i2, r2);
      }), x(n2, o2, false), r2 && n2.u && b("Patches").R(e2, r2, n2.u, n2.s);
    }
    return e2.o;
  }
  function A(e2, i2, o2, a2, c2, s2) {
    if (t$1(c2)) {
      var v2 = M(e2, c2, s2 && i2 && i2.i !== 3 && !u(i2.D, a2) ? s2.concat(a2) : void 0);
      if (f$1(o2, a2, v2), !t$1(v2))
        return;
      e2.m = false;
    }
    if (r$1(c2) && !y(c2)) {
      if (!e2.h.F && e2._ < 1)
        return;
      M(e2, c2), i2 && i2.A.l || x(e2, c2);
    }
  }
  function x(n2, t2, r2) {
    r2 === void 0 && (r2 = false), n2.h.F && n2.m && d(t2, r2);
  }
  function z(n2, t2) {
    var r2 = n2[Q];
    return (r2 ? p(r2) : n2)[t2];
  }
  function I(n2, t2) {
    if (t2 in n2)
      for (var r2 = Object.getPrototypeOf(n2); r2; ) {
        var e2 = Object.getOwnPropertyDescriptor(r2, t2);
        if (e2)
          return e2;
        r2 = Object.getPrototypeOf(r2);
      }
  }
  function k(n2) {
    n2.P || (n2.P = true, n2.l && k(n2.l));
  }
  function E(n2) {
    n2.o || (n2.o = l(n2.t));
  }
  function R(n2, t2, r2) {
    var e2 = s(t2) ? b("MapSet").N(t2, r2) : v(t2) ? b("MapSet").T(t2, r2) : n2.g ? function(n3, t3) {
      var r3 = Array.isArray(n3), e3 = { i: r3 ? 1 : 0, A: t3 ? t3.A : _(), P: false, I: false, D: {}, l: t3, t: n3, k: null, o: null, j: null, C: false }, i2 = e3, o2 = en;
      r3 && (i2 = [e3], o2 = on);
      var u2 = Proxy.revocable(i2, o2), a2 = u2.revoke, f = u2.proxy;
      return e3.k = f, e3.j = a2, f;
    }(t2, r2) : b("ES5").J(t2, r2);
    return (r2 ? r2.A : _()).p.push(e2), e2;
  }
  function D(e2) {
    return t$1(e2) || n$2(22, e2), function n2(t2) {
      if (!r$1(t2))
        return t2;
      var e3, u2 = t2[Q], c2 = o(t2);
      if (u2) {
        if (!u2.P && (u2.i < 4 || !b("ES5").K(u2)))
          return u2.t;
        u2.I = true, e3 = F(t2, c2), u2.I = false;
      } else
        e3 = F(t2, c2);
      return i(e3, function(t3, r2) {
        u2 && a(u2.t, t3) === r2 || f$1(e3, t3, n2(r2));
      }), c2 === 3 ? new Set(e3) : e3;
    }(e2);
  }
  function F(n2, t2) {
    switch (t2) {
      case 2:
        return new Map(n2);
      case 3:
        return Array.from(n2);
    }
    return l(n2);
  }
  var G;
  var U;
  var W = typeof Symbol != "undefined" && typeof Symbol("x") == "symbol";
  var X = typeof Map != "undefined";
  var q = typeof Set != "undefined";
  var B = typeof Proxy != "undefined" && Proxy.revocable !== void 0 && typeof Reflect != "undefined";
  var H = W ? Symbol.for("immer-nothing") : ((G = {})["immer-nothing"] = true, G);
  var L = W ? Symbol.for("immer-draftable") : "__$immer_draftable";
  var Q = W ? Symbol.for("immer-state") : "__$immer_state";
  var Z = "" + Object.prototype.constructor;
  var nn = typeof Reflect != "undefined" && Reflect.ownKeys ? Reflect.ownKeys : Object.getOwnPropertySymbols !== void 0 ? function(n2) {
    return Object.getOwnPropertyNames(n2).concat(Object.getOwnPropertySymbols(n2));
  } : Object.getOwnPropertyNames;
  var tn = Object.getOwnPropertyDescriptors || function(n2) {
    var t2 = {};
    return nn(n2).forEach(function(r2) {
      t2[r2] = Object.getOwnPropertyDescriptor(n2, r2);
    }), t2;
  };
  var rn = {};
  var en = { get: function(n2, t2) {
    if (t2 === Q)
      return n2;
    var e2 = p(n2);
    if (!u(e2, t2))
      return function(n3, t3, r2) {
        var e3, i3 = I(t3, r2);
        return i3 ? "value" in i3 ? i3.value : (e3 = i3.get) === null || e3 === void 0 ? void 0 : e3.call(n3.k) : void 0;
      }(n2, e2, t2);
    var i2 = e2[t2];
    return n2.I || !r$1(i2) ? i2 : i2 === z(n2.t, t2) ? (E(n2), n2.o[t2] = R(n2.A.h, i2, n2)) : i2;
  }, has: function(n2, t2) {
    return t2 in p(n2);
  }, ownKeys: function(n2) {
    return Reflect.ownKeys(p(n2));
  }, set: function(n2, t2, r2) {
    var e2 = I(p(n2), t2);
    if (e2 == null ? void 0 : e2.set)
      return e2.set.call(n2.k, r2), true;
    if (!n2.P) {
      var i2 = z(p(n2), t2), o2 = i2 == null ? void 0 : i2[Q];
      if (o2 && o2.t === r2)
        return n2.o[t2] = r2, n2.D[t2] = false, true;
      if (c(r2, i2) && (r2 !== void 0 || u(n2.t, t2)))
        return true;
      E(n2), k(n2);
    }
    return n2.o[t2] === r2 && typeof r2 != "number" && (r2 !== void 0 || t2 in n2.o) || (n2.o[t2] = r2, n2.D[t2] = true, true);
  }, deleteProperty: function(n2, t2) {
    return z(n2.t, t2) !== void 0 || t2 in n2.t ? (n2.D[t2] = false, E(n2), k(n2)) : delete n2.D[t2], n2.o && delete n2.o[t2], true;
  }, getOwnPropertyDescriptor: function(n2, t2) {
    var r2 = p(n2), e2 = Reflect.getOwnPropertyDescriptor(r2, t2);
    return e2 ? { writable: true, configurable: n2.i !== 1 || t2 !== "length", enumerable: e2.enumerable, value: r2[t2] } : e2;
  }, defineProperty: function() {
    n$2(11);
  }, getPrototypeOf: function(n2) {
    return Object.getPrototypeOf(n2.t);
  }, setPrototypeOf: function() {
    n$2(12);
  } };
  var on = {};
  i(en, function(n2, t2) {
    on[n2] = function() {
      return arguments[0] = arguments[0][0], t2.apply(this, arguments);
    };
  }), on.deleteProperty = function(t2, r2) {
    return en.deleteProperty.call(this, t2[0], r2);
  }, on.set = function(t2, r2, e2) {
    return en.set.call(this, t2[0], r2, e2, t2[0]);
  };
  var un = function() {
    function e2(t2) {
      var e3 = this;
      this.g = B, this.F = true, this.produce = function(t3, i3, o2) {
        if (typeof t3 == "function" && typeof i3 != "function") {
          var u2 = i3;
          i3 = t3;
          var a2 = e3;
          return function(n2) {
            var t4 = this;
            n2 === void 0 && (n2 = u2);
            for (var r2 = arguments.length, e4 = Array(r2 > 1 ? r2 - 1 : 0), o3 = 1; o3 < r2; o3++)
              e4[o3 - 1] = arguments[o3];
            return a2.produce(n2, function(n3) {
              var r3;
              return (r3 = i3).call.apply(r3, [t4, n3].concat(e4));
            });
          };
        }
        var f;
        if (typeof i3 != "function" && n$2(6), o2 !== void 0 && typeof o2 != "function" && n$2(7), r$1(t3)) {
          var c2 = w(e3), s2 = R(e3, t3, void 0), v2 = true;
          try {
            f = i3(s2), v2 = false;
          } finally {
            v2 ? O(c2) : g(c2);
          }
          return typeof Promise != "undefined" && f instanceof Promise ? f.then(function(n2) {
            return j(c2, o2), P(n2, c2);
          }, function(n2) {
            throw O(c2), n2;
          }) : (j(c2, o2), P(f, c2));
        }
        if (!t3 || typeof t3 != "object") {
          if ((f = i3(t3)) === H)
            return;
          return f === void 0 && (f = t3), e3.F && d(f, true), f;
        }
        n$2(21, t3);
      }, this.produceWithPatches = function(n2, t3) {
        return typeof n2 == "function" ? function(t4) {
          for (var r3 = arguments.length, i4 = Array(r3 > 1 ? r3 - 1 : 0), o2 = 1; o2 < r3; o2++)
            i4[o2 - 1] = arguments[o2];
          return e3.produceWithPatches(t4, function(t5) {
            return n2.apply(void 0, [t5].concat(i4));
          });
        } : [e3.produce(n2, t3, function(n3, t4) {
          r2 = n3, i3 = t4;
        }), r2, i3];
        var r2, i3;
      }, typeof (t2 == null ? void 0 : t2.useProxies) == "boolean" && this.setUseProxies(t2.useProxies), typeof (t2 == null ? void 0 : t2.autoFreeze) == "boolean" && this.setAutoFreeze(t2.autoFreeze);
    }
    var i2 = e2.prototype;
    return i2.createDraft = function(e3) {
      r$1(e3) || n$2(8), t$1(e3) && (e3 = D(e3));
      var i3 = w(this), o2 = R(this, e3, void 0);
      return o2[Q].C = true, g(i3), o2;
    }, i2.finishDraft = function(t2, r2) {
      var e3 = t2 && t2[Q];
      var i3 = e3.A;
      return j(i3, r2), P(void 0, i3);
    }, i2.setAutoFreeze = function(n2) {
      this.F = n2;
    }, i2.setUseProxies = function(t2) {
      t2 && !B && n$2(20), this.g = t2;
    }, i2.applyPatches = function(n2, r2) {
      var e3;
      for (e3 = r2.length - 1; e3 >= 0; e3--) {
        var i3 = r2[e3];
        if (i3.path.length === 0 && i3.op === "replace") {
          n2 = i3.value;
          break;
        }
      }
      var o2 = b("Patches").$;
      return t$1(n2) ? o2(n2, r2) : this.produce(n2, function(n3) {
        return o2(n3, r2.slice(e3 + 1));
      });
    }, e2;
  }();
  var an = new un();
  var fn2 = an.produce;
  an.produceWithPatches.bind(an);
  an.setAutoFreeze.bind(an);
  an.setUseProxies.bind(an);
  an.applyPatches.bind(an);
  var ln = an.createDraft.bind(an);
  var dn = an.finishDraft.bind(an);
  function _defineProperty$2(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }
    return obj;
  }
  var DIRTY_PATHS = /* @__PURE__ */ new WeakMap();
  var FLUSHING = /* @__PURE__ */ new WeakMap();
  var NORMALIZING = /* @__PURE__ */ new WeakMap();
  var PATH_REFS = /* @__PURE__ */ new WeakMap();
  var POINT_REFS = /* @__PURE__ */ new WeakMap();
  var RANGE_REFS = /* @__PURE__ */ new WeakMap();
  function ownKeys$9(object, enumerableOnly) {
    var keys2 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly) {
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      }
      keys2.push.apply(keys2, symbols);
    }
    return keys2;
  }
  function _objectSpread$9(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2] != null ? arguments[i2] : {};
      if (i2 % 2) {
        ownKeys$9(Object(source), true).forEach(function(key) {
          _defineProperty$2(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys$9(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  var createEditor$1 = () => {
    var editor = {
      children: [],
      operations: [],
      selection: null,
      marks: null,
      isInline: () => false,
      isVoid: () => false,
      onChange: () => {
      },
      apply: (op) => {
        for (var ref of Editor.pathRefs(editor)) {
          PathRef.transform(ref, op);
        }
        for (var _ref of Editor.pointRefs(editor)) {
          PointRef.transform(_ref, op);
        }
        for (var _ref2 of Editor.rangeRefs(editor)) {
          RangeRef.transform(_ref2, op);
        }
        var set = /* @__PURE__ */ new Set();
        var dirtyPaths = [];
        var add = (path3) => {
          if (path3) {
            var key = path3.join(",");
            if (!set.has(key)) {
              set.add(key);
              dirtyPaths.push(path3);
            }
          }
        };
        var oldDirtyPaths = DIRTY_PATHS.get(editor) || [];
        var newDirtyPaths = getDirtyPaths(op);
        for (var path2 of oldDirtyPaths) {
          var newPath = Path.transform(path2, op);
          add(newPath);
        }
        for (var _path of newDirtyPaths) {
          add(_path);
        }
        DIRTY_PATHS.set(editor, dirtyPaths);
        Transforms.transform(editor, op);
        editor.operations.push(op);
        Editor.normalize(editor);
        if (op.type === "set_selection") {
          editor.marks = null;
        }
        if (!FLUSHING.get(editor)) {
          FLUSHING.set(editor, true);
          Promise.resolve().then(() => {
            FLUSHING.set(editor, false);
            editor.onChange();
            editor.operations = [];
          });
        }
      },
      addMark: (key, value) => {
        var {
          selection
        } = editor;
        if (selection) {
          if (Range.isExpanded(selection)) {
            Transforms.setNodes(editor, {
              [key]: value
            }, {
              match: Text$1.isText,
              split: true
            });
          } else {
            var marks = _objectSpread$9(_objectSpread$9({}, Editor.marks(editor) || {}), {}, {
              [key]: value
            });
            editor.marks = marks;
            if (!FLUSHING.get(editor)) {
              editor.onChange();
            }
          }
        }
      },
      deleteBackward: (unit) => {
        var {
          selection
        } = editor;
        if (selection && Range.isCollapsed(selection)) {
          Transforms.delete(editor, {
            unit,
            reverse: true
          });
        }
      },
      deleteForward: (unit) => {
        var {
          selection
        } = editor;
        if (selection && Range.isCollapsed(selection)) {
          Transforms.delete(editor, {
            unit
          });
        }
      },
      deleteFragment: (direction2) => {
        var {
          selection
        } = editor;
        if (selection && Range.isExpanded(selection)) {
          Transforms.delete(editor, {
            reverse: direction2 === "backward"
          });
        }
      },
      getFragment: () => {
        var {
          selection
        } = editor;
        if (selection) {
          return Node$1.fragment(editor, selection);
        }
        return [];
      },
      insertBreak: () => {
        Transforms.splitNodes(editor, {
          always: true
        });
      },
      insertFragment: (fragment) => {
        Transforms.insertFragment(editor, fragment);
      },
      insertNode: (node) => {
        Transforms.insertNodes(editor, node);
      },
      insertText: (text) => {
        var {
          selection,
          marks
        } = editor;
        if (selection) {
          if (marks) {
            var node = _objectSpread$9({
              text
            }, marks);
            Transforms.insertNodes(editor, node);
          } else {
            Transforms.insertText(editor, text);
          }
          editor.marks = null;
        }
      },
      normalizeNode: (entry) => {
        var [node, path2] = entry;
        if (Text$1.isText(node)) {
          return;
        }
        if (Element$2.isElement(node) && node.children.length === 0) {
          var child = {
            text: ""
          };
          Transforms.insertNodes(editor, child, {
            at: path2.concat(0),
            voids: true
          });
          return;
        }
        var shouldHaveInlines = Editor.isEditor(node) ? false : Element$2.isElement(node) && (editor.isInline(node) || node.children.length === 0 || Text$1.isText(node.children[0]) || editor.isInline(node.children[0]));
        var n2 = 0;
        for (var i2 = 0; i2 < node.children.length; i2++, n2++) {
          var currentNode = Node$1.get(editor, path2);
          if (Text$1.isText(currentNode))
            continue;
          var _child = node.children[i2];
          var prev = currentNode.children[n2 - 1];
          var isLast = i2 === node.children.length - 1;
          var isInlineOrText = Text$1.isText(_child) || Element$2.isElement(_child) && editor.isInline(_child);
          if (isInlineOrText !== shouldHaveInlines) {
            Transforms.removeNodes(editor, {
              at: path2.concat(n2),
              voids: true
            });
            n2--;
          } else if (Element$2.isElement(_child)) {
            if (editor.isInline(_child)) {
              if (prev == null || !Text$1.isText(prev)) {
                var newChild = {
                  text: ""
                };
                Transforms.insertNodes(editor, newChild, {
                  at: path2.concat(n2),
                  voids: true
                });
                n2++;
              } else if (isLast) {
                var _newChild = {
                  text: ""
                };
                Transforms.insertNodes(editor, _newChild, {
                  at: path2.concat(n2 + 1),
                  voids: true
                });
                n2++;
              }
            }
          } else {
            if (prev != null && Text$1.isText(prev)) {
              if (Text$1.equals(_child, prev, {
                loose: true
              })) {
                Transforms.mergeNodes(editor, {
                  at: path2.concat(n2),
                  voids: true
                });
                n2--;
              } else if (prev.text === "") {
                Transforms.removeNodes(editor, {
                  at: path2.concat(n2 - 1),
                  voids: true
                });
                n2--;
              } else if (_child.text === "") {
                Transforms.removeNodes(editor, {
                  at: path2.concat(n2),
                  voids: true
                });
                n2--;
              }
            }
          }
        }
      },
      removeMark: (key) => {
        var {
          selection
        } = editor;
        if (selection) {
          if (Range.isExpanded(selection)) {
            Transforms.unsetNodes(editor, key, {
              match: Text$1.isText,
              split: true
            });
          } else {
            var marks = _objectSpread$9({}, Editor.marks(editor) || {});
            delete marks[key];
            editor.marks = marks;
            if (!FLUSHING.get(editor)) {
              editor.onChange();
            }
          }
        }
      }
    };
    return editor;
  };
  var getDirtyPaths = (op) => {
    switch (op.type) {
      case "insert_text":
      case "remove_text":
      case "set_node": {
        var {
          path: path2
        } = op;
        return Path.levels(path2);
      }
      case "insert_node": {
        var {
          node,
          path: _path2
        } = op;
        var levels = Path.levels(_path2);
        var descendants = Text$1.isText(node) ? [] : Array.from(Node$1.nodes(node), (_ref3) => {
          var [, p3] = _ref3;
          return _path2.concat(p3);
        });
        return [...levels, ...descendants];
      }
      case "merge_node": {
        var {
          path: _path3
        } = op;
        var ancestors = Path.ancestors(_path3);
        var previousPath = Path.previous(_path3);
        return [...ancestors, previousPath];
      }
      case "move_node": {
        var {
          path: _path4,
          newPath
        } = op;
        if (Path.equals(_path4, newPath)) {
          return [];
        }
        var oldAncestors = [];
        var newAncestors = [];
        for (var ancestor of Path.ancestors(_path4)) {
          var p2 = Path.transform(ancestor, op);
          oldAncestors.push(p2);
        }
        for (var _ancestor of Path.ancestors(newPath)) {
          var _p = Path.transform(_ancestor, op);
          newAncestors.push(_p);
        }
        var newParent = newAncestors[newAncestors.length - 1];
        var newIndex = newPath[newPath.length - 1];
        var resultPath = newParent.concat(newIndex);
        return [...oldAncestors, ...newAncestors, resultPath];
      }
      case "remove_node": {
        var {
          path: _path5
        } = op;
        var _ancestors = Path.ancestors(_path5);
        return [..._ancestors];
      }
      case "split_node": {
        var {
          path: _path6
        } = op;
        var _levels = Path.levels(_path6);
        var nextPath = Path.next(_path6);
        return [..._levels, nextPath];
      }
      default: {
        return [];
      }
    }
  };
  function _objectWithoutPropertiesLoose$1(source, excluded) {
    if (source == null)
      return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i2;
    for (i2 = 0; i2 < sourceKeys.length; i2++) {
      key = sourceKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      target[key] = source[key];
    }
    return target;
  }
  function _objectWithoutProperties$1(source, excluded) {
    if (source == null)
      return {};
    var target = _objectWithoutPropertiesLoose$1(source, excluded);
    var key, i2;
    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
      for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
        key = sourceSymbolKeys[i2];
        if (excluded.indexOf(key) >= 0)
          continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key))
          continue;
        target[key] = source[key];
      }
    }
    return target;
  }
  var SPACE = /\s/;
  var PUNCTUATION = /[\u0021-\u0023\u0025-\u002A\u002C-\u002F\u003A\u003B\u003F\u0040\u005B-\u005D\u005F\u007B\u007D\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u0AF0\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E3B\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]/;
  var CHAMELEON = /['\u2018\u2019]/;
  var CodepointType;
  (function(CodepointType2) {
    CodepointType2[CodepointType2["ZeroWidthJoiner"] = 0] = "ZeroWidthJoiner";
    CodepointType2[CodepointType2["Keycap"] = 1] = "Keycap";
    CodepointType2[CodepointType2["Modifier"] = 2] = "Modifier";
    CodepointType2[CodepointType2["VariationSelector"] = 3] = "VariationSelector";
    CodepointType2[CodepointType2["RegionalIndicator"] = 4] = "RegionalIndicator";
    CodepointType2[CodepointType2["Tag"] = 5] = "Tag";
    CodepointType2[CodepointType2["Character"] = 6] = "Character";
  })(CodepointType || (CodepointType = {}));
  var getCharacterDistance = function getCharacterDistance2(str) {
    var isRTL = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
    var codepoints = isRTL ? codepointsIteratorRTL(str) : str;
    var isLTR = !isRTL;
    var [isKeycapStart, isKeycapEnd, isTagStart, isTagEnd] = isLTR ? [isKeycap, isCombiningEnclosingKeycap, isBlackFlag, isCancelTag] : [isCombiningEnclosingKeycap, isKeycap, isCancelTag, isBlackFlag];
    var distance2 = 0;
    var previousType = null;
    for (var codepoint of codepoints) {
      var code = codepoint.codePointAt(0);
      if (!code)
        break;
      if (isLTR && previousType === CodepointType.VariationSelector && !isZWJ(code) && !isKeycapEnd(code)) {
        break;
      }
      if (isZWJ(code)) {
        distance2 += codepoint.length;
        previousType = CodepointType.ZeroWidthJoiner;
        continue;
      }
      if (isKeycapStart(code)) {
        if (previousType === CodepointType.Keycap)
          break;
        distance2 += codepoint.length;
        previousType = CodepointType.Keycap;
        continue;
      }
      if (isKeycapEnd(code)) {
        distance2 += codepoint.length;
        break;
      }
      if (isVariationSelector(code)) {
        if (isRTL && previousType === CodepointType.Character)
          break;
        distance2 += codepoint.length;
        previousType = CodepointType.VariationSelector;
        continue;
      }
      if (isModifier(code)) {
        distance2 += codepoint.length;
        previousType = CodepointType.Modifier;
        continue;
      }
      if (isTagStart(code)) {
        if (previousType === CodepointType.Tag)
          break;
        distance2 += codepoint.length;
        previousType = CodepointType.Tag;
        continue;
      }
      if (previousType === CodepointType.Tag) {
        if (isTagEnd(code)) {
          distance2 += codepoint.length;
          break;
        }
        if (isTag(code)) {
          distance2 += codepoint.length;
          continue;
        }
        break;
      }
      if (isRegionalIndicator(code)) {
        if (previousType && previousType !== CodepointType.RegionalIndicator) {
          break;
        }
        distance2 += codepoint.length;
        if (previousType === CodepointType.RegionalIndicator)
          break;
        previousType = CodepointType.RegionalIndicator;
        continue;
      }
      if (previousType === CodepointType.Character)
        break;
      distance2 += codepoint.length;
      previousType = CodepointType.Character;
      continue;
    }
    return distance2 || 1;
  };
  var getWordDistance = function getWordDistance2(text) {
    var isRTL = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
    var dist = 0;
    var started = false;
    while (text.length > 0) {
      var charDist = getCharacterDistance(text, isRTL);
      var [char, remaining] = splitByCharacterDistance(text, charDist, isRTL);
      if (isWordCharacter(char, remaining, isRTL)) {
        started = true;
        dist += charDist;
      } else if (!started) {
        dist += charDist;
      } else {
        break;
      }
      text = remaining;
    }
    return dist;
  };
  var splitByCharacterDistance = (str, dist, isRTL) => {
    if (isRTL) {
      var at = str.length - dist;
      return [str.slice(at, str.length), str.slice(0, at)];
    }
    return [str.slice(0, dist), str.slice(dist)];
  };
  var isWordCharacter = function isWordCharacter2(char, remaining) {
    var isRTL = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
    if (SPACE.test(char)) {
      return false;
    }
    if (CHAMELEON.test(char)) {
      var charDist = getCharacterDistance(remaining, isRTL);
      var [nextChar, nextRemaining] = splitByCharacterDistance(remaining, charDist, isRTL);
      if (isWordCharacter2(nextChar, nextRemaining, isRTL)) {
        return true;
      }
    }
    if (PUNCTUATION.test(char)) {
      return false;
    }
    return true;
  };
  var isModifier = (code) => {
    return code >= 127995 && code <= 127999;
  };
  var isVariationSelector = (code) => {
    return code <= 65039 && code >= 65024;
  };
  var isKeycap = (code) => {
    return code >= 48 && code <= 57 || code === 35 || code === 42;
  };
  var isCombiningEnclosingKeycap = (code) => {
    return code === 8419;
  };
  var isRegionalIndicator = (code) => {
    return code >= 127462 && code <= 127487;
  };
  var isZWJ = (code) => {
    return code === 8205;
  };
  var isBlackFlag = (code) => {
    return code === 127988;
  };
  var isTag = (code) => {
    return code >= 917504 && code <= 917631;
  };
  var isCancelTag = (code) => {
    return code === 917631;
  };
  var codepointsIteratorRTL = function* codepointsIteratorRTL2(str) {
    var end2 = str.length - 1;
    for (var i2 = 0; i2 < str.length; i2++) {
      var char1 = str.charAt(end2 - i2);
      if (isLowSurrogate(char1.charCodeAt(0))) {
        var char2 = str.charAt(end2 - i2 - 1);
        if (isHighSurrogate(char2.charCodeAt(0))) {
          yield char2 + char1;
          i2++;
          continue;
        }
      }
      yield char1;
    }
  };
  var isHighSurrogate = (charCode) => {
    return charCode >= 55296 && charCode <= 56319;
  };
  var isLowSurrogate = (charCode) => {
    return charCode >= 56320 && charCode <= 57343;
  };
  var isElement = (value) => {
    return isPlainObject$2(value) && Node$1.isNodeList(value.children) && !Editor.isEditor(value);
  };
  var Element$2 = {
    isAncestor(value) {
      return isPlainObject$2(value) && Node$1.isNodeList(value.children);
    },
    isElement,
    isElementList(value) {
      return Array.isArray(value) && value.every((val) => Element$2.isElement(val));
    },
    isElementProps(props) {
      return props.children !== void 0;
    },
    isElementType: function isElementType(value, elementVal) {
      var elementKey = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "type";
      return isElement(value) && value[elementKey] === elementVal;
    },
    matches(element, props) {
      for (var key in props) {
        if (key === "children") {
          continue;
        }
        if (element[key] !== props[key]) {
          return false;
        }
      }
      return true;
    }
  };
  var _excluded$4 = ["text"];
  var _excluded2$3 = ["text"];
  function ownKeys$8(object, enumerableOnly) {
    var keys2 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly) {
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      }
      keys2.push.apply(keys2, symbols);
    }
    return keys2;
  }
  function _objectSpread$8(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2] != null ? arguments[i2] : {};
      if (i2 % 2) {
        ownKeys$8(Object(source), true).forEach(function(key) {
          _defineProperty$2(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys$8(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  var IS_EDITOR_CACHE = /* @__PURE__ */ new WeakMap();
  var Editor = {
    above(editor) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var {
        voids = false,
        mode = "lowest",
        at = editor.selection,
        match
      } = options;
      if (!at) {
        return;
      }
      var path2 = Editor.path(editor, at);
      var reverse = mode === "lowest";
      for (var [n2, p2] of Editor.levels(editor, {
        at: path2,
        voids,
        match,
        reverse
      })) {
        if (!Text$1.isText(n2) && !Path.equals(path2, p2)) {
          return [n2, p2];
        }
      }
    },
    addMark(editor, key, value) {
      editor.addMark(key, value);
    },
    after(editor, at) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var anchor = Editor.point(editor, at, {
        edge: "end"
      });
      var focus = Editor.end(editor, []);
      var range = {
        anchor,
        focus
      };
      var {
        distance: distance2 = 1
      } = options;
      var d2 = 0;
      var target;
      for (var p2 of Editor.positions(editor, _objectSpread$8(_objectSpread$8({}, options), {}, {
        at: range
      }))) {
        if (d2 > distance2) {
          break;
        }
        if (d2 !== 0) {
          target = p2;
        }
        d2++;
      }
      return target;
    },
    before(editor, at) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var anchor = Editor.start(editor, []);
      var focus = Editor.point(editor, at, {
        edge: "start"
      });
      var range = {
        anchor,
        focus
      };
      var {
        distance: distance2 = 1
      } = options;
      var d2 = 0;
      var target;
      for (var p2 of Editor.positions(editor, _objectSpread$8(_objectSpread$8({}, options), {}, {
        at: range,
        reverse: true
      }))) {
        if (d2 > distance2) {
          break;
        }
        if (d2 !== 0) {
          target = p2;
        }
        d2++;
      }
      return target;
    },
    deleteBackward(editor) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var {
        unit = "character"
      } = options;
      editor.deleteBackward(unit);
    },
    deleteForward(editor) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var {
        unit = "character"
      } = options;
      editor.deleteForward(unit);
    },
    deleteFragment(editor) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var {
        direction: direction2 = "forward"
      } = options;
      editor.deleteFragment(direction2);
    },
    edges(editor, at) {
      return [Editor.start(editor, at), Editor.end(editor, at)];
    },
    end(editor, at) {
      return Editor.point(editor, at, {
        edge: "end"
      });
    },
    first(editor, at) {
      var path2 = Editor.path(editor, at, {
        edge: "start"
      });
      return Editor.node(editor, path2);
    },
    fragment(editor, at) {
      var range = Editor.range(editor, at);
      var fragment = Node$1.fragment(editor, range);
      return fragment;
    },
    hasBlocks(editor, element) {
      return element.children.some((n2) => Editor.isBlock(editor, n2));
    },
    hasInlines(editor, element) {
      return element.children.some((n2) => Text$1.isText(n2) || Editor.isInline(editor, n2));
    },
    hasTexts(editor, element) {
      return element.children.every((n2) => Text$1.isText(n2));
    },
    insertBreak(editor) {
      editor.insertBreak();
    },
    insertFragment(editor, fragment) {
      editor.insertFragment(fragment);
    },
    insertNode(editor, node) {
      editor.insertNode(node);
    },
    insertText(editor, text) {
      editor.insertText(text);
    },
    isBlock(editor, value) {
      return Element$2.isElement(value) && !editor.isInline(value);
    },
    isEditor(value) {
      if (!isPlainObject$2(value))
        return false;
      var cachedIsEditor = IS_EDITOR_CACHE.get(value);
      if (cachedIsEditor !== void 0) {
        return cachedIsEditor;
      }
      var isEditor = typeof value.addMark === "function" && typeof value.apply === "function" && typeof value.deleteBackward === "function" && typeof value.deleteForward === "function" && typeof value.deleteFragment === "function" && typeof value.insertBreak === "function" && typeof value.insertFragment === "function" && typeof value.insertNode === "function" && typeof value.insertText === "function" && typeof value.isInline === "function" && typeof value.isVoid === "function" && typeof value.normalizeNode === "function" && typeof value.onChange === "function" && typeof value.removeMark === "function" && (value.marks === null || isPlainObject$2(value.marks)) && (value.selection === null || Range.isRange(value.selection)) && Node$1.isNodeList(value.children) && Operation.isOperationList(value.operations);
      IS_EDITOR_CACHE.set(value, isEditor);
      return isEditor;
    },
    isEnd(editor, point, at) {
      var end2 = Editor.end(editor, at);
      return Point$1.equals(point, end2);
    },
    isEdge(editor, point, at) {
      return Editor.isStart(editor, point, at) || Editor.isEnd(editor, point, at);
    },
    isEmpty(editor, element) {
      var {
        children: children2
      } = element;
      var [first] = children2;
      return children2.length === 0 || children2.length === 1 && Text$1.isText(first) && first.text === "" && !editor.isVoid(element);
    },
    isInline(editor, value) {
      return Element$2.isElement(value) && editor.isInline(value);
    },
    isNormalizing(editor) {
      var isNormalizing = NORMALIZING.get(editor);
      return isNormalizing === void 0 ? true : isNormalizing;
    },
    isStart(editor, point, at) {
      if (point.offset !== 0) {
        return false;
      }
      var start2 = Editor.start(editor, at);
      return Point$1.equals(point, start2);
    },
    isVoid(editor, value) {
      return Element$2.isElement(value) && editor.isVoid(value);
    },
    last(editor, at) {
      var path2 = Editor.path(editor, at, {
        edge: "end"
      });
      return Editor.node(editor, path2);
    },
    leaf(editor, at) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var path2 = Editor.path(editor, at, options);
      var node = Node$1.leaf(editor, path2);
      return [node, path2];
    },
    *levels(editor) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var {
        at = editor.selection,
        reverse = false,
        voids = false
      } = options;
      var {
        match
      } = options;
      if (match == null) {
        match = () => true;
      }
      if (!at) {
        return;
      }
      var levels = [];
      var path2 = Editor.path(editor, at);
      for (var [n2, p2] of Node$1.levels(editor, path2)) {
        if (!match(n2, p2)) {
          continue;
        }
        levels.push([n2, p2]);
        if (!voids && Editor.isVoid(editor, n2)) {
          break;
        }
      }
      if (reverse) {
        levels.reverse();
      }
      yield* levels;
    },
    marks(editor) {
      var {
        marks,
        selection
      } = editor;
      if (!selection) {
        return null;
      }
      if (marks) {
        return marks;
      }
      if (Range.isExpanded(selection)) {
        var [match] = Editor.nodes(editor, {
          match: Text$1.isText
        });
        if (match) {
          var [_node] = match;
          var _rest = _objectWithoutProperties$1(_node, _excluded$4);
          return _rest;
        } else {
          return {};
        }
      }
      var {
        anchor
      } = selection;
      var {
        path: path2
      } = anchor;
      var [node] = Editor.leaf(editor, path2);
      if (anchor.offset === 0) {
        var prev = Editor.previous(editor, {
          at: path2,
          match: Text$1.isText
        });
        var block = Editor.above(editor, {
          match: (n2) => Editor.isBlock(editor, n2)
        });
        if (prev && block) {
          var [prevNode, prevPath] = prev;
          var [, blockPath] = block;
          if (Path.isAncestor(blockPath, prevPath)) {
            node = prevNode;
          }
        }
      }
      var rest = _objectWithoutProperties$1(node, _excluded2$3);
      return rest;
    },
    next(editor) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var {
        mode = "lowest",
        voids = false
      } = options;
      var {
        match,
        at = editor.selection
      } = options;
      if (!at) {
        return;
      }
      var pointAfterLocation = Editor.after(editor, at, {
        voids
      });
      if (!pointAfterLocation)
        return;
      var [, to] = Editor.last(editor, []);
      var span = [pointAfterLocation.path, to];
      if (Path.isPath(at) && at.length === 0) {
        throw new Error("Cannot get the next node from the root node!");
      }
      if (match == null) {
        if (Path.isPath(at)) {
          var [parent] = Editor.parent(editor, at);
          match = (n2) => parent.children.includes(n2);
        } else {
          match = () => true;
        }
      }
      var [next] = Editor.nodes(editor, {
        at: span,
        match,
        mode,
        voids
      });
      return next;
    },
    node(editor, at) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var path2 = Editor.path(editor, at, options);
      var node = Node$1.get(editor, path2);
      return [node, path2];
    },
    *nodes(editor) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var {
        at = editor.selection,
        mode = "all",
        universal = false,
        reverse = false,
        voids = false
      } = options;
      var {
        match
      } = options;
      if (!match) {
        match = () => true;
      }
      if (!at) {
        return;
      }
      var from;
      var to;
      if (Span.isSpan(at)) {
        from = at[0];
        to = at[1];
      } else {
        var first = Editor.path(editor, at, {
          edge: "start"
        });
        var last = Editor.path(editor, at, {
          edge: "end"
        });
        from = reverse ? last : first;
        to = reverse ? first : last;
      }
      var nodeEntries = Node$1.nodes(editor, {
        reverse,
        from,
        to,
        pass: (_ref) => {
          var [n2] = _ref;
          return voids ? false : Editor.isVoid(editor, n2);
        }
      });
      var matches = [];
      var hit;
      for (var [node, path2] of nodeEntries) {
        var isLower = hit && Path.compare(path2, hit[1]) === 0;
        if (mode === "highest" && isLower) {
          continue;
        }
        if (!match(node, path2)) {
          if (universal && !isLower && Text$1.isText(node)) {
            return;
          } else {
            continue;
          }
        }
        if (mode === "lowest" && isLower) {
          hit = [node, path2];
          continue;
        }
        var emit = mode === "lowest" ? hit : [node, path2];
        if (emit) {
          if (universal) {
            matches.push(emit);
          } else {
            yield emit;
          }
        }
        hit = [node, path2];
      }
      if (mode === "lowest" && hit) {
        if (universal) {
          matches.push(hit);
        } else {
          yield hit;
        }
      }
      if (universal) {
        yield* matches;
      }
    },
    normalize(editor) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var {
        force = false
      } = options;
      var getDirtyPaths2 = (editor2) => {
        return DIRTY_PATHS.get(editor2) || [];
      };
      if (!Editor.isNormalizing(editor)) {
        return;
      }
      if (force) {
        var allPaths = Array.from(Node$1.nodes(editor), (_ref2) => {
          var [, p2] = _ref2;
          return p2;
        });
        DIRTY_PATHS.set(editor, allPaths);
      }
      if (getDirtyPaths2(editor).length === 0) {
        return;
      }
      Editor.withoutNormalizing(editor, () => {
        for (var dirtyPath of getDirtyPaths2(editor)) {
          if (Node$1.has(editor, dirtyPath)) {
            var entry = Editor.node(editor, dirtyPath);
            var [node, _2] = entry;
            if (Element$2.isElement(node) && node.children.length === 0) {
              editor.normalizeNode(entry);
            }
          }
        }
        var max2 = getDirtyPaths2(editor).length * 42;
        var m = 0;
        while (getDirtyPaths2(editor).length !== 0) {
          if (m > max2) {
            throw new Error("\n            Could not completely normalize the editor after ".concat(max2, " iterations! This is usually due to incorrect normalization logic that leaves a node in an invalid state.\n          "));
          }
          var _dirtyPath = getDirtyPaths2(editor).pop();
          if (Node$1.has(editor, _dirtyPath)) {
            var _entry = Editor.node(editor, _dirtyPath);
            editor.normalizeNode(_entry);
          }
          m++;
        }
      });
    },
    parent(editor, at) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var path2 = Editor.path(editor, at, options);
      var parentPath = Path.parent(path2);
      var entry = Editor.node(editor, parentPath);
      return entry;
    },
    path(editor, at) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var {
        depth,
        edge
      } = options;
      if (Path.isPath(at)) {
        if (edge === "start") {
          var [, firstPath] = Node$1.first(editor, at);
          at = firstPath;
        } else if (edge === "end") {
          var [, lastPath] = Node$1.last(editor, at);
          at = lastPath;
        }
      }
      if (Range.isRange(at)) {
        if (edge === "start") {
          at = Range.start(at);
        } else if (edge === "end") {
          at = Range.end(at);
        } else {
          at = Path.common(at.anchor.path, at.focus.path);
        }
      }
      if (Point$1.isPoint(at)) {
        at = at.path;
      }
      if (depth != null) {
        at = at.slice(0, depth);
      }
      return at;
    },
    hasPath(editor, path2) {
      return Node$1.has(editor, path2);
    },
    pathRef(editor, path2) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var {
        affinity = "forward"
      } = options;
      var ref = {
        current: path2,
        affinity,
        unref() {
          var {
            current
          } = ref;
          var pathRefs = Editor.pathRefs(editor);
          pathRefs.delete(ref);
          ref.current = null;
          return current;
        }
      };
      var refs = Editor.pathRefs(editor);
      refs.add(ref);
      return ref;
    },
    pathRefs(editor) {
      var refs = PATH_REFS.get(editor);
      if (!refs) {
        refs = /* @__PURE__ */ new Set();
        PATH_REFS.set(editor, refs);
      }
      return refs;
    },
    point(editor, at) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var {
        edge = "start"
      } = options;
      if (Path.isPath(at)) {
        var path2;
        if (edge === "end") {
          var [, lastPath] = Node$1.last(editor, at);
          path2 = lastPath;
        } else {
          var [, firstPath] = Node$1.first(editor, at);
          path2 = firstPath;
        }
        var node = Node$1.get(editor, path2);
        if (!Text$1.isText(node)) {
          throw new Error("Cannot get the ".concat(edge, " point in the node at path [").concat(at, "] because it has no ").concat(edge, " text node."));
        }
        return {
          path: path2,
          offset: edge === "end" ? node.text.length : 0
        };
      }
      if (Range.isRange(at)) {
        var [start2, end2] = Range.edges(at);
        return edge === "start" ? start2 : end2;
      }
      return at;
    },
    pointRef(editor, point) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var {
        affinity = "forward"
      } = options;
      var ref = {
        current: point,
        affinity,
        unref() {
          var {
            current
          } = ref;
          var pointRefs = Editor.pointRefs(editor);
          pointRefs.delete(ref);
          ref.current = null;
          return current;
        }
      };
      var refs = Editor.pointRefs(editor);
      refs.add(ref);
      return ref;
    },
    pointRefs(editor) {
      var refs = POINT_REFS.get(editor);
      if (!refs) {
        refs = /* @__PURE__ */ new Set();
        POINT_REFS.set(editor, refs);
      }
      return refs;
    },
    *positions(editor) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var {
        at = editor.selection,
        unit = "offset",
        reverse = false,
        voids = false
      } = options;
      if (!at) {
        return;
      }
      var range = Editor.range(editor, at);
      var [start2, end2] = Range.edges(range);
      var first = reverse ? end2 : start2;
      var isNewBlock = false;
      var blockText = "";
      var distance2 = 0;
      var leafTextRemaining = 0;
      var leafTextOffset = 0;
      for (var [node, path2] of Editor.nodes(editor, {
        at,
        reverse,
        voids
      })) {
        if (Element$2.isElement(node)) {
          if (!voids && editor.isVoid(node)) {
            yield Editor.start(editor, path2);
            continue;
          }
          if (editor.isInline(node))
            continue;
          if (Editor.hasInlines(editor, node)) {
            var e2 = Path.isAncestor(path2, end2.path) ? end2 : Editor.end(editor, path2);
            var s2 = Path.isAncestor(path2, start2.path) ? start2 : Editor.start(editor, path2);
            blockText = Editor.string(editor, {
              anchor: s2,
              focus: e2
            }, {
              voids
            });
            isNewBlock = true;
          }
        }
        if (Text$1.isText(node)) {
          var isFirst = Path.equals(path2, first.path);
          if (isFirst) {
            leafTextRemaining = reverse ? first.offset : node.text.length - first.offset;
            leafTextOffset = first.offset;
          } else {
            leafTextRemaining = node.text.length;
            leafTextOffset = reverse ? leafTextRemaining : 0;
          }
          if (isFirst || isNewBlock || unit === "offset") {
            yield {
              path: path2,
              offset: leafTextOffset
            };
            isNewBlock = false;
          }
          while (true) {
            if (distance2 === 0) {
              if (blockText === "")
                break;
              distance2 = calcDistance(blockText, unit, reverse);
              blockText = splitByCharacterDistance(blockText, distance2, reverse)[1];
            }
            leafTextOffset = reverse ? leafTextOffset - distance2 : leafTextOffset + distance2;
            leafTextRemaining = leafTextRemaining - distance2;
            if (leafTextRemaining < 0) {
              distance2 = -leafTextRemaining;
              break;
            }
            distance2 = 0;
            yield {
              path: path2,
              offset: leafTextOffset
            };
          }
        }
      }
      function calcDistance(text, unit2, reverse2) {
        if (unit2 === "character") {
          return getCharacterDistance(text, reverse2);
        } else if (unit2 === "word") {
          return getWordDistance(text, reverse2);
        } else if (unit2 === "line" || unit2 === "block") {
          return text.length;
        }
        return 1;
      }
    },
    previous(editor) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var {
        mode = "lowest",
        voids = false
      } = options;
      var {
        match,
        at = editor.selection
      } = options;
      if (!at) {
        return;
      }
      var pointBeforeLocation = Editor.before(editor, at, {
        voids
      });
      if (!pointBeforeLocation) {
        return;
      }
      var [, to] = Editor.first(editor, []);
      var span = [pointBeforeLocation.path, to];
      if (Path.isPath(at) && at.length === 0) {
        throw new Error("Cannot get the previous node from the root node!");
      }
      if (match == null) {
        if (Path.isPath(at)) {
          var [parent] = Editor.parent(editor, at);
          match = (n2) => parent.children.includes(n2);
        } else {
          match = () => true;
        }
      }
      var [previous] = Editor.nodes(editor, {
        reverse: true,
        at: span,
        match,
        mode,
        voids
      });
      return previous;
    },
    range(editor, at, to) {
      if (Range.isRange(at) && !to) {
        return at;
      }
      var start2 = Editor.start(editor, at);
      var end2 = Editor.end(editor, to || at);
      return {
        anchor: start2,
        focus: end2
      };
    },
    rangeRef(editor, range) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var {
        affinity = "forward"
      } = options;
      var ref = {
        current: range,
        affinity,
        unref() {
          var {
            current
          } = ref;
          var rangeRefs = Editor.rangeRefs(editor);
          rangeRefs.delete(ref);
          ref.current = null;
          return current;
        }
      };
      var refs = Editor.rangeRefs(editor);
      refs.add(ref);
      return ref;
    },
    rangeRefs(editor) {
      var refs = RANGE_REFS.get(editor);
      if (!refs) {
        refs = /* @__PURE__ */ new Set();
        RANGE_REFS.set(editor, refs);
      }
      return refs;
    },
    removeMark(editor, key) {
      editor.removeMark(key);
    },
    setNormalizing(editor, isNormalizing) {
      NORMALIZING.set(editor, isNormalizing);
    },
    start(editor, at) {
      return Editor.point(editor, at, {
        edge: "start"
      });
    },
    string(editor, at) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var {
        voids = false
      } = options;
      var range = Editor.range(editor, at);
      var [start2, end2] = Range.edges(range);
      var text = "";
      for (var [node, path2] of Editor.nodes(editor, {
        at: range,
        match: Text$1.isText,
        voids
      })) {
        var t2 = node.text;
        if (Path.equals(path2, end2.path)) {
          t2 = t2.slice(0, end2.offset);
        }
        if (Path.equals(path2, start2.path)) {
          t2 = t2.slice(start2.offset);
        }
        text += t2;
      }
      return text;
    },
    unhangRange(editor, range) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var {
        voids = false
      } = options;
      var [start2, end2] = Range.edges(range);
      if (start2.offset !== 0 || end2.offset !== 0 || Range.isCollapsed(range)) {
        return range;
      }
      var endBlock = Editor.above(editor, {
        at: end2,
        match: (n2) => Editor.isBlock(editor, n2)
      });
      var blockPath = endBlock ? endBlock[1] : [];
      var first = Editor.start(editor, []);
      var before = {
        anchor: first,
        focus: end2
      };
      var skip = true;
      for (var [node, path2] of Editor.nodes(editor, {
        at: before,
        match: Text$1.isText,
        reverse: true,
        voids
      })) {
        if (skip) {
          skip = false;
          continue;
        }
        if (node.text !== "" || Path.isBefore(path2, blockPath)) {
          end2 = {
            path: path2,
            offset: node.text.length
          };
          break;
        }
      }
      return {
        anchor: start2,
        focus: end2
      };
    },
    void(editor) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      return Editor.above(editor, _objectSpread$8(_objectSpread$8({}, options), {}, {
        match: (n2) => Editor.isVoid(editor, n2)
      }));
    },
    withoutNormalizing(editor, fn3) {
      var value = Editor.isNormalizing(editor);
      Editor.setNormalizing(editor, false);
      try {
        fn3();
      } finally {
        Editor.setNormalizing(editor, value);
      }
      Editor.normalize(editor);
    }
  };
  var Span = {
    isSpan(value) {
      return Array.isArray(value) && value.length === 2 && value.every(Path.isPath);
    }
  };
  var _excluded$3$1 = ["children"];
  var _excluded2$2 = ["text"];
  var IS_NODE_LIST_CACHE = /* @__PURE__ */ new WeakMap();
  var Node$1 = {
    ancestor(root2, path2) {
      var node = Node$1.get(root2, path2);
      if (Text$1.isText(node)) {
        throw new Error("Cannot get the ancestor node at path [".concat(path2, "] because it refers to a text node instead: ").concat(node));
      }
      return node;
    },
    *ancestors(root2, path2) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      for (var p2 of Path.ancestors(path2, options)) {
        var n2 = Node$1.ancestor(root2, p2);
        var entry = [n2, p2];
        yield entry;
      }
    },
    child(root2, index2) {
      if (Text$1.isText(root2)) {
        throw new Error("Cannot get the child of a text node: ".concat(JSON.stringify(root2)));
      }
      var c2 = root2.children[index2];
      if (c2 == null) {
        throw new Error("Cannot get child at index `".concat(index2, "` in node: ").concat(JSON.stringify(root2)));
      }
      return c2;
    },
    *children(root2, path2) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var {
        reverse = false
      } = options;
      var ancestor = Node$1.ancestor(root2, path2);
      var {
        children: children2
      } = ancestor;
      var index2 = reverse ? children2.length - 1 : 0;
      while (reverse ? index2 >= 0 : index2 < children2.length) {
        var child = Node$1.child(ancestor, index2);
        var childPath = path2.concat(index2);
        yield [child, childPath];
        index2 = reverse ? index2 - 1 : index2 + 1;
      }
    },
    common(root2, path2, another) {
      var p2 = Path.common(path2, another);
      var n2 = Node$1.get(root2, p2);
      return [n2, p2];
    },
    descendant(root2, path2) {
      var node = Node$1.get(root2, path2);
      if (Editor.isEditor(node)) {
        throw new Error("Cannot get the descendant node at path [".concat(path2, "] because it refers to the root editor node instead: ").concat(node));
      }
      return node;
    },
    *descendants(root2) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      for (var [node, path2] of Node$1.nodes(root2, options)) {
        if (path2.length !== 0) {
          yield [node, path2];
        }
      }
    },
    *elements(root2) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      for (var [node, path2] of Node$1.nodes(root2, options)) {
        if (Element$2.isElement(node)) {
          yield [node, path2];
        }
      }
    },
    extractProps(node) {
      if (Element$2.isAncestor(node)) {
        var properties2 = _objectWithoutProperties$1(node, _excluded$3$1);
        return properties2;
      } else {
        var properties2 = _objectWithoutProperties$1(node, _excluded2$2);
        return properties2;
      }
    },
    first(root2, path2) {
      var p2 = path2.slice();
      var n2 = Node$1.get(root2, p2);
      while (n2) {
        if (Text$1.isText(n2) || n2.children.length === 0) {
          break;
        } else {
          n2 = n2.children[0];
          p2.push(0);
        }
      }
      return [n2, p2];
    },
    fragment(root2, range) {
      if (Text$1.isText(root2)) {
        throw new Error("Cannot get a fragment starting from a root text node: ".concat(JSON.stringify(root2)));
      }
      var newRoot = fn2({
        children: root2.children
      }, (r2) => {
        var [start2, end2] = Range.edges(range);
        var nodeEntries = Node$1.nodes(r2, {
          reverse: true,
          pass: (_ref) => {
            var [, path3] = _ref;
            return !Range.includes(range, path3);
          }
        });
        for (var [, path2] of nodeEntries) {
          if (!Range.includes(range, path2)) {
            var parent = Node$1.parent(r2, path2);
            var index2 = path2[path2.length - 1];
            parent.children.splice(index2, 1);
          }
          if (Path.equals(path2, end2.path)) {
            var leaf = Node$1.leaf(r2, path2);
            leaf.text = leaf.text.slice(0, end2.offset);
          }
          if (Path.equals(path2, start2.path)) {
            var _leaf = Node$1.leaf(r2, path2);
            _leaf.text = _leaf.text.slice(start2.offset);
          }
        }
        if (Editor.isEditor(r2)) {
          r2.selection = null;
        }
      });
      return newRoot.children;
    },
    get(root2, path2) {
      var node = root2;
      for (var i2 = 0; i2 < path2.length; i2++) {
        var p2 = path2[i2];
        if (Text$1.isText(node) || !node.children[p2]) {
          throw new Error("Cannot find a descendant at path [".concat(path2, "] in node: ").concat(JSON.stringify(root2)));
        }
        node = node.children[p2];
      }
      return node;
    },
    has(root2, path2) {
      var node = root2;
      for (var i2 = 0; i2 < path2.length; i2++) {
        var p2 = path2[i2];
        if (Text$1.isText(node) || !node.children[p2]) {
          return false;
        }
        node = node.children[p2];
      }
      return true;
    },
    isNode(value) {
      return Text$1.isText(value) || Element$2.isElement(value) || Editor.isEditor(value);
    },
    isNodeList(value) {
      if (!Array.isArray(value)) {
        return false;
      }
      var cachedResult = IS_NODE_LIST_CACHE.get(value);
      if (cachedResult !== void 0) {
        return cachedResult;
      }
      var isNodeList = value.every((val) => Node$1.isNode(val));
      IS_NODE_LIST_CACHE.set(value, isNodeList);
      return isNodeList;
    },
    last(root2, path2) {
      var p2 = path2.slice();
      var n2 = Node$1.get(root2, p2);
      while (n2) {
        if (Text$1.isText(n2) || n2.children.length === 0) {
          break;
        } else {
          var i2 = n2.children.length - 1;
          n2 = n2.children[i2];
          p2.push(i2);
        }
      }
      return [n2, p2];
    },
    leaf(root2, path2) {
      var node = Node$1.get(root2, path2);
      if (!Text$1.isText(node)) {
        throw new Error("Cannot get the leaf node at path [".concat(path2, "] because it refers to a non-leaf node: ").concat(node));
      }
      return node;
    },
    *levels(root2, path2) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      for (var p2 of Path.levels(path2, options)) {
        var n2 = Node$1.get(root2, p2);
        yield [n2, p2];
      }
    },
    matches(node, props) {
      return Element$2.isElement(node) && Element$2.isElementProps(props) && Element$2.matches(node, props) || Text$1.isText(node) && Text$1.isTextProps(props) && Text$1.matches(node, props);
    },
    *nodes(root2) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var {
        pass,
        reverse = false
      } = options;
      var {
        from = [],
        to
      } = options;
      var visited = /* @__PURE__ */ new Set();
      var p2 = [];
      var n2 = root2;
      while (true) {
        if (to && (reverse ? Path.isBefore(p2, to) : Path.isAfter(p2, to))) {
          break;
        }
        if (!visited.has(n2)) {
          yield [n2, p2];
        }
        if (!visited.has(n2) && !Text$1.isText(n2) && n2.children.length !== 0 && (pass == null || pass([n2, p2]) === false)) {
          visited.add(n2);
          var nextIndex = reverse ? n2.children.length - 1 : 0;
          if (Path.isAncestor(p2, from)) {
            nextIndex = from[p2.length];
          }
          p2 = p2.concat(nextIndex);
          n2 = Node$1.get(root2, p2);
          continue;
        }
        if (p2.length === 0) {
          break;
        }
        if (!reverse) {
          var newPath = Path.next(p2);
          if (Node$1.has(root2, newPath)) {
            p2 = newPath;
            n2 = Node$1.get(root2, p2);
            continue;
          }
        }
        if (reverse && p2[p2.length - 1] !== 0) {
          var _newPath = Path.previous(p2);
          p2 = _newPath;
          n2 = Node$1.get(root2, p2);
          continue;
        }
        p2 = Path.parent(p2);
        n2 = Node$1.get(root2, p2);
        visited.add(n2);
      }
    },
    parent(root2, path2) {
      var parentPath = Path.parent(path2);
      var p2 = Node$1.get(root2, parentPath);
      if (Text$1.isText(p2)) {
        throw new Error("Cannot get the parent of path [".concat(path2, "] because it does not exist in the root."));
      }
      return p2;
    },
    string(node) {
      if (Text$1.isText(node)) {
        return node.text;
      } else {
        return node.children.map(Node$1.string).join("");
      }
    },
    *texts(root2) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      for (var [node, path2] of Node$1.nodes(root2, options)) {
        if (Text$1.isText(node)) {
          yield [node, path2];
        }
      }
    }
  };
  function ownKeys$7(object, enumerableOnly) {
    var keys2 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly) {
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      }
      keys2.push.apply(keys2, symbols);
    }
    return keys2;
  }
  function _objectSpread$7(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2] != null ? arguments[i2] : {};
      if (i2 % 2) {
        ownKeys$7(Object(source), true).forEach(function(key) {
          _defineProperty$2(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys$7(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  var Operation = {
    isNodeOperation(value) {
      return Operation.isOperation(value) && value.type.endsWith("_node");
    },
    isOperation(value) {
      if (!isPlainObject$2(value)) {
        return false;
      }
      switch (value.type) {
        case "insert_node":
          return Path.isPath(value.path) && Node$1.isNode(value.node);
        case "insert_text":
          return typeof value.offset === "number" && typeof value.text === "string" && Path.isPath(value.path);
        case "merge_node":
          return typeof value.position === "number" && Path.isPath(value.path) && isPlainObject$2(value.properties);
        case "move_node":
          return Path.isPath(value.path) && Path.isPath(value.newPath);
        case "remove_node":
          return Path.isPath(value.path) && Node$1.isNode(value.node);
        case "remove_text":
          return typeof value.offset === "number" && typeof value.text === "string" && Path.isPath(value.path);
        case "set_node":
          return Path.isPath(value.path) && isPlainObject$2(value.properties) && isPlainObject$2(value.newProperties);
        case "set_selection":
          return value.properties === null && Range.isRange(value.newProperties) || value.newProperties === null && Range.isRange(value.properties) || isPlainObject$2(value.properties) && isPlainObject$2(value.newProperties);
        case "split_node":
          return Path.isPath(value.path) && typeof value.position === "number" && isPlainObject$2(value.properties);
        default:
          return false;
      }
    },
    isOperationList(value) {
      return Array.isArray(value) && value.every((val) => Operation.isOperation(val));
    },
    isSelectionOperation(value) {
      return Operation.isOperation(value) && value.type.endsWith("_selection");
    },
    isTextOperation(value) {
      return Operation.isOperation(value) && value.type.endsWith("_text");
    },
    inverse(op) {
      switch (op.type) {
        case "insert_node": {
          return _objectSpread$7(_objectSpread$7({}, op), {}, {
            type: "remove_node"
          });
        }
        case "insert_text": {
          return _objectSpread$7(_objectSpread$7({}, op), {}, {
            type: "remove_text"
          });
        }
        case "merge_node": {
          return _objectSpread$7(_objectSpread$7({}, op), {}, {
            type: "split_node",
            path: Path.previous(op.path)
          });
        }
        case "move_node": {
          var {
            newPath,
            path: path2
          } = op;
          if (Path.equals(newPath, path2)) {
            return op;
          }
          if (Path.isSibling(path2, newPath)) {
            return _objectSpread$7(_objectSpread$7({}, op), {}, {
              path: newPath,
              newPath: path2
            });
          }
          var inversePath = Path.transform(path2, op);
          var inverseNewPath = Path.transform(Path.next(path2), op);
          return _objectSpread$7(_objectSpread$7({}, op), {}, {
            path: inversePath,
            newPath: inverseNewPath
          });
        }
        case "remove_node": {
          return _objectSpread$7(_objectSpread$7({}, op), {}, {
            type: "insert_node"
          });
        }
        case "remove_text": {
          return _objectSpread$7(_objectSpread$7({}, op), {}, {
            type: "insert_text"
          });
        }
        case "set_node": {
          var {
            properties: properties2,
            newProperties
          } = op;
          return _objectSpread$7(_objectSpread$7({}, op), {}, {
            properties: newProperties,
            newProperties: properties2
          });
        }
        case "set_selection": {
          var {
            properties: _properties,
            newProperties: _newProperties
          } = op;
          if (_properties == null) {
            return _objectSpread$7(_objectSpread$7({}, op), {}, {
              properties: _newProperties,
              newProperties: null
            });
          } else if (_newProperties == null) {
            return _objectSpread$7(_objectSpread$7({}, op), {}, {
              properties: null,
              newProperties: _properties
            });
          } else {
            return _objectSpread$7(_objectSpread$7({}, op), {}, {
              properties: _newProperties,
              newProperties: _properties
            });
          }
        }
        case "split_node": {
          return _objectSpread$7(_objectSpread$7({}, op), {}, {
            type: "merge_node",
            path: Path.next(op.path)
          });
        }
      }
    }
  };
  var Path = {
    ancestors(path2) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var {
        reverse = false
      } = options;
      var paths = Path.levels(path2, options);
      if (reverse) {
        paths = paths.slice(1);
      } else {
        paths = paths.slice(0, -1);
      }
      return paths;
    },
    common(path2, another) {
      var common2 = [];
      for (var i2 = 0; i2 < path2.length && i2 < another.length; i2++) {
        var av = path2[i2];
        var bv = another[i2];
        if (av !== bv) {
          break;
        }
        common2.push(av);
      }
      return common2;
    },
    compare(path2, another) {
      var min2 = Math.min(path2.length, another.length);
      for (var i2 = 0; i2 < min2; i2++) {
        if (path2[i2] < another[i2])
          return -1;
        if (path2[i2] > another[i2])
          return 1;
      }
      return 0;
    },
    endsAfter(path2, another) {
      var i2 = path2.length - 1;
      var as = path2.slice(0, i2);
      var bs = another.slice(0, i2);
      var av = path2[i2];
      var bv = another[i2];
      return Path.equals(as, bs) && av > bv;
    },
    endsAt(path2, another) {
      var i2 = path2.length;
      var as = path2.slice(0, i2);
      var bs = another.slice(0, i2);
      return Path.equals(as, bs);
    },
    endsBefore(path2, another) {
      var i2 = path2.length - 1;
      var as = path2.slice(0, i2);
      var bs = another.slice(0, i2);
      var av = path2[i2];
      var bv = another[i2];
      return Path.equals(as, bs) && av < bv;
    },
    equals(path2, another) {
      return path2.length === another.length && path2.every((n2, i2) => n2 === another[i2]);
    },
    hasPrevious(path2) {
      return path2[path2.length - 1] > 0;
    },
    isAfter(path2, another) {
      return Path.compare(path2, another) === 1;
    },
    isAncestor(path2, another) {
      return path2.length < another.length && Path.compare(path2, another) === 0;
    },
    isBefore(path2, another) {
      return Path.compare(path2, another) === -1;
    },
    isChild(path2, another) {
      return path2.length === another.length + 1 && Path.compare(path2, another) === 0;
    },
    isCommon(path2, another) {
      return path2.length <= another.length && Path.compare(path2, another) === 0;
    },
    isDescendant(path2, another) {
      return path2.length > another.length && Path.compare(path2, another) === 0;
    },
    isParent(path2, another) {
      return path2.length + 1 === another.length && Path.compare(path2, another) === 0;
    },
    isPath(value) {
      return Array.isArray(value) && (value.length === 0 || typeof value[0] === "number");
    },
    isSibling(path2, another) {
      if (path2.length !== another.length) {
        return false;
      }
      var as = path2.slice(0, -1);
      var bs = another.slice(0, -1);
      var al = path2[path2.length - 1];
      var bl = another[another.length - 1];
      return al !== bl && Path.equals(as, bs);
    },
    levels(path2) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var {
        reverse = false
      } = options;
      var list = [];
      for (var i2 = 0; i2 <= path2.length; i2++) {
        list.push(path2.slice(0, i2));
      }
      if (reverse) {
        list.reverse();
      }
      return list;
    },
    next(path2) {
      if (path2.length === 0) {
        throw new Error("Cannot get the next path of a root path [".concat(path2, "], because it has no next index."));
      }
      var last = path2[path2.length - 1];
      return path2.slice(0, -1).concat(last + 1);
    },
    parent(path2) {
      if (path2.length === 0) {
        throw new Error("Cannot get the parent path of the root path [".concat(path2, "]."));
      }
      return path2.slice(0, -1);
    },
    previous(path2) {
      if (path2.length === 0) {
        throw new Error("Cannot get the previous path of a root path [".concat(path2, "], because it has no previous index."));
      }
      var last = path2[path2.length - 1];
      if (last <= 0) {
        throw new Error("Cannot get the previous path of a first child path [".concat(path2, "] because it would result in a negative index."));
      }
      return path2.slice(0, -1).concat(last - 1);
    },
    relative(path2, ancestor) {
      if (!Path.isAncestor(ancestor, path2) && !Path.equals(path2, ancestor)) {
        throw new Error("Cannot get the relative path of [".concat(path2, "] inside ancestor [").concat(ancestor, "], because it is not above or equal to the path."));
      }
      return path2.slice(ancestor.length);
    },
    transform(path2, operation) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      return fn2(path2, (p2) => {
        var {
          affinity = "forward"
        } = options;
        if (!path2 || (path2 === null || path2 === void 0 ? void 0 : path2.length) === 0) {
          return;
        }
        if (p2 === null) {
          return null;
        }
        switch (operation.type) {
          case "insert_node": {
            var {
              path: op
            } = operation;
            if (Path.equals(op, p2) || Path.endsBefore(op, p2) || Path.isAncestor(op, p2)) {
              p2[op.length - 1] += 1;
            }
            break;
          }
          case "remove_node": {
            var {
              path: _op
            } = operation;
            if (Path.equals(_op, p2) || Path.isAncestor(_op, p2)) {
              return null;
            } else if (Path.endsBefore(_op, p2)) {
              p2[_op.length - 1] -= 1;
            }
            break;
          }
          case "merge_node": {
            var {
              path: _op2,
              position: position2
            } = operation;
            if (Path.equals(_op2, p2) || Path.endsBefore(_op2, p2)) {
              p2[_op2.length - 1] -= 1;
            } else if (Path.isAncestor(_op2, p2)) {
              p2[_op2.length - 1] -= 1;
              p2[_op2.length] += position2;
            }
            break;
          }
          case "split_node": {
            var {
              path: _op3,
              position: _position
            } = operation;
            if (Path.equals(_op3, p2)) {
              if (affinity === "forward") {
                p2[p2.length - 1] += 1;
              } else if (affinity === "backward")
                ;
              else {
                return null;
              }
            } else if (Path.endsBefore(_op3, p2)) {
              p2[_op3.length - 1] += 1;
            } else if (Path.isAncestor(_op3, p2) && path2[_op3.length] >= _position) {
              p2[_op3.length - 1] += 1;
              p2[_op3.length] -= _position;
            }
            break;
          }
          case "move_node": {
            var {
              path: _op4,
              newPath: onp
            } = operation;
            if (Path.equals(_op4, onp)) {
              return;
            }
            if (Path.isAncestor(_op4, p2) || Path.equals(_op4, p2)) {
              var copy = onp.slice();
              if (Path.endsBefore(_op4, onp) && _op4.length < onp.length) {
                copy[_op4.length - 1] -= 1;
              }
              return copy.concat(p2.slice(_op4.length));
            } else if (Path.isSibling(_op4, onp) && (Path.isAncestor(onp, p2) || Path.equals(onp, p2))) {
              if (Path.endsBefore(_op4, p2)) {
                p2[_op4.length - 1] -= 1;
              } else {
                p2[_op4.length - 1] += 1;
              }
            } else if (Path.endsBefore(onp, p2) || Path.equals(onp, p2) || Path.isAncestor(onp, p2)) {
              if (Path.endsBefore(_op4, p2)) {
                p2[_op4.length - 1] -= 1;
              }
              p2[onp.length - 1] += 1;
            } else if (Path.endsBefore(_op4, p2)) {
              if (Path.equals(onp, p2)) {
                p2[onp.length - 1] += 1;
              }
              p2[_op4.length - 1] -= 1;
            }
            break;
          }
        }
      });
    }
  };
  var PathRef = {
    transform(ref, op) {
      var {
        current,
        affinity
      } = ref;
      if (current == null) {
        return;
      }
      var path2 = Path.transform(current, op, {
        affinity
      });
      ref.current = path2;
      if (path2 == null) {
        ref.unref();
      }
    }
  };
  function ownKeys$6(object, enumerableOnly) {
    var keys2 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly) {
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      }
      keys2.push.apply(keys2, symbols);
    }
    return keys2;
  }
  function _objectSpread$6(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2] != null ? arguments[i2] : {};
      if (i2 % 2) {
        ownKeys$6(Object(source), true).forEach(function(key) {
          _defineProperty$2(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys$6(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  var Point$1 = {
    compare(point, another) {
      var result = Path.compare(point.path, another.path);
      if (result === 0) {
        if (point.offset < another.offset)
          return -1;
        if (point.offset > another.offset)
          return 1;
        return 0;
      }
      return result;
    },
    isAfter(point, another) {
      return Point$1.compare(point, another) === 1;
    },
    isBefore(point, another) {
      return Point$1.compare(point, another) === -1;
    },
    equals(point, another) {
      return point.offset === another.offset && Path.equals(point.path, another.path);
    },
    isPoint(value) {
      return isPlainObject$2(value) && typeof value.offset === "number" && Path.isPath(value.path);
    },
    transform(point, op) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      return fn2(point, (p2) => {
        if (p2 === null) {
          return null;
        }
        var {
          affinity = "forward"
        } = options;
        var {
          path: path2,
          offset: offset2
        } = p2;
        switch (op.type) {
          case "insert_node":
          case "move_node": {
            p2.path = Path.transform(path2, op, options);
            break;
          }
          case "insert_text": {
            if (Path.equals(op.path, path2) && op.offset <= offset2) {
              p2.offset += op.text.length;
            }
            break;
          }
          case "merge_node": {
            if (Path.equals(op.path, path2)) {
              p2.offset += op.position;
            }
            p2.path = Path.transform(path2, op, options);
            break;
          }
          case "remove_text": {
            if (Path.equals(op.path, path2) && op.offset <= offset2) {
              p2.offset -= Math.min(offset2 - op.offset, op.text.length);
            }
            break;
          }
          case "remove_node": {
            if (Path.equals(op.path, path2) || Path.isAncestor(op.path, path2)) {
              return null;
            }
            p2.path = Path.transform(path2, op, options);
            break;
          }
          case "split_node": {
            if (Path.equals(op.path, path2)) {
              if (op.position === offset2 && affinity == null) {
                return null;
              } else if (op.position < offset2 || op.position === offset2 && affinity === "forward") {
                p2.offset -= op.position;
                p2.path = Path.transform(path2, op, _objectSpread$6(_objectSpread$6({}, options), {}, {
                  affinity: "forward"
                }));
              }
            } else {
              p2.path = Path.transform(path2, op, options);
            }
            break;
          }
        }
      });
    }
  };
  var PointRef = {
    transform(ref, op) {
      var {
        current,
        affinity
      } = ref;
      if (current == null) {
        return;
      }
      var point = Point$1.transform(current, op, {
        affinity
      });
      ref.current = point;
      if (point == null) {
        ref.unref();
      }
    }
  };
  var _excluded$2$1 = ["anchor", "focus"];
  function ownKeys$5(object, enumerableOnly) {
    var keys2 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly) {
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      }
      keys2.push.apply(keys2, symbols);
    }
    return keys2;
  }
  function _objectSpread$5(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2] != null ? arguments[i2] : {};
      if (i2 % 2) {
        ownKeys$5(Object(source), true).forEach(function(key) {
          _defineProperty$2(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys$5(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  var Range = {
    edges(range) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var {
        reverse = false
      } = options;
      var {
        anchor,
        focus
      } = range;
      return Range.isBackward(range) === reverse ? [anchor, focus] : [focus, anchor];
    },
    end(range) {
      var [, end2] = Range.edges(range);
      return end2;
    },
    equals(range, another) {
      return Point$1.equals(range.anchor, another.anchor) && Point$1.equals(range.focus, another.focus);
    },
    includes(range, target) {
      if (Range.isRange(target)) {
        if (Range.includes(range, target.anchor) || Range.includes(range, target.focus)) {
          return true;
        }
        var [rs, re] = Range.edges(range);
        var [ts, te] = Range.edges(target);
        return Point$1.isBefore(rs, ts) && Point$1.isAfter(re, te);
      }
      var [start2, end2] = Range.edges(range);
      var isAfterStart = false;
      var isBeforeEnd = false;
      if (Point$1.isPoint(target)) {
        isAfterStart = Point$1.compare(target, start2) >= 0;
        isBeforeEnd = Point$1.compare(target, end2) <= 0;
      } else {
        isAfterStart = Path.compare(target, start2.path) >= 0;
        isBeforeEnd = Path.compare(target, end2.path) <= 0;
      }
      return isAfterStart && isBeforeEnd;
    },
    intersection(range, another) {
      var rest = _objectWithoutProperties$1(range, _excluded$2$1);
      var [s1, e1] = Range.edges(range);
      var [s2, e2] = Range.edges(another);
      var start2 = Point$1.isBefore(s1, s2) ? s2 : s1;
      var end2 = Point$1.isBefore(e1, e2) ? e1 : e2;
      if (Point$1.isBefore(end2, start2)) {
        return null;
      } else {
        return _objectSpread$5({
          anchor: start2,
          focus: end2
        }, rest);
      }
    },
    isBackward(range) {
      var {
        anchor,
        focus
      } = range;
      return Point$1.isAfter(anchor, focus);
    },
    isCollapsed(range) {
      var {
        anchor,
        focus
      } = range;
      return Point$1.equals(anchor, focus);
    },
    isExpanded(range) {
      return !Range.isCollapsed(range);
    },
    isForward(range) {
      return !Range.isBackward(range);
    },
    isRange(value) {
      return isPlainObject$2(value) && Point$1.isPoint(value.anchor) && Point$1.isPoint(value.focus);
    },
    *points(range) {
      yield [range.anchor, "anchor"];
      yield [range.focus, "focus"];
    },
    start(range) {
      var [start2] = Range.edges(range);
      return start2;
    },
    transform(range, op) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      return fn2(range, (r2) => {
        if (r2 === null) {
          return null;
        }
        var {
          affinity = "inward"
        } = options;
        var affinityAnchor;
        var affinityFocus;
        if (affinity === "inward") {
          var isCollapsed = Range.isCollapsed(r2);
          if (Range.isForward(r2)) {
            affinityAnchor = "forward";
            affinityFocus = isCollapsed ? affinityAnchor : "backward";
          } else {
            affinityAnchor = "backward";
            affinityFocus = isCollapsed ? affinityAnchor : "forward";
          }
        } else if (affinity === "outward") {
          if (Range.isForward(r2)) {
            affinityAnchor = "backward";
            affinityFocus = "forward";
          } else {
            affinityAnchor = "forward";
            affinityFocus = "backward";
          }
        } else {
          affinityAnchor = affinity;
          affinityFocus = affinity;
        }
        var anchor = Point$1.transform(r2.anchor, op, {
          affinity: affinityAnchor
        });
        var focus = Point$1.transform(r2.focus, op, {
          affinity: affinityFocus
        });
        if (!anchor || !focus) {
          return null;
        }
        r2.anchor = anchor;
        r2.focus = focus;
      });
    }
  };
  var RangeRef = {
    transform(ref, op) {
      var {
        current,
        affinity
      } = ref;
      if (current == null) {
        return;
      }
      var path2 = Range.transform(current, op, {
        affinity
      });
      ref.current = path2;
      if (path2 == null) {
        ref.unref();
      }
    }
  };
  var isDeepEqual = (node, another) => {
    for (var key in node) {
      var a2 = node[key];
      var b2 = another[key];
      if (isPlainObject$2(a2) && isPlainObject$2(b2)) {
        if (!isDeepEqual(a2, b2))
          return false;
      } else if (Array.isArray(a2) && Array.isArray(b2)) {
        if (a2.length !== b2.length)
          return false;
        for (var i2 = 0; i2 < a2.length; i2++) {
          if (a2[i2] !== b2[i2])
            return false;
        }
        return true;
      } else if (a2 !== b2) {
        return false;
      }
    }
    for (var _key in another) {
      if (node[_key] === void 0 && another[_key] !== void 0) {
        return false;
      }
    }
    return true;
  };
  var _excluded$1$1 = ["text"];
  var _excluded2$1 = ["anchor", "focus"];
  function ownKeys$4(object, enumerableOnly) {
    var keys2 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly) {
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      }
      keys2.push.apply(keys2, symbols);
    }
    return keys2;
  }
  function _objectSpread$4(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2] != null ? arguments[i2] : {};
      if (i2 % 2) {
        ownKeys$4(Object(source), true).forEach(function(key) {
          _defineProperty$2(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys$4(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  var Text$1 = {
    equals(text, another) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var {
        loose = false
      } = options;
      function omitText(obj) {
        var rest = _objectWithoutProperties$1(obj, _excluded$1$1);
        return rest;
      }
      return isDeepEqual(loose ? omitText(text) : text, loose ? omitText(another) : another);
    },
    isText(value) {
      return isPlainObject$2(value) && typeof value.text === "string";
    },
    isTextList(value) {
      return Array.isArray(value) && value.every((val) => Text$1.isText(val));
    },
    isTextProps(props) {
      return props.text !== void 0;
    },
    matches(text, props) {
      for (var key in props) {
        if (key === "text") {
          continue;
        }
        if (!text.hasOwnProperty(key) || text[key] !== props[key]) {
          return false;
        }
      }
      return true;
    },
    decorations(node, decorations) {
      var leaves = [_objectSpread$4({}, node)];
      for (var dec of decorations) {
        var rest = _objectWithoutProperties$1(dec, _excluded2$1);
        var [start2, end2] = Range.edges(dec);
        var next = [];
        var o2 = 0;
        for (var leaf of leaves) {
          var {
            length
          } = leaf.text;
          var offset2 = o2;
          o2 += length;
          if (start2.offset <= offset2 && end2.offset >= o2) {
            Object.assign(leaf, rest);
            next.push(leaf);
            continue;
          }
          if (start2.offset !== end2.offset && (start2.offset === o2 || end2.offset === offset2) || start2.offset > o2 || end2.offset < offset2 || end2.offset === offset2 && offset2 !== 0) {
            next.push(leaf);
            continue;
          }
          var middle = leaf;
          var before = void 0;
          var after2 = void 0;
          if (end2.offset < o2) {
            var off = end2.offset - offset2;
            after2 = _objectSpread$4(_objectSpread$4({}, middle), {}, {
              text: middle.text.slice(off)
            });
            middle = _objectSpread$4(_objectSpread$4({}, middle), {}, {
              text: middle.text.slice(0, off)
            });
          }
          if (start2.offset > offset2) {
            var _off = start2.offset - offset2;
            before = _objectSpread$4(_objectSpread$4({}, middle), {}, {
              text: middle.text.slice(0, _off)
            });
            middle = _objectSpread$4(_objectSpread$4({}, middle), {}, {
              text: middle.text.slice(_off)
            });
          }
          Object.assign(middle, rest);
          if (before) {
            next.push(before);
          }
          next.push(middle);
          if (after2) {
            next.push(after2);
          }
        }
        leaves = next;
      }
      return leaves;
    }
  };
  function ownKeys$3$1(object, enumerableOnly) {
    var keys2 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly) {
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      }
      keys2.push.apply(keys2, symbols);
    }
    return keys2;
  }
  function _objectSpread$3$1(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2] != null ? arguments[i2] : {};
      if (i2 % 2) {
        ownKeys$3$1(Object(source), true).forEach(function(key) {
          _defineProperty$2(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys$3$1(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  var applyToDraft = (editor, selection, op) => {
    switch (op.type) {
      case "insert_node": {
        var {
          path: path2,
          node
        } = op;
        var parent = Node$1.parent(editor, path2);
        var index2 = path2[path2.length - 1];
        if (index2 > parent.children.length) {
          throw new Error('Cannot apply an "insert_node" operation at path ['.concat(path2, "] because the destination is past the end of the node."));
        }
        parent.children.splice(index2, 0, node);
        if (selection) {
          for (var [point, key] of Range.points(selection)) {
            selection[key] = Point$1.transform(point, op);
          }
        }
        break;
      }
      case "insert_text": {
        var {
          path: _path,
          offset: offset2,
          text
        } = op;
        if (text.length === 0)
          break;
        var _node = Node$1.leaf(editor, _path);
        var before = _node.text.slice(0, offset2);
        var after2 = _node.text.slice(offset2);
        _node.text = before + text + after2;
        if (selection) {
          for (var [_point, _key] of Range.points(selection)) {
            selection[_key] = Point$1.transform(_point, op);
          }
        }
        break;
      }
      case "merge_node": {
        var {
          path: _path2
        } = op;
        var _node2 = Node$1.get(editor, _path2);
        var prevPath = Path.previous(_path2);
        var prev = Node$1.get(editor, prevPath);
        var _parent = Node$1.parent(editor, _path2);
        var _index = _path2[_path2.length - 1];
        if (Text$1.isText(_node2) && Text$1.isText(prev)) {
          prev.text += _node2.text;
        } else if (!Text$1.isText(_node2) && !Text$1.isText(prev)) {
          prev.children.push(..._node2.children);
        } else {
          throw new Error('Cannot apply a "merge_node" operation at path ['.concat(_path2, "] to nodes of different interfaces: ").concat(_node2, " ").concat(prev));
        }
        _parent.children.splice(_index, 1);
        if (selection) {
          for (var [_point2, _key2] of Range.points(selection)) {
            selection[_key2] = Point$1.transform(_point2, op);
          }
        }
        break;
      }
      case "move_node": {
        var {
          path: _path3,
          newPath
        } = op;
        if (Path.isAncestor(_path3, newPath)) {
          throw new Error("Cannot move a path [".concat(_path3, "] to new path [").concat(newPath, "] because the destination is inside itself."));
        }
        var _node3 = Node$1.get(editor, _path3);
        var _parent2 = Node$1.parent(editor, _path3);
        var _index2 = _path3[_path3.length - 1];
        _parent2.children.splice(_index2, 1);
        var truePath = Path.transform(_path3, op);
        var newParent = Node$1.get(editor, Path.parent(truePath));
        var newIndex = truePath[truePath.length - 1];
        newParent.children.splice(newIndex, 0, _node3);
        if (selection) {
          for (var [_point3, _key3] of Range.points(selection)) {
            selection[_key3] = Point$1.transform(_point3, op);
          }
        }
        break;
      }
      case "remove_node": {
        var {
          path: _path4
        } = op;
        var _index3 = _path4[_path4.length - 1];
        var _parent3 = Node$1.parent(editor, _path4);
        _parent3.children.splice(_index3, 1);
        if (selection) {
          for (var [_point4, _key4] of Range.points(selection)) {
            var result = Point$1.transform(_point4, op);
            if (selection != null && result != null) {
              selection[_key4] = result;
            } else {
              var _prev = void 0;
              var next = void 0;
              for (var [n2, p2] of Node$1.texts(editor)) {
                if (Path.compare(p2, _path4) === -1) {
                  _prev = [n2, p2];
                } else {
                  next = [n2, p2];
                  break;
                }
              }
              var preferNext = false;
              if (_prev && next) {
                if (Path.equals(next[1], _path4)) {
                  preferNext = !Path.hasPrevious(next[1]);
                } else {
                  preferNext = Path.common(_prev[1], _path4).length < Path.common(next[1], _path4).length;
                }
              }
              if (_prev && !preferNext) {
                _point4.path = _prev[1];
                _point4.offset = _prev[0].text.length;
              } else if (next) {
                _point4.path = next[1];
                _point4.offset = 0;
              } else {
                selection = null;
              }
            }
          }
        }
        break;
      }
      case "remove_text": {
        var {
          path: _path5,
          offset: _offset,
          text: _text
        } = op;
        if (_text.length === 0)
          break;
        var _node4 = Node$1.leaf(editor, _path5);
        var _before = _node4.text.slice(0, _offset);
        var _after = _node4.text.slice(_offset + _text.length);
        _node4.text = _before + _after;
        if (selection) {
          for (var [_point5, _key5] of Range.points(selection)) {
            selection[_key5] = Point$1.transform(_point5, op);
          }
        }
        break;
      }
      case "set_node": {
        var {
          path: _path6,
          properties: properties2,
          newProperties
        } = op;
        if (_path6.length === 0) {
          throw new Error("Cannot set properties on the root node!");
        }
        var _node5 = Node$1.get(editor, _path6);
        for (var _key6 in newProperties) {
          if (_key6 === "children" || _key6 === "text") {
            throw new Error('Cannot set the "'.concat(_key6, '" property of nodes!'));
          }
          var value = newProperties[_key6];
          if (value == null) {
            delete _node5[_key6];
          } else {
            _node5[_key6] = value;
          }
        }
        for (var _key7 in properties2) {
          if (!newProperties.hasOwnProperty(_key7)) {
            delete _node5[_key7];
          }
        }
        break;
      }
      case "set_selection": {
        var {
          newProperties: _newProperties
        } = op;
        if (_newProperties == null) {
          selection = _newProperties;
        } else {
          if (selection == null) {
            if (!Range.isRange(_newProperties)) {
              throw new Error('Cannot apply an incomplete "set_selection" operation properties '.concat(JSON.stringify(_newProperties), " when there is no current selection."));
            }
            selection = _objectSpread$3$1({}, _newProperties);
          }
          for (var _key8 in _newProperties) {
            var _value = _newProperties[_key8];
            if (_value == null) {
              if (_key8 === "anchor" || _key8 === "focus") {
                throw new Error('Cannot remove the "'.concat(_key8, '" selection property'));
              }
              delete selection[_key8];
            } else {
              selection[_key8] = _value;
            }
          }
        }
        break;
      }
      case "split_node": {
        var {
          path: _path7,
          position: position2,
          properties: _properties
        } = op;
        if (_path7.length === 0) {
          throw new Error('Cannot apply a "split_node" operation at path ['.concat(_path7, "] because the root node cannot be split."));
        }
        var _node6 = Node$1.get(editor, _path7);
        var _parent4 = Node$1.parent(editor, _path7);
        var _index4 = _path7[_path7.length - 1];
        var newNode;
        if (Text$1.isText(_node6)) {
          var _before2 = _node6.text.slice(0, position2);
          var _after2 = _node6.text.slice(position2);
          _node6.text = _before2;
          newNode = _objectSpread$3$1(_objectSpread$3$1({}, _properties), {}, {
            text: _after2
          });
        } else {
          var _before3 = _node6.children.slice(0, position2);
          var _after3 = _node6.children.slice(position2);
          _node6.children = _before3;
          newNode = _objectSpread$3$1(_objectSpread$3$1({}, _properties), {}, {
            children: _after3
          });
        }
        _parent4.children.splice(_index4 + 1, 0, newNode);
        if (selection) {
          for (var [_point6, _key9] of Range.points(selection)) {
            selection[_key9] = Point$1.transform(_point6, op);
          }
        }
        break;
      }
    }
    return selection;
  };
  var GeneralTransforms = {
    transform(editor, op) {
      editor.children = ln(editor.children);
      var selection = editor.selection && ln(editor.selection);
      try {
        selection = applyToDraft(editor, selection, op);
      } finally {
        editor.children = dn(editor.children);
        if (selection) {
          editor.selection = t$1(selection) ? dn(selection) : selection;
        } else {
          editor.selection = null;
        }
      }
    }
  };
  var _excluded$5 = ["text"];
  var _excluded2$4 = ["children"];
  function ownKeys$2$1(object, enumerableOnly) {
    var keys2 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly) {
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      }
      keys2.push.apply(keys2, symbols);
    }
    return keys2;
  }
  function _objectSpread$2$1(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2] != null ? arguments[i2] : {};
      if (i2 % 2) {
        ownKeys$2$1(Object(source), true).forEach(function(key) {
          _defineProperty$2(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys$2$1(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  var NodeTransforms = {
    insertNodes(editor, nodes) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      Editor.withoutNormalizing(editor, () => {
        var {
          hanging = false,
          voids = false,
          mode = "lowest"
        } = options;
        var {
          at,
          match,
          select
        } = options;
        if (Node$1.isNode(nodes)) {
          nodes = [nodes];
        }
        if (nodes.length === 0) {
          return;
        }
        var [node] = nodes;
        if (!at) {
          if (editor.selection) {
            at = editor.selection;
          } else if (editor.children.length > 0) {
            at = Editor.end(editor, []);
          } else {
            at = [0];
          }
          select = true;
        }
        if (select == null) {
          select = false;
        }
        if (Range.isRange(at)) {
          if (!hanging) {
            at = Editor.unhangRange(editor, at);
          }
          if (Range.isCollapsed(at)) {
            at = at.anchor;
          } else {
            var [, end2] = Range.edges(at);
            var pointRef = Editor.pointRef(editor, end2);
            Transforms.delete(editor, {
              at
            });
            at = pointRef.unref();
          }
        }
        if (Point$1.isPoint(at)) {
          if (match == null) {
            if (Text$1.isText(node)) {
              match = (n2) => Text$1.isText(n2);
            } else if (editor.isInline(node)) {
              match = (n2) => Text$1.isText(n2) || Editor.isInline(editor, n2);
            } else {
              match = (n2) => Editor.isBlock(editor, n2);
            }
          }
          var [entry] = Editor.nodes(editor, {
            at: at.path,
            match,
            mode,
            voids
          });
          if (entry) {
            var [, _matchPath] = entry;
            var pathRef = Editor.pathRef(editor, _matchPath);
            var isAtEnd = Editor.isEnd(editor, at, _matchPath);
            Transforms.splitNodes(editor, {
              at,
              match,
              mode,
              voids
            });
            var path2 = pathRef.unref();
            at = isAtEnd ? Path.next(path2) : path2;
          } else {
            return;
          }
        }
        var parentPath = Path.parent(at);
        var index2 = at[at.length - 1];
        if (!voids && Editor.void(editor, {
          at: parentPath
        })) {
          return;
        }
        for (var _node of nodes) {
          var _path = parentPath.concat(index2);
          index2++;
          editor.apply({
            type: "insert_node",
            path: _path,
            node: _node
          });
          at = Path.next(at);
        }
        at = Path.previous(at);
        if (select) {
          var point = Editor.end(editor, at);
          if (point) {
            Transforms.select(editor, point);
          }
        }
      });
    },
    liftNodes(editor) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      Editor.withoutNormalizing(editor, () => {
        var {
          at = editor.selection,
          mode = "lowest",
          voids = false
        } = options;
        var {
          match
        } = options;
        if (match == null) {
          match = Path.isPath(at) ? matchPath(editor, at) : (n2) => Editor.isBlock(editor, n2);
        }
        if (!at) {
          return;
        }
        var matches = Editor.nodes(editor, {
          at,
          match,
          mode,
          voids
        });
        var pathRefs = Array.from(matches, (_ref) => {
          var [, p2] = _ref;
          return Editor.pathRef(editor, p2);
        });
        for (var pathRef of pathRefs) {
          var path2 = pathRef.unref();
          if (path2.length < 2) {
            throw new Error("Cannot lift node at a path [".concat(path2, "] because it has a depth of less than `2`."));
          }
          var parentNodeEntry = Editor.node(editor, Path.parent(path2));
          var [parent, parentPath] = parentNodeEntry;
          var index2 = path2[path2.length - 1];
          var {
            length
          } = parent.children;
          if (length === 1) {
            var toPath = Path.next(parentPath);
            Transforms.moveNodes(editor, {
              at: path2,
              to: toPath,
              voids
            });
            Transforms.removeNodes(editor, {
              at: parentPath,
              voids
            });
          } else if (index2 === 0) {
            Transforms.moveNodes(editor, {
              at: path2,
              to: parentPath,
              voids
            });
          } else if (index2 === length - 1) {
            var _toPath = Path.next(parentPath);
            Transforms.moveNodes(editor, {
              at: path2,
              to: _toPath,
              voids
            });
          } else {
            var splitPath = Path.next(path2);
            var _toPath2 = Path.next(parentPath);
            Transforms.splitNodes(editor, {
              at: splitPath,
              voids
            });
            Transforms.moveNodes(editor, {
              at: path2,
              to: _toPath2,
              voids
            });
          }
        }
      });
    },
    mergeNodes(editor) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      Editor.withoutNormalizing(editor, () => {
        var {
          match,
          at = editor.selection
        } = options;
        var {
          hanging = false,
          voids = false,
          mode = "lowest"
        } = options;
        if (!at) {
          return;
        }
        if (match == null) {
          if (Path.isPath(at)) {
            var [parent] = Editor.parent(editor, at);
            match = (n2) => parent.children.includes(n2);
          } else {
            match = (n2) => Editor.isBlock(editor, n2);
          }
        }
        if (!hanging && Range.isRange(at)) {
          at = Editor.unhangRange(editor, at);
        }
        if (Range.isRange(at)) {
          if (Range.isCollapsed(at)) {
            at = at.anchor;
          } else {
            var [, end2] = Range.edges(at);
            var pointRef = Editor.pointRef(editor, end2);
            Transforms.delete(editor, {
              at
            });
            at = pointRef.unref();
            if (options.at == null) {
              Transforms.select(editor, at);
            }
          }
        }
        var [current] = Editor.nodes(editor, {
          at,
          match,
          voids,
          mode
        });
        var prev = Editor.previous(editor, {
          at,
          match,
          voids,
          mode
        });
        if (!current || !prev) {
          return;
        }
        var [node, path2] = current;
        var [prevNode, prevPath] = prev;
        if (path2.length === 0 || prevPath.length === 0) {
          return;
        }
        var newPath = Path.next(prevPath);
        var commonPath = Path.common(path2, prevPath);
        var isPreviousSibling = Path.isSibling(path2, prevPath);
        var levels = Array.from(Editor.levels(editor, {
          at: path2
        }), (_ref2) => {
          var [n2] = _ref2;
          return n2;
        }).slice(commonPath.length).slice(0, -1);
        var emptyAncestor = Editor.above(editor, {
          at: path2,
          mode: "highest",
          match: (n2) => levels.includes(n2) && hasSingleChildNest(editor, n2)
        });
        var emptyRef = emptyAncestor && Editor.pathRef(editor, emptyAncestor[1]);
        var properties2;
        var position2;
        if (Text$1.isText(node) && Text$1.isText(prevNode)) {
          var rest = _objectWithoutProperties$1(node, _excluded$5);
          position2 = prevNode.text.length;
          properties2 = rest;
        } else if (Element$2.isElement(node) && Element$2.isElement(prevNode)) {
          var rest = _objectWithoutProperties$1(node, _excluded2$4);
          position2 = prevNode.children.length;
          properties2 = rest;
        } else {
          throw new Error("Cannot merge the node at path [".concat(path2, "] with the previous sibling because it is not the same kind: ").concat(JSON.stringify(node), " ").concat(JSON.stringify(prevNode)));
        }
        if (!isPreviousSibling) {
          Transforms.moveNodes(editor, {
            at: path2,
            to: newPath,
            voids
          });
        }
        if (emptyRef) {
          Transforms.removeNodes(editor, {
            at: emptyRef.current,
            voids
          });
        }
        if (Element$2.isElement(prevNode) && Editor.isEmpty(editor, prevNode) || Text$1.isText(prevNode) && prevNode.text === "" && prevPath[prevPath.length - 1] !== 0) {
          Transforms.removeNodes(editor, {
            at: prevPath,
            voids
          });
        } else {
          editor.apply({
            type: "merge_node",
            path: newPath,
            position: position2,
            properties: properties2
          });
        }
        if (emptyRef) {
          emptyRef.unref();
        }
      });
    },
    moveNodes(editor, options) {
      Editor.withoutNormalizing(editor, () => {
        var {
          to,
          at = editor.selection,
          mode = "lowest",
          voids = false
        } = options;
        var {
          match
        } = options;
        if (!at) {
          return;
        }
        if (match == null) {
          match = Path.isPath(at) ? matchPath(editor, at) : (n2) => Editor.isBlock(editor, n2);
        }
        var toRef = Editor.pathRef(editor, to);
        var targets = Editor.nodes(editor, {
          at,
          match,
          mode,
          voids
        });
        var pathRefs = Array.from(targets, (_ref3) => {
          var [, p2] = _ref3;
          return Editor.pathRef(editor, p2);
        });
        for (var pathRef of pathRefs) {
          var path2 = pathRef.unref();
          var newPath = toRef.current;
          if (path2.length !== 0) {
            editor.apply({
              type: "move_node",
              path: path2,
              newPath
            });
          }
          if (toRef.current && Path.isSibling(newPath, path2) && Path.isAfter(newPath, path2)) {
            toRef.current = Path.next(toRef.current);
          }
        }
        toRef.unref();
      });
    },
    removeNodes(editor) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      Editor.withoutNormalizing(editor, () => {
        var {
          hanging = false,
          voids = false,
          mode = "lowest"
        } = options;
        var {
          at = editor.selection,
          match
        } = options;
        if (!at) {
          return;
        }
        if (match == null) {
          match = Path.isPath(at) ? matchPath(editor, at) : (n2) => Editor.isBlock(editor, n2);
        }
        if (!hanging && Range.isRange(at)) {
          at = Editor.unhangRange(editor, at);
        }
        var depths = Editor.nodes(editor, {
          at,
          match,
          mode,
          voids
        });
        var pathRefs = Array.from(depths, (_ref4) => {
          var [, p2] = _ref4;
          return Editor.pathRef(editor, p2);
        });
        for (var pathRef of pathRefs) {
          var path2 = pathRef.unref();
          if (path2) {
            var [node] = Editor.node(editor, path2);
            editor.apply({
              type: "remove_node",
              path: path2,
              node
            });
          }
        }
      });
    },
    setNodes(editor, props) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      Editor.withoutNormalizing(editor, () => {
        var {
          match,
          at = editor.selection
        } = options;
        var {
          hanging = false,
          mode = "lowest",
          split = false,
          voids = false
        } = options;
        if (!at) {
          return;
        }
        if (match == null) {
          match = Path.isPath(at) ? matchPath(editor, at) : (n2) => Editor.isBlock(editor, n2);
        }
        if (!hanging && Range.isRange(at)) {
          at = Editor.unhangRange(editor, at);
        }
        if (split && Range.isRange(at)) {
          if (Range.isCollapsed(at) && Editor.leaf(editor, at.anchor)[0].text.length > 0) {
            return;
          }
          var rangeRef = Editor.rangeRef(editor, at, {
            affinity: "inward"
          });
          var [start2, end2] = Range.edges(at);
          var splitMode = mode === "lowest" ? "lowest" : "highest";
          var endAtEndOfNode = Editor.isEnd(editor, end2, end2.path);
          Transforms.splitNodes(editor, {
            at: end2,
            match,
            mode: splitMode,
            voids,
            always: !endAtEndOfNode
          });
          var startAtStartOfNode = Editor.isStart(editor, start2, start2.path);
          Transforms.splitNodes(editor, {
            at: start2,
            match,
            mode: splitMode,
            voids,
            always: !startAtStartOfNode
          });
          at = rangeRef.unref();
          if (options.at == null) {
            Transforms.select(editor, at);
          }
        }
        for (var [node, path2] of Editor.nodes(editor, {
          at,
          match,
          mode,
          voids
        })) {
          var properties2 = {};
          var newProperties = {};
          if (path2.length === 0) {
            continue;
          }
          var hasChanges = false;
          for (var k2 in props) {
            if (k2 === "children" || k2 === "text") {
              continue;
            }
            if (props[k2] !== node[k2]) {
              hasChanges = true;
              if (node.hasOwnProperty(k2))
                properties2[k2] = node[k2];
              if (props[k2] != null)
                newProperties[k2] = props[k2];
            }
          }
          if (hasChanges) {
            editor.apply({
              type: "set_node",
              path: path2,
              properties: properties2,
              newProperties
            });
          }
        }
      });
    },
    splitNodes(editor) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      Editor.withoutNormalizing(editor, () => {
        var {
          mode = "lowest",
          voids = false
        } = options;
        var {
          match,
          at = editor.selection,
          height = 0,
          always = false
        } = options;
        if (match == null) {
          match = (n2) => Editor.isBlock(editor, n2);
        }
        if (Range.isRange(at)) {
          at = deleteRange(editor, at);
        }
        if (Path.isPath(at)) {
          var path2 = at;
          var point = Editor.point(editor, path2);
          var [parent] = Editor.parent(editor, path2);
          match = (n2) => n2 === parent;
          height = point.path.length - path2.length + 1;
          at = point;
          always = true;
        }
        if (!at) {
          return;
        }
        var beforeRef = Editor.pointRef(editor, at, {
          affinity: "backward"
        });
        var [highest] = Editor.nodes(editor, {
          at,
          match,
          mode,
          voids
        });
        if (!highest) {
          return;
        }
        var voidMatch = Editor.void(editor, {
          at,
          mode: "highest"
        });
        var nudge = 0;
        if (!voids && voidMatch) {
          var [voidNode, voidPath] = voidMatch;
          if (Element$2.isElement(voidNode) && editor.isInline(voidNode)) {
            var after2 = Editor.after(editor, voidPath);
            if (!after2) {
              var text = {
                text: ""
              };
              var afterPath = Path.next(voidPath);
              Transforms.insertNodes(editor, text, {
                at: afterPath,
                voids
              });
              after2 = Editor.point(editor, afterPath);
            }
            at = after2;
            always = true;
          }
          var siblingHeight = at.path.length - voidPath.length;
          height = siblingHeight + 1;
          always = true;
        }
        var afterRef = Editor.pointRef(editor, at);
        var depth = at.path.length - height;
        var [, highestPath] = highest;
        var lowestPath = at.path.slice(0, depth);
        var position2 = height === 0 ? at.offset : at.path[depth] + nudge;
        for (var [node, _path2] of Editor.levels(editor, {
          at: lowestPath,
          reverse: true,
          voids
        })) {
          var split = false;
          if (_path2.length < highestPath.length || _path2.length === 0 || !voids && Editor.isVoid(editor, node)) {
            break;
          }
          var _point = beforeRef.current;
          var isEnd = Editor.isEnd(editor, _point, _path2);
          if (always || !beforeRef || !Editor.isEdge(editor, _point, _path2)) {
            split = true;
            var properties2 = Node$1.extractProps(node);
            editor.apply({
              type: "split_node",
              path: _path2,
              position: position2,
              properties: properties2
            });
          }
          position2 = _path2[_path2.length - 1] + (split || isEnd ? 1 : 0);
        }
        if (options.at == null) {
          var _point2 = afterRef.current || Editor.end(editor, []);
          Transforms.select(editor, _point2);
        }
        beforeRef.unref();
        afterRef.unref();
      });
    },
    unsetNodes(editor, props) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      if (!Array.isArray(props)) {
        props = [props];
      }
      var obj = {};
      for (var key of props) {
        obj[key] = null;
      }
      Transforms.setNodes(editor, obj, options);
    },
    unwrapNodes(editor) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      Editor.withoutNormalizing(editor, () => {
        var {
          mode = "lowest",
          split = false,
          voids = false
        } = options;
        var {
          at = editor.selection,
          match
        } = options;
        if (!at) {
          return;
        }
        if (match == null) {
          match = Path.isPath(at) ? matchPath(editor, at) : (n2) => Editor.isBlock(editor, n2);
        }
        if (Path.isPath(at)) {
          at = Editor.range(editor, at);
        }
        var rangeRef = Range.isRange(at) ? Editor.rangeRef(editor, at) : null;
        var matches = Editor.nodes(editor, {
          at,
          match,
          mode,
          voids
        });
        var pathRefs = Array.from(matches, (_ref5) => {
          var [, p2] = _ref5;
          return Editor.pathRef(editor, p2);
        }).reverse();
        var _loop = function _loop4(pathRef2) {
          var path2 = pathRef2.unref();
          var [node] = Editor.node(editor, path2);
          var range = Editor.range(editor, path2);
          if (split && rangeRef) {
            range = Range.intersection(rangeRef.current, range);
          }
          Transforms.liftNodes(editor, {
            at: range,
            match: (n2) => Element$2.isAncestor(node) && node.children.includes(n2),
            voids
          });
        };
        for (var pathRef of pathRefs) {
          _loop(pathRef);
        }
        if (rangeRef) {
          rangeRef.unref();
        }
      });
    },
    wrapNodes(editor, element) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      Editor.withoutNormalizing(editor, () => {
        var {
          mode = "lowest",
          split = false,
          voids = false
        } = options;
        var {
          match,
          at = editor.selection
        } = options;
        if (!at) {
          return;
        }
        if (match == null) {
          if (Path.isPath(at)) {
            match = matchPath(editor, at);
          } else if (editor.isInline(element)) {
            match = (n2) => Editor.isInline(editor, n2) || Text$1.isText(n2);
          } else {
            match = (n2) => Editor.isBlock(editor, n2);
          }
        }
        if (split && Range.isRange(at)) {
          var [start2, end2] = Range.edges(at);
          var rangeRef = Editor.rangeRef(editor, at, {
            affinity: "inward"
          });
          Transforms.splitNodes(editor, {
            at: end2,
            match,
            voids
          });
          Transforms.splitNodes(editor, {
            at: start2,
            match,
            voids
          });
          at = rangeRef.unref();
          if (options.at == null) {
            Transforms.select(editor, at);
          }
        }
        var roots = Array.from(Editor.nodes(editor, {
          at,
          match: editor.isInline(element) ? (n2) => Editor.isBlock(editor, n2) : (n2) => Editor.isEditor(n2),
          mode: "lowest",
          voids
        }));
        for (var [, rootPath] of roots) {
          var a2 = Range.isRange(at) ? Range.intersection(at, Editor.range(editor, rootPath)) : at;
          if (!a2) {
            continue;
          }
          var matches = Array.from(Editor.nodes(editor, {
            at: a2,
            match,
            mode,
            voids
          }));
          if (matches.length > 0) {
            var _ret = function() {
              var [first] = matches;
              var last = matches[matches.length - 1];
              var [, firstPath] = first;
              var [, lastPath] = last;
              if (firstPath.length === 0 && lastPath.length === 0) {
                return "continue";
              }
              var commonPath = Path.equals(firstPath, lastPath) ? Path.parent(firstPath) : Path.common(firstPath, lastPath);
              var range = Editor.range(editor, firstPath, lastPath);
              var commonNodeEntry = Editor.node(editor, commonPath);
              var [commonNode] = commonNodeEntry;
              var depth = commonPath.length + 1;
              var wrapperPath = Path.next(lastPath.slice(0, depth));
              var wrapper = _objectSpread$2$1(_objectSpread$2$1({}, element), {}, {
                children: []
              });
              Transforms.insertNodes(editor, wrapper, {
                at: wrapperPath,
                voids
              });
              Transforms.moveNodes(editor, {
                at: range,
                match: (n2) => Element$2.isAncestor(commonNode) && commonNode.children.includes(n2),
                to: wrapperPath.concat(0),
                voids
              });
            }();
            if (_ret === "continue")
              continue;
          }
        }
      });
    }
  };
  var hasSingleChildNest = (editor, node) => {
    if (Element$2.isElement(node)) {
      var element = node;
      if (Editor.isVoid(editor, node)) {
        return true;
      } else if (element.children.length === 1) {
        return hasSingleChildNest(editor, element.children[0]);
      } else {
        return false;
      }
    } else if (Editor.isEditor(node)) {
      return false;
    } else {
      return true;
    }
  };
  var deleteRange = (editor, range) => {
    if (Range.isCollapsed(range)) {
      return range.anchor;
    } else {
      var [, end2] = Range.edges(range);
      var pointRef = Editor.pointRef(editor, end2);
      Transforms.delete(editor, {
        at: range
      });
      return pointRef.unref();
    }
  };
  var matchPath = (editor, path2) => {
    var [node] = Editor.node(editor, path2);
    return (n2) => n2 === node;
  };
  function ownKeys$1$2(object, enumerableOnly) {
    var keys2 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly) {
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      }
      keys2.push.apply(keys2, symbols);
    }
    return keys2;
  }
  function _objectSpread$1$2(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2] != null ? arguments[i2] : {};
      if (i2 % 2) {
        ownKeys$1$2(Object(source), true).forEach(function(key) {
          _defineProperty$2(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys$1$2(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  var SelectionTransforms = {
    collapse(editor) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var {
        edge = "anchor"
      } = options;
      var {
        selection
      } = editor;
      if (!selection) {
        return;
      } else if (edge === "anchor") {
        Transforms.select(editor, selection.anchor);
      } else if (edge === "focus") {
        Transforms.select(editor, selection.focus);
      } else if (edge === "start") {
        var [start2] = Range.edges(selection);
        Transforms.select(editor, start2);
      } else if (edge === "end") {
        var [, end2] = Range.edges(selection);
        Transforms.select(editor, end2);
      }
    },
    deselect(editor) {
      var {
        selection
      } = editor;
      if (selection) {
        editor.apply({
          type: "set_selection",
          properties: selection,
          newProperties: null
        });
      }
    },
    move(editor) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var {
        selection
      } = editor;
      var {
        distance: distance2 = 1,
        unit = "character",
        reverse = false
      } = options;
      var {
        edge = null
      } = options;
      if (!selection) {
        return;
      }
      if (edge === "start") {
        edge = Range.isBackward(selection) ? "focus" : "anchor";
      }
      if (edge === "end") {
        edge = Range.isBackward(selection) ? "anchor" : "focus";
      }
      var {
        anchor,
        focus
      } = selection;
      var opts = {
        distance: distance2,
        unit
      };
      var props = {};
      if (edge == null || edge === "anchor") {
        var point = reverse ? Editor.before(editor, anchor, opts) : Editor.after(editor, anchor, opts);
        if (point) {
          props.anchor = point;
        }
      }
      if (edge == null || edge === "focus") {
        var _point = reverse ? Editor.before(editor, focus, opts) : Editor.after(editor, focus, opts);
        if (_point) {
          props.focus = _point;
        }
      }
      Transforms.setSelection(editor, props);
    },
    select(editor, target) {
      var {
        selection
      } = editor;
      target = Editor.range(editor, target);
      if (selection) {
        Transforms.setSelection(editor, target);
        return;
      }
      if (!Range.isRange(target)) {
        throw new Error("When setting the selection and the current selection is `null` you must provide at least an `anchor` and `focus`, but you passed: ".concat(JSON.stringify(target)));
      }
      editor.apply({
        type: "set_selection",
        properties: selection,
        newProperties: target
      });
    },
    setPoint(editor, props) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var {
        selection
      } = editor;
      var {
        edge = "both"
      } = options;
      if (!selection) {
        return;
      }
      if (edge === "start") {
        edge = Range.isBackward(selection) ? "focus" : "anchor";
      }
      if (edge === "end") {
        edge = Range.isBackward(selection) ? "anchor" : "focus";
      }
      var {
        anchor,
        focus
      } = selection;
      var point = edge === "anchor" ? anchor : focus;
      Transforms.setSelection(editor, {
        [edge === "anchor" ? "anchor" : "focus"]: _objectSpread$1$2(_objectSpread$1$2({}, point), props)
      });
    },
    setSelection(editor, props) {
      var {
        selection
      } = editor;
      var oldProps = {};
      var newProps = {};
      if (!selection) {
        return;
      }
      for (var k2 in props) {
        if (k2 === "anchor" && props.anchor != null && !Point$1.equals(props.anchor, selection.anchor) || k2 === "focus" && props.focus != null && !Point$1.equals(props.focus, selection.focus) || k2 !== "anchor" && k2 !== "focus" && props[k2] !== selection[k2]) {
          oldProps[k2] = selection[k2];
          newProps[k2] = props[k2];
        }
      }
      if (Object.keys(oldProps).length > 0) {
        editor.apply({
          type: "set_selection",
          properties: oldProps,
          newProperties: newProps
        });
      }
    }
  };
  var TextTransforms = {
    delete(editor) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      Editor.withoutNormalizing(editor, () => {
        var {
          reverse = false,
          unit = "character",
          distance: distance2 = 1,
          voids = false
        } = options;
        var {
          at = editor.selection,
          hanging = false
        } = options;
        if (!at) {
          return;
        }
        if (Range.isRange(at) && Range.isCollapsed(at)) {
          at = at.anchor;
        }
        if (Point$1.isPoint(at)) {
          var furthestVoid = Editor.void(editor, {
            at,
            mode: "highest"
          });
          if (!voids && furthestVoid) {
            var [, voidPath] = furthestVoid;
            at = voidPath;
          } else {
            var opts = {
              unit,
              distance: distance2
            };
            var target = reverse ? Editor.before(editor, at, opts) || Editor.start(editor, []) : Editor.after(editor, at, opts) || Editor.end(editor, []);
            at = {
              anchor: at,
              focus: target
            };
            hanging = true;
          }
        }
        if (Path.isPath(at)) {
          Transforms.removeNodes(editor, {
            at,
            voids
          });
          return;
        }
        if (Range.isCollapsed(at)) {
          return;
        }
        if (!hanging) {
          var [, _end] = Range.edges(at);
          var endOfDoc = Editor.end(editor, []);
          if (!Point$1.equals(_end, endOfDoc)) {
            at = Editor.unhangRange(editor, at, {
              voids
            });
          }
        }
        var [start2, end2] = Range.edges(at);
        var startBlock = Editor.above(editor, {
          match: (n2) => Editor.isBlock(editor, n2),
          at: start2,
          voids
        });
        var endBlock = Editor.above(editor, {
          match: (n2) => Editor.isBlock(editor, n2),
          at: end2,
          voids
        });
        var isAcrossBlocks = startBlock && endBlock && !Path.equals(startBlock[1], endBlock[1]);
        var isSingleText = Path.equals(start2.path, end2.path);
        var startVoid = voids ? null : Editor.void(editor, {
          at: start2,
          mode: "highest"
        });
        var endVoid = voids ? null : Editor.void(editor, {
          at: end2,
          mode: "highest"
        });
        if (startVoid) {
          var before = Editor.before(editor, start2);
          if (before && startBlock && Path.isAncestor(startBlock[1], before.path)) {
            start2 = before;
          }
        }
        if (endVoid) {
          var after2 = Editor.after(editor, end2);
          if (after2 && endBlock && Path.isAncestor(endBlock[1], after2.path)) {
            end2 = after2;
          }
        }
        var matches = [];
        var lastPath;
        for (var entry of Editor.nodes(editor, {
          at,
          voids
        })) {
          var [node, path2] = entry;
          if (lastPath && Path.compare(path2, lastPath) === 0) {
            continue;
          }
          if (!voids && Editor.isVoid(editor, node) || !Path.isCommon(path2, start2.path) && !Path.isCommon(path2, end2.path)) {
            matches.push(entry);
            lastPath = path2;
          }
        }
        var pathRefs = Array.from(matches, (_ref) => {
          var [, p2] = _ref;
          return Editor.pathRef(editor, p2);
        });
        var startRef = Editor.pointRef(editor, start2);
        var endRef = Editor.pointRef(editor, end2);
        if (!isSingleText && !startVoid) {
          var _point = startRef.current;
          var [_node] = Editor.leaf(editor, _point);
          var {
            path: _path
          } = _point;
          var {
            offset: offset2
          } = start2;
          var text = _node.text.slice(offset2);
          if (text.length > 0)
            editor.apply({
              type: "remove_text",
              path: _path,
              offset: offset2,
              text
            });
        }
        for (var pathRef of pathRefs) {
          var _path2 = pathRef.unref();
          Transforms.removeNodes(editor, {
            at: _path2,
            voids
          });
        }
        if (!endVoid) {
          var _point2 = endRef.current;
          var [_node2] = Editor.leaf(editor, _point2);
          var {
            path: _path3
          } = _point2;
          var _offset = isSingleText ? start2.offset : 0;
          var _text = _node2.text.slice(_offset, end2.offset);
          if (_text.length > 0)
            editor.apply({
              type: "remove_text",
              path: _path3,
              offset: _offset,
              text: _text
            });
        }
        if (!isSingleText && isAcrossBlocks && endRef.current && startRef.current) {
          Transforms.mergeNodes(editor, {
            at: endRef.current,
            hanging: true,
            voids
          });
        }
        var point = reverse ? startRef.unref() || endRef.unref() : endRef.unref() || startRef.unref();
        if (options.at == null && point) {
          Transforms.select(editor, point);
        }
      });
    },
    insertFragment(editor, fragment) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      Editor.withoutNormalizing(editor, () => {
        var {
          hanging = false,
          voids = false
        } = options;
        var {
          at = editor.selection
        } = options;
        if (!fragment.length) {
          return;
        }
        if (!at) {
          return;
        } else if (Range.isRange(at)) {
          if (!hanging) {
            at = Editor.unhangRange(editor, at);
          }
          if (Range.isCollapsed(at)) {
            at = at.anchor;
          } else {
            var [, end2] = Range.edges(at);
            if (!voids && Editor.void(editor, {
              at: end2
            })) {
              return;
            }
            var pointRef = Editor.pointRef(editor, end2);
            Transforms.delete(editor, {
              at
            });
            at = pointRef.unref();
          }
        } else if (Path.isPath(at)) {
          at = Editor.start(editor, at);
        }
        if (!voids && Editor.void(editor, {
          at
        })) {
          return;
        }
        var inlineElementMatch = Editor.above(editor, {
          at,
          match: (n2) => Editor.isInline(editor, n2),
          mode: "highest",
          voids
        });
        if (inlineElementMatch) {
          var [, _inlinePath] = inlineElementMatch;
          if (Editor.isEnd(editor, at, _inlinePath)) {
            var after2 = Editor.after(editor, _inlinePath);
            at = after2;
          } else if (Editor.isStart(editor, at, _inlinePath)) {
            var before = Editor.before(editor, _inlinePath);
            at = before;
          }
        }
        var blockMatch = Editor.above(editor, {
          match: (n2) => Editor.isBlock(editor, n2),
          at,
          voids
        });
        var [, blockPath] = blockMatch;
        var isBlockStart = Editor.isStart(editor, at, blockPath);
        var isBlockEnd = Editor.isEnd(editor, at, blockPath);
        var isBlockEmpty = isBlockStart && isBlockEnd;
        var mergeStart = !isBlockStart || isBlockStart && isBlockEnd;
        var mergeEnd = !isBlockEnd;
        var [, firstPath] = Node$1.first({
          children: fragment
        }, []);
        var [, lastPath] = Node$1.last({
          children: fragment
        }, []);
        var matches = [];
        var matcher = (_ref2) => {
          var [n2, p2] = _ref2;
          var isRoot = p2.length === 0;
          if (isRoot) {
            return false;
          }
          if (isBlockEmpty) {
            return true;
          }
          if (mergeStart && Path.isAncestor(p2, firstPath) && Element$2.isElement(n2) && !editor.isVoid(n2) && !editor.isInline(n2)) {
            return false;
          }
          if (mergeEnd && Path.isAncestor(p2, lastPath) && Element$2.isElement(n2) && !editor.isVoid(n2) && !editor.isInline(n2)) {
            return false;
          }
          return true;
        };
        for (var entry of Node$1.nodes({
          children: fragment
        }, {
          pass: matcher
        })) {
          if (matcher(entry)) {
            matches.push(entry);
          }
        }
        var starts = [];
        var middles = [];
        var ends = [];
        var starting = true;
        var hasBlocks = false;
        for (var [node] of matches) {
          if (Element$2.isElement(node) && !editor.isInline(node)) {
            starting = false;
            hasBlocks = true;
            middles.push(node);
          } else if (starting) {
            starts.push(node);
          } else {
            ends.push(node);
          }
        }
        var [inlineMatch] = Editor.nodes(editor, {
          at,
          match: (n2) => Text$1.isText(n2) || Editor.isInline(editor, n2),
          mode: "highest",
          voids
        });
        var [, inlinePath] = inlineMatch;
        var isInlineStart = Editor.isStart(editor, at, inlinePath);
        var isInlineEnd = Editor.isEnd(editor, at, inlinePath);
        var middleRef = Editor.pathRef(editor, isBlockEnd ? Path.next(blockPath) : blockPath);
        var endRef = Editor.pathRef(editor, isInlineEnd ? Path.next(inlinePath) : inlinePath);
        var blockPathRef = Editor.pathRef(editor, blockPath);
        Transforms.splitNodes(editor, {
          at,
          match: (n2) => hasBlocks ? Editor.isBlock(editor, n2) : Text$1.isText(n2) || Editor.isInline(editor, n2),
          mode: hasBlocks ? "lowest" : "highest",
          voids
        });
        var startRef = Editor.pathRef(editor, !isInlineStart || isInlineStart && isInlineEnd ? Path.next(inlinePath) : inlinePath);
        Transforms.insertNodes(editor, starts, {
          at: startRef.current,
          match: (n2) => Text$1.isText(n2) || Editor.isInline(editor, n2),
          mode: "highest",
          voids
        });
        if (isBlockEmpty && middles.length) {
          Transforms.delete(editor, {
            at: blockPathRef.unref(),
            voids
          });
        }
        Transforms.insertNodes(editor, middles, {
          at: middleRef.current,
          match: (n2) => Editor.isBlock(editor, n2),
          mode: "lowest",
          voids
        });
        Transforms.insertNodes(editor, ends, {
          at: endRef.current,
          match: (n2) => Text$1.isText(n2) || Editor.isInline(editor, n2),
          mode: "highest",
          voids
        });
        if (!options.at) {
          var path2;
          if (ends.length > 0) {
            path2 = Path.previous(endRef.current);
          } else if (middles.length > 0) {
            path2 = Path.previous(middleRef.current);
          } else {
            path2 = Path.previous(startRef.current);
          }
          var _end2 = Editor.end(editor, path2);
          Transforms.select(editor, _end2);
        }
        startRef.unref();
        middleRef.unref();
        endRef.unref();
      });
    },
    insertText(editor, text) {
      var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      Editor.withoutNormalizing(editor, () => {
        var {
          voids = false
        } = options;
        var {
          at = editor.selection
        } = options;
        if (!at) {
          return;
        }
        if (Path.isPath(at)) {
          at = Editor.range(editor, at);
        }
        if (Range.isRange(at)) {
          if (Range.isCollapsed(at)) {
            at = at.anchor;
          } else {
            var end2 = Range.end(at);
            if (!voids && Editor.void(editor, {
              at: end2
            })) {
              return;
            }
            var pointRef = Editor.pointRef(editor, end2);
            Transforms.delete(editor, {
              at,
              voids
            });
            at = pointRef.unref();
            Transforms.setSelection(editor, {
              anchor: at,
              focus: at
            });
          }
        }
        if (!voids && Editor.void(editor, {
          at
        })) {
          return;
        }
        var {
          path: path2,
          offset: offset2
        } = at;
        if (text.length > 0)
          editor.apply({
            type: "insert_text",
            path: path2,
            offset: offset2,
            text
          });
      });
    }
  };
  function ownKeys$a(object, enumerableOnly) {
    var keys2 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly) {
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      }
      keys2.push.apply(keys2, symbols);
    }
    return keys2;
  }
  function _objectSpread$a(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2] != null ? arguments[i2] : {};
      if (i2 % 2) {
        ownKeys$a(Object(source), true).forEach(function(key) {
          _defineProperty$2(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys$a(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  var Transforms = _objectSpread$a(_objectSpread$a(_objectSpread$a(_objectSpread$a({}, GeneralTransforms), NodeTransforms), SelectionTransforms), TextTransforms);
  var lib = {};
  Object.defineProperty(lib, "__esModule", {
    value: true
  });
  var IS_MAC = typeof window != "undefined" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);
  var MODIFIERS = {
    alt: "altKey",
    control: "ctrlKey",
    meta: "metaKey",
    shift: "shiftKey"
  };
  var ALIASES = {
    add: "+",
    break: "pause",
    cmd: "meta",
    command: "meta",
    ctl: "control",
    ctrl: "control",
    del: "delete",
    down: "arrowdown",
    esc: "escape",
    ins: "insert",
    left: "arrowleft",
    mod: IS_MAC ? "meta" : "control",
    opt: "alt",
    option: "alt",
    return: "enter",
    right: "arrowright",
    space: " ",
    spacebar: " ",
    up: "arrowup",
    win: "meta",
    windows: "meta"
  };
  var CODES = {
    backspace: 8,
    tab: 9,
    enter: 13,
    shift: 16,
    control: 17,
    alt: 18,
    pause: 19,
    capslock: 20,
    escape: 27,
    " ": 32,
    pageup: 33,
    pagedown: 34,
    end: 35,
    home: 36,
    arrowleft: 37,
    arrowup: 38,
    arrowright: 39,
    arrowdown: 40,
    insert: 45,
    delete: 46,
    meta: 91,
    numlock: 144,
    scrolllock: 145,
    ";": 186,
    "=": 187,
    ",": 188,
    "-": 189,
    ".": 190,
    "/": 191,
    "`": 192,
    "[": 219,
    "\\": 220,
    "]": 221,
    "'": 222
  };
  for (f = 1; f < 20; f++) {
    CODES["f" + f] = 111 + f;
  }
  var f;
  function isHotkey(hotkey, options, event) {
    if (options && !("byKey" in options)) {
      event = options;
      options = null;
    }
    if (!Array.isArray(hotkey)) {
      hotkey = [hotkey];
    }
    var array = hotkey.map(function(string) {
      return parseHotkey(string, options);
    });
    var check = function check2(e2) {
      return array.some(function(object) {
        return compareHotkey(object, e2);
      });
    };
    var ret = event == null ? check : check(event);
    return ret;
  }
  function isCodeHotkey(hotkey, event) {
    return isHotkey(hotkey, event);
  }
  function isKeyHotkey(hotkey, event) {
    return isHotkey(hotkey, { byKey: true }, event);
  }
  function parseHotkey(hotkey, options) {
    var byKey = options && options.byKey;
    var ret = {};
    hotkey = hotkey.replace("++", "+add");
    var values = hotkey.split("+");
    var length = values.length;
    for (var k2 in MODIFIERS) {
      ret[MODIFIERS[k2]] = false;
    }
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = void 0;
    try {
      for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var value = _step.value;
        var optional = value.endsWith("?") && value.length > 1;
        if (optional) {
          value = value.slice(0, -1);
        }
        var name = toKeyName(value);
        var modifier = MODIFIERS[name];
        if (length === 1 || !modifier) {
          if (byKey) {
            ret.key = name;
          } else {
            ret.which = toKeyCode(value);
          }
        }
        if (modifier) {
          ret[modifier] = optional ? null : true;
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return ret;
  }
  function compareHotkey(object, event) {
    for (var key in object) {
      var expected = object[key];
      var actual = void 0;
      if (expected == null) {
        continue;
      }
      if (key === "key" && event.key != null) {
        actual = event.key.toLowerCase();
      } else if (key === "which") {
        actual = expected === 91 && event.which === 93 ? 91 : event.which;
      } else {
        actual = event[key];
      }
      if (actual == null && expected === false) {
        continue;
      }
      if (actual !== expected) {
        return false;
      }
    }
    return true;
  }
  function toKeyCode(name) {
    name = toKeyName(name);
    var code = CODES[name] || name.toUpperCase().charCodeAt(0);
    return code;
  }
  function toKeyName(name) {
    name = name.toLowerCase();
    name = ALIASES[name] || name;
    return name;
  }
  lib.default = isHotkey;
  lib.isHotkey = isHotkey;
  lib.isCodeHotkey = isCodeHotkey;
  var isKeyHotkey_1 = lib.isKeyHotkey = isKeyHotkey;
  lib.parseHotkey = parseHotkey;
  lib.compareHotkey = compareHotkey;
  lib.toKeyCode = toKeyCode;
  lib.toKeyName = toKeyName;
  typeof navigator !== "undefined" && typeof window !== "undefined" && /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
  var IS_APPLE = typeof navigator !== "undefined" && /Mac OS X/.test(navigator.userAgent);
  typeof navigator !== "undefined" && /Android/.test(navigator.userAgent);
  typeof navigator !== "undefined" && /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent);
  typeof navigator !== "undefined" && /Version\/[\d\.]+.*Safari/.test(navigator.userAgent);
  typeof navigator !== "undefined" && /Edge?\/(?:[0-6][0-9]|[0-7][0-8])/i.test(navigator.userAgent);
  typeof navigator !== "undefined" && /Chrome/i.test(navigator.userAgent);
  typeof navigator !== "undefined" && /Chrome?\/(?:[0-7][0-5]|[0-6][0-9])/i.test(navigator.userAgent);
  typeof navigator !== "undefined" && /^(?!.*Seamonkey)(?=.*Firefox\/(?:[0-7][0-9]|[0-8][0-6])).*/i.test(navigator.userAgent);
  typeof navigator !== "undefined" && /.*QQBrowser/.test(navigator.userAgent);
  var HOTKEYS = {
    bold: "mod+b",
    compose: ["down", "left", "right", "up", "backspace", "enter"],
    moveBackward: "left",
    moveForward: "right",
    moveWordBackward: "ctrl+left",
    moveWordForward: "ctrl+right",
    deleteBackward: "shift?+backspace",
    deleteForward: "shift?+delete",
    extendBackward: "shift+left",
    extendForward: "shift+right",
    italic: "mod+i",
    splitBlock: "shift?+enter",
    undo: "mod+z"
  };
  var APPLE_HOTKEYS = {
    moveLineBackward: "opt+up",
    moveLineForward: "opt+down",
    moveWordBackward: "opt+left",
    moveWordForward: "opt+right",
    deleteBackward: ["ctrl+backspace", "ctrl+h"],
    deleteForward: ["ctrl+delete", "ctrl+d"],
    deleteLineBackward: "cmd+shift?+backspace",
    deleteLineForward: ["cmd+shift?+delete", "ctrl+k"],
    deleteWordBackward: "opt+shift?+backspace",
    deleteWordForward: "opt+shift?+delete",
    extendLineBackward: "opt+shift+up",
    extendLineForward: "opt+shift+down",
    redo: "cmd+shift+z",
    transposeCharacter: "ctrl+t"
  };
  var WINDOWS_HOTKEYS = {
    deleteWordBackward: "ctrl+shift?+backspace",
    deleteWordForward: "ctrl+shift?+delete",
    redo: ["ctrl+y", "ctrl+shift+z"]
  };
  var create2 = (key) => {
    var generic = HOTKEYS[key];
    var apple = APPLE_HOTKEYS[key];
    var windows = WINDOWS_HOTKEYS[key];
    var isGeneric = generic && isKeyHotkey_1(generic);
    var isApple = apple && isKeyHotkey_1(apple);
    var isWindows = windows && isKeyHotkey_1(windows);
    return (event) => {
      if (isGeneric && isGeneric(event))
        return true;
      if (IS_APPLE && isApple && isApple(event))
        return true;
      if (!IS_APPLE && isWindows && isWindows(event))
        return true;
      return false;
    };
  };
  ({
    isBold: create2("bold"),
    isCompose: create2("compose"),
    isMoveBackward: create2("moveBackward"),
    isMoveForward: create2("moveForward"),
    isDeleteBackward: create2("deleteBackward"),
    isDeleteForward: create2("deleteForward"),
    isDeleteLineBackward: create2("deleteLineBackward"),
    isDeleteLineForward: create2("deleteLineForward"),
    isDeleteWordBackward: create2("deleteWordBackward"),
    isDeleteWordForward: create2("deleteWordForward"),
    isExtendBackward: create2("extendBackward"),
    isExtendForward: create2("extendForward"),
    isExtendLineBackward: create2("extendLineBackward"),
    isExtendLineForward: create2("extendLineForward"),
    isItalic: create2("italic"),
    isMoveLineBackward: create2("moveLineBackward"),
    isMoveLineForward: create2("moveLineForward"),
    isMoveWordBackward: create2("moveWordBackward"),
    isMoveWordForward: create2("moveWordForward"),
    isRedo: create2("redo"),
    isSplitBlock: create2("splitBlock"),
    isTransposeCharacter: create2("transposeCharacter"),
    isUndo: create2("undo")
  });
  React__default.createContext({
    machineRef: null
  });
  var BlockStyleTypes;
  (function(BlockStyleTypes2) {
    BlockStyleTypes2["Paragraph"] = "paragraph";
    BlockStyleTypes2["UnorderedList"] = "unordered-list";
    BlockStyleTypes2["OrderedList"] = "ordered-list";
    BlockStyleTypes2["ListItem"] = "list-item";
    BlockStyleTypes2["Link"] = "link";
  })(BlockStyleTypes || (BlockStyleTypes = {}));
  var InlineStyles;
  (function(InlineStyles2) {
    InlineStyles2["Bold"] = "bold";
    InlineStyles2["Italic"] = "italic";
    InlineStyles2["Strikethrough"] = "strikethrough";
    InlineStyles2["Underline"] = "underline";
    InlineStyles2["Code"] = "code";
  })(InlineStyles || (InlineStyles = {}));
  ({
    [InlineStyles.Bold]: "tw-font-bold",
    [InlineStyles.Italic]: "tw-italic",
    [InlineStyles.Strikethrough]: "tw-line-through",
    [InlineStyles.Underline]: "tw-underline",
    [InlineStyles.Code]: "tw-table-cell tw-rounded tw-text-xs tw-bg-black-5 tw-text-violet-90 tw-m-0 tw-px-2 tw-py-0.5"
  });
  var isBlockTypeData = (data) => data.type !== void 0;
  var isInlineStyleData = (data) => data.style !== void 0 && data.value !== void 0;
  var updateBlockType = (_2, { data }) => {
    if (isBlockTypeData(data)) {
      const { editor, type, active: active3 } = data;
      toggleBlock(active3, editor, type);
    }
  };
  var updateInlineStyle = (_2, { data }) => {
    if (isInlineStyleData(data)) {
      const { editor, style: style2 } = data;
      Transforms.setNodes(editor, { [style2]: data.value }, { match: (node) => Text$1.isText(node), split: true });
    }
  };
  var toggleBlock = (active3, editor, type) => {
    const isList2 = [BlockStyleTypes.OrderedList, BlockStyleTypes.UnorderedList].includes(type);
    Transforms.unwrapNodes(editor, {
      match: (node) => Element$2.isElement(node) && [BlockStyleTypes.OrderedList, BlockStyleTypes.UnorderedList].includes(node.type),
      split: true
    });
    const newListItem = {
      type: active3 ? BlockStyleTypes.Paragraph : isList2 ? BlockStyleTypes.ListItem : type
    };
    for (const [, path2] of Editor.nodes(editor, {
      match: (node) => Element$2.isElement(node) && BlockStyleTypes.ListItem === node.type
    })) {
      Transforms.setNodes(editor, newListItem, { at: path2 });
    }
    Transforms.setNodes(editor, newListItem);
    if (!active3 && isList2) {
      const block = { type, children: [] };
      Transforms.wrapNodes(editor, block);
    }
  };
  var States$1;
  (function(States2) {
    States2["Initial"] = "initial";
  })(States$1 || (States$1 = {}));
  var toolbarMachine = createMachine({
    id: "toolbar",
    initial: States$1.Initial,
    states: {
      [States$1.Initial]: {
        on: {
          BLOCK_TYPE_SELECTED: {
            actions: "updateBlockType"
          },
          INLINE_STYLE_SELECTED: {
            actions: "updateInlineStyle"
          }
        }
      }
    }
  }, {
    actions: { updateBlockType, updateInlineStyle }
  });
  var callOnTextChange = ({ onTextChange }, { data }) => {
    if (onTextChange && data.value) {
      onTextChange(JSON.stringify(data.value));
    }
  };
  var callOnBlur = ({ onBlur }, { data }) => {
    if (onBlur && data.value) {
      onBlur(JSON.stringify(data.value));
    }
  };
  var setLocked = (context, { data }) => {
    var _a2;
    context.locked = (_a2 = data.locked) != null ? _a2 : context.locked;
  };
  var States;
  (function(States2) {
    States2["Readonly"] = "readonly";
    States2["Editing"] = "editing";
    States2["Styling"] = "styling";
  })(States || (States = {}));
  createMachine({
    id: "editor",
    initial: States.Readonly,
    states: {
      [States.Readonly]: {
        on: {
          FOCUSED: {
            target: States.Editing,
            cond: "canEdit"
          },
          SET_LOCKED: {
            actions: "setLocked"
          }
        }
      },
      [States.Editing]: {
        on: {
          TEXT_UPDATED: {
            actions: "callOnTextChange"
          },
          TEXT_SELECTED: {
            target: States.Styling,
            cond: "hasTextSelection"
          },
          BLUR: {
            target: States.Readonly,
            actions: "callOnBlur"
          }
        }
      },
      [States.Styling]: {
        invoke: {
          id: "toolbar",
          src: toolbarMachine
        },
        on: {
          TEXT_SELECTED: [
            {
              target: States.Styling,
              cond: "hasTextSelection"
            },
            States.Editing
          ],
          TEXT_DESELECTED: States.Editing,
          BLUR: {
            target: States.Readonly,
            actions: "callOnBlur"
          }
        }
      }
    }
  }, {
    guards: {
      canEdit: ({ locked }) => !locked,
      hasTextSelection: (_2, { data }) => {
        const { editor } = data;
        return (editor == null ? void 0 : editor.selection) ? Editor.string(editor, editor.selection).trim().length > 0 : false;
      }
    },
    actions: {
      callOnTextChange,
      callOnBlur,
      setLocked
    }
  });
  function IconBold(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconBold"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M17.488 8.343c0-2.697-2-4.343-5.674-4.343H6v16h5.907C15.977 20 18 18.377 18 15.314c0-1.737-1.07-3.291-3.395-3.52 1.883-.274 2.883-1.783 2.883-3.451zM9.674 7.269h1.791c1.651 0 2.233.708 2.233 1.554 0 .937-.582 1.554-1.838 1.554H9.675V7.27zm4.559 7.794c0 1.097-.838 1.691-2.373 1.691H9.675v-3.36h2.163c1.651 0 2.396.526 2.396 1.669z"
    }));
  }
  var MemoIconBold = React__default__default["default"].memo(IconBold);
  function IconItalic(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconItalic"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M14.5 4h-3L9 20h3l2.5-16z"
    }));
  }
  var MemoIconItalic = React__default__default["default"].memo(IconItalic);
  function IconListNumbers(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconListNumbers"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M21 6a1 1 0 01-1 1h-8a1 1 0 110-2h8a1 1 0 011 1zM11 18a1 1 0 011-1h6a1 1 0 110 2h-6a1 1 0 01-1-1zM19 10a1 1 0 01-1 1h-6a1 1 0 110-2h6a1 1 0 011 1zM21 14a1 1 0 01-1 1h-8a1 1 0 110-2h8a1 1 0 011 1zM5.35 14.983H4.04v-.087c0-.903.589-1.896 1.952-1.896 1.196 0 1.967.73 1.967 1.689 0 .795-.435 1.284-.831 1.731L7 16.564 6 17.72v.065h1.96V19H4.122v-.95l1.889-2.121c.276-.307.58-.648.58-1.085 0-.354-.265-.647-.627-.647-.386 0-.62.324-.62.686l.003.061.002.039z"
    }), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5.435 11H6.8V5H5.435L4.2 5.985v1.367l1.17-.932h.065V11z"
    }));
  }
  var MemoIconListNumbers = React__default__default["default"].memo(IconListNumbers);
  function IconSnippet(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconSnippet"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M10.789 16.522a.77.77 0 01-1.424-.582l3.461-8.462a.77.77 0 111.424.583l-3.461 8.461zm5.309-.86l3.994-3.635-3.998-3.692a.77.77 0 111.043-1.13l4.616 4.261a.77.77 0 01-.005 1.135L17.133 16.8a.77.77 0 11-1.035-1.138zm-12.19-3.635l3.994 3.635A.77.77 0 116.867 16.8l-4.615-4.2a.77.77 0 01-.005-1.134l4.616-4.262a.77.77 0 011.043 1.13l-3.998 3.693z"
    }));
  }
  var MemoIconSnippet = React__default__default["default"].memo(IconSnippet);
  function IconUnderline(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 28",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconUnderline"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M.75 3.484c-.281-.016-.516-.016-.703-.063L0 2.046c.203-.016.406-.016.625-.016.547 0 1.141.016 1.75.063 1.469.078 2.344.109 2.594.109.891 0 1.766-.016 2.625-.047.844-.031 1.609-.063 2.281-.078.656 0 1.109-.016 1.344-.031l-.016.219.031 1v.141c-.625.094-1.266.141-1.937.141-.625 0-1.031.125-1.234.391-.141.156-.203.844-.203 2.063 0 .375.016.672.016.906l.016 3.578.219 4.375c.063 1.266.313 2.312.797 3.156a3.787 3.787 0 001.5 1.437c.938.5 1.859.734 2.766.734 1.062 0 2.063-.141 2.984-.438a4.871 4.871 0 001.547-.797c.484-.359.828-.688 1.016-1a6.641 6.641 0 00.828-1.781c.219-.766.328-1.953.328-3.578 0-2.797-.203-2.875-.438-6.406l-.063-.922c-.047-.672-.156-1.141-.375-1.375-.344-.359-.75-.547-1.203-.531l-1.563.031-.219-.047.031-1.344h1.313l3.203.156c1.062.047 2.078-.047 3.063-.156l.281.031c.063.391.094.656.094.797s-.031.297-.063.484a6.096 6.096 0 01-1.313.203c-.734.109-1.156.187-1.234.266-.141.141-.234.344-.234.641 0 .203.031.516.047.906 0 0 .125.281.344 6.188.078 2.359-.078 3.953-.234 4.75s-.375 1.437-.641 1.906c-.406.688-1 1.328-1.75 1.922-.766.578-1.703 1.047-2.844 1.391S13.61 22 12.095 22c-1.719 0-3.203-.234-4.438-.719s-2.172-1.125-2.797-1.906-1.062-1.797-1.297-3.047c-.172-.859-.25-2.094-.25-3.703V7.422c0-1.969-.094-3.078-.266-3.328-.25-.359-1.016-.578-2.297-.609zM24 25.5v-1c0-.281-.219-.5-.5-.5H.5c-.281 0-.5.219-.5.5v1c0 .281.219.5.5.5h23c.281 0 .5-.219.5-.5z"
    }));
  }
  var MemoIconUnderline = React__default__default["default"].memo(IconUnderline);
  function isObject(o2) {
    return Object.prototype.toString.call(o2) === "[object Object]";
  }
  function isPlainObject(o2) {
    var ctor, prot;
    if (isObject(o2) === false)
      return false;
    ctor = o2.constructor;
    if (ctor === void 0)
      return true;
    prot = ctor.prototype;
    if (isObject(prot) === false)
      return false;
    if (prot.hasOwnProperty("isPrototypeOf") === false) {
      return false;
    }
    return true;
  }
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }
    return obj;
  }
  var ANCHOR = /* @__PURE__ */ new WeakMap();
  var FOCUS = /* @__PURE__ */ new WeakMap();
  var Token = class {
  };
  var AnchorToken = class extends Token {
    constructor() {
      var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      super();
      var {
        offset: offset2,
        path: path2
      } = props;
      this.offset = offset2;
      this.path = path2;
    }
  };
  var FocusToken = class extends Token {
    constructor() {
      var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      super();
      var {
        offset: offset2,
        path: path2
      } = props;
      this.offset = offset2;
      this.path = path2;
    }
  };
  var addAnchorToken = (text, token) => {
    var offset2 = text.text.length;
    ANCHOR.set(text, [offset2, token]);
  };
  var getAnchorOffset = (text) => {
    return ANCHOR.get(text);
  };
  var addFocusToken = (text, token) => {
    var offset2 = text.text.length;
    FOCUS.set(text, [offset2, token]);
  };
  var getFocusOffset = (text) => {
    return FOCUS.get(text);
  };
  function ownKeys$1(object, enumerableOnly) {
    var keys2 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly) {
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      }
      keys2.push.apply(keys2, symbols);
    }
    return keys2;
  }
  function _objectSpread$1(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2] != null ? arguments[i2] : {};
      if (i2 % 2) {
        ownKeys$1(Object(source), true).forEach(function(key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys$1(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  var STRINGS = /* @__PURE__ */ new WeakSet();
  var resolveDescendants = (children2) => {
    var nodes = [];
    var addChild = (child2) => {
      if (child2 == null) {
        return;
      }
      var prev = nodes[nodes.length - 1];
      if (typeof child2 === "string") {
        var text = {
          text: child2
        };
        STRINGS.add(text);
        child2 = text;
      }
      if (Text$1.isText(child2)) {
        var c2 = child2;
        if (Text$1.isText(prev) && STRINGS.has(prev) && STRINGS.has(c2) && Text$1.equals(prev, c2, {
          loose: true
        })) {
          prev.text += c2.text;
        } else {
          nodes.push(c2);
        }
      } else if (Element$2.isElement(child2)) {
        nodes.push(child2);
      } else if (child2 instanceof Token) {
        var n2 = nodes[nodes.length - 1];
        if (!Text$1.isText(n2)) {
          addChild("");
          n2 = nodes[nodes.length - 1];
        }
        if (child2 instanceof AnchorToken) {
          addAnchorToken(n2, child2);
        } else if (child2 instanceof FocusToken) {
          addFocusToken(n2, child2);
        }
      } else {
        throw new Error("Unexpected hyperscript child object: ".concat(child2));
      }
    };
    for (var child of children2.flat(Infinity)) {
      addChild(child);
    }
    return nodes;
  };
  function createAnchor(tagName, attributes, children2) {
    return new AnchorToken(attributes);
  }
  function createCursor(tagName, attributes, children2) {
    return [new AnchorToken(attributes), new FocusToken(attributes)];
  }
  function createElement2(tagName, attributes, children2) {
    return _objectSpread$1(_objectSpread$1({}, attributes), {}, {
      children: resolveDescendants(children2)
    });
  }
  function createFocus(tagName, attributes, children2) {
    return new FocusToken(attributes);
  }
  function createFragment(tagName, attributes, children2) {
    return resolveDescendants(children2);
  }
  function createSelection(tagName, attributes, children2) {
    var anchor = children2.find((c2) => c2 instanceof AnchorToken);
    var focus = children2.find((c2) => c2 instanceof FocusToken);
    if (!anchor || anchor.offset == null || anchor.path == null) {
      throw new Error("The <selection> hyperscript tag must have an <anchor> tag as a child with `path` and `offset` attributes defined.");
    }
    if (!focus || focus.offset == null || focus.path == null) {
      throw new Error("The <selection> hyperscript tag must have a <focus> tag as a child with `path` and `offset` attributes defined.");
    }
    return _objectSpread$1({
      anchor: {
        offset: anchor.offset,
        path: anchor.path
      },
      focus: {
        offset: focus.offset,
        path: focus.path
      }
    }, attributes);
  }
  function createText(tagName, attributes, children2) {
    var nodes = resolveDescendants(children2);
    if (nodes.length > 1) {
      throw new Error("The <text> hyperscript tag must only contain a single node's worth of children.");
    }
    var [node] = nodes;
    if (node == null) {
      node = {
        text: ""
      };
    }
    if (!Text$1.isText(node)) {
      throw new Error("\n    The <text> hyperscript tag can only contain text content as children.");
    }
    STRINGS.delete(node);
    Object.assign(node, attributes);
    return node;
  }
  var createEditor = (makeEditor) => (tagName, attributes, children2) => {
    var otherChildren = [];
    var selectionChild;
    for (var child of children2) {
      if (Range.isRange(child)) {
        selectionChild = child;
      } else {
        otherChildren.push(child);
      }
    }
    var descendants = resolveDescendants(otherChildren);
    var selection = {};
    var editor = makeEditor();
    Object.assign(editor, attributes);
    editor.children = descendants;
    for (var [node, path2] of Node$1.texts(editor)) {
      var anchor = getAnchorOffset(node);
      var focus = getFocusOffset(node);
      if (anchor != null) {
        var [offset2] = anchor;
        selection.anchor = {
          path: path2,
          offset: offset2
        };
      }
      if (focus != null) {
        var [_offset] = focus;
        selection.focus = {
          path: path2,
          offset: _offset
        };
      }
    }
    if (selection.anchor && !selection.focus) {
      throw new Error("Slate hyperscript ranges must have both `<anchor />` and `<focus />` defined if one is defined, but you only defined `<anchor />`. For collapsed selections, use `<cursor />` instead.");
    }
    if (!selection.anchor && selection.focus) {
      throw new Error("Slate hyperscript ranges must have both `<anchor />` and `<focus />` defined if one is defined, but you only defined `<focus />`. For collapsed selections, use `<cursor />` instead.");
    }
    if (selectionChild != null) {
      editor.selection = selectionChild;
    } else if (Range.isRange(selection)) {
      editor.selection = selection;
    }
    return editor;
  };
  function ownKeys(object, enumerableOnly) {
    var keys2 = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly) {
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      }
      keys2.push.apply(keys2, symbols);
    }
    return keys2;
  }
  function _objectSpread(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2] != null ? arguments[i2] : {};
      if (i2 % 2) {
        ownKeys(Object(source), true).forEach(function(key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  var DEFAULT_CREATORS = {
    anchor: createAnchor,
    cursor: createCursor,
    editor: createEditor(createEditor$1),
    element: createElement2,
    focus: createFocus,
    fragment: createFragment,
    selection: createSelection,
    text: createText
  };
  var createHyperscript = function createHyperscript2() {
    var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var {
      elements = {}
    } = options;
    var elementCreators = normalizeElements(elements);
    var creators = _objectSpread(_objectSpread(_objectSpread({}, DEFAULT_CREATORS), elementCreators), options.creators);
    var jsx2 = createFactory(creators);
    return jsx2;
  };
  var createFactory = (creators) => {
    var jsx2 = function jsx3(tagName, attributes) {
      for (var _len = arguments.length, children2 = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
        children2[_key - 2] = arguments[_key];
      }
      var creator = creators[tagName];
      if (!creator) {
        throw new Error("No hyperscript creator found for tag: <".concat(tagName, ">"));
      }
      if (attributes == null) {
        attributes = {};
      }
      if (!isPlainObject(attributes)) {
        children2 = [attributes].concat(children2);
        attributes = {};
      }
      children2 = children2.filter((child) => Boolean(child)).flat();
      var ret = creator(tagName, attributes, children2);
      return ret;
    };
    return jsx2;
  };
  var normalizeElements = (elements) => {
    var creators = {};
    var _loop = function _loop4(tagName2) {
      var props = elements[tagName2];
      if (typeof props !== "object") {
        throw new Error("Properties specified for a hyperscript shorthand should be an object, but for the custom element <".concat(tagName2, ">  tag you passed: ").concat(props));
      }
      creators[tagName2] = (tagName3, attributes, children2) => {
        return createElement2("element", _objectSpread(_objectSpread({}, props), attributes), children2);
      };
    };
    for (var tagName in elements) {
      _loop(tagName);
    }
    return creators;
  };
  createHyperscript();
  var $ea7b4dd250709a616043c0e9cf5f62a$var$perf = typeof window !== "undefined" ? window.performance : null;
  var $ea7b4dd250709a616043c0e9cf5f62a$var$perfNow = $ea7b4dd250709a616043c0e9cf5f62a$var$perf && ($ea7b4dd250709a616043c0e9cf5f62a$var$perf.now || $ea7b4dd250709a616043c0e9cf5f62a$var$perf.webkitNow || $ea7b4dd250709a616043c0e9cf5f62a$var$perf.msNow || $ea7b4dd250709a616043c0e9cf5f62a$var$perf.mozNow);
  $ea7b4dd250709a616043c0e9cf5f62a$var$perfNow ? $ea7b4dd250709a616043c0e9cf5f62a$var$perfNow.bind($ea7b4dd250709a616043c0e9cf5f62a$var$perf) : function() {
    return Date.now ? Date.now() : new Date().getTime();
  };
  var $d754af426cd99d13f3c3b42e31b3$exports = {};
  $d754af426cd99d13f3c3b42e31b3$exports = JSON.parse('{"deselectedItem":"{item} \u063A\u064A\u0631 \u0627\u0644\u0645\u062D\u062F\u062F","select":"\u062A\u062D\u062F\u064A\u062F","selectedAll":"\u062C\u0645\u064A\u0639 \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0627\u0644\u0645\u062D\u062F\u062F\u0629.","selectedCount":"{count, plural, =0 {\u0644\u0645 \u064A\u062A\u0645 \u062A\u062D\u062F\u064A\u062F \u0639\u0646\u0627\u0635\u0631} one {# \u0639\u0646\u0635\u0631 \u0645\u062D\u062F\u062F} other {# \u0639\u0646\u0635\u0631 \u0645\u062D\u062F\u062F}}.","selectedItem":"{item} \u0627\u0644\u0645\u062D\u062F\u062F"}');
  var $b550e7ff21d43357d19c7d9f6403a388$exports = {};
  $b550e7ff21d43357d19c7d9f6403a388$exports = JSON.parse('{"deselectedItem":"{item} \u043D\u0435 \u0435 \u0438\u0437\u0431\u0440\u0430\u043D.","select":"\u0418\u0437\u0431\u0435\u0440\u0435\u0442\u0435","selectedAll":"\u0412\u0441\u0438\u0447\u043A\u0438 \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0438 \u0441\u0430 \u0438\u0437\u0431\u0440\u0430\u043D\u0438.","selectedCount":"{count, plural, =0 {\u041D\u044F\u043C\u0430 \u0438\u0437\u0431\u0440\u0430\u043D\u0438 \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0438} one {# \u0438\u0437\u0431\u0440\u0430\u043D \u0435\u043B\u0435\u043C\u0435\u043D\u0442} other {# \u0438\u0437\u0431\u0440\u0430\u043D\u0438 \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0438}}.","selectedItem":"{item} \u0438\u0437\u0431\u0440\u0430\u043D."}');
  var $e506453b0899c672fdbf2f4855f3721d$exports = {};
  $e506453b0899c672fdbf2f4855f3721d$exports = JSON.parse('{"deselectedItem":"Polo\u017Eka {item} nen\xED vybr\xE1na.","select":"Vybrat","selectedAll":"Vybr\xE1ny v\u0161echny polo\u017Eky.","selectedCount":"{count, plural, =0 {Nevybr\xE1ny \u017E\xE1dn\xE9 polo\u017Eky} one {Vybr\xE1na # polo\u017Eka} other {Vybr\xE1no # polo\u017Eek}}.","selectedItem":"Vybr\xE1na polo\u017Eka {item}."}');
  var $f209544680a65b4d4c1f36b455e32f8e$exports = {};
  $f209544680a65b4d4c1f36b455e32f8e$exports = JSON.parse('{"deselectedItem":"{item} ikke valgt.","select":"V\xE6lg","selectedAll":"Alle elementer valgt.","selectedCount":"{count, plural, =0 {Ingen elementer valgt} one {# element valgt} other {# elementer valgt}}.","selectedItem":"{item} valgt."}');
  var $dfc27c2d5479ed590d5c135298a3dd7a$exports = {};
  $dfc27c2d5479ed590d5c135298a3dd7a$exports = JSON.parse('{"deselectedItem":"{item} nicht ausgew\xE4hlt.","select":"Ausw\xE4hlen","selectedAll":"Alle Elemente ausgew\xE4hlt.","selectedCount":"{count, plural, =0 {Keine Elemente ausgew\xE4hlt} one {# Element ausgew\xE4hlt} other {# Elemente ausgew\xE4hlt}}.","selectedItem":"{item} ausgew\xE4hlt."}');
  var $e67eb003498026404bc605ad1172$exports = {};
  $e67eb003498026404bc605ad1172$exports = JSON.parse('{"deselectedItem":"\u0394\u03B5\u03BD \u03B5\u03C0\u03B9\u03BB\u03AD\u03C7\u03B8\u03B7\u03BA\u03B5 \u03C4\u03BF \u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF\u03BF {item}.","select":"\u0395\u03C0\u03B9\u03BB\u03BF\u03B3\u03AE","selectedAll":"\u0395\u03C0\u03B9\u03BB\u03AD\u03C7\u03B8\u03B7\u03BA\u03B1\u03BD \u03CC\u03BB\u03B1 \u03C4\u03B1 \u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF\u03B1.","selectedCount":"{count, plural, =0 {\u0394\u03B5\u03BD \u03B5\u03C0\u03B9\u03BB\u03AD\u03C7\u03B8\u03B7\u03BA\u03B1\u03BD \u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF\u03B1} one {\u0395\u03C0\u03B9\u03BB\u03AD\u03C7\u03B8\u03B7\u03BA\u03B5 # \u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF\u03BF} other {\u0395\u03C0\u03B9\u03BB\u03AD\u03C7\u03B8\u03B7\u03BA\u03B1\u03BD # \u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF\u03B1}}.","selectedItem":"\u0395\u03C0\u03B9\u03BB\u03AD\u03C7\u03B8\u03B7\u03BA\u03B5 \u03C4\u03BF \u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF\u03BF {item}."}');
  var $c220079f51d67fa1d00cfe9981441af$exports = {};
  $c220079f51d67fa1d00cfe9981441af$exports = JSON.parse('{"deselectedItem":"{item} not selected.","select":"Select","selectedCount":"{count, plural, =0 {No items selected} one {# item selected} other {# items selected}}.","selectedAll":"All items selected.","selectedItem":"{item} selected."}');
  var $d087ea4b714dcffa2dde8822c5ee123$exports = {};
  $d087ea4b714dcffa2dde8822c5ee123$exports = JSON.parse('{"deselectedItem":"{item} no seleccionado.","select":"Seleccionar","selectedAll":"Todos los elementos seleccionados.","selectedCount":"{count, plural, =0 {Ning\xFAn elemento seleccionado} one {# elemento seleccionado} other {# elementos seleccionados}}.","selectedItem":"{item} seleccionado."}');
  var $dfbb5dd2cf76066829f535b9b7512de$exports = {};
  $dfbb5dd2cf76066829f535b9b7512de$exports = JSON.parse('{"deselectedItem":"{item} pole valitud.","select":"Vali","selectedAll":"K\xF5ik \xFCksused valitud.","selectedCount":"{count, plural, =0 {\xDCksusi pole valitud} one {# \xFCksus valitud} other {# \xFCksust valitud}}.","selectedItem":"{item} valitud."}');
  var $fe1857136085cd04ddc4b69d893957$exports = {};
  $fe1857136085cd04ddc4b69d893957$exports = JSON.parse('{"deselectedItem":"Kohdetta {item} ei valittu.","select":"Valitse","selectedAll":"Kaikki kohteet valittu.","selectedCount":"{count, plural, =0 {Ei yht\xE4\xE4n kohdetta valittu} one {# kohde valittu} other {# kohdetta valittu}}.","selectedItem":"{item} valittu."}');
  var $dfe8baae84cd225984055f0cfc3d268$exports = {};
  $dfe8baae84cd225984055f0cfc3d268$exports = JSON.parse('{"deselectedItem":"{item} non s\xE9lectionn\xE9.","select":"S\xE9lectionner","selectedAll":"Tous les \xE9l\xE9ments s\xE9lectionn\xE9s.","selectedCount":"{count, plural, =0 {Aucun \xE9l\xE9ment s\xE9lectionn\xE9} one {# \xE9l\xE9ment s\xE9lectionn\xE9} other {# \xE9l\xE9ments s\xE9lectionn\xE9s}}.","selectedItem":"{item} s\xE9lectionn\xE9."}');
  var $ecb9832d13f940337c08bcdfe3b07d24$exports = {};
  $ecb9832d13f940337c08bcdfe3b07d24$exports = JSON.parse('{"deselectedItem":"{item} \u05DC\u05D0 \u05E0\u05D1\u05D7\u05E8.","select":"\u05D1\u05D7\u05E8","selectedAll":"\u05DB\u05DC \u05D4\u05E4\u05E8\u05D9\u05D8\u05D9\u05DD \u05E0\u05D1\u05D7\u05E8\u05D5.","selectedCount":"{count, plural, =0 {\u05DC\u05D0 \u05E0\u05D1\u05D7\u05E8\u05D5 \u05E4\u05E8\u05D9\u05D8\u05D9\u05DD} one {\u05E4\u05E8\u05D9\u05D8 # \u05E0\u05D1\u05D7\u05E8} other {# \u05E4\u05E8\u05D9\u05D8\u05D9\u05DD \u05E0\u05D1\u05D7\u05E8\u05D5}}.","selectedItem":"{item} \u05E0\u05D1\u05D7\u05E8."}');
  var $d9c169b9dd510b0b128c3205c2b2c21$exports = {};
  $d9c169b9dd510b0b128c3205c2b2c21$exports = JSON.parse('{"deselectedItem":"Stavka {item} nije odabrana.","select":"Odaberite","selectedAll":"Odabrane su sve stavke.","selectedCount":"{count, plural, =0 {Nije odabrana nijedna stavka} one {Odabrana je # stavka} other {Odabrano je # stavki}}.","selectedItem":"Stavka {item} je odabrana."}');
  var $ae5e649f2351c1ee4f214d7d3d2fee34$exports = {};
  $ae5e649f2351c1ee4f214d7d3d2fee34$exports = JSON.parse('{"deselectedItem":"{item} nincs kijel\xF6lve.","select":"Kijel\xF6l\xE9s","selectedAll":"Az \xF6sszes elem kijel\xF6lve.","selectedCount":"{count, plural, =0 {Egy elem sincs kijel\xF6lve} one {# elem kijel\xF6lve} other {# elem kijel\xF6lve}}.","selectedItem":"{item} kijel\xF6lve."}');
  var $d968134eb4b23622cddaf412b$exports = {};
  $d968134eb4b23622cddaf412b$exports = JSON.parse('{"deselectedItem":"{item} non selezionato.","select":"Seleziona","selectedAll":"Tutti gli elementi selezionati.","selectedCount":"{count, plural, =0 {Nessun elemento selezionato} one {# elemento selezionato} other {# elementi selezionati}}.","selectedItem":"{item} selezionato."}');
  var $fae0061e289ef3fe7774b3432a1fd262$exports = {};
  $fae0061e289ef3fe7774b3432a1fd262$exports = JSON.parse('{"deselectedItem":"{item} \u304C\u9078\u629E\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002","select":"\u9078\u629E","selectedAll":"\u3059\u3079\u3066\u306E\u9805\u76EE\u3092\u9078\u629E\u3057\u307E\u3057\u305F\u3002","selectedCount":"{count, plural, =0 {\u9805\u76EE\u304C\u9078\u629E\u3055\u308C\u3066\u3044\u307E\u305B\u3093} one {# \u9805\u76EE\u3092\u9078\u629E\u3057\u307E\u3057\u305F} other {# \u9805\u76EE\u3092\u9078\u629E\u3057\u307E\u3057\u305F}}\u3002","selectedItem":"{item} \u3092\u9078\u629E\u3057\u307E\u3057\u305F\u3002"}');
  var $a16713704fefd879098a0aa130bca4c$exports = {};
  $a16713704fefd879098a0aa130bca4c$exports = JSON.parse('{"deselectedItem":"{item}\uC774(\uAC00) \uC120\uD0DD\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.","select":"\uC120\uD0DD","selectedAll":"\uBAA8\uB4E0 \uD56D\uBAA9\uC774 \uC120\uD0DD\uB418\uC5C8\uC2B5\uB2C8\uB2E4.","selectedCount":"{count, plural, =0 {\uC120\uD0DD\uB41C \uD56D\uBAA9\uC774 \uC5C6\uC2B5\uB2C8\uB2E4} one {#\uAC1C \uD56D\uBAA9\uC774 \uC120\uD0DD\uB418\uC5C8\uC2B5\uB2C8\uB2E4} other {#\uAC1C \uD56D\uBAA9\uC774 \uC120\uD0DD\uB418\uC5C8\uC2B5\uB2C8\uB2E4}}.","selectedItem":"{item}\uC774(\uAC00) \uC120\uD0DD\uB418\uC5C8\uC2B5\uB2C8\uB2E4."}');
  var $f726830e0f90172a1c17ab3563f05a5$exports = {};
  $f726830e0f90172a1c17ab3563f05a5$exports = JSON.parse('{"deselectedItem":"{item} nepasirinkta.","select":"Pasirinkti","selectedAll":"Pasirinkti visi elementai.","selectedCount":"{count, plural, =0 {Nepasirinktas n\u0117 vienas elementas} one {Pasirinktas # elementas} other {Pasirinkta element\u0173: #}}.","selectedItem":"Pasirinkta: {item}."}');
  var $b882e37fb85cc320012a177ca86a$exports = {};
  $b882e37fb85cc320012a177ca86a$exports = JSON.parse('{"deselectedItem":"Vienums {item} nav atlas\u012Bts.","select":"Atlas\u012Bt","selectedAll":"Atlas\u012Bti visi vienumi.","selectedCount":"{count, plural, =0 {Nav atlas\u012Bts neviens vienums} one {Atlas\u012Bto vienumu skaits: #} other {Atlas\u012Bto vienumu skaits: #}}.","selectedItem":"Atlas\u012Bts vienums {item}."}');
  var $ed7cd8cdf8abe84302fd71baf1a5a0$exports = {};
  $ed7cd8cdf8abe84302fd71baf1a5a0$exports = JSON.parse('{"deselectedItem":"{item} er ikke valgt.","select":"Velg","selectedAll":"Alle elementer er valgt.","selectedCount":"{count, plural, =0 {Ingen elementer er valgt} one {# element er valgt} other {# elementer er valgt}}.","selectedItem":"{item} er valgt."}');
  var $bbe2b06394f1013577a54b49f87d$exports = {};
  $bbe2b06394f1013577a54b49f87d$exports = JSON.parse('{"deselectedItem":"{item} niet geselecteerd.","select":"Selecteren","selectedAll":"Alle items geselecteerd.","selectedCount":"{count, plural, =0 {Geen items geselecteerd} one {# item geselecteerd} other {# items geselecteerd}}.","selectedItem":"{item} geselecteerd."}');
  var $d871c3e83f9373444be2a825fd274$exports = {};
  $d871c3e83f9373444be2a825fd274$exports = JSON.parse('{"deselectedItem":"Nie zaznaczono {item}.","select":"Zaznacz","selectedAll":"Wszystkie zaznaczone elementy.","selectedCount":"{count, plural, =0 {Nie zaznaczono \u017Cadnych element\xF3w} one {# zaznaczony element} other {# zaznaczonych element\xF3w}}.","selectedItem":"Zaznaczono {item}."}');
  var $fce09a65f13a12236975366a41fa3fc$exports = {};
  $fce09a65f13a12236975366a41fa3fc$exports = JSON.parse('{"deselectedItem":"{item} n\xE3o selecionado.","select":"Selecionar","selectedAll":"Todos os itens selecionados.","selectedCount":"{count, plural, =0 {Nenhum item selecionado} one {# item selecionado} other {# itens selecionados}}.","selectedItem":"{item} selecionado."}');
  var $de306f55572f07861710d9ca39f9c$exports = {};
  $de306f55572f07861710d9ca39f9c$exports = JSON.parse('{"deselectedItem":"{item} n\xE3o selecionado.","select":"Selecionar","selectedAll":"Todos os itens selecionados.","selectedCount":"{count, plural, =0 {Nenhum item selecionado} one {# item selecionado} other {# itens selecionados}}.","selectedItem":"{item} selecionado."}');
  var $e6c9a7e5801e9ad0eeefa1ef9bd83694$exports = {};
  $e6c9a7e5801e9ad0eeefa1ef9bd83694$exports = JSON.parse('{"deselectedItem":"{item} neselectat.","select":"Selectare","selectedAll":"Toate elementele selectate.","selectedCount":"{count, plural, =0 {Niciun element selectat} one {# element selectat} other {# elemente selectate}}.","selectedItem":"{item} selectat."}');
  var $e030948355056f78df065841041ed6e1$exports = {};
  $e030948355056f78df065841041ed6e1$exports = JSON.parse('{"deselectedItem":"{Item} \u043D\u0435 \u0432\u044B\u0431\u0440\u0430\u043D\u043E.","select":"\u0412\u044B\u0431\u0440\u0430\u0442\u044C","selectedAll":"\u0412\u044B\u0431\u0440\u0430\u043D\u044B \u0432\u0441\u0435 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u044B.","selectedCount":"{count, plural, =0 {\u041D\u0435\u0442 \u0432\u044B\u0431\u0440\u0430\u043D\u043D\u044B\u0445 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432} one {# \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u0432\u044B\u0431\u0440\u0430\u043D} other {# \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432 \u0432\u044B\u0431\u0440\u0430\u043D\u043E}}.","selectedItem":"{Item} \u0432\u044B\u0431\u0440\u0430\u043D\u043E."}');
  var $e3fc3d4894b1affa2ff3d7c41eee3e4e$exports = {};
  $e3fc3d4894b1affa2ff3d7c41eee3e4e$exports = JSON.parse('{"deselectedItem":"Nevybrat\xE9 polo\u017Eky: {item}.","select":"Vybra\u0165","selectedAll":"V\u0161etky vybrat\xE9 polo\u017Eky.","selectedCount":"{count, plural, =0 {\u017Diadne vybrat\xE9 polo\u017Eky} one {# vybrat\xE1 polo\u017Eka} other {Po\u010Det vybrat\xFDch polo\u017Eiek:#}}.","selectedItem":"Vybrat\xE9 polo\u017Eky: {item}."}');
  var $d81efb25c196c7606310a2ee6196c30$exports = {};
  $d81efb25c196c7606310a2ee6196c30$exports = JSON.parse('{"deselectedItem":"Element {item} ni izbran.","select":"Izberite","selectedAll":"Vsi elementi so izbrani.","selectedCount":"{count, plural, =0 {Noben element ni izbran} one {# element je izbran} other {# elementov je izbranih}}.","selectedItem":"Element {item} je izbran."}');
  var $c90c405b967be58ced68$exports = {};
  $c90c405b967be58ced68$exports = JSON.parse('{"deselectedItem":"{item} nije izabrano.","select":"Izaberite","selectedAll":"Izabrane su sve stavke.","selectedCount":"{count, plural, =0 {Nije izabrana nijedna stavka} one {Izabrana je # stavka} other {Izabrano je # stavki}}.","selectedItem":"{Item} je izabrano."}');
  var $e5bd4708bcd4a81da17e007be5420$exports = {};
  $e5bd4708bcd4a81da17e007be5420$exports = JSON.parse('{"deselectedItem":"{item} ej markerat.","select":"Markera","selectedAll":"Alla markerade objekt.","selectedCount":"{count, plural, =0 {Inga markerade objekt} one {# markerat objekt} other {# markerade objekt}}.","selectedItem":"{item} markerat."}');
  var $ea788b55810edc0f8005b062dd8ec58$exports = {};
  $ea788b55810edc0f8005b062dd8ec58$exports = JSON.parse('{"deselectedItem":"{item} se\xE7ilmedi.","select":"Se\xE7","selectedAll":"T\xFCm \xF6geler se\xE7ildi.","selectedCount":"{count, plural, =0 {Hi\xE7bir \xF6ge se\xE7ilmedi} one {# \xF6ge se\xE7ildi} other {# \xF6ge se\xE7ildi}}.","selectedItem":"{item} se\xE7ildi."}');
  var $e2a5ced9d789ea6f864372772c168b3$exports = {};
  $e2a5ced9d789ea6f864372772c168b3$exports = JSON.parse('{"deselectedItem":"{item} \u043D\u0435 \u0432\u0438\u0431\u0440\u0430\u043D\u043E.","select":"\u0412\u0438\u0431\u0440\u0430\u0442\u0438","selectedAll":"\u0423\u0441\u0456 \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0438 \u0432\u0438\u0431\u0440\u0430\u043D\u043E.","selectedCount":"{count, plural, =0 {\u0416\u043E\u0434\u043D\u0438\u0445 \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0456\u0432 \u043D\u0435 \u0432\u0438\u0431\u0440\u0430\u043D\u043E} one {# \u0435\u043B\u0435\u043C\u0435\u043D\u0442 \u0432\u0438\u0431\u0440\u0430\u043D\u043E} other {\u0412\u0438\u0431\u0440\u0430\u043D\u043E \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0456\u0432: #}}.","selectedItem":"{item} \u0432\u0438\u0431\u0440\u0430\u043D\u043E."}');
  var $acd8387943c3f4ec14f3e55ba24c72c5$exports = {};
  $acd8387943c3f4ec14f3e55ba24c72c5$exports = JSON.parse('{"deselectedItem":"\u672A\u9009\u62E9 {item}\u3002","select":"\u9009\u62E9","selectedAll":"\u5DF2\u9009\u62E9\u6240\u6709\u9879\u76EE\u3002","selectedCount":"{count, plural, =0 {\u672A\u9009\u62E9\u9879\u76EE} one {\u5DF2\u9009\u62E9 # \u4E2A\u9879\u76EE} other {\u5DF2\u9009\u62E9 # \u4E2A\u9879\u76EE}}\u3002","selectedItem":"\u5DF2\u9009\u62E9 {item}\u3002"}');
  var $b1a3d2e8fbfc08bd783a71a60d60a4d0$exports = {};
  $b1a3d2e8fbfc08bd783a71a60d60a4d0$exports = JSON.parse('{"deselectedItem":"\u672A\u9078\u53D6\u300C{item}\u300D\u3002","select":"\u9078\u53D6","selectedAll":"\u5DF2\u9078\u53D6\u6240\u6709\u9805\u76EE\u3002","selectedCount":"{count, plural, =0 {\u672A\u9078\u53D6\u4EFB\u4F55\u9805\u76EE} one {\u5DF2\u9078\u53D6 # \u500B\u9805\u76EE} other {\u5DF2\u9078\u53D6 # \u500B\u9805\u76EE}}\u3002","selectedItem":"\u5DF2\u9078\u53D6\u300C{item}\u300D\u3002"}');
  ({
    "ar-AE": _interopRequireDefault$h($d754af426cd99d13f3c3b42e31b3$exports).default,
    "bg-BG": _interopRequireDefault$h($b550e7ff21d43357d19c7d9f6403a388$exports).default,
    "cs-CZ": _interopRequireDefault$h($e506453b0899c672fdbf2f4855f3721d$exports).default,
    "da-DK": _interopRequireDefault$h($f209544680a65b4d4c1f36b455e32f8e$exports).default,
    "de-DE": _interopRequireDefault$h($dfc27c2d5479ed590d5c135298a3dd7a$exports).default,
    "el-GR": _interopRequireDefault$h($e67eb003498026404bc605ad1172$exports).default,
    "en-US": _interopRequireDefault$h($c220079f51d67fa1d00cfe9981441af$exports).default,
    "es-ES": _interopRequireDefault$h($d087ea4b714dcffa2dde8822c5ee123$exports).default,
    "et-EE": _interopRequireDefault$h($dfbb5dd2cf76066829f535b9b7512de$exports).default,
    "fi-FI": _interopRequireDefault$h($fe1857136085cd04ddc4b69d893957$exports).default,
    "fr-FR": _interopRequireDefault$h($dfe8baae84cd225984055f0cfc3d268$exports).default,
    "he-IL": _interopRequireDefault$h($ecb9832d13f940337c08bcdfe3b07d24$exports).default,
    "hr-HR": _interopRequireDefault$h($d9c169b9dd510b0b128c3205c2b2c21$exports).default,
    "hu-HU": _interopRequireDefault$h($ae5e649f2351c1ee4f214d7d3d2fee34$exports).default,
    "it-IT": _interopRequireDefault$h($d968134eb4b23622cddaf412b$exports).default,
    "ja-JP": _interopRequireDefault$h($fae0061e289ef3fe7774b3432a1fd262$exports).default,
    "ko-KR": _interopRequireDefault$h($a16713704fefd879098a0aa130bca4c$exports).default,
    "lt-LT": _interopRequireDefault$h($f726830e0f90172a1c17ab3563f05a5$exports).default,
    "lv-LV": _interopRequireDefault$h($b882e37fb85cc320012a177ca86a$exports).default,
    "nb-NO": _interopRequireDefault$h($ed7cd8cdf8abe84302fd71baf1a5a0$exports).default,
    "nl-NL": _interopRequireDefault$h($bbe2b06394f1013577a54b49f87d$exports).default,
    "pl-PL": _interopRequireDefault$h($d871c3e83f9373444be2a825fd274$exports).default,
    "pt-BR": _interopRequireDefault$h($fce09a65f13a12236975366a41fa3fc$exports).default,
    "pt-PT": _interopRequireDefault$h($de306f55572f07861710d9ca39f9c$exports).default,
    "ro-RO": _interopRequireDefault$h($e6c9a7e5801e9ad0eeefa1ef9bd83694$exports).default,
    "ru-RU": _interopRequireDefault$h($e030948355056f78df065841041ed6e1$exports).default,
    "sk-SK": _interopRequireDefault$h($e3fc3d4894b1affa2ff3d7c41eee3e4e$exports).default,
    "sl-SI": _interopRequireDefault$h($d81efb25c196c7606310a2ee6196c30$exports).default,
    "sr-SP": _interopRequireDefault$h($c90c405b967be58ced68$exports).default,
    "sv-SE": _interopRequireDefault$h($e5bd4708bcd4a81da17e007be5420$exports).default,
    "tr-TR": _interopRequireDefault$h($ea788b55810edc0f8005b062dd8ec58$exports).default,
    "uk-UA": _interopRequireDefault$h($e2a5ced9d789ea6f864372772c168b3$exports).default,
    "zh-CN": _interopRequireDefault$h($acd8387943c3f4ec14f3e55ba24c72c5$exports).default,
    "zh-TW": _interopRequireDefault$h($b1a3d2e8fbfc08bd783a71a60d60a4d0$exports).default
  });
  ({
    "ar-AE": _interopRequireDefault$h($d754af426cd99d13f3c3b42e31b3$exports).default,
    "bg-BG": _interopRequireDefault$h($b550e7ff21d43357d19c7d9f6403a388$exports).default,
    "cs-CZ": _interopRequireDefault$h($e506453b0899c672fdbf2f4855f3721d$exports).default,
    "da-DK": _interopRequireDefault$h($f209544680a65b4d4c1f36b455e32f8e$exports).default,
    "de-DE": _interopRequireDefault$h($dfc27c2d5479ed590d5c135298a3dd7a$exports).default,
    "el-GR": _interopRequireDefault$h($e67eb003498026404bc605ad1172$exports).default,
    "en-US": _interopRequireDefault$h($c220079f51d67fa1d00cfe9981441af$exports).default,
    "es-ES": _interopRequireDefault$h($d087ea4b714dcffa2dde8822c5ee123$exports).default,
    "et-EE": _interopRequireDefault$h($dfbb5dd2cf76066829f535b9b7512de$exports).default,
    "fi-FI": _interopRequireDefault$h($fe1857136085cd04ddc4b69d893957$exports).default,
    "fr-FR": _interopRequireDefault$h($dfe8baae84cd225984055f0cfc3d268$exports).default,
    "he-IL": _interopRequireDefault$h($ecb9832d13f940337c08bcdfe3b07d24$exports).default,
    "hr-HR": _interopRequireDefault$h($d9c169b9dd510b0b128c3205c2b2c21$exports).default,
    "hu-HU": _interopRequireDefault$h($ae5e649f2351c1ee4f214d7d3d2fee34$exports).default,
    "it-IT": _interopRequireDefault$h($d968134eb4b23622cddaf412b$exports).default,
    "ja-JP": _interopRequireDefault$h($fae0061e289ef3fe7774b3432a1fd262$exports).default,
    "ko-KR": _interopRequireDefault$h($a16713704fefd879098a0aa130bca4c$exports).default,
    "lt-LT": _interopRequireDefault$h($f726830e0f90172a1c17ab3563f05a5$exports).default,
    "lv-LV": _interopRequireDefault$h($b882e37fb85cc320012a177ca86a$exports).default,
    "nb-NO": _interopRequireDefault$h($ed7cd8cdf8abe84302fd71baf1a5a0$exports).default,
    "nl-NL": _interopRequireDefault$h($bbe2b06394f1013577a54b49f87d$exports).default,
    "pl-PL": _interopRequireDefault$h($d871c3e83f9373444be2a825fd274$exports).default,
    "pt-BR": _interopRequireDefault$h($fce09a65f13a12236975366a41fa3fc$exports).default,
    "pt-PT": _interopRequireDefault$h($de306f55572f07861710d9ca39f9c$exports).default,
    "ro-RO": _interopRequireDefault$h($e6c9a7e5801e9ad0eeefa1ef9bd83694$exports).default,
    "ru-RU": _interopRequireDefault$h($e030948355056f78df065841041ed6e1$exports).default,
    "sk-SK": _interopRequireDefault$h($e3fc3d4894b1affa2ff3d7c41eee3e4e$exports).default,
    "sl-SI": _interopRequireDefault$h($d81efb25c196c7606310a2ee6196c30$exports).default,
    "sr-SP": _interopRequireDefault$h($c90c405b967be58ced68$exports).default,
    "sv-SE": _interopRequireDefault$h($e5bd4708bcd4a81da17e007be5420$exports).default,
    "tr-TR": _interopRequireDefault$h($ea788b55810edc0f8005b062dd8ec58$exports).default,
    "uk-UA": _interopRequireDefault$h($e2a5ced9d789ea6f864372772c168b3$exports).default,
    "zh-CN": _interopRequireDefault$h($acd8387943c3f4ec14f3e55ba24c72c5$exports).default,
    "zh-TW": _interopRequireDefault$h($b1a3d2e8fbfc08bd783a71a60d60a4d0$exports).default
  });
  var $eeb22d73391416261d5896c11e3d50e$exports = {};
  $eeb22d73391416261d5896c11e3d50e$exports = JSON.parse('{"ascending":"\u062A\u0635\u0627\u0639\u062F\u064A","ascendingSort":"\u062A\u0631\u062A\u064A\u0628 \u062D\u0633\u0628 \u0627\u0644\u0639\u0645\u0648\u062F {columnName} \u0628\u062A\u0631\u062A\u064A\u0628 \u062A\u0635\u0627\u0639\u062F\u064A","descending":"\u062A\u0646\u0627\u0632\u0644\u064A","descendingSort":"\u062A\u0631\u062A\u064A\u0628 \u062D\u0633\u0628 \u0627\u0644\u0639\u0645\u0648\u062F {columnName} \u0628\u062A\u0631\u062A\u064A\u0628 \u062A\u0646\u0627\u0632\u0644\u064A","select":"\u062A\u062D\u062F\u064A\u062F","selectAll":"\u062A\u062D\u062F\u064A\u062F \u0627\u0644\u0643\u0644","sortable":"\u0639\u0645\u0648\u062F \u0642\u0627\u0628\u0644 \u0644\u0644\u062A\u0631\u062A\u064A\u0628"}');
  var $fa0ca9814ea3b12fba24314370$exports = {};
  $fa0ca9814ea3b12fba24314370$exports = JSON.parse('{"ascending":"\u0432\u044A\u0437\u0445\u043E\u0434\u044F\u0449","ascendingSort":"\u0441\u043E\u0440\u0442\u0438\u0440\u0430\u043D\u043E \u043F\u043E \u043A\u043E\u043B\u043E\u043D\u0430 {columnName} \u0432\u044A\u0432 \u0432\u044A\u0437\u0445\u043E\u0434\u044F\u0449 \u0440\u0435\u0434","descending":"\u043D\u0438\u0437\u0445\u043E\u0434\u044F\u0449","descendingSort":"\u0441\u043E\u0440\u0442\u0438\u0440\u0430\u043D\u043E \u043F\u043E \u043A\u043E\u043B\u043E\u043D\u0430 {columnName} \u0432 \u043D\u0438\u0437\u0445\u043E\u0434\u044F\u0449 \u0440\u0435\u0434","select":"\u0418\u0437\u0431\u0435\u0440\u0435\u0442\u0435","selectAll":"\u0418\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u0432\u0441\u0438\u0447\u043A\u043E","sortable":"\u0441\u043E\u0440\u0442\u0438\u0440\u0430\u0449\u0430 \u043A\u043E\u043B\u043E\u043D\u0430"}');
  var $b80ce4b4c86bf3ffea578b4830e9bd5b$exports = {};
  $b80ce4b4c86bf3ffea578b4830e9bd5b$exports = JSON.parse('{"ascending":"vzestupn\u011B","ascendingSort":"\u0159azeno vzestupn\u011B podle sloupce {columnName}","descending":"sestupn\u011B","descendingSort":"\u0159azeno sestupn\u011B podle sloupce {columnName}","select":"Vybrat","selectAll":"Vybrat v\u0161e","sortable":"sloupec s mo\u017Enost\xED \u0159azen\xED"}');
  var $f8703fccb3f936bbb6d4446343295bc$exports = {};
  $f8703fccb3f936bbb6d4446343295bc$exports = JSON.parse('{"ascending":"stigende","ascendingSort":"sorteret efter kolonne {columnName} i stigende r\xE6kkef\xF8lge","descending":"faldende","descendingSort":"sorteret efter kolonne {columnName} i faldende r\xE6kkef\xF8lge","select":"V\xE6lg","selectAll":"V\xE6lg alle","sortable":"sorterbar kolonne"}');
  var $a1a2d26509424350c19569463ac338$exports = {};
  $a1a2d26509424350c19569463ac338$exports = JSON.parse('{"ascending":"aufsteigend","ascendingSort":"sortiert nach Spalte {columnName} in aufsteigender Reihenfolge","descending":"absteigend","descendingSort":"sortiert nach Spalte {columnName} in absteigender Reihenfolge","select":"Ausw\xE4hlen","selectAll":"Alles ausw\xE4hlen","sortable":"sortierbare Spalte"}');
  var $bec6f1ec38b0850d030a38bcf7db$exports = {};
  $bec6f1ec38b0850d030a38bcf7db$exports = JSON.parse('{"ascending":"\u03B1\u03CD\u03BE\u03BF\u03C5\u03C3\u03B1","ascendingSort":"\u03B4\u03B9\u03B1\u03BB\u03BF\u03B3\u03AE \u03B1\u03BD\u03AC \u03C3\u03C4\u03AE\u03BB\u03B7 {columnName} \u03C3\u03B5 \u03B1\u03CD\u03BE\u03BF\u03C5\u03C3\u03B1 \u03C3\u03B5\u03B9\u03C1\u03AC","descending":"\u03C6\u03B8\u03AF\u03BD\u03BF\u03C5\u03C3\u03B1","descendingSort":"\u03B4\u03B9\u03B1\u03BB\u03BF\u03B3\u03AE \u03B1\u03BD\u03AC \u03C3\u03C4\u03AE\u03BB\u03B7 {columnName} \u03C3\u03B5 \u03C6\u03B8\u03AF\u03BD\u03BF\u03C5\u03C3\u03B1 \u03C3\u03B5\u03B9\u03C1\u03AC","select":"\u0395\u03C0\u03B9\u03BB\u03BF\u03B3\u03AE","selectAll":"\u0395\u03C0\u03B9\u03BB\u03BF\u03B3\u03AE \u03CC\u03BB\u03C9\u03BD","sortable":"\u03A3\u03C4\u03AE\u03BB\u03B7 \u03B4\u03B9\u03B1\u03BB\u03BF\u03B3\u03AE\u03C2"}');
  var $d500688bbd18d209e8dc63a4586858a1$exports = {};
  $d500688bbd18d209e8dc63a4586858a1$exports = JSON.parse('{"select":"Select","selectAll":"Select All","sortable":"sortable column","ascending":"ascending","descending":"descending","ascendingSort":"sorted by column {columnName} in ascending order","descendingSort":"sorted by column {columnName} in descending order"}');
  var $e20050aa18c4f5920be25586b9$exports = {};
  $e20050aa18c4f5920be25586b9$exports = JSON.parse('{"ascending":"de subida","ascendingSort":"ordenado por columna {columnName} en orden de subida","descending":"de bajada","descendingSort":"ordenado por columna {columnName} en orden de bajada","select":"Seleccionar","selectAll":"Seleccionar todos","sortable":"columna ordenable"}');
  var $f4962b42f94764add77fdce85fa673e$exports = {};
  $f4962b42f94764add77fdce85fa673e$exports = JSON.parse('{"ascending":"t\xF5usev j\xE4rjestus","ascendingSort":"sorditud veeru j\xE4rgi {columnName} t\xF5usvas j\xE4rjestuses","descending":"laskuv j\xE4rjestus","descendingSort":"sorditud veeru j\xE4rgi {columnName} laskuvas j\xE4rjestuses","select":"Vali","selectAll":"Vali k\xF5ik","sortable":"sorditav veerg"}');
  var $df17269a3e52e7316d1e1d297d12d66a$exports = {};
  $df17269a3e52e7316d1e1d297d12d66a$exports = JSON.parse('{"ascending":"nouseva","ascendingSort":"lajiteltu sarakkeen {columnName} mukaan nousevassa j\xE4rjestyksess\xE4","descending":"laskeva","descendingSort":"lajiteltu sarakkeen {columnName} mukaan laskevassa j\xE4rjestyksess\xE4","select":"Valitse","selectAll":"Valitse kaikki","sortable":"lajiteltava sarake"}');
  var $e82ea2755617047da4773a734e02b$exports = {};
  $e82ea2755617047da4773a734e02b$exports = JSON.parse('{"ascending":"croissant","ascendingSort":"tri\xE9 en fonction de la colonne\xA0{columnName} par ordre croissant","descending":"d\xE9croissant","descendingSort":"tri\xE9 en fonction de la colonne\xA0{columnName} par ordre d\xE9croissant","select":"S\xE9lectionner","selectAll":"S\xE9lectionner tout","sortable":"colonne triable"}');
  var $b1608dad8de71190a5ad2359bf9e33$exports = {};
  $b1608dad8de71190a5ad2359bf9e33$exports = JSON.parse('{"ascending":"\u05E2\u05D5\u05DC\u05D4","ascendingSort":"\u05DE\u05D5\u05D9\u05DF \u05DC\u05E4\u05D9 \u05E2\u05DE\u05D5\u05D3\u05D4 {columnName} \u05D1\u05E1\u05D3\u05E8 \u05E2\u05D5\u05DC\u05D4","descending":"\u05D9\u05D5\u05E8\u05D3","descendingSort":"\u05DE\u05D5\u05D9\u05DF \u05DC\u05E4\u05D9 \u05E2\u05DE\u05D5\u05D3\u05D4 {columnName} \u05D1\u05E1\u05D3\u05E8 \u05D9\u05D5\u05E8\u05D3","select":"\u05D1\u05D7\u05E8","selectAll":"\u05D1\u05D7\u05E8 \u05D4\u05DB\u05D5\u05DC","sortable":"\u05E2\u05DE\u05D5\u05D3\u05D4 \u05E9\u05E0\u05D9\u05EA\u05DF \u05DC\u05DE\u05D9\u05D9\u05DF"}');
  var $eba9927d54a5f380c7f03b78d05786aa$exports = {};
  $eba9927d54a5f380c7f03b78d05786aa$exports = JSON.parse('{"ascending":"rastu\u0107i","ascendingSort":"razvrstano po stupcima {columnName} rastu\u0107em redoslijedom","descending":"padaju\u0107i","descendingSort":"razvrstano po stupcima {columnName} padaju\u0107im redoslijedom","select":"Odaberite","selectAll":"Odaberite sve","sortable":"stupac koji se mo\u017Ee razvrstati"}');
  var $cb0b1adc37bae4af50793b778e2108a6$exports = {};
  $cb0b1adc37bae4af50793b778e2108a6$exports = JSON.parse('{"ascending":"n\xF6vekv\u0151","ascendingSort":"rendezve a(z) {columnName} oszlop szerint, n\xF6vekv\u0151 sorrendben","descending":"cs\xF6kken\u0151","descendingSort":"rendezve a(z) {columnName} oszlop szerint, cs\xF6kken\u0151 sorrendben","select":"Kijel\xF6l\xE9s","selectAll":"\xD6sszes kijel\xF6l\xE9se","sortable":"rendezend\u0151 oszlop"}');
  var $afb077696550f3b7e0dcee652c2814ed$exports = {};
  $afb077696550f3b7e0dcee652c2814ed$exports = JSON.parse('{"ascending":"crescente","ascendingSort":"in ordine crescente in base alla colonna {columnName}","descending":"decrescente","descendingSort":"in ordine decrescente in base alla colonna {columnName}","select":"Seleziona","selectAll":"Seleziona tutto","sortable":"colonna ordinabile"}');
  var $bf0d1bbc15981ecf1d7062dedf93c2$exports = {};
  $bf0d1bbc15981ecf1d7062dedf93c2$exports = JSON.parse('{"ascending":"\u6607\u9806","ascendingSort":"\u5217 {columnName} \u3092\u6607\u9806\u3067\u4E26\u3079\u66FF\u3048","descending":"\u964D\u9806","descendingSort":"\u5217 {columnName} \u3092\u964D\u9806\u3067\u4E26\u3079\u66FF\u3048","select":"\u9078\u629E","selectAll":"\u3059\u3079\u3066\u9078\u629E","sortable":"\u4E26\u3079\u66FF\u3048\u53EF\u80FD\u306A\u5217"}');
  var $dc136dabff22b6b7a44de4fb587f1a11$exports = {};
  $dc136dabff22b6b7a44de4fb587f1a11$exports = JSON.parse('{"ascending":"\uC624\uB984\uCC28\uC21C","ascendingSort":"{columnName} \uC5F4\uC744 \uAE30\uC900\uC73C\uB85C \uC624\uB984\uCC28\uC21C\uC73C\uB85C \uC815\uB82C\uB428","descending":"\uB0B4\uB9BC\uCC28\uC21C","descendingSort":"{columnName} \uC5F4\uC744 \uAE30\uC900\uC73C\uB85C \uB0B4\uB9BC\uCC28\uC21C\uC73C\uB85C \uC815\uB82C\uB428","select":"\uC120\uD0DD","selectAll":"\uBAA8\uB450 \uC120\uD0DD","sortable":"\uC815\uB82C \uAC00\uB2A5\uD55C \uC5F4"}');
  var $fc42de8ccef0faf18e4367afc6b7113$exports = {};
  $fc42de8ccef0faf18e4367afc6b7113$exports = JSON.parse('{"ascending":"did\u0117jan\u010Dia tvarka","ascendingSort":"surikiuota pagal stulpel\u012F {columnName} did\u0117jan\u010Dia tvarka","descending":"ma\u017E\u0117jan\u010Dia tvarka","descendingSort":"surikiuota pagal stulpel\u012F {columnName} ma\u017E\u0117jan\u010Dia tvarka","select":"Pasirinkti","selectAll":"Pasirinkti visk\u0105","sortable":"rikiuojamas stulpelis"}');
  var $b865ab10f15e1da88c3a3a684709f7$exports = {};
  $b865ab10f15e1da88c3a3a684709f7$exports = JSON.parse('{"ascending":"augo\u0161\u0101 sec\u012Bb\u0101","ascendingSort":"k\u0101rtots p\u0113c kolonnas {columnName} augo\u0161\u0101 sec\u012Bb\u0101","descending":"dilsto\u0161\u0101 sec\u012Bb\u0101","descendingSort":"k\u0101rtots p\u0113c kolonnas {columnName} dilsto\u0161\u0101 sec\u012Bb\u0101","select":"Atlas\u012Bt","selectAll":"Atlas\u012Bt visu","sortable":"k\u0101rtojam\u0101 kolonna"}');
  var $c7866351d85f757b0f58566bf2c68748$exports = {};
  $c7866351d85f757b0f58566bf2c68748$exports = JSON.parse('{"ascending":"stigende","ascendingSort":"sortert etter kolonne {columnName} i stigende rekkef\xF8lge","descending":"synkende","descendingSort":"sortert etter kolonne {columnName} i synkende rekkef\xF8lge","select":"Velg","selectAll":"Velg alle","sortable":"kolonne som kan sorteres"}');
  var $df753aa2fbc2a27fbf427886dd55155$exports = {};
  $df753aa2fbc2a27fbf427886dd55155$exports = JSON.parse('{"ascending":"oplopend","ascendingSort":"gesorteerd in oplopende volgorde in kolom {columnName}","descending":"aflopend","descendingSort":"gesorteerd in aflopende volgorde in kolom {columnName}","select":"Selecteren","selectAll":"Alles selecteren","sortable":"sorteerbare kolom"}');
  var $a79109898fc21f9f1ee17a9$exports = {};
  $a79109898fc21f9f1ee17a9$exports = JSON.parse('{"ascending":"rosn\u0105co","ascendingSort":"posortowano wed\u0142ug kolumny {columnName} w porz\u0105dku rosn\u0105cym","descending":"malej\u0105co","descendingSort":"posortowano wed\u0142ug kolumny {columnName} w porz\u0105dku malej\u0105cym","select":"Zaznacz","selectAll":"Zaznacz wszystko","sortable":"kolumna z mo\u017Cliwo\u015Bci\u0105 sortowania"}');
  var $c5906e4f561b7b47a7004651d0d55ea$exports = {};
  $c5906e4f561b7b47a7004651d0d55ea$exports = JSON.parse('{"ascending":"crescente","ascendingSort":"classificado pela coluna {columnName} em ordem crescente","descending":"decrescente","descendingSort":"classificado pela coluna {columnName} em ordem decrescente","select":"Selecionar","selectAll":"Selecionar tudo","sortable":"coluna classific\xE1vel"}');
  var $fe13a3ddbc2699563319ab6e208dd9$exports = {};
  $fe13a3ddbc2699563319ab6e208dd9$exports = JSON.parse('{"ascending":"ascendente","ascendingSort":"Ordenar por coluna {columnName} em ordem ascendente","descending":"descendente","descendingSort":"Ordenar por coluna {columnName} em ordem descendente","select":"Selecionar","selectAll":"Selecionar tudo","sortable":"Coluna orden\xE1vel"}');
  var $f61b1759648a2ce080048699cf77$exports = {};
  $f61b1759648a2ce080048699cf77$exports = JSON.parse('{"ascending":"cresc\u0103toare","ascendingSort":"sortate dup\u0103 coloana {columnName} \xEEn ordine cresc\u0103toare","descending":"descresc\u0103toare","descendingSort":"sortate dup\u0103 coloana {columnName} \xEEn ordine descresc\u0103toare","select":"Selectare","selectAll":"Selectare total\u0103","sortable":"coloan\u0103 sortabil\u0103"}');
  var $dddc1f59faf50dd794c3728b6f6a491$exports = {};
  $dddc1f59faf50dd794c3728b6f6a491$exports = JSON.parse('{"ascending":"\u0432\u043E\u0437\u0440\u0430\u0441\u0442\u0430\u043D\u0438\u0435","ascendingSort":"\u0441\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0441\u0442\u043E\u043B\u0431\u0435\u0446 {columnName} \u0432 \u043F\u043E\u0440\u044F\u0434\u043A\u0435 \u0432\u043E\u0437\u0440\u0430\u0441\u0442\u0430\u043D\u0438\u044F","descending":"\u0443\u0431\u044B\u0432\u0430\u043D\u0438\u0435","descendingSort":"\u0441\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0441\u0442\u043E\u043B\u0431\u0435\u0446 {columnName} \u0432 \u043F\u043E\u0440\u044F\u0434\u043A\u0435 \u0443\u0431\u044B\u0432\u0430\u043D\u0438\u044F","select":"\u0412\u044B\u0431\u0440\u0430\u0442\u044C","selectAll":"\u0412\u044B\u0431\u0440\u0430\u0442\u044C \u0432\u0441\u0435","sortable":"\u0441\u043E\u0440\u0442\u0438\u0440\u0443\u0435\u043C\u044B\u0439 \u0441\u0442\u043E\u043B\u0431\u0435\u0446"}');
  var $fb47d7d560830a4fcf06abc651a18141$exports = {};
  $fb47d7d560830a4fcf06abc651a18141$exports = JSON.parse('{"ascending":"vzostupne","ascendingSort":"zoraden\xE9 zostupne pod\u013Ea st\u013Apca {columnName}","descending":"zostupne","descendingSort":"zoraden\xE9 zostupne pod\u013Ea st\u013Apca {columnName}","select":"Vybra\u0165","selectAll":"Vybra\u0165 v\u0161etko","sortable":"zoradite\u013En\xFD st\u013Apec"}');
  var $b4a15520baa1794862d1bad05b5e4e34$exports = {};
  $b4a15520baa1794862d1bad05b5e4e34$exports = JSON.parse('{"ascending":"nara\u0161\u010Dajo\u010De","ascendingSort":"razvr\u0161\u010Deno po stolpcu {columnName} v nara\u0161\u010Dajo\u010Dem vrstnem redu","descending":"padajo\u010De","descendingSort":"razvr\u0161\u010Deno po stolpcu {columnName} v padajo\u010Dem vrstnem redu","select":"Izberite","selectAll":"Izberite vse","sortable":"razvrstljivi stolpec"}');
  var $a3b85c35d8db74bade6cb378eed15$exports = {};
  $a3b85c35d8db74bade6cb378eed15$exports = JSON.parse('{"ascending":"rastu\u0107i","ascendingSort":"sortirano po kolonama {columnName} rastu\u0107im redosledom","descending":"padaju\u0107i","descendingSort":"sortirano po kolonama {columnName} padaju\u0107im redosledom","select":"Izaberite","selectAll":"Izaberite sve","sortable":"kolona koja se mo\u017Ee sortirati"}');
  var $abee331c4b5db2f7f481965f4b64ce$exports = {};
  $abee331c4b5db2f7f481965f4b64ce$exports = JSON.parse('{"ascending":"stigande","ascendingSort":"sorterat p\xE5 kolumn {columnName} i stigande ordning","descending":"fallande","descendingSort":"sorterat p\xE5 kolumn {columnName} i fallande ordning","select":"Markera","selectAll":"Markera allt","sortable":"sorterbar kolumn"}');
  var $afaac376a1c1615a63ade428820f04bd$exports = {};
  $afaac376a1c1615a63ade428820f04bd$exports = JSON.parse('{"ascending":"artan s\u0131rada","ascendingSort":"{columnName} s\xFCtuna g\xF6re artan d\xFCzende s\u0131rala","descending":"azalan s\u0131rada","descendingSort":"{columnName} s\xFCtuna g\xF6re azalan d\xFCzende s\u0131rala","select":"Se\xE7","selectAll":"T\xFCm\xFCn\xFC Se\xE7","sortable":"S\u0131ralanabilir s\xFCtun"}');
  var $d9b08bc61b03f2138ed9b56aa161f0a3$exports = {};
  $d9b08bc61b03f2138ed9b56aa161f0a3$exports = JSON.parse('{"ascending":"\u0432\u0438\u0441\u0445\u0456\u0434\u043D\u0438\u0439","ascendingSort":"\u0432\u0456\u0434\u0441\u043E\u0440\u0442\u043E\u0432\u0430\u043D\u043E \u0437\u0430 \u0441\u0442\u043E\u0432\u043F\u0446\u0435\u043C {columnName} \u0443 \u0432\u0438\u0441\u0445\u0456\u0434\u043D\u043E\u043C\u0443 \u043F\u043E\u0440\u044F\u0434\u043A\u0443","descending":"\u043D\u0438\u0437\u0445\u0456\u0434\u043D\u0438\u0439","descendingSort":"\u0432\u0456\u0434\u0441\u043E\u0440\u0442\u043E\u0432\u0430\u043D\u043E \u0437\u0430 \u0441\u0442\u043E\u0432\u043F\u0446\u0435\u043C {columnName} \u0443 \u043D\u0438\u0437\u0445\u0456\u0434\u043D\u043E\u043C\u0443 \u043F\u043E\u0440\u044F\u0434\u043A\u0443","select":"\u0412\u0438\u0431\u0440\u0430\u0442\u0438","selectAll":"\u0412\u0438\u0431\u0440\u0430\u0442\u0438 \u0432\u0441\u0435","sortable":"\u0441\u043E\u0440\u0442\u0443\u0432\u0430\u043B\u044C\u043D\u0438\u0439 \u0441\u0442\u043E\u0432\u043F\u0435\u0446\u044C"}');
  var $a20d09c83504027698611a275ce1$exports = {};
  $a20d09c83504027698611a275ce1$exports = JSON.parse('{"ascending":"\u5347\u5E8F","ascendingSort":"\u6309\u5217 {columnName} \u5347\u5E8F\u6392\u5E8F","descending":"\u964D\u5E8F","descendingSort":"\u6309\u5217 {columnName} \u964D\u5E8F\u6392\u5E8F","select":"\u9009\u62E9","selectAll":"\u5168\u9009","sortable":"\u53EF\u6392\u5E8F\u7684\u5217"}');
  var $c03eb0fa5ad03617e9f10edd7277$exports = {};
  $c03eb0fa5ad03617e9f10edd7277$exports = JSON.parse('{"ascending":"\u905E\u589E","ascendingSort":"\u5DF2\u4F9D\u64DA\u300C{columnName}\u300D\u6B04\u905E\u589E\u6392\u5E8F","descending":"\u905E\u6E1B","descendingSort":"\u5DF2\u4F9D\u64DA\u300C{columnName}\u300D\u6B04\u905E\u6E1B\u6392\u5E8F","select":"\u9078\u53D6","selectAll":"\u5168\u9078","sortable":"\u53EF\u6392\u5E8F\u7684\u6B04"}');
  ({
    "ar-AE": _interopRequireDefault$h($eeb22d73391416261d5896c11e3d50e$exports).default,
    "bg-BG": _interopRequireDefault$h($fa0ca9814ea3b12fba24314370$exports).default,
    "cs-CZ": _interopRequireDefault$h($b80ce4b4c86bf3ffea578b4830e9bd5b$exports).default,
    "da-DK": _interopRequireDefault$h($f8703fccb3f936bbb6d4446343295bc$exports).default,
    "de-DE": _interopRequireDefault$h($a1a2d26509424350c19569463ac338$exports).default,
    "el-GR": _interopRequireDefault$h($bec6f1ec38b0850d030a38bcf7db$exports).default,
    "en-US": _interopRequireDefault$h($d500688bbd18d209e8dc63a4586858a1$exports).default,
    "es-ES": _interopRequireDefault$h($e20050aa18c4f5920be25586b9$exports).default,
    "et-EE": _interopRequireDefault$h($f4962b42f94764add77fdce85fa673e$exports).default,
    "fi-FI": _interopRequireDefault$h($df17269a3e52e7316d1e1d297d12d66a$exports).default,
    "fr-FR": _interopRequireDefault$h($e82ea2755617047da4773a734e02b$exports).default,
    "he-IL": _interopRequireDefault$h($b1608dad8de71190a5ad2359bf9e33$exports).default,
    "hr-HR": _interopRequireDefault$h($eba9927d54a5f380c7f03b78d05786aa$exports).default,
    "hu-HU": _interopRequireDefault$h($cb0b1adc37bae4af50793b778e2108a6$exports).default,
    "it-IT": _interopRequireDefault$h($afb077696550f3b7e0dcee652c2814ed$exports).default,
    "ja-JP": _interopRequireDefault$h($bf0d1bbc15981ecf1d7062dedf93c2$exports).default,
    "ko-KR": _interopRequireDefault$h($dc136dabff22b6b7a44de4fb587f1a11$exports).default,
    "lt-LT": _interopRequireDefault$h($fc42de8ccef0faf18e4367afc6b7113$exports).default,
    "lv-LV": _interopRequireDefault$h($b865ab10f15e1da88c3a3a684709f7$exports).default,
    "nb-NO": _interopRequireDefault$h($c7866351d85f757b0f58566bf2c68748$exports).default,
    "nl-NL": _interopRequireDefault$h($df753aa2fbc2a27fbf427886dd55155$exports).default,
    "pl-PL": _interopRequireDefault$h($a79109898fc21f9f1ee17a9$exports).default,
    "pt-BR": _interopRequireDefault$h($c5906e4f561b7b47a7004651d0d55ea$exports).default,
    "pt-PT": _interopRequireDefault$h($fe13a3ddbc2699563319ab6e208dd9$exports).default,
    "ro-RO": _interopRequireDefault$h($f61b1759648a2ce080048699cf77$exports).default,
    "ru-RU": _interopRequireDefault$h($dddc1f59faf50dd794c3728b6f6a491$exports).default,
    "sk-SK": _interopRequireDefault$h($fb47d7d560830a4fcf06abc651a18141$exports).default,
    "sl-SI": _interopRequireDefault$h($b4a15520baa1794862d1bad05b5e4e34$exports).default,
    "sr-SP": _interopRequireDefault$h($a3b85c35d8db74bade6cb378eed15$exports).default,
    "sv-SE": _interopRequireDefault$h($abee331c4b5db2f7f481965f4b64ce$exports).default,
    "tr-TR": _interopRequireDefault$h($afaac376a1c1615a63ade428820f04bd$exports).default,
    "uk-UA": _interopRequireDefault$h($d9b08bc61b03f2138ed9b56aa161f0a3$exports).default,
    "zh-CN": _interopRequireDefault$h($a20d09c83504027698611a275ce1$exports).default,
    "zh-TW": _interopRequireDefault$h($c03eb0fa5ad03617e9f10edd7277$exports).default
  });
  ({
    "ar-AE": _interopRequireDefault$h($eeb22d73391416261d5896c11e3d50e$exports).default,
    "bg-BG": _interopRequireDefault$h($fa0ca9814ea3b12fba24314370$exports).default,
    "cs-CZ": _interopRequireDefault$h($b80ce4b4c86bf3ffea578b4830e9bd5b$exports).default,
    "da-DK": _interopRequireDefault$h($f8703fccb3f936bbb6d4446343295bc$exports).default,
    "de-DE": _interopRequireDefault$h($a1a2d26509424350c19569463ac338$exports).default,
    "el-GR": _interopRequireDefault$h($bec6f1ec38b0850d030a38bcf7db$exports).default,
    "en-US": _interopRequireDefault$h($d500688bbd18d209e8dc63a4586858a1$exports).default,
    "es-ES": _interopRequireDefault$h($e20050aa18c4f5920be25586b9$exports).default,
    "et-EE": _interopRequireDefault$h($f4962b42f94764add77fdce85fa673e$exports).default,
    "fi-FI": _interopRequireDefault$h($df17269a3e52e7316d1e1d297d12d66a$exports).default,
    "fr-FR": _interopRequireDefault$h($e82ea2755617047da4773a734e02b$exports).default,
    "he-IL": _interopRequireDefault$h($b1608dad8de71190a5ad2359bf9e33$exports).default,
    "hr-HR": _interopRequireDefault$h($eba9927d54a5f380c7f03b78d05786aa$exports).default,
    "hu-HU": _interopRequireDefault$h($cb0b1adc37bae4af50793b778e2108a6$exports).default,
    "it-IT": _interopRequireDefault$h($afb077696550f3b7e0dcee652c2814ed$exports).default,
    "ja-JP": _interopRequireDefault$h($bf0d1bbc15981ecf1d7062dedf93c2$exports).default,
    "ko-KR": _interopRequireDefault$h($dc136dabff22b6b7a44de4fb587f1a11$exports).default,
    "lt-LT": _interopRequireDefault$h($fc42de8ccef0faf18e4367afc6b7113$exports).default,
    "lv-LV": _interopRequireDefault$h($b865ab10f15e1da88c3a3a684709f7$exports).default,
    "nb-NO": _interopRequireDefault$h($c7866351d85f757b0f58566bf2c68748$exports).default,
    "nl-NL": _interopRequireDefault$h($df753aa2fbc2a27fbf427886dd55155$exports).default,
    "pl-PL": _interopRequireDefault$h($a79109898fc21f9f1ee17a9$exports).default,
    "pt-BR": _interopRequireDefault$h($c5906e4f561b7b47a7004651d0d55ea$exports).default,
    "pt-PT": _interopRequireDefault$h($fe13a3ddbc2699563319ab6e208dd9$exports).default,
    "ro-RO": _interopRequireDefault$h($f61b1759648a2ce080048699cf77$exports).default,
    "ru-RU": _interopRequireDefault$h($dddc1f59faf50dd794c3728b6f6a491$exports).default,
    "sk-SK": _interopRequireDefault$h($fb47d7d560830a4fcf06abc651a18141$exports).default,
    "sl-SI": _interopRequireDefault$h($b4a15520baa1794862d1bad05b5e4e34$exports).default,
    "sr-SP": _interopRequireDefault$h($a3b85c35d8db74bade6cb378eed15$exports).default,
    "sv-SE": _interopRequireDefault$h($abee331c4b5db2f7f481965f4b64ce$exports).default,
    "tr-TR": _interopRequireDefault$h($afaac376a1c1615a63ade428820f04bd$exports).default,
    "uk-UA": _interopRequireDefault$h($d9b08bc61b03f2138ed9b56aa161f0a3$exports).default,
    "zh-CN": _interopRequireDefault$h($a20d09c83504027698611a275ce1$exports).default,
    "zh-TW": _interopRequireDefault$h($c03eb0fa5ad03617e9f10edd7277$exports).default
  });
  ({
    "ar-AE": _interopRequireDefault$h($eeb22d73391416261d5896c11e3d50e$exports).default,
    "bg-BG": _interopRequireDefault$h($fa0ca9814ea3b12fba24314370$exports).default,
    "cs-CZ": _interopRequireDefault$h($b80ce4b4c86bf3ffea578b4830e9bd5b$exports).default,
    "da-DK": _interopRequireDefault$h($f8703fccb3f936bbb6d4446343295bc$exports).default,
    "de-DE": _interopRequireDefault$h($a1a2d26509424350c19569463ac338$exports).default,
    "el-GR": _interopRequireDefault$h($bec6f1ec38b0850d030a38bcf7db$exports).default,
    "en-US": _interopRequireDefault$h($d500688bbd18d209e8dc63a4586858a1$exports).default,
    "es-ES": _interopRequireDefault$h($e20050aa18c4f5920be25586b9$exports).default,
    "et-EE": _interopRequireDefault$h($f4962b42f94764add77fdce85fa673e$exports).default,
    "fi-FI": _interopRequireDefault$h($df17269a3e52e7316d1e1d297d12d66a$exports).default,
    "fr-FR": _interopRequireDefault$h($e82ea2755617047da4773a734e02b$exports).default,
    "he-IL": _interopRequireDefault$h($b1608dad8de71190a5ad2359bf9e33$exports).default,
    "hr-HR": _interopRequireDefault$h($eba9927d54a5f380c7f03b78d05786aa$exports).default,
    "hu-HU": _interopRequireDefault$h($cb0b1adc37bae4af50793b778e2108a6$exports).default,
    "it-IT": _interopRequireDefault$h($afb077696550f3b7e0dcee652c2814ed$exports).default,
    "ja-JP": _interopRequireDefault$h($bf0d1bbc15981ecf1d7062dedf93c2$exports).default,
    "ko-KR": _interopRequireDefault$h($dc136dabff22b6b7a44de4fb587f1a11$exports).default,
    "lt-LT": _interopRequireDefault$h($fc42de8ccef0faf18e4367afc6b7113$exports).default,
    "lv-LV": _interopRequireDefault$h($b865ab10f15e1da88c3a3a684709f7$exports).default,
    "nb-NO": _interopRequireDefault$h($c7866351d85f757b0f58566bf2c68748$exports).default,
    "nl-NL": _interopRequireDefault$h($df753aa2fbc2a27fbf427886dd55155$exports).default,
    "pl-PL": _interopRequireDefault$h($a79109898fc21f9f1ee17a9$exports).default,
    "pt-BR": _interopRequireDefault$h($c5906e4f561b7b47a7004651d0d55ea$exports).default,
    "pt-PT": _interopRequireDefault$h($fe13a3ddbc2699563319ab6e208dd9$exports).default,
    "ro-RO": _interopRequireDefault$h($f61b1759648a2ce080048699cf77$exports).default,
    "ru-RU": _interopRequireDefault$h($dddc1f59faf50dd794c3728b6f6a491$exports).default,
    "sk-SK": _interopRequireDefault$h($fb47d7d560830a4fcf06abc651a18141$exports).default,
    "sl-SI": _interopRequireDefault$h($b4a15520baa1794862d1bad05b5e4e34$exports).default,
    "sr-SP": _interopRequireDefault$h($a3b85c35d8db74bade6cb378eed15$exports).default,
    "sv-SE": _interopRequireDefault$h($abee331c4b5db2f7f481965f4b64ce$exports).default,
    "tr-TR": _interopRequireDefault$h($afaac376a1c1615a63ade428820f04bd$exports).default,
    "uk-UA": _interopRequireDefault$h($d9b08bc61b03f2138ed9b56aa161f0a3$exports).default,
    "zh-CN": _interopRequireDefault$h($a20d09c83504027698611a275ce1$exports).default,
    "zh-TW": _interopRequireDefault$h($c03eb0fa5ad03617e9f10edd7277$exports).default
  });
  "row-header-column-" + Math.random().toString(36).slice(2);
  var TableCellType;
  (function(TableCellType2) {
    TableCellType2["Default"] = "Default";
    TableCellType2["Checkbox"] = "Checkbox";
  })(TableCellType || (TableCellType = {}));
  function IconArrowDown(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconArrowDown"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M13.03 18.498l5.43-5.428a1.026 1.026 0 111.45 1.45l-7.18 7.18c-.4.4-1.05.4-1.45 0L4.1 14.52a1.026 1.026 0 111.45-1.45l5.43 5.428V3.026a1.026 1.026 0 112.05 0v15.472z"
    }));
  }
  var MemoIconArrowDown = React__default__default["default"].memo(IconArrowDown);
  function IconArrowUp(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconArrowUp"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M10.98 6.002L5.55 11.43A1.026 1.026 0 114.1 9.98l7.18-7.18c.4-.4 1.05-.4 1.45 0l7.18 7.18a1.026 1.026 0 01-1.45 1.45l-5.43-5.428v15.472a1.026 1.026 0 11-2.05 0V6.002z"
    }));
  }
  var MemoIconArrowUp = React__default__default["default"].memo(IconArrowUp);
  function IconArrowUpAndDown(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconArrowUpAndDown"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M10.975 6.002L7.525 9.45A1.026 1.026 0 016.076 8l5.2-5.2c.4-.4 1.05-.4 1.45 0l5.2 5.2a1.026 1.026 0 01-1.45 1.45l-3.449-3.448v12.496L16.523 15a1.026 1.026 0 011.45 1.45l-5.249 5.25c-.4.4-1.05.4-1.45 0l-5.25-5.25A1.026 1.026 0 017.477 15l3.498 3.498V6.002z"
    }));
  }
  var MemoIconArrowUpAndDown = React__default__default["default"].memo(IconArrowUpAndDown);
  var TableColumnHeaderType;
  (function(TableColumnHeaderType2) {
    TableColumnHeaderType2["Default"] = "Default";
    TableColumnHeaderType2["SelectAll"] = "SelectAll";
  })(TableColumnHeaderType || (TableColumnHeaderType = {}));
  var SelectionMode;
  (function(SelectionMode2) {
    SelectionMode2["NoSelect"] = "none";
    SelectionMode2["SingleSelect"] = "single";
    SelectionMode2["MultiSelect"] = "multiple";
  })(SelectionMode || (SelectionMode = {}));
  function IconAcademy(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconAcademy"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M20.518 10.275v6.911a2.221 2.221 0 01-.742 4.314 2.221 2.221 0 01-.741-4.314v-6.052l-1.463.802v4.115c0 1.485-2.436 2.22-5.56 2.22-3.122 0-5.559-.735-5.559-2.22v-3.702l-3.349-1.837c-1.043-.573-1.416-1.864-.82-2.868.224-.358.522-.573.82-.788l7.452-4.087a2.305 2.305 0 012.16 0l7.452 4.087c1.043.573 1.416 1.864.82 2.868-.144.23-.287.4-.47.55zM7.748 13.06v2.877c.02.018.047.04.08.064.181.13.478.264.863.381.846.258 2.015.409 3.268.409 1.252 0 2.421-.15 3.268-.409.384-.117.681-.25.862-.381a.838.838 0 00.08-.064v-3.231l-3.452 1.893c-.671.358-1.49.358-2.161 0l-2.807-1.54zm4.223-9.072a.7.7 0 00-.745 0L3.775 8.074a.571.571 0 00-.298.287.623.623 0 00.298.932l7.451 4.087a.7.7 0 00.745 0l7.452-4.087a.571.571 0 00.298-.286.623.623 0 00-.298-.933L11.97 3.988zm7.805 16.032a.74.74 0 10.001-1.481.74.74 0 000 1.481z"
    }));
  }
  var MemoIconAcademy = React__default__default["default"].memo(IconAcademy);
  function IconActions(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconActions"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12 8.5a1.5 1.5 0 110-3 1.5 1.5 0 010 3zm0 5a1.5 1.5 0 110-3 1.5 1.5 0 010 3zm0 5a1.5 1.5 0 110-3 1.5 1.5 0 010 3z"
    }));
  }
  var MemoIconActions = React__default__default["default"].memo(IconActions);
  function IconActivities(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconActivities"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M11.25 20.216V12.75H8.722a9.705 9.705 0 01-2.183 5.434A8.3 8.3 0 015.5 17.08a8.21 8.21 0 001.716-4.331H3.784a8.252 8.252 0 007.466 7.466zM3.784 11.25h3.432A8.21 8.21 0 005.5 6.919a8.3 8.3 0 011.039-1.103 9.705 9.705 0 012.183 5.434h2.528V3.784a8.252 8.252 0 00-7.466 7.466zm8.966-7.466v7.466h2.528a9.705 9.705 0 012.183-5.434A8.3 8.3 0 0118.5 6.92a8.21 8.21 0 00-1.716 4.331h3.432a8.252 8.252 0 00-7.466-7.466zm7.466 8.966h-3.432a8.21 8.21 0 001.716 4.331 8.3 8.3 0 01-1.039 1.103 9.705 9.705 0 01-2.183-5.434H12.75v7.466a8.252 8.252 0 007.466-7.466zm-8.216 9c-5.385 0-9.75-4.365-9.75-9.75S6.615 2.25 12 2.25s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75z"
    }));
  }
  var MemoIconActivities = React__default__default["default"].memo(IconActivities);
  function IconActivity(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconActivity"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M14.924 15.438l-1.53 1.386c.013.026.02.056.02.088V17c0 .39-.14.726-.417 1.006-.277.28-.61.42-.997.42-.374 0-.697-.127-.968-.381a1.382 1.382 0 01-.445-.947l-1.433-.996a1.818 1.818 0 01-.33.127 1.357 1.357 0 01-.367.048 1.37 1.37 0 01-.997-.41 1.369 1.369 0 01-.417-1.015c0-.391.139-.726.417-1.006.277-.28.61-.42.997-.42s.72.14.997.42c.277.28.416.615.416 1.006l1.356.957c.103-.079.222-.137.358-.176.135-.04.274-.059.416-.059.09 0 .18.01.271.03.09.019.18.042.271.068l1.588-1.445v-.079c0-.403.135-.742.406-1.015.272-.274.607-.41 1.007-.41.388 0 .72.136.997.41.278.273.417.612.417 1.015 0 .391-.139.726-.417 1.006-.277.28-.61.42-.997.42-.116 0-.226-.013-.329-.039a1.904 1.904 0 01-.29-.098zM3.5 4.148c0-.599.207-1.106.62-1.523C4.533 2.208 5.03 2 5.61 2h12.76c.594 0 1.097.208 1.51.625.413.417.62.924.62 1.523v15.704c0 .599-.207 1.106-.62 1.523a2.046 2.046 0 01-1.51.625H5.61c-.58 0-1.077-.208-1.49-.625a2.082 2.082 0 01-.62-1.523V4.148zm1.413.704v14.296c0 .391.14.726.417 1.006.277.28.61.42.997.42h11.346c.387 0 .72-.14.997-.42.278-.28.417-.615.417-1.006V4.852c0-.391-.14-.726-.417-1.006-.277-.28-.61-.42-.997-.42H6.327c-.387 0-.72.14-.997.42-.278.28-.417.615-.417 1.006zM7.043 7c0-.195.068-.365.204-.508a.676.676 0 01.513-.215h8.48c.194 0 .362.072.504.215a.697.697 0 01.213.508.697.697 0 01-.213.508.685.685 0 01-.504.215H7.76a.676.676 0 01-.513-.215A.714.714 0 017.043 7zm0 2.852c0-.196.068-.362.204-.498a.67.67 0 01.493-.206h5.673c.194 0 .362.069.504.206a.666.666 0 01.213.498.697.697 0 01-.213.507.685.685 0 01-.504.215H7.74a.67.67 0 01-.493-.205.705.705 0 01-.204-.517z"
    }));
  }
  var MemoIconActivity = React__default__default["default"].memo(IconActivity);
  function IconAdd(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconAdd"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M16 29.333c-1.84 0-3.572-.347-5.195-1.041A13.38 13.38 0 016.56 25.44a13.38 13.38 0 01-2.852-4.245C3.014 19.572 2.667 17.84 2.667 16c0-1.84.347-3.572 1.041-5.195A13.38 13.38 0 016.56 6.56a13.38 13.38 0 014.245-2.852C12.428 3.014 14.16 2.667 16 2.667c1.84 0 3.572.347 5.195 1.041A13.38 13.38 0 0125.44 6.56a13.38 13.38 0 012.852 4.245c.694 1.623 1.041 3.355 1.041 5.195 0 1.84-.347 3.572-1.041 5.195a13.38 13.38 0 01-2.852 4.245 13.38 13.38 0 01-4.245 2.852c-1.623.694-3.355 1.041-5.195 1.041zm0-1.9c1.58 0 3.064-.3 4.453-.9a11.55 11.55 0 003.633-2.447 11.55 11.55 0 002.448-3.633c.599-1.389.898-2.873.898-4.453s-.3-3.064-.898-4.453a11.55 11.55 0 00-2.448-3.633 11.55 11.55 0 00-3.633-2.448A11.124 11.124 0 0016 4.568c-1.58 0-3.064.3-4.453.898a11.55 11.55 0 00-3.633 2.448 11.55 11.55 0 00-2.448 3.633A11.124 11.124 0 004.568 16c0 1.58.3 3.064.898 4.453a11.55 11.55 0 002.448 3.633 11.55 11.55 0 003.633 2.448c1.389.599 2.873.898 4.453.898zm0-4.767a.958.958 0 01-.958-.958v-4.75h-4.75a.958.958 0 110-1.916h4.75v-4.75a.958.958 0 111.916 0v4.75h4.75a.958.958 0 110 1.916h-4.75v4.75a.958.958 0 01-.958.958z"
    }));
  }
  var MemoIconAdd = React__default__default["default"].memo(IconAdd);
  function IconAddToCollection(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconAddToCollection"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M13.5 7.458a4.524 4.524 0 01-.026-.495c0-.77.19-1.482.573-2.136.382-.654.9-1.172 1.554-1.554a4.127 4.127 0 012.136-.573c.77 0 1.482.191 2.136.573.654.382 1.172.9 1.554 1.554A4.16 4.16 0 0122 6.963c0 .777-.191 1.492-.573 2.146a4.28 4.28 0 01-1.554 1.544 4.16 4.16 0 01-2.136.573c-.284 0-.559-.025-.826-.076v6.07c0 .465-.168.867-.504 1.203a1.658 1.658 0 01-1.217.504h-.564v.578c0 .475-.168.88-.505 1.217a1.658 1.658 0 01-1.216.504H3.72c-.475 0-.88-.168-1.217-.504A1.658 1.658 0 012 19.505v-8.04c0-.467.168-.868.504-1.204a1.658 1.658 0 011.217-.504H4.3v-.578c0-.475.168-.881.504-1.217a1.658 1.658 0 011.217-.504h7.48zm2.269 3.29A4.28 4.28 0 0113.794 8.6H6.584a1.1 1.1 0 00-.807.336 1.1 1.1 0 00-.336.806l7.463.014c.475 0 .88.168 1.216.504.337.336.505.737.505 1.203v6.32a1.1 1.1 0 00.806-.336 1.1 1.1 0 00.337-.807v-5.894zm-4.115 9.335h.672a1.1 1.1 0 00.807-.336 1.1 1.1 0 00.336-.807v-6.897a1.1 1.1 0 00-.336-.807 1.1 1.1 0 00-.807-.336h-8.04a1.1 1.1 0 00-.807.336 1.1 1.1 0 00-.336.807v5.835l3.16-1.842 5.351 4.047zm-2.084 0L6.276 17.53l-3.093 1.667a1.1 1.1 0 00.39.632c.206.17.444.255.713.255H9.57zm.457-3.442a2.2 2.2 0 01-1.613-.672 2.216 2.216 0 01-.673-1.627c0-.637.224-1.179.673-1.627a2.2 2.2 0 011.613-.672c.637 0 1.179.224 1.627.672.448.448.672.99.672 1.627 0 .636-.224 1.179-.672 1.627-.448.448-.99.672-1.627.672zm0-1.156c.323 0 .596-.112.82-.336a1.1 1.1 0 00.337-.807 1.1 1.1 0 00-.337-.807 1.116 1.116 0 00-.82-.336 1.1 1.1 0 00-.807.336 1.1 1.1 0 00-.336.807c0 .314.112.583.336.807a1.1 1.1 0 00.807.336zm10.196-8.163v-.709a.345.345 0 00-.107-.252.345.345 0 00-.252-.107h-1.418V4.836a.345.345 0 00-.107-.252.345.345 0 00-.252-.107h-.71a.314.314 0 00-.242.107.345.345 0 00-.107.252v1.418h-1.427a.335.335 0 00-.243.107.345.345 0 00-.107.252v.71a.345.345 0 00.35.349h1.427v1.427c0 .098.036.179.107.243a.314.314 0 00.243.107h.709a.345.345 0 00.252-.107.314.314 0 00.107-.243V7.672h1.418a.363.363 0 00.252-.097.345.345 0 00.107-.253z"
    }));
  }
  var MemoIconAddToCollection = React__default__default["default"].memo(IconAddToCollection);
  function IconAdobeCreativeCloud(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconAdobeCreativeCloud"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M22.5 11.655v.691c-.007.038-.015.075-.02.112-.035.3-.058.603-.108.902a7.379 7.379 0 01-1.029 2.705 7.693 7.693 0 01-3.19 2.89 7.462 7.462 0 01-2.46.727c-.19.022-.38.041-.57.062H7.746c-.038-.007-.075-.018-.112-.02a6.29 6.29 0 01-2.142-.515 6.533 6.533 0 01-3.317-3.153 6.202 6.202 0 01-.613-2.04L1.5 13.5v-.67c.007-.038.018-.075.02-.113a6.18 6.18 0 01.404-1.871c.626-1.619 1.719-2.82 3.27-3.596a6.408 6.408 0 012.562-.662c.44-.023.879.002 1.316.06a.166.166 0 00.124-.04 7.779 7.779 0 012.15-1.559 7.525 7.525 0 012.473-.729c.204-.023.408-.042.612-.063h.63c.04.006.082.014.123.018.312.037.625.06.934.111a7.4 7.4 0 012.689 1.02 7.694 7.694 0 012.904 3.196 7.43 7.43 0 01.726 2.462c.023.198.042.395.063.592zM10.758 7.18c.013.017.016.025.021.027.432.213.845.463 1.234.746.025.018.085.01.115-.008 1.07-.678 2.23-.912 3.475-.69 1.22.216 2.213.825 2.972 1.8.86 1.102 1.187 2.348.95 3.735-.16.929-.532 1.763-1.165 2.461-1.154 1.274-2.6 1.8-4.302 1.577a4.542 4.542 0 01-2.7-1.346c-.961-.97-1.928-1.934-2.892-2.902-.128-.129-.271-.233-.456-.255a.725.725 0 00-.756.412c-.124.259-.108.55.162.816 1.074 1.055 2.138 2.119 3.211 3.175.184.181.381.349.59.5.784.57 1.667.885 2.624 1.012a6.342 6.342 0 002.236-.089 6.197 6.197 0 003.5-2.148 6.154 6.154 0 001.38-3.157 6.186 6.186 0 00-.058-2.031c-.213-1.094-.676-2.073-1.418-2.906-1.415-1.59-3.195-2.299-5.313-2.14-.815.06-1.586.3-2.312.68a6.1 6.1 0 00-1.098.731zm-.518 11.092l-.087-.081c-.44-.415-.881-.827-1.315-1.247a.356.356 0 00-.28-.118c-.44.01-.88.013-1.313-.085-2.153-.487-3.404-2.829-2.61-4.889.626-1.624 2.359-2.614 4.068-2.309.766.137 1.438.461 1.99 1.03.673.695 1.366 1.37 2.047 2.058a.611.611 0 00.547.197c.277-.04.498-.171.598-.443a.655.655 0 00-.152-.726c-.714-.723-1.411-1.465-2.154-2.158C10.14 8.16 8.44 7.76 6.56 8.33c-2.527.768-4.006 3.378-3.429 5.954a5.089 5.089 0 004.98 3.995h2.011c.034 0 .067-.003.118-.006z"
    }));
  }
  var MemoIconAdobeCreativeCloud = React__default__default["default"].memo(IconAdobeCreativeCloud);
  function IconAlignBottom(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconAlignBottom"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M3.865 22.04A.867.867 0 013 21.17c0-.48.387-.87.865-.87h16.27c.478 0 .865.39.865.87s-.387.87-.865.87H3.865zm7.32-6.04V2.87c0-.522.346-.87.865-.87s.865.348.865.87V16l4.584-4.609a.833.833 0 011.211 0 .844.844 0 010 1.218l-6.055 6.087a.833.833 0 01-1.21 0l-6.056-6.087a.844.844 0 010-1.218.833.833 0 011.211 0L11.185 16z"
    }));
  }
  var MemoIconAlignBottom = React__default__default["default"].memo(IconAlignBottom);
  function IconAlignCenter(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconAlignCenter"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M11.223 5.047c0-.408.344-.74.77-.74.424 0 .769.332.769.74v13.906c0 .408-.345.74-.77.74-.425 0-.769-.332-.769-.74V5.047zm-3.136 7.722H2.762a.77.77 0 010-1.538h5.322L6.007 8.634a.77.77 0 111.201-.96l3.006 3.756c.295.27.334.727.08 1.044L7.217 16.31a.77.77 0 01-1.081.12.766.766 0 01-.12-1.079l2.07-2.582zm5.543-1.148a.775.775 0 01.07-.102l3.076-3.846a.77.77 0 111.202.961L15.9 11.231h5.323a.77.77 0 010 1.538h-5.332l2.083 2.604a.77.77 0 01-1.202.96l-3.077-3.846a.77.77 0 01-.065-.866z"
    }));
  }
  var MemoIconAlignCenter = React__default__default["default"].memo(IconAlignCenter);
  function IconAlignLeft(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconAlignLeft"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M1.98 3.885c0-.478.39-.865.87-.865s.87.387.87.865v16.27c0 .477-.39.865-.87.865a.867.867 0 01-.87-.865V3.885zm6.04 7.32h13.13c.522 0 .87.345.87.864 0 .52-.348.865-.87.865H8.02l4.608 4.585a.833.833 0 010 1.21.844.844 0 01-1.217 0l-6.087-6.054a.833.833 0 010-1.211l6.087-6.055a.844.844 0 011.217 0 .833.833 0 010 1.211L8.02 11.204z"
    }));
  }
  var MemoIconAlignLeft = React__default__default["default"].memo(IconAlignLeft);
  function IconAlignMiddle(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconAlignMiddle"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5.04 12.77c-.409 0-.74-.345-.74-.77 0-.425.331-.77.74-.77h13.905c.409 0 .74.345.74.77 0 .425-.331.77-.74.77H5.04zm7.722 3.136v5.325a.77.77 0 01-1.539 0v-5.323l-2.596 2.077a.77.77 0 11-.961-1.201l3.757-3.006a.766.766 0 011.043-.08l3.836 3.078a.77.77 0 01.12 1.08.766.766 0 01-1.078.12l-2.582-2.07zm-1.149-5.544a.775.775 0 01-.101-.069L7.666 7.216a.77.77 0 11.96-1.201l2.597 2.077V2.769a.77.77 0 011.539 0v5.332l2.603-2.082a.77.77 0 01.96 1.2l-3.845 3.078a.77.77 0 01-.867.065z"
    }));
  }
  var MemoIconAlignMiddle = React__default__default["default"].memo(IconAlignMiddle);
  function IconAlignRight(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconAlignRight"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M22 3.865v16.27c0 .478-.39.865-.87.865a.867.867 0 01-.87-.865V3.865c0-.478.39-.865.87-.865s.87.387.87.865zm-6 7.222l-4.609-4.609a.84.84 0 010-1.217.84.84 0 011.218 0l6.087 6.087a.84.84 0 010 1.217l-6.087 6.087a.84.84 0 01-1.218 0 .84.84 0 010-1.217L16 12.826H2.87c-.522 0-.87-.348-.87-.87 0-.521.348-.869.87-.869H16z"
    }));
  }
  var MemoIconAlignRight = React__default__default["default"].memo(IconAlignRight);
  function IconAlignTop(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconAlignTop"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M3.865 2h16.27c.478 0 .865.39.865.87s-.387.87-.865.87H3.865A.867.867 0 013 2.87c0-.48.387-.87.865-.87zm7.222 6l-4.609 4.609a.84.84 0 01-1.217 0 .84.84 0 010-1.218l6.087-6.087a.84.84 0 011.217 0l6.087 6.087a.84.84 0 010 1.218.84.84 0 01-1.217 0L12.826 8v13.13c0 .522-.348.87-.87.87-.521 0-.869-.348-.869-.87V8z"
    }));
  }
  var MemoIconAlignTop = React__default__default["default"].memo(IconAlignTop);
  function IconAnalytics(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconAnalytics"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M20.535 11.277a8.134 8.134 0 00-.771-2.93 8.683 8.683 0 00-1.7-2.411 8.683 8.683 0 00-2.412-1.7 8.134 8.134 0 00-2.93-.771v7.812h7.813zm0 1.446h-9.258V3.465a8.424 8.424 0 00-3.076.85 8.416 8.416 0 00-2.49 1.865 8.906 8.906 0 00-1.67 2.646A8.253 8.253 0 003.426 12c0 1.185.224 2.298.674 3.34a8.663 8.663 0 001.836 2.724A8.663 8.663 0 008.66 19.9a8.343 8.343 0 003.34.674c1.12 0 2.178-.205 3.174-.615a8.906 8.906 0 002.646-1.67 8.416 8.416 0 001.866-2.49 8.424 8.424 0 00.85-3.076zM12 22c-1.38 0-2.679-.26-3.896-.781A10.035 10.035 0 014.92 19.08a10.035 10.035 0 01-2.139-3.184A9.801 9.801 0 012 12c0-1.38.26-2.679.781-3.896A10.035 10.035 0 014.92 4.92 10.035 10.035 0 018.104 2.78 9.801 9.801 0 0112 2c1.38 0 2.679.26 3.896.781A10.035 10.035 0 0119.08 4.92a10.035 10.035 0 012.139 3.184A9.801 9.801 0 0122 12c0 1.38-.26 2.679-.781 3.896a10.035 10.035 0 01-2.139 3.184 10.035 10.035 0 01-3.184 2.139A9.801 9.801 0 0112 22z"
    }));
  }
  var MemoIconAnalytics = React__default__default["default"].memo(IconAnalytics);
  function IconAngleDown(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconAngleDown"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M18.862 8.48a.83.83 0 01.576-.23.83.83 0 01.576.23.751.751 0 010 1.093L11.98 17.25 3.945 9.573a.75.75 0 01.043-1.053.84.84 0 011.101-.04l6.89 6.575 6.883-6.576z"
    }));
  }
  var MemoIconAngleDown = React__default__default["default"].memo(IconAngleDown);
  function IconAnimalsNature(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconAnimalsNature"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M10.05 15.473L8.843 16.69a4.85 4.85 0 002.777.869h.017c2.866.065 4.912-1.984 6.082-5.45.853-2.531 1.028-5.77.72-6.082-.307-.312-3.54-.148-6.102.696-3.489 1.15-5.59 3.167-5.59 5.963 0 1.118.376 2.148 1.01 2.97l1.192-1.204.002-.024.394-3.474a.75.75 0 011.49.17l-.182 1.607 2.708-2.733a.75.75 0 111.065 1.056l-2.654 2.68 1.63-.215a.75.75 0 01.195 1.488l-3.549.466zM6.693 16.73a6.346 6.346 0 01-1.446-4.043c0-3.576 2.585-6.057 6.62-7.388 3.086-1.017 6.774-1.203 7.64-.325.86.872.66 4.569-.367 7.615-1.355 4.016-3.883 6.55-7.529 6.47a6.344 6.344 0 01-3.836-1.29l-1.743 1.76a.75.75 0 11-1.066-1.056l1.727-1.743z"
    }));
  }
  var MemoIconAnimalsNature = React__default__default["default"].memo(IconAnimalsNature);
  function IconAnnotations(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconAnnotations"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M16.643 22a5.357 5.357 0 110-10.714 5.357 5.357 0 010 10.714zm0-1.429a3.929 3.929 0 100-7.857 3.929 3.929 0 000 7.857zm-.656-4.996h-1.29v-.077c0-.802.58-1.684 1.923-1.684 1.178 0 1.937.648 1.937 1.5 0 .783-.525 1.232-.944 1.665l-.985 1.028v.058h2.01v1.078h-3.86v-.844l1.861-1.884c.272-.272.572-.575.572-.963 0-.314-.261-.575-.618-.575-.38 0-.61.287-.61.61 0 .03.004.069.004.088zm-8.63-2.86A5.357 5.357 0 117.357 2a5.357 5.357 0 010 10.714zm0-1.43a3.929 3.929 0 100-7.856 3.929 3.929 0 000 7.857zM8.44 9.858H7.077V5.86h-.065l-1.166.813V5.48l1.231-.86H8.44v5.237z"
    }));
  }
  var MemoIconAnnotations = React__default__default["default"].memo(IconAnnotations);
  function IconAppearance(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconAppearance"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M10.13 19.353l.552.552c.15.15.33.225.542.225a.738.738 0 00.541-.225l4.392-4.395-7.66-7.664-4.393 4.394a.738.738 0 00-.225.542c0 .21.075.391.225.541l.552.552L6.29 12.22a.807.807 0 01.562-.225c.211 0 .391.075.541.225.15.163.225.35.225.562a.738.738 0 01-.225.541L5.74 14.98l1.103 1.083.551-.531a.708.708 0 01.542-.246c.21 0 .398.075.561.225a.75.75 0 01.225.552.72.72 0 01-.245.552l-.531.552 1.083 1.083 2.757-2.739c.15-.15.33-.225.542-.225.211 0 .391.075.541.225a.75.75 0 01.225.552.75.75 0 01-.225.552l-2.737 2.739zm4.393-14.246l2.186-2.187c.6-.613 1.328-.92 2.186-.92.858 0 1.586.307 2.186.92.613.6.919 1.328.919 2.187 0 .858-.306 1.587-.92 2.187L18.896 9.48l1.655 1.655c.449.45.674.995.674 1.635s-.232 1.193-.695 1.656l-2.186 2.187a.738.738 0 01-.541.225.738.738 0 01-.542-.225l-4.943 4.926c-.3.3-.664.453-1.093.46a1.422 1.422 0 01-1.093-.46l-7.682-7.665c-.3-.3-.449-.664-.449-1.093 0-.43.157-.8.47-1.114l4.923-4.926A.738.738 0 017.17 6.2c0-.21.074-.391.224-.541L9.58 3.45c.45-.45.998-.674 1.645-.674s1.195.225 1.644.674l1.655 1.656zm-3.84-.552L9.027 6.19l8.764 8.789 1.654-1.656c.15-.15.225-.33.225-.541a.808.808 0 00-.225-.562l-7.68-7.665a.738.738 0 00-.542-.225.738.738 0 00-.542.225zm7.109-.552L15.606 6.19l2.186 2.207 2.206-2.207c.3-.3.45-.664.45-1.093 0-.43-.15-.794-.45-1.094-.313-.3-.681-.45-1.103-.45-.422 0-.79.15-1.103.45z"
    }));
  }
  var MemoIconAppearance = React__default__default["default"].memo(IconAppearance);
  function IconApprove(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconApprove"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M8.22 12.557a.708.708 0 011-.003l1.53 1.516 4.532-4.55a.717.717 0 011.015 0c.28.28.28.735 0 1.015l-5.547 5.547-2.53-2.53a.704.704 0 010-.995zM12 22c-1.38 0-2.679-.26-3.896-.781A10.035 10.035 0 014.92 19.08a10.035 10.035 0 01-2.139-3.184A9.801 9.801 0 012 12c0-1.38.26-2.679.781-3.896A10.035 10.035 0 014.92 4.92 10.035 10.035 0 018.104 2.78 9.801 9.801 0 0112 2c1.38 0 2.679.26 3.896.781A10.035 10.035 0 0119.08 4.92a10.035 10.035 0 012.139 3.184A9.801 9.801 0 0122 12c0 1.38-.26 2.679-.781 3.896a10.035 10.035 0 01-2.139 3.184 10.035 10.035 0 01-3.184 2.139A9.801 9.801 0 0112 22zm0-1.426a8.343 8.343 0 003.34-.674 8.663 8.663 0 002.724-1.836A8.663 8.663 0 0019.9 15.34a8.343 8.343 0 00.674-3.34 8.343 8.343 0 00-.674-3.34 8.663 8.663 0 00-1.836-2.724A8.663 8.663 0 0015.34 4.1 8.343 8.343 0 0012 3.426a8.343 8.343 0 00-3.34.674 8.663 8.663 0 00-2.724 1.836A8.663 8.663 0 004.1 8.66 8.343 8.343 0 003.426 12c0 1.185.224 2.298.674 3.34a8.663 8.663 0 001.836 2.724A8.663 8.663 0 008.66 19.9a8.343 8.343 0 003.34.674z"
    }));
  }
  var MemoIconApprove = React__default__default["default"].memo(IconApprove);
  function IconArrow(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconArrow"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M18.632 1.5l.62 3.884 3.748.47-3.713 3.702-1.7-.183a8.41 8.41 0 011.4 4.66c0 4.676-3.802 8.467-8.493 8.467C5.803 22.5 2 18.71 2 14.033c0-4.676 3.803-8.467 8.494-8.467 1.713 0 3.308.506 4.643 1.376l-.19-1.769L18.633 1.5zm-2.715 8.2a6.885 6.885 0 011.526 4.333c0 3.826-3.111 6.928-6.95 6.928-3.837 0-6.949-3.102-6.949-6.928s3.112-6.928 6.95-6.928c1.637 0 3.142.565 4.33 1.509l-1.099 1.1a5.392 5.392 0 00-3.231-1.07c-2.985 0-5.405 2.413-5.405 5.389 0 2.976 2.42 5.388 5.405 5.388 2.985 0 5.405-2.412 5.405-5.388a5.353 5.353 0 00-1.08-3.232l1.098-1.1zm-3.297 1.12a3.852 3.852 0 00-2.126-.636 3.855 3.855 0 00-3.861 3.849 3.855 3.855 0 003.86 3.849 3.855 3.855 0 003.861-3.85c0-.785-.236-1.515-.641-2.124l-1.128 1.13a2.313 2.313 0 01-2.09 3.304 2.313 2.313 0 01-2.318-2.31 2.313 2.313 0 012.317-2.308c.357 0 .696.08.999.225l1.127-1.129zm-2.126 3.983a.77.77 0 10-.773-.77c0 .425.346.77.773.77zm7.333-8.128l-.248-1.948-1.023 1.02.222 1.974 1.942.23 1.047-1.044-1.94-.232z"
    }));
  }
  var MemoIconArrow = React__default__default["default"].memo(IconArrow);
  function IconArrowLeft(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconArrowLeft"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5.502 13.03l5.428 5.43a1.026 1.026 0 11-1.45 1.45L2.3 12.73c-.4-.4-.4-1.05 0-1.45L9.48 4.1a1.026 1.026 0 111.45 1.45l-5.428 5.43h15.472a1.026 1.026 0 110 2.05H5.502z"
    }));
  }
  var MemoIconArrowLeft = React__default__default["default"].memo(IconArrowLeft);
  function IconArrowRight(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconArrowRight"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M18.498 13.03H3.026a1.026 1.026 0 110-2.05h15.472L13.07 5.55a1.026 1.026 0 111.45-1.45l7.18 7.18c.4.4.4 1.05 0 1.45l-7.18 7.18a1.026 1.026 0 01-1.45-1.45l5.428-5.43z"
    }));
  }
  var MemoIconArrowRight = React__default__default["default"].memo(IconArrowRight);
  function IconAssets(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconAssets"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12.371 16.198h5.781c.638 0 1.182-.234 1.631-.701.45-.467.674-1.028.674-1.682v-7.87c0-.654-.225-1.212-.674-1.672-.449-.46-.993-.691-1.63-.691H5.847c-.638 0-1.182.23-1.631.69a2.307 2.307 0 00-.674 1.673v7.87c0 .667.225 1.231.674 1.692.449.46.993.69 1.63.69h2.305v2.925c0 .213.059.347.176.4.117.053.254.007.41-.14l3.633-3.184zM6.61 17.78h-.761a3.682 3.682 0 01-1.504-.31 3.79 3.79 0 01-1.221-.852 4.135 4.135 0 01-.82-1.251A3.869 3.869 0 012 13.835v-7.89c0-.547.1-1.061.303-1.542.202-.48.475-.898.82-1.252a3.868 3.868 0 011.22-.84c.47-.208.97-.311 1.505-.311h12.304c.534 0 1.035.103 1.504.31a3.868 3.868 0 012.041 2.093c.202.48.303.995.303 1.542v7.89c0 .547-.1 1.058-.303 1.532a4.135 4.135 0 01-.82 1.251 3.79 3.79 0 01-1.22.851c-.47.207-.97.31-1.505.31h-4.96l-4.395 3.686c-.6.507-1.113.654-1.543.44-.43-.214-.645-.72-.645-1.522V17.78zm.782-6.308c-.43 0-.795-.157-1.094-.47-.3-.314-.45-.685-.45-1.112 0-.44.15-.814.45-1.121.3-.308.664-.461 1.094-.461.416 0 .774.153 1.074.46.3.308.45.681.45 1.122 0 .427-.15.798-.45 1.111-.3.314-.658.47-1.074.47zm4.609 0c-.43 0-.794-.157-1.094-.47-.3-.314-.449-.685-.449-1.112 0-.44.15-.814.45-1.121.299-.308.663-.461 1.093-.461.43 0 .794.153 1.094.46.3.308.449.681.449 1.122 0 .427-.15.798-.45 1.111-.299.314-.663.47-1.093.47zm4.61 0c-.417 0-.775-.157-1.075-.47-.3-.314-.45-.685-.45-1.112 0-.44.15-.814.45-1.121.3-.308.658-.461 1.074-.461.43 0 .795.153 1.094.46.3.308.45.681.45 1.122 0 .427-.15.798-.45 1.111-.3.314-.664.47-1.094.47z"
    }));
  }
  var MemoIconAssets = React__default__default["default"].memo(IconAssets);
  function IconAttachment(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconAttachment"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M3.5 5.5v8.25a2.5 2.5 0 105 0V4.5a4.25 4.25 0 10-8.5 0v9.25a6 6 0 1012 0V5.5a.75.75 0 10-1.5 0v8.25a4.5 4.5 0 11-9 0V4.5a2.75 2.75 0 015.5 0v9.25a1 1 0 01-2 0V5.5a.75.75 0 00-1.5 0z"
    }));
  }
  var MemoIconAttachment = React__default__default["default"].memo(IconAttachment);
  function IconAttentionFilled(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconAttentionFilled"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-3c.828 0 1.5-.624 1.5-1.393 0-.77-.672-1.393-1.5-1.393s-1.5.624-1.5 1.393c0 .77.672 1.393 1.5 1.393zm0-13c-.828 0-1.5.624-1.5 1.393 0 .04.009.078.012.117h-.007l.598 6.747h.005c.038.427.421.766.892.766.471 0 .854-.338.893-.766h.005l.598-6.747h-.008c.004-.039.012-.076.012-.117C13.5 6.623 12.828 6 12 6z"
    }));
  }
  var MemoIconAttentionFilled = React__default__default["default"].memo(IconAttentionFilled);
  function IconAttributes(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconAttributes"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M18.955 10.462h-6.186a.767.767 0 01-.769-.77V3.538H6.596c-.853 0-1.55.686-1.55 1.532v13.86c0 .847.69 1.532 1.541 1.532h10.826c.852 0 1.542-.686 1.542-1.532v-8.468zm0-1.539v-.177l-5.41-5.063v5.24h5.41zM3.5 5.081A3.089 3.089 0 016.587 2h6.765c.427 0 1.023.235 1.339.532l5.243 4.936c.313.294.566.878.566 1.305v10.155c0 1.696-1.391 3.072-3.098 3.072H6.598A3.087 3.087 0 013.5 18.919V5.08zm4.19 11.407l2.503-2.164-2.507-2.2a.676.676 0 01-.06-.957.683.683 0 01.96-.06l3.091 2.712a.676.676 0 01-.003 1.02l-3.091 2.673a.683.683 0 01-.96-.068.676.676 0 01.067-.956zm5.083.897a.771.771 0 01-.773-.77c0-.424.346-.769.773-.769h3.09c.427 0 .773.345.773.77 0 .424-.346.769-.772.769h-3.091z"
    }));
  }
  var MemoIconAttributes = React__default__default["default"].memo(IconAttributes);
  function IconBackward5Seconds(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconBackward5Seconds"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12.65 19.561a.85.85 0 010-1.7h4.5a2.15 2.15 0 002.15-2.15v-4a2.15 2.15 0 00-2.15-2.15h-3.428l1.712 1.712a.711.711 0 01-.002 1.008.716.716 0 01-1.009.002L11.39 9.249a.701.701 0 01-.207-.505.71.71 0 01.207-.502l3.033-3.033a.711.711 0 011.01.001.716.716 0 010 1.009l-1.64 1.642h3.357a3.85 3.85 0 013.845 3.652l.005.198v4a3.85 3.85 0 01-3.85 3.85zM5.789 16.165c-1.364 0-2.497-.737-2.706-1.815l1.353-.374c.198.572.748.913 1.375.913.836 0 1.375-.594 1.375-1.375 0-.836-.572-1.408-1.408-1.408-.55 0-1.012.253-1.21.693H3.347V8.3h4.917v1.298H4.667v1.859c.253-.33.77-.627 1.54-.627 1.463 0 2.475 1.056 2.475 2.563 0 1.617-1.199 2.772-2.893 2.772z"
    }));
  }
  var MemoIconBackward5Seconds = React__default__default["default"].memo(IconBackward5Seconds);
  function IconBookmark(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconBookmark"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M7.333 3.6a.79.79 0 00-.777.8v15.998l5.032-3.235a.76.76 0 01.824 0l5.032 3.235V4.4a.79.79 0 00-.777-.8H7.333zm.047 18.154c-1.036.666-2.38-.1-2.38-1.356V4.4C5 3.074 6.045 2 7.333 2h9.334C17.955 2 19 3.074 19 4.4v15.998c0 1.256-1.344 2.022-2.38 1.356L12 18.784l-4.62 2.97z"
    }));
  }
  var MemoIconBookmark = React__default__default["default"].memo(IconBookmark);
  function IconBrand(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconBrand"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5.41 9.353v9.255c0 .586.475 1.06 1.06 1.06h11.06a1.06 1.06 0 001.06-1.06V9.353L12 4.74 5.41 9.353zm14.747 1.096v8.16a2.627 2.627 0 01-2.627 2.626H6.47a2.627 2.627 0 01-2.627-2.627V10.45l-.61.428a.783.783 0 01-.899-1.284l9.217-6.451a.783.783 0 01.898 0l9.217 6.451a.783.783 0 01-.899 1.284l-.61-.428zm-4.753-.51c1.196.804 1.209 2.54.408 4.256-.746 1.597-2.723 3.56-3.947 3.6h-.054c-1.218-.04-3.195-2.003-3.94-3.6-.801-1.716-.788-3.452.408-4.257 1.173-.79 2.4-.495 3.562.747 1.163-1.242 2.39-1.537 3.563-.747zm-.95 3.898c.548-1.13.54-2.183-.04-2.559-.684-.443-1.39-.207-2.266.876a.494.494 0 01-.757 0c-.876-1.083-1.582-1.319-2.266-.876-.58.376-.588 1.43-.04 2.56.533 1.097 2.057 2.554 2.672 2.574.64-.019 2.164-1.477 2.697-2.575z"
    }));
  }
  var MemoIconBrand = React__default__default["default"].memo(IconBrand);
  function IconBriefing(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconBriefing"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M3.5 5.081A3.089 3.089 0 016.587 2h6.765c.427 0 1.023.235 1.339.532l5.243 4.936c.313.294.566.878.566 1.305v10.155c0 1.696-1.391 3.072-3.098 3.072H6.598A3.087 3.087 0 013.5 18.919V5.08zm15.455 5.38h-6.186A.767.767 0 0112 9.693V3.538H6.596c-.853 0-1.55.686-1.55 1.532v13.86c0 .847.69 1.532 1.541 1.532h10.826c.852 0 1.542-.686 1.542-1.532v-8.468zm0-1.538v-.177l-5.41-5.063v5.24h5.41zm-8.15 9.44a.911.911 0 01-.912-.908c0-.503.408-.91.913-.91h5.48c.503 0 .912.407.912.91 0 .502-.409.909-.913.909h-5.48zm-2.739 0a.911.911 0 01-.913-.908c0-.503.409-.91.913-.91s.913.407.913.91c0 .502-.409.909-.913.909zm2.74-3.636a.911.911 0 01-.913-.909c0-.502.408-.909.913-.909h5.48c.503 0 .912.407.912.91 0 .501-.409.908-.913.908h-5.48zm-2.74 0a.911.911 0 01-.913-.909c0-.502.409-.909.913-.909s.913.407.913.91c0 .501-.409.908-.913.908z"
    }));
  }
  var MemoIconBriefing = React__default__default["default"].memo(IconBriefing);
  function IconBuilder(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconBuilder"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M8.65 11.807L6.472 9.592l1.088-1.108 3.265 3.323L7.56 15.11l-1.088-1.107 2.176-2.197zM2 5.355c0-.656.225-1.212.674-1.67C3.123 3.23 3.67 3 4.314 3h15.372c.633 0 1.177.229 1.632.686.455.457.682 1.013.682 1.67v13.289c0 .656-.227 1.212-.682 1.67a2.222 2.222 0 01-1.632.685H4.314a2.213 2.213 0 01-1.64-.686A2.293 2.293 0 012 18.644V5.356zm1.537.774V17.87c0 .434.15.803.45 1.108.299.304.661.457 1.087.457h13.852c.426 0 .788-.153 1.088-.457.3-.305.449-.674.449-1.108V6.13c0-.434-.15-.803-.45-1.108a1.469 1.469 0 00-1.087-.457H5.074c-.426 0-.788.153-1.088.457-.3.305-.449.674-.449 1.108zM12 14.742v-1.564h5.371v1.564H12z"
    }));
  }
  var MemoIconBuilder = React__default__default["default"].memo(IconBuilder);
  function IconButton(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 31 28",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconButton"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M25.075 15.125h1.991a3.045 3.045 0 003.045-3.045V5.99a3.045 3.045 0 00-3.045-3.045H4.228A3.045 3.045 0 001.183 5.99v6.09a3.045 3.045 0 003.045 3.045h10.919l-.58-8.221 10.508 8.221z"
    }), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M23.801 21.034l2.623 4.933-2.689 1.43-2.608-4.905-3.569 3.017-1.056-14.958 11.81 9.24z"
    }));
  }
  var MemoIconButton = React__default__default["default"].memo(IconButton);
  function IconCalendar(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconCalendar"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M16.09 4.928H7.91v.74a.913.913 0 01-.91.918.913.913 0 01-.91-.918v-.74H4.309a.773.773 0 00-.77.776V9.09h16.924V5.704a.773.773 0 00-.77-.776H17.91v.74a.913.913 0 01-.909.918.913.913 0 01-.91-.918v-.74zm1.82-1.552h1.782A2.318 2.318 0 0122 5.704v13.968A2.318 2.318 0 0119.692 22H4.308A2.318 2.318 0 012 19.672V5.704a2.318 2.318 0 012.308-2.328H6.09v-.459C6.09 2.411 6.498 2 7 2s.91.41.91.917v.459h8.18v-.459c0-.506.408-.917.91-.917s.91.41.91.917v.459zm2.552 7.266H3.538v9.03c0 .429.345.776.77.776h15.384c.425 0 .77-.347.77-.776v-9.03z"
    }));
  }
  var MemoIconCalendar = React__default__default["default"].memo(IconCalendar);
  function IconCampaign(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconCampaign"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M9.5 14.581h-.833v6.595a.829.829 0 01-.834.824H5.68a.832.832 0 01-.81-.633L3.133 14.18A2.464 2.464 0 012 12.108V7.987c0-1.366 1.12-2.473 2.5-2.473h6.667l4.908-3.237c.766-.505 1.801-.3 2.312.457.182.271.28.59.28.915v12.798c0 .91-.747 1.648-1.667 1.648a1.68 1.68 0 01-.925-.277l-4.908-3.237H9.5zm-1.667-1.648v-5.77H4.5a.829.829 0 00-.833.824v4.121c0 .456.373.825.833.825h3.333zM6.337 20.35H7v-5.77H4.945l1.392 5.77zM9.5 7.163v5.77h2.171L17 16.447V3.649l-5.329 3.514H9.5zm11.667 0c.46 0 .833.373.833.833v4.103a.833.833 0 11-1.667 0V7.996c0-.46.373-.833.834-.833z"
    }));
  }
  var MemoIconCampaign = React__default__default["default"].memo(IconCampaign);
  function IconCampaignActivity(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconCampaignActivity"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M16.09 4.928H7.91v.74a.913.913 0 01-.91.918.913.913 0 01-.91-.918v-.74H4.309a.773.773 0 00-.77.776V9.09h16.924V5.704a.773.773 0 00-.77-.776H17.91v.74a.913.913 0 01-.909.918.913.913 0 01-.91-.918v-.74zm1.82-1.552h1.782A2.318 2.318 0 0122 5.704v13.968A2.318 2.318 0 0119.692 22H4.308A2.318 2.318 0 012 19.672V5.704a2.318 2.318 0 012.308-2.328H6.09v-.459C6.09 2.411 6.498 2 7 2s.91.41.91.917v.459h8.18v-.459c0-.506.408-.917.91-.917s.91.41.91.917v.459zm2.552 7.266H3.538v9.03c0 .429.345.776.77.776h15.384c.425 0 .77-.347.77-.776v-9.03zm-6.702 2.173a.903.903 0 011.285 0 .923.923 0 010 1.297l-3.636 3.669a.904.904 0 01-1.345-.067L8.57 15.88a.923.923 0 01.126-1.29.904.904 0 011.28.126l.856 1.053 2.928-2.954z"
    }));
  }
  var MemoIconCampaignActivity = React__default__default["default"].memo(IconCampaignActivity);
  function IconCards(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconCards"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M18.7 8.25V4.5a.833.833 0 00-.833-.833H6.2a.833.833 0 00-.833.833v3.75H18.7zm0 1.667H5.367V19.5c0 .46.373.833.833.833h11.667c.46 0 .833-.373.833-.833V9.917zM6.2 2h11.667a2.5 2.5 0 012.5 2.5v15a2.5 2.5 0 01-2.5 2.5H6.2a2.5 2.5 0 01-2.5-2.5v-15A2.5 2.5 0 016.2 2zm1.667 11.25a.833.833 0 110-1.667H11.2a.833.833 0 010 1.667H7.867zm0 3.333a.833.833 0 110-1.666h7.5a.833.833 0 110 1.666h-7.5z"
    }));
  }
  var MemoIconCards = React__default__default["default"].memo(IconCards);
  function IconCaretLeft(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconCaretLeft"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M15.52 5.138L8.946 12.02l6.576 6.89a.84.84 0 01-.041 1.102.75.75 0 01-1.053.043L6.75 12.02l7.677-8.034a.751.751 0 011.094 0 .83.83 0 01.229.576.83.83 0 01-.23.576z"
    }));
  }
  var MemoIconCaretLeft = React__default__default["default"].memo(IconCaretLeft);
  function IconCaretUp(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconCaretUp"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M18.862 15.52L11.98 8.946 5.09 15.52a.84.84 0 01-1.102-.041.75.75 0 01-.043-1.053L11.98 6.75l8.034 7.677a.751.751 0 010 1.094.83.83 0 01-.576.229.83.83 0 01-.576-.23z"
    }));
  }
  var MemoIconCaretUp = React__default__default["default"].memo(IconCaretUp);
  function IconCenter(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconCenter"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M6 3.15h12A2.85 2.85 0 0120.85 6v12A2.85 2.85 0 0118 20.85H6A2.85 2.85 0 013.15 18V6A2.85 2.85 0 016 3.15zm0 1.7A1.15 1.15 0 004.85 6v12c0 .635.515 1.15 1.15 1.15h12A1.15 1.15 0 0019.15 18V6A1.15 1.15 0 0018 4.85H6zM10 8h4a2 2 0 012 2v4a2 2 0 01-2 2h-4a2 2 0 01-2-2v-4a2 2 0 012-2zm0 1.7a.3.3 0 00-.3.3v4a.3.3 0 00.3.3h4a.3.3 0 00.3-.3v-4a.3.3 0 00-.3-.3h-4z"
    }));
  }
  var MemoIconCenter = React__default__default["default"].memo(IconCenter);
  function IconCheckFilled(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconCheckFilled"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm-4.047-9.182a.704.704 0 000 .996l2.529 2.529 5.547-5.547a.718.718 0 00-1.015-1.014l-4.532 4.55-1.53-1.517a.708.708 0 00-1 .003z"
    }));
  }
  var MemoIconCheckFilled = React__default__default["default"].memo(IconCheckFilled);
  function IconCircle(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconCircle"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12 22a9.755 9.755 0 01-3.901-.789 10.093 10.093 0 01-3.172-2.138A10.093 10.093 0 012.79 15.9 9.755 9.755 0 012 12c0-1.379.263-2.682.789-3.901a10.093 10.093 0 012.138-3.172A10.093 10.093 0 018.1 2.79 9.755 9.755 0 0112 2c1.379 0 2.682.263 3.901.789a10.093 10.093 0 013.172 2.138A10.093 10.093 0 0121.21 8.1 9.755 9.755 0 0122 12a9.755 9.755 0 01-.789 3.901 10.093 10.093 0 01-2.138 3.172A10.093 10.093 0 0115.9 21.21 9.755 9.755 0 0112 22zm0-1.9c1.123 0 2.17-.211 3.149-.633a8.194 8.194 0 002.58-1.738 8.194 8.194 0 001.738-2.58c.422-.98.633-2.026.633-3.149 0-1.123-.211-2.17-.633-3.149a8.194 8.194 0 00-1.738-2.58 8.194 8.194 0 00-2.58-1.738A7.857 7.857 0 0012 3.9c-1.123 0-2.17.211-3.149.633a8.194 8.194 0 00-2.58 1.738 8.194 8.194 0 00-1.738 2.58A7.857 7.857 0 003.9 12c0 1.123.211 2.17.633 3.149a8.194 8.194 0 001.738 2.58 8.194 8.194 0 002.58 1.738c.98.422 2.026.633 3.149.633z"
    }));
  }
  var MemoIconCircle = React__default__default["default"].memo(IconCircle);
  function IconCollapse(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconCollapse"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M8.728 13.977H5.812a.76.76 0 01-.564-.24.816.816 0 01-.234-.593c0-.225.078-.417.234-.577a.76.76 0 01.564-.239h4.86c.104 0 .206.02.304.062a.987.987 0 01.269.169c.07.082.124.174.165.274.04.101.06.204.06.31v4.966a.794.794 0 01-.234.577.76.76 0 01-.564.24.781.781 0 01-.581-.24.794.794 0 01-.235-.577v-2.961L4.39 20.752a.785.785 0 01-.582.248.785.785 0 01-.581-.248.842.842 0 01-.226-.585.81.81 0 01.243-.586l5.485-5.604zm6.544-3.954h2.916c.22 0 .408.08.564.24.156.159.234.357.234.593a.794.794 0 01-.234.577.76.76 0 01-.564.239h-4.86a.776.776 0 01-.304-.062.76.76 0 01-.252-.169.84.84 0 01-.243-.585V5.891c0-.225.079-.417.235-.577a.76.76 0 01.564-.24c.231 0 .425.08.581.24.157.16.235.352.235.577v2.961l5.485-5.604A.73.73 0 0120.193 3c.226 0 .42.083.581.248.15.166.226.36.226.585a.81.81 0 01-.243.586l-5.485 5.604z"
    }));
  }
  var MemoIconCollapse = React__default__default["default"].memo(IconCollapse);
  function IconCollectionLarge(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconCollectionLarge"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M10.35 8.65h4.3V5.7h-4.3v2.95zm0 1.7v2.8h4.3v-2.8h-4.3zm9.95-1.7V6a.3.3 0 00-.3-.3h-3.65v2.95h3.95zm0 1.7h-3.95v2.8h3.95v-2.8zM8.65 5.7H4a.3.3 0 00-.3.3v7.15h4.95V5.7zM3.7 14.85V18a.3.3 0 00.3.3h16a.3.3 0 00.3-.3v-3.15H3.7zM4 4h16a2 2 0 012 2v12a2 2 0 01-2 2H4a2 2 0 01-2-2V6a2 2 0 012-2z"
    }));
  }
  var MemoIconCollectionLarge = React__default__default["default"].memo(IconCollectionLarge);
  function IconCollectionMedium(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconCollectionMedium"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M14.65 7.7h-4.3v4.45h4.3V7.7zm1.7 0v4.45h3.95V8a.3.3 0 00-.3-.3h-3.65zm-7.7 0H5a.3.3 0 00-.3.3v4.15h3.95V7.7zM4.7 13.85V16a.3.3 0 00.3.3h15a.3.3 0 00.3-.3v-2.15H4.7zM5 6h15a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2V8a2 2 0 012-2z"
    }));
  }
  var MemoIconCollectionMedium = React__default__default["default"].memo(IconCollectionMedium);
  function IconCollectionSmall(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconCollectionSmall"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M8.65 13.3V9.7H5a.3.3 0 00-.3.3v3a.3.3 0 00.3.3h3.65zm1.7 0H19a.3.3 0 00.3-.3v-3a.3.3 0 00-.3-.3h-8.65v3.6zM5 8h14a2 2 0 012 2v3a2 2 0 01-2 2H5a2 2 0 01-2-2v-3a2 2 0 012-2z"
    }));
  }
  var MemoIconCollectionSmall = React__default__default["default"].memo(IconCollectionSmall);
  function IconColorScale(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconColorScale"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M16.615 9.338H12v5.385h4.615V9.338zm1.539 0v5.385h2.308V9.338h-2.308zm-7.692 0H3.538v5.385h6.924V9.338zM3.538 7.8h16.924c.85 0 1.538.689 1.538 1.538v5.385c0 .85-.689 1.539-1.538 1.539H3.538c-.85 0-1.538-.69-1.538-1.539V9.338c0-.85.689-1.538 1.538-1.538z"
    }));
  }
  var MemoIconColorScale = React__default__default["default"].memo(IconColorScale);
  function IconColorScaleSmall(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconColorScaleSmall"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M4.344 11.167a.82.82 0 00-.806.833c0 .46.361.833.806.833h15.312a.82.82 0 00.806-.833.82.82 0 00-.806-.833H4.344zM4.4 9.5h15.2c1.325 0 2.4 1.12 2.4 2.5s-1.075 2.5-2.4 2.5H4.4C3.075 14.5 2 13.38 2 12s1.075-2.5 2.4-2.5z"
    }));
  }
  var MemoIconColorScaleSmall = React__default__default["default"].memo(IconColorScaleSmall);
  function IconColorScaleTall(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconColorScaleTall"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M4.344 9.6a.803.803 0 00-.806.8v3.2c0 .442.361.8.806.8h15.312a.803.803 0 00.806-.8v-3.2c0-.442-.361-.8-.806-.8H4.344zM4.4 8h15.2a2.4 2.4 0 012.4 2.4v3.2a2.4 2.4 0 01-2.4 2.4H4.4A2.4 2.4 0 012 13.6v-3.2A2.4 2.4 0 014.4 8z"
    }));
  }
  var MemoIconColorScaleTall = React__default__default["default"].memo(IconColorScaleTall);
  function IconColorSwatch(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconColorSwatch"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M15.846 4.838H12.77v15.385h3.077V4.838zm1.539 0v15.385h2.307a.77.77 0 00.77-.77V5.609a.77.77 0 00-.77-.77h-2.307zm-6.154 0H8.923v15.385h2.308V4.838zm-3.846 0H5.846v15.385h1.539V4.838zM4.308 20.223V4.838a.77.77 0 00-.77.77v13.846c0 .425.345.77.77.77zm0-16.923h15.384A2.308 2.308 0 0122 5.608v13.846a2.308 2.308 0 01-2.308 2.308H4.308A2.308 2.308 0 012 19.454V5.608A2.308 2.308 0 014.308 3.3z"
    }));
  }
  var MemoIconColorSwatch = React__default__default["default"].memo(IconColorSwatch);
  function IconColumnBreak(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconColumnBreak"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M16 8.25a.75.75 0 110-1.5h5a.75.75 0 110 1.5h-5zm0 3a.75.75 0 110-1.5h4a.75.75 0 110 1.5h-4zm-13-3a.75.75 0 010-1.5h5a.75.75 0 010 1.5H3zm13 6a.75.75 0 110-1.5h5a.75.75 0 110 1.5h-5zm-13 0a.75.75 0 110-1.5h5a.75.75 0 110 1.5H3zm0-3a.75.75 0 110-1.5h4a.75.75 0 110 1.5H3zm0 6a.75.75 0 110-1.5h4a.75.75 0 110 1.5H3zm13 0a.75.75 0 110-1.5h4a.75.75 0 110 1.5h-4zm-3.75-10V17.5a.75.75 0 01-.75.75h-2a.75.75 0 110-1.5h1.25V6.5a.75.75 0 01.75-.75h2a.75.75 0 110 1.5h-1.25z"
    }));
  }
  var MemoIconColumnBreak = React__default__default["default"].memo(IconColumnBreak);
  function IconCopyToClipboard(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconCopyToClipboard"
    }, props), "&gt;", /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M14.339 2.733h-4.214a2.26 2.26 0 00-2.132 1.511H7a2.75 2.75 0 00-2.75 2.75v11.5A2.75 2.75 0 007 21.244h10.463a2.75 2.75 0 002.75-2.75v-11.5a2.75 2.75 0 00-2.75-2.75h-.992a2.26 2.26 0 00-2.132-1.51zM7.994 5.744a2.26 2.26 0 002.13 1.507h4.215a2.26 2.26 0 002.13-1.507h.994c.69 0 1.25.56 1.25 1.25v11.5c0 .69-.56 1.25-1.25 1.25H7c-.69 0-1.25-.56-1.25-1.25v-11.5c0-.69.56-1.25 1.25-1.25h.994zm2.13-1.51a.759.759 0 000 1.517h4.215a.759.759 0 100-1.518h-4.214zm1.126 6.626v1.81H9.5a.75.75 0 000 1.5h1.75v1.809a.75.75 0 001.5 0v-1.81h1.75a.75.75 0 000-1.5h-1.75V10.86a.75.75 0 10-1.5 0z"
    }));
  }
  var MemoIconCopyToClipboard = React__default__default["default"].memo(IconCopyToClipboard);
  function IconCrop(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconCrop"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M17.434 7.393c.186.38.291.806.291 1.257v8.85h2.15a.85.85 0 010 1.7h-2.15v2.15a.85.85 0 01-1.7 0V19.2h-8.65a2.85 2.85 0 01-2.85-2.85V7.5h-2.15a.85.85 0 110-1.7h2.15V3.65a.85.85 0 111.7 0V5.8h8.65c.504 0 .977.13 1.388.36l2.261-2.26a.85.85 0 011.202 1.202l-2.292 2.292zM6.225 16.198L14.922 7.5l-.047-.001h-8.65v8.698zm1.103 1.301l.047.001h8.65V8.802L7.328 17.5z"
    }));
  }
  var MemoIconCrop = React__default__default["default"].memo(IconCrop);
  function IconCursorClick(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconCursorClick"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M10.336 4a6.823 6.823 0 100 13.647 6.823 6.823 0 000-13.647zm8.324 6.823a8.323 8.323 0 10-16.647 0 8.323 8.323 0 0016.647 0z"
    }), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M10.336 7.073a3.75 3.75 0 100 7.5 3.75 3.75 0 000-7.5zm5.25 3.75a5.25 5.25 0 10-10.5 0 5.25 5.25 0 0010.5 0z"
    }), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M9.881 11.144a.6.6 0 01.769-.768l10.757 3.901a.6.6 0 01.052 1.106l-2.538 1.204 2.968 2.968a.4.4 0 010 .566l-2.263 2.262a.4.4 0 01-.566 0l-2.967-2.967-1.204 2.538a.6.6 0 01-1.106-.053L9.88 11.144z"
    }), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16.357 16.144l2.512-1.192-6.922-2.51 2.51 6.921 1.193-2.512 3.693 3.694.707-.707-3.693-3.694zm-1.468 5.81a.6.6 0 01-1.106-.053L9.88 11.144a.6.6 0 01.769-.768l10.757 3.901a.6.6 0 01.052 1.106l-2.538 1.204 2.968 2.968a.4.4 0 010 .566l-2.263 2.262a.4.4 0 01-.566 0l-2.967-2.967-1.204 2.538z"
    }));
  }
  var MemoIconCursorClick = React__default__default["default"].memo(IconCursorClick);
  function IconCut(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconCut"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M10.586 10.421l5.3-5.299c1.528-1.529 3.974-1.529 5.4 0l.714.713-6.013 6.013 5.81 5.809-.714.713c-1.529 1.53-3.975 1.53-5.401 0l-4.383-4.382 1.325-1.325 6.522-6.522c-.611-.204-1.324 0-1.834.51L9.16 14.804c.917 1.426.714 3.363-.611 4.687-1.529 1.53-3.975 1.53-5.402 0-1.426-1.528-1.528-3.974 0-5.4 1.223-1.224 3.16-1.428 4.688-.612l1.427-1.427-1.427-1.427c-1.426.917-3.363.714-4.688-.611-1.528-1.733-1.528-4.179 0-5.605 1.53-1.427 3.975-1.53 5.402 0 1.223 1.223 1.427 3.159.611 4.688l1.427 1.324zm3.363 3.465l3.057 3.058c.51.51 1.223.713 1.835.51l-4.179-4.18-.713.612zM7.223 8.383c.713-.713.713-1.936 0-2.751-.713-.714-1.936-.714-2.752 0-.713.713-.713 1.936 0 2.751.816.815 1.937.815 2.752 0zm0 9.58c.713-.714.713-1.937 0-2.752-.713-.713-1.936-.713-2.752 0-.713.714-.713 1.936 0 2.752.816.713 1.937.713 2.752 0z"
    }));
  }
  var MemoIconCut = React__default__default["default"].memo(IconCut);
  function IconDivider(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconDivider"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5.818 3.545a.773.773 0 00-.773.773v15.455c0 .426.346.772.773.772h12.364a.773.773 0 00.773-.772V4.318a.773.773 0 00-.773-.773H5.818zm0-1.545h12.364A2.318 2.318 0 0120.5 4.318v15.455a2.318 2.318 0 01-2.318 2.318H5.818A2.318 2.318 0 013.5 19.773V4.318A2.318 2.318 0 015.818 2zm1.546 10.818a.773.773 0 010-1.545h9.272a.773.773 0 110 1.545H7.364z"
    }));
  }
  var MemoIconDivider = React__default__default["default"].memo(IconDivider);
  function IconDoDontsStrikethrough(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconDoDontsStrikethrough"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M20.167 5.117L4.333 18.79V6.95c0-1.013.821-1.833 1.834-1.833h14zm-2.334 13.666h-14L19.667 5.11V16.95c0 1.013-.821 1.833-1.834 1.833zm1.192-12.887l-.465-.259a1.489 1.489 0 00-.727-.187H6.167a1.5 1.5 0 00-1.5 1.5v10c0 .197.037.386.109.563l.199.491.465.259c.22.122.467.187.727.187h11.666a1.5 1.5 0 001.5-1.5v-10c0-.197-.037-.386-.109-.563l-.199-.491z"
    }));
  }
  var MemoIconDoDontsStrikethrough = React__default__default["default"].memo(IconDoDontsStrikethrough);
  function IconDoDontsUnderline(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconDoDontsUnderline"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M7.26 12.722h1.242v1.428H4.589v-1.428H5.83V7.629H4.013v.931H2.584V6.2H10.506v2.36H9.078V7.63H7.26v5.093zm-4.35 5.115a.91.91 0 110-1.818h18.18a.91.91 0 010 1.818H2.91z"
    }));
  }
  var MemoIconDoDontsUnderline = React__default__default["default"].memo(IconDoDontsUnderline);
  function IconDocumentLibrary(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconDocumentLibrary"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5.846 4.498A3.292 3.292 0 019.13 1.485h5.465c.451 0 1.079.247 1.41.559l4.56 4.292c.328.308.594.922.594 1.376v8.52a3.283 3.283 0 01-3.006 3.27 3.284 3.284 0 01-3.276 3.013h-8.75a3.29 3.29 0 01-3.288-3.286V7.77a3.29 3.29 0 013.006-3.273zm1.382-.013h4.374c.451 0 1.078.247 1.41.559l.485.456V2.872H8.88c-.91 0-1.64.72-1.651 1.613zm7.662 2.326l.972.915h3.904v-.16L14.89 3.002v3.81zm2.446 2.302l.236.223c.328.308.594.922.594 1.376v7.415a1.64 1.64 0 001.6-1.638V9.113h-2.43zm-.564 3h-5.576a.692.692 0 01-.693-.693V5.872H5.885a1.64 1.64 0 00-1.651 1.633v11.99a1.64 1.64 0 001.639 1.633h9.26c.902 0 1.64-.734 1.64-1.639v-7.376zm0-1.387v-.16l-4.876-4.564v4.724h4.876z"
    }));
  }
  var MemoIconDocumentLibrary = React__default__default["default"].memo(IconDocumentLibrary);
  function IconDosImages(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconDosImages"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M7.075 6.143l.653-.653a.66.66 0 01.932.932l-.653.653.653.653a.66.66 0 11-.932.932l-.653-.653-.653.653a.66.66 0 11-.932-.932l.653-.653-.653-.653a.66.66 0 01.932-.932l.653.653zm4.054-1.835h7.279c.53 0 .984.187 1.36.563.375.376.563.829.563 1.36v7.12a4.945 4.945 0 11-7.46 6.342H5.592c-.53 0-.984-.188-1.36-.564a1.853 1.853 0 01-.563-1.36v-7.12a4.945 4.945 0 117.46-6.342zm.601 1.384a4.945 4.945 0 01-6.676 5.823v6.254c0 .164.042.265.158.38a.475.475 0 00.38.159h6.678a4.945 4.945 0 016.676-5.823V6.23a.475.475 0 00-.158-.38.475.475 0 00-.38-.159H11.73zm5.325 14.99a3.626 3.626 0 100-7.253 3.626 3.626 0 000 7.252zm-10.11-10.11a3.626 3.626 0 100-7.253 3.626 3.626 0 000 7.252zm11.417 5.035a.66.66 0 01.947.918l-2.34 2.414a.66.66 0 01-.968-.021l-.956-1.08a.66.66 0 11.987-.874l.485.547 1.845-1.904z"
    }));
  }
  var MemoIconDosImages = React__default__default["default"].memo(IconDosImages);
  function IconDosText(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconDosText"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M7.498 6.488l.707-.707a.714.714 0 111.01 1.01l-.707.707.707.707a.714.714 0 11-1.01 1.01l-.707-.707-.707.707a.714.714 0 11-1.01-1.01l.707-.707-.707-.707a.714.714 0 011.01-1.01l.707.707zm-.14 6.226A5.357 5.357 0 117.357 2a5.357 5.357 0 010 10.714zm0-1.428a3.929 3.929 0 100-7.857 3.929 3.929 0 000 7.857zM16.642 22a5.357 5.357 0 110-10.714 5.357 5.357 0 010 10.714zm0-1.429a3.929 3.929 0 100-7.857 3.929 3.929 0 000 7.857zm1.416-5.497a.714.714 0 111.025.995l-2.535 2.615a.714.714 0 01-1.048-.023l-1.036-1.17a.714.714 0 111.07-.947l.525.593 1.999-2.063z"
    }));
  }
  var MemoIconDosText = React__default__default["default"].memo(IconDosText);
  function IconDoubleChevronLeft(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 16 12",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconDoubleChevronLeft"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M8.487 0v2.273L2.645 5.841v.318l5.842 3.594V12h-.159L.716 7.216V4.784L8.328 0h.159zm7.083 2.273L9.702 5.841v.318l5.868 3.594V12h-.158L7.773 7.216V4.784L15.412 0h.158v2.273z"
    }));
  }
  var MemoIconDoubleChevronLeft = React__default__default["default"].memo(IconDoubleChevronLeft);
  function IconDoubleChevronRight(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 16 12",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconDoubleChevronRight"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M7.799 12V9.727l5.841-3.568V5.84L7.799 2.247V0h.158l7.612 4.784v2.432L7.957 12H7.8zM.715 9.727l5.868-3.568V5.84L.715 2.247V0h.158l7.64 4.784v2.432L.872 12H.715V9.727z"
    }));
  }
  var MemoIconDoubleChevronRight = React__default__default["default"].memo(IconDoubleChevronRight);
  function IconDoubleQuotesDown(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 16 12",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconDoubleQuotesDown"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M1.435 12V9.561h1.414c1.171 0 1.757-.585 1.757-1.756V6.244h-.683c-.943 0-1.724-.293-2.342-.878C.931 4.78.606 4.049.606 3.17c0-.943.325-1.708.975-2.293C2.2.293 2.98 0 3.923 0c.943 0 1.723.309 2.341.927.618.618.927 1.398.927 2.341v4.537C7.19 10.602 5.793 12 2.996 12H1.435zm8.488 0V9.561h1.414c1.171 0 1.756-.585 1.756-1.756V6.244h-.683c-.943 0-1.723-.293-2.341-.878-.65-.586-.976-1.317-.976-2.195 0-.943.326-1.708.976-2.293C10.687.293 11.467 0 12.41 0c.944 0 1.724.309 2.342.927.618.618.927 1.398.927 2.341v4.537c0 2.797-1.399 4.195-4.195 4.195H9.923z"
    }));
  }
  var MemoIconDoubleQuotesDown = React__default__default["default"].memo(IconDoubleQuotesDown);
  function IconDoubleQuotesUp(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 16 12",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconDoubleQuotesUp"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M14.85 0v2.439h-1.414c-1.171 0-1.756.585-1.756 1.756v1.561h.683c.943 0 1.723.293 2.341.878.65.586.976 1.317.976 2.195 0 .943-.326 1.708-.976 2.293-.618.585-1.398.878-2.341.878-.944 0-1.724-.309-2.342-.927-.618-.618-.927-1.398-.927-2.341V4.195C9.094 1.398 10.493 0 13.29 0h1.561zM6.363 0v2.439H4.948c-1.17 0-1.756.585-1.756 1.756v1.561h.683c.943 0 1.723.293 2.341.878.65.586.976 1.317.976 2.195 0 .943-.325 1.708-.976 2.293-.618.585-1.398.878-2.341.878-.943 0-1.724-.309-2.342-.927-.618-.618-.927-1.398-.927-2.341V4.195C.606 1.398 2.005 0 4.802 0h1.56z"
    }));
  }
  var MemoIconDoubleQuotesUp = React__default__default["default"].memo(IconDoubleQuotesUp);
  function IconDownload(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconDownload"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M17.42 18.997c.448 0 .87-.085 1.264-.254a3.255 3.255 0 001.984-3.009c0-.62-.158-1.183-.472-1.692a3.3 3.3 0 00-1.235-1.183 5.082 5.082 0 00.18-1.347c0-.719-.135-1.392-.404-2.021a5.265 5.265 0 00-1.1-1.647 5.113 5.113 0 00-3.646-1.512c-.788 0-1.524.167-2.208.502a5.134 5.134 0 00-1.73 1.355 3.897 3.897 0 00-.583-.165c-.2-.04-.404-.06-.614-.06a3.165 3.165 0 00-2.29.958c-.29.3-.52.646-.689 1.04-.17.395-.254.816-.254 1.266 0 .24.022.466.067.68.045.215.112.427.202.637a3.124 3.124 0 00-1.826 1.115 3.164 3.164 0 00-.734 2.074c0 .439.083.855.247 1.25.165.394.39.736.674 1.025.284.29.616.524.996.704.379.18.788.274 1.227.284h10.943zm3.008-6.737c.48.43.86.944 1.145 1.542.285.6.427 1.243.427 1.932 0 .628-.117 1.217-.352 1.766a4.68 4.68 0 01-.958 1.445 4.712 4.712 0 01-1.422.995c-.544.25-1.125.38-1.744.39H6.566c-.629 0-1.22-.12-1.774-.36a4.57 4.57 0 01-1.452-.988 4.699 4.699 0 01-.98-1.467A4.474 4.474 0 012 15.734a4.582 4.582 0 01.636-2.343c.205-.345.45-.659.734-.943.284-.285.596-.522.935-.711 0-.09-.002-.175-.007-.255a4.474 4.474 0 01.352-2.036c.24-.559.564-1.048.973-1.467.409-.42.893-.748 1.452-.988a4.474 4.474 0 011.781-.36c.13 0 .26.006.39.016s.259.03.389.06c.29-.27.601-.51.935-.719A6.459 6.459 0 0113.991 5a6.406 6.406 0 014.588 1.909 6.712 6.712 0 011.385 2.073 6.331 6.331 0 01.494 2.912l-.03.366zm-7.77 2.44l1.243-1.227a.596.596 0 01.472-.202.67.67 0 01.471.202c.13.13.195.287.195.472a.642.642 0 01-.195.471l-2.305 2.29a.649.649 0 01-.539.284c-.1.001-.195-.019-.284-.059a.625.625 0 01-.225-.165l-2.35-2.35a.633.633 0 01-.202-.479.661.661 0 01.202-.464.642.642 0 01.471-.195c.185 0 .342.065.472.195l1.242 1.243v-3.728c0-.18.065-.334.195-.464s.29-.195.479-.195c.18 0 .334.065.464.195s.195.284.195.464v3.713z"
    }));
  }
  var MemoIconDownload = React__default__default["default"].memo(IconDownload);
  function IconDownloadAlternative(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconDownloadAlternative"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M11.286 14.017V7.845c0-.393.32-.711.714-.711.397 0 .714.318.714.711v6.181l1.818-1.817a.716.716 0 011.008.001c.281.281.28.73.002 1.009l-3.034 3.033a.71.71 0 01-.501.207.701.701 0 01-.506-.207L8.468 13.22a.716.716 0 01.001-1.009c.281-.28.73-.28 1.009-.001l1.808 1.808zM12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-1.429A8.571 8.571 0 1012 3.43a8.571 8.571 0 000 17.142z"
    }));
  }
  var MemoIconDownloadAlternative = React__default__default["default"].memo(IconDownloadAlternative);
  function IconDrops(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconDrops"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7.625 8.876a4.376 4.376 0 108.75 0 4.376 4.376 0 00-8.75 0zM12 3a5.876 5.876 0 100 11.751A5.876 5.876 0 0012 3zM18 17.146a.75.75 0 01-.75.75H6.75a.75.75 0 010-1.5h10.5a.75.75 0 01.75.75zM16 20.196a.75.75 0 01-.75.75h-6.5a.75.75 0 010-1.5h6.5a.75.75 0 01.75.75z"
    }));
  }
  var MemoIconDrops = React__default__default["default"].memo(IconDrops);
  function IconDuplicate(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconDuplicate"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M9.26 14.74H7.697a.783.783 0 110-1.566H9.26v-1.565a.783.783 0 111.565 0v1.565h1.565a.783.783 0 010 1.565h-1.565v1.565a.783.783 0 01-1.565 0V14.74zm-.69-7.827h6.031a2.486 2.486 0 012.486 2.486v6.03h1.427a.829.829 0 00.829-.828V5.486a.829.829 0 00-.829-.829H9.4a.829.829 0 00-.829.829v1.427zm8.517 10.174v1.427A2.486 2.486 0 0114.601 21H5.486A2.486 2.486 0 013 18.514V9.4a2.486 2.486 0 012.486-2.486h1.427V5.486A2.486 2.486 0 019.399 3h9.115A2.486 2.486 0 0121 5.486V14.6a2.486 2.486 0 01-2.486 2.486h-1.427zM5.408 8.478a.843.843 0 00-.843.843v9.271c0 .465.378.843.843.843h9.27a.843.843 0 00.844-.843v-9.27a.843.843 0 00-.843-.844H5.408z"
    }));
  }
  var MemoIconDuplicate = React__default__default["default"].memo(IconDuplicate);
  function IconEmojiHappy(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconEmojiHappy"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12 22c-1.38 0-2.679-.26-3.896-.781A10.035 10.035 0 014.92 19.08a10.035 10.035 0 01-2.139-3.184A9.801 9.801 0 012 12c0-1.38.26-2.679.781-3.896A10.035 10.035 0 014.92 4.92 10.035 10.035 0 018.104 2.78 9.801 9.801 0 0112 2c1.38 0 2.679.26 3.896.781A10.035 10.035 0 0119.08 4.92a10.035 10.035 0 012.139 3.184A9.801 9.801 0 0122 12c0 1.38-.26 2.679-.781 3.896a10.035 10.035 0 01-2.139 3.184 10.035 10.035 0 01-3.184 2.139A9.801 9.801 0 0112 22zm0-1.426a8.343 8.343 0 003.34-.674 8.663 8.663 0 002.724-1.836A8.663 8.663 0 0019.9 15.34a8.343 8.343 0 00.674-3.34 8.343 8.343 0 00-.674-3.34 8.663 8.663 0 00-1.836-2.724A8.663 8.663 0 0015.34 4.1 8.343 8.343 0 0012 3.426a8.343 8.343 0 00-3.34.674 8.663 8.663 0 00-2.724 1.836A8.663 8.663 0 004.1 8.66 8.343 8.343 0 003.426 12c0 1.185.224 2.298.674 3.34a8.663 8.663 0 001.836 2.724A8.663 8.663 0 008.66 19.9a8.343 8.343 0 003.34.674zm-3.182-9.483a1.364 1.364 0 110-2.727 1.364 1.364 0 010 2.727zm6.364 0a1.364 1.364 0 110-2.727 1.364 1.364 0 010 2.727zm-8.54 3.588a.91.91 0 111.626-.813c.753 1.506 1.95 2.225 3.732 2.225 1.781 0 2.98-.719 3.732-2.225a.91.91 0 011.627.813c-1.066 2.13-2.898 3.23-5.359 3.23s-4.293-1.1-5.359-3.23z"
    }));
  }
  var MemoIconEmojiHappy = React__default__default["default"].memo(IconEmojiHappy);
  function IconEmojiHappyFilled(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconEmojiHappyFilled"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12 22c-1.38 0-2.679-.26-3.896-.781A10.035 10.035 0 014.92 19.08a10.035 10.035 0 01-2.139-3.184A9.801 9.801 0 012 12c0-1.38.26-2.679.781-3.896A10.035 10.035 0 014.92 4.92 10.035 10.035 0 018.104 2.78 9.801 9.801 0 0112 2c1.38 0 2.679.26 3.896.781A10.035 10.035 0 0119.08 4.92a10.035 10.035 0 012.139 3.184A9.801 9.801 0 0122 12c0 1.38-.26 2.679-.781 3.896a10.035 10.035 0 01-2.139 3.184 10.035 10.035 0 01-3.184 2.139A9.801 9.801 0 0112 22zM8.818 11.09a1.364 1.364 0 100-2.726 1.364 1.364 0 000 2.727zm6.364 0a1.364 1.364 0 100-2.726 1.364 1.364 0 000 2.727zm-8.54 3.59c1.065 2.13 2.897 3.23 5.358 3.23s4.293-1.1 5.359-3.23a.91.91 0 00-1.627-.814c-.753 1.506-1.95 2.225-3.732 2.225-1.781 0-2.98-.719-3.732-2.225a.91.91 0 00-1.627.813z"
    }));
  }
  var MemoIconEmojiHappyFilled = React__default__default["default"].memo(IconEmojiHappyFilled);
  function IconEmojiNeutral(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconEmojiNeutral"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12 22c-1.38 0-2.679-.26-3.896-.781A10.035 10.035 0 014.92 19.08a10.035 10.035 0 01-2.139-3.184A9.801 9.801 0 012 12c0-1.38.26-2.679.781-3.896A10.035 10.035 0 014.92 4.92 10.035 10.035 0 018.104 2.78 9.801 9.801 0 0112 2c1.38 0 2.679.26 3.896.781A10.035 10.035 0 0119.08 4.92a10.035 10.035 0 012.139 3.184A9.801 9.801 0 0122 12c0 1.38-.26 2.679-.781 3.896a10.035 10.035 0 01-2.139 3.184 10.035 10.035 0 01-3.184 2.139A9.801 9.801 0 0112 22zm0-1.426a8.343 8.343 0 003.34-.674 8.663 8.663 0 002.724-1.836A8.663 8.663 0 0019.9 15.34a8.343 8.343 0 00.674-3.34 8.343 8.343 0 00-.674-3.34 8.663 8.663 0 00-1.836-2.724A8.663 8.663 0 0015.34 4.1 8.343 8.343 0 0012 3.426a8.343 8.343 0 00-3.34.674 8.663 8.663 0 00-2.724 1.836A8.663 8.663 0 004.1 8.66 8.343 8.343 0 003.426 12c0 1.185.224 2.298.674 3.34a8.663 8.663 0 001.836 2.724A8.663 8.663 0 008.66 19.9a8.343 8.343 0 003.34.674zm-3.182-9.483a1.364 1.364 0 110-2.727 1.364 1.364 0 010 2.727zm6.364 0a1.364 1.364 0 110-2.727 1.364 1.364 0 010 2.727zm-7.727 5a.91.91 0 010-1.818h9.09a.91.91 0 110 1.818h-9.09z"
    }));
  }
  var MemoIconEmojiNeutral = React__default__default["default"].memo(IconEmojiNeutral);
  function IconEmojiNeutralFilled(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconEmojiNeutralFilled"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12 22c-1.38 0-2.679-.26-3.896-.781A10.035 10.035 0 014.92 19.08a10.035 10.035 0 01-2.139-3.184A9.801 9.801 0 012 12c0-1.38.26-2.679.781-3.896A10.035 10.035 0 014.92 4.92 10.035 10.035 0 018.104 2.78 9.801 9.801 0 0112 2c1.38 0 2.679.26 3.896.781A10.035 10.035 0 0119.08 4.92a10.035 10.035 0 012.139 3.184A9.801 9.801 0 0122 12c0 1.38-.26 2.679-.781 3.896a10.035 10.035 0 01-2.139 3.184 10.035 10.035 0 01-3.184 2.139A9.801 9.801 0 0112 22zM8.818 11.09a1.364 1.364 0 100-2.726 1.364 1.364 0 000 2.727zm6.364 0a1.364 1.364 0 100-2.726 1.364 1.364 0 000 2.727zm-7.727 5h9.09a.91.91 0 100-1.817h-9.09a.91.91 0 100 1.818z"
    }));
  }
  var MemoIconEmojiNeutralFilled = React__default__default["default"].memo(IconEmojiNeutralFilled);
  function IconEmojiUnhappy(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconEmojiUnhappy"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12 22c-1.38 0-2.679-.26-3.896-.781A10.035 10.035 0 014.92 19.08a10.035 10.035 0 01-2.139-3.184A9.801 9.801 0 012 12c0-1.38.26-2.679.781-3.896A10.035 10.035 0 014.92 4.92 10.035 10.035 0 018.104 2.78 9.801 9.801 0 0112 2c1.38 0 2.679.26 3.896.781A10.035 10.035 0 0119.08 4.92a10.035 10.035 0 012.139 3.184A9.801 9.801 0 0122 12c0 1.38-.26 2.679-.781 3.896a10.035 10.035 0 01-2.139 3.184 10.035 10.035 0 01-3.184 2.139A9.801 9.801 0 0112 22zm0-1.426a8.343 8.343 0 003.34-.674 8.663 8.663 0 002.724-1.836A8.663 8.663 0 0019.9 15.34a8.343 8.343 0 00.674-3.34 8.343 8.343 0 00-.674-3.34 8.663 8.663 0 00-1.836-2.724A8.663 8.663 0 0015.34 4.1 8.343 8.343 0 0012 3.426a8.343 8.343 0 00-3.34.674 8.663 8.663 0 00-2.724 1.836A8.663 8.663 0 004.1 8.66 8.343 8.343 0 003.426 12c0 1.185.224 2.298.674 3.34a8.663 8.663 0 001.836 2.724A8.663 8.663 0 008.66 19.9a8.343 8.343 0 003.34.674zM8.818 10.182a1.364 1.364 0 110-2.727 1.364 1.364 0 010 2.727zm6.364 0a1.364 1.364 0 110-2.727 1.364 1.364 0 010 2.727zm-8.54 5.502c1.065-2.13 2.897-3.23 5.358-3.23s4.293 1.1 5.359 3.23a.91.91 0 01-1.627.813c-.753-1.506-1.95-2.224-3.732-2.224-1.781 0-2.98.718-3.732 2.224a.91.91 0 01-1.627-.813z"
    }));
  }
  var MemoIconEmojiUnhappy = React__default__default["default"].memo(IconEmojiUnhappy);
  function IconEmojiUnhappyFilled(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconEmojiUnhappyFilled"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12 22c-1.38 0-2.679-.26-3.896-.781A10.035 10.035 0 014.92 19.08a10.035 10.035 0 01-2.139-3.184A9.801 9.801 0 012 12c0-1.38.26-2.679.781-3.896A10.035 10.035 0 014.92 4.92 10.035 10.035 0 018.104 2.78 9.801 9.801 0 0112 2c1.38 0 2.679.26 3.896.781A10.035 10.035 0 0119.08 4.92a10.035 10.035 0 012.139 3.184A9.801 9.801 0 0122 12c0 1.38-.26 2.679-.781 3.896a10.035 10.035 0 01-2.139 3.184 10.035 10.035 0 01-3.184 2.139A9.801 9.801 0 0112 22zM8.818 10.182a1.364 1.364 0 100-2.727 1.364 1.364 0 000 2.727zm6.364 0a1.364 1.364 0 100-2.727 1.364 1.364 0 000 2.727zm-8.54 5.502a.91.91 0 001.626.813c.753-1.506 1.95-2.224 3.732-2.224 1.781 0 2.98.718 3.732 2.224a.91.91 0 001.627-.813c-1.066-2.13-2.898-3.23-5.359-3.23s-4.293 1.1-5.359 3.23z"
    }));
  }
  var MemoIconEmojiUnhappyFilled = React__default__default["default"].memo(IconEmojiUnhappyFilled);
  function IconExpand(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconExpand"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M18.478 4.514h-2.653a.753.753 0 01-.75-.757c0-.406.336-.757.75-.757h4.425c.209 0 .398.086.534.225a.79.79 0 01.216.542v4.521a.754.754 0 01-.74.767c-.398 0-.741-.343-.741-.767V5.591l-5.024 5.134c-.3.306-.761.3-1.05.003a.78.78 0 01.003-1.074l5.03-5.14zM5.522 19.486h2.653c.415 0 .75.34.75.757a.762.762 0 01-.75.757H3.75a.753.753 0 01-.75-.767v-4.521c0-.424.332-.767.74-.767.398 0 .741.343.741.767v2.697l5.024-5.134c.3-.306.761-.3 1.05-.003a.78.78 0 01-.003 1.074l-5.03 5.14z"
    }));
  }
  var MemoIconExpand = React__default__default["default"].memo(IconExpand);
  function IconExternalAsset(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconExternalAsset"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5.077 4.5c-.85 0-1.539.672-1.539 1.5v12c0 .828.69 1.5 1.539 1.5h13.846c.85 0 1.539-.672 1.539-1.5V6c0-.828-.69-1.5-1.539-1.5H5.077zM4.303 3h15.394C20.965 3 22 4.036 22 5.275V18.74c0 1.244-1.034 2.26-2.303 2.26H4.303C3.005 21 2 19.976 2 18.74V5.275C2 4.275 2.718 3 4.303 3zm9.649 7.498c.278.385.356 1.069.356 1.502 0 2.071-1.722 3.75-3.846 3.75H8.923c-2.124 0-3.846-1.679-3.846-3.75 0-2.071 1.722-3.75 3.846-3.75h1.539c.162 0 .323.01.48.029A4.57 4.57 0 009.541 9.75h-.618c-1.274 0-2.308 1.007-2.308 2.25s1.034 2.25 2.308 2.25h1.539c1.274 0 2.307-1.007 2.307-2.25 0-.45-.147-.82-.306-.988.151-.343.648-.514 1.489-.514zm-3.904 3.004c-.278-.385-.356-1.069-.356-1.502 0-2.071 1.722-3.75 3.846-3.75h1.539c2.124 0 3.846 1.679 3.846 3.75 0 2.071-1.722 3.75-3.846 3.75h-1.539c-.162 0-.323-.01-.48-.029a4.57 4.57 0 001.401-1.471h.618c1.274 0 2.308-1.007 2.308-2.25s-1.034-2.25-2.308-2.25h-1.539c-1.274 0-2.307 1.007-2.307 2.25 0 .45.147.82.306.988-.151.343-.648.514-1.489.514z"
    }));
  }
  var MemoIconExternalAsset = React__default__default["default"].memo(IconExternalAsset);
  function IconExternalLink(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconExternalLink"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M18.843 4.318h-3.207a.91.91 0 010-1.818h5.455a.91.91 0 01.909.91v5.454a.91.91 0 01-1.818 0V5.55l-6.63 6.63a.91.91 0 11-1.286-1.286l6.577-6.577zm-7.734 0a.91.91 0 010 1.818H4.727a.91.91 0 00-.909.91v11.818c0 .502.407.909.91.909h12.727a.91.91 0 00.909-.91v-5.445a.91.91 0 111.818 0v5.446a2.727 2.727 0 01-2.727 2.727H4.727A2.727 2.727 0 012 18.864V7.045a2.727 2.727 0 012.727-2.727h6.382z"
    }));
  }
  var MemoIconExternalLink = React__default__default["default"].memo(IconExternalLink);
  function IconFeedback(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconFeedback"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M11.531 13.926l4.219 3.613c.143.13.267.17.371.117.104-.052.156-.176.156-.37v-3.36h2.149c.599 0 1.107-.209 1.523-.625.417-.417.625-.925.625-1.524V6.074c0-.599-.208-1.107-.625-1.523a2.073 2.073 0 00-1.523-.625h-10c-.586 0-1.09.208-1.514.625a2.057 2.057 0 00-.635 1.523v5.703c0 .6.212 1.107.635 1.524.423.416.928.625 1.514.625h3.105zm-6.68-7.012a2.087 2.087 0 00-1.025.762c-.267.364-.4.781-.4 1.25v5.722c0 .586.208 1.088.625 1.504.416.417.924.625 1.523.625h2.149v2.657c0 .195.052.315.156.36.104.046.228.004.371-.126l3.379-2.89h.84l-1.739-1.426H8.426c-.99 0-1.833-.349-2.53-1.045-.696-.697-1.044-1.534-1.044-2.51V6.914zm.06-1.504c.155-.82.562-1.51 1.22-2.07a3.432 3.432 0 012.295-.84h10c.99 0 1.832.348 2.53 1.045.696.697 1.044 1.533 1.044 2.51v5.742c0 .976-.348 1.813-1.045 2.51a3.445 3.445 0 01-2.53 1.045h-.702v3.085c0 .73-.199 1.189-.596 1.377-.397.19-.882.056-1.455-.4l-1.445-1.191H12.39l-4.063 3.32c-.573.469-1.058.609-1.455.42s-.596-.648-.596-1.377v-2.363h-.703a3.43 3.43 0 01-2.53-1.055C2.349 16.465 2 15.625 2 14.648V8.926c0-.873.28-1.638.84-2.295.56-.658 1.25-1.065 2.07-1.22z"
    }));
  }
  var MemoIconFeedback = React__default__default["default"].memo(IconFeedback);
  function IconFigureTextBottom(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconFigureTextBottom"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M6.796 4.503c-.69 0-1.25.56-1.25 1.25v6.494c0 .69.56 1.25 1.25 1.25h10.463c.69 0 1.25-.56 1.25-1.25V5.753c0-.69-.56-1.25-1.25-1.25H6.796zm0-1.5h10.463a2.75 2.75 0 012.75 2.75v6.494a2.75 2.75 0 01-2.75 2.75H6.796a2.75 2.75 0 01-2.75-2.75V5.753a2.75 2.75 0 012.75-2.75zm1.96 15.206a.75.75 0 010-1.5h6.5a.75.75 0 110 1.5h-6.5zm.946 2.757a.75.75 0 010-1.5h4.5a.75.75 0 010 1.5h-4.5z"
    }));
  }
  var MemoIconFigureTextBottom = React__default__default["default"].memo(IconFigureTextBottom);
  function IconFigureTextLeft(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconFigureTextLeft"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M13.745 7.514c-.69 0-1.25.56-1.25 1.25v6.494c0 .69.56 1.25 1.25 1.25h4.51c.69 0 1.25-.56 1.25-1.25V8.764c0-.69-.56-1.25-1.25-1.25h-4.51zm0-1.5h4.51a2.75 2.75 0 012.75 2.75v6.494a2.75 2.75 0 01-2.75 2.75h-4.51a2.75 2.75 0 01-2.75-2.75V8.764a2.75 2.75 0 012.75-2.75zm-9.99 1.5a.75.75 0 010-1.5h5a.75.75 0 110 1.5h-5zm1 3a.75.75 0 110-1.5h4a.75.75 0 110 1.5h-4z"
    }));
  }
  var MemoIconFigureTextLeft = React__default__default["default"].memo(IconFigureTextLeft);
  function IconFigureTextRight(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconFigureTextRight"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5.756 7.514c-.69 0-1.25.56-1.25 1.25v6.494c0 .69.56 1.25 1.25 1.25h4.51c.69 0 1.25-.56 1.25-1.25V8.764c0-.69-.56-1.25-1.25-1.25h-4.51zm0-1.5h4.51a2.75 2.75 0 012.75 2.75v6.494a2.75 2.75 0 01-2.75 2.75h-4.51a2.75 2.75 0 01-2.75-2.75V8.764a2.75 2.75 0 012.75-2.75zm9.509 1.5a.75.75 0 110-1.5h5a.75.75 0 110 1.5h-5zm0 3a.75.75 0 110-1.5h4a.75.75 0 110 1.5h-4z"
    }));
  }
  var MemoIconFigureTextRight = React__default__default["default"].memo(IconFigureTextRight);
  function IconFigureTextTop(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconFigureTextTop"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M6.796 10.503c-.69 0-1.25.56-1.25 1.25v6.494c0 .69.56 1.25 1.25 1.25h10.463c.69 0 1.25-.56 1.25-1.25v-6.494c0-.69-.56-1.25-1.25-1.25H6.796zm0-1.5h10.463a2.75 2.75 0 012.75 2.75v6.494a2.75 2.75 0 01-2.75 2.75H6.796a2.75 2.75 0 01-2.75-2.75v-6.494a2.75 2.75 0 012.75-2.75zm1.954-4.5a.75.75 0 110-1.5h6.5a.75.75 0 110 1.5h-6.5zm.946 2.757a.75.75 0 010-1.5h4.5a.75.75 0 110 1.5h-4.5z"
    }));
  }
  var MemoIconFigureTextTop = React__default__default["default"].memo(IconFigureTextTop);
  function IconFile(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconFile"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M18.955 10.462h-6.186a.767.767 0 01-.769-.77V3.538H6.877c-1.016 0-1.832.811-1.832 1.812v13.3c0 .995.815 1.812 1.819 1.812h10.272c1 0 1.819-.814 1.819-1.818v-8.182zm0-1.539v-.177l-5.41-5.063v5.24h5.41zM3.5 5.645A3.65 3.65 0 017.157 2h6.062c.5 0 1.196.273 1.564.62l5.059 4.76c.363.343.658 1.024.658 1.528v9.45A3.643 3.643 0 0116.853 22H7.147A3.649 3.649 0 013.5 18.355V5.645z"
    }));
  }
  var MemoIconFile = React__default__default["default"].memo(IconFile);
  function IconFiletype(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconFiletype"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M4.343 18.208A2.731 2.731 0 012.5 15.636c0-1.187.77-2.197 1.843-2.572V5.645C4.343 3.632 5.995 2 8.033 2h6.119c.505 0 1.207.273 1.579.62l5.105 4.76c.367.343.664 1.024.664 1.528v9.45C21.5 20.37 19.855 22 17.82 22H8.023c-2.033 0-3.68-1.637-3.68-3.645v-.147zm1.56.156v.286c0 .995.822 1.812 1.835 1.812h10.367a1.83 1.83 0 001.835-1.818v-8.182h-6.242a.77.77 0 01-.776-.77V3.538h-5.17c-1.026 0-1.849.811-1.849 1.812v7.56h6.735c1.527 0 2.765 1.22 2.765 2.726 0 1.507-1.238 2.728-2.765 2.728H5.903zm14.037-9.44v-.178l-5.459-5.063v5.24h5.46zM5.265 14.726a.915.915 0 00-.922.91c0 .501.413.908.922.908h7.373a.915.915 0 00.922-.909.915.915 0 00-.922-.909H5.265z"
    }));
  }
  var MemoIconFiletype = React__default__default["default"].memo(IconFiletype);
  function IconFilter(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconFilter"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M4.133 5l5.82 8.856a5 5 0 01.821 2.746v3.744l2.634-1.575.033-2.222a5 5 0 01.82-2.673L20.096 5H4.133zm0-2h15.962a2 2 0 011.671 3.098l-5.833 8.877a3 3 0 00-.492 1.603l-.033 2.222a2 2 0 01-.973 1.687L11.8 22.062a2 2 0 01-3.027-1.716v-3.744a3 3 0 00-.493-1.647l-5.82-8.857A2 2 0 014.133 3z"
    }));
  }
  var MemoIconFilter = React__default__default["default"].memo(IconFilter);
  function IconFitToScreen(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconFitToScreen"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M6 3.15h12A2.85 2.85 0 0120.85 6v12A2.85 2.85 0 0118 20.85H6A2.85 2.85 0 013.15 18V6A2.85 2.85 0 016 3.15zm0 1.7A1.15 1.15 0 004.85 6v12c0 .635.515 1.15 1.15 1.15h12A1.15 1.15 0 0019.15 18V6A1.15 1.15 0 0018 4.85H6zM10 6h4a2 2 0 012 2v8a2 2 0 01-2 2h-4a2 2 0 01-2-2V8a2 2 0 012-2zm0 1.7a.3.3 0 00-.3.3v8a.3.3 0 00.3.3h4a.3.3 0 00.3-.3V8a.3.3 0 00-.3-.3h-4z"
    }));
  }
  var MemoIconFitToScreen = React__default__default["default"].memo(IconFitToScreen);
  function IconFlags(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconFlags"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M6.75 3.75H19.5a.75.75 0 01.592 1.21L16.95 9l3.142 4.04a.75.75 0 01-.592 1.21H6.75v6.6a.75.75 0 01-1.5 0V3.15a.75.75 0 011.5 0v.6zm0 1.5v7.5h11.217l-2.559-3.29a.75.75 0 010-.92l2.559-3.29H6.75z"
    }));
  }
  var MemoIconFlags = React__default__default["default"].memo(IconFlags);
  function IconFocalPoint(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconFocalPoint"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M19.468 19.442v-4.25a.75.75 0 011.5 0v5a.75.75 0 01-.75.75h-5a.75.75 0 010-1.5h4.25zm-14.913 0h4.25a.75.75 0 110 1.5h-5a.75.75 0 01-.75-.75v-5a.75.75 0 111.5 0v4.25zM19.457 4.498h-4.25a.75.75 0 010-1.5h5a.75.75 0 01.75.75v5a.75.75 0 11-1.5 0v-4.25zm-14.914 0v4.25a.75.75 0 11-1.5 0v-5a.75.75 0 01.75-.75h5a.75.75 0 110 1.5h-4.25zM12 13a1 1 0 110-2 1 1 0 010 2z"
    }));
  }
  var MemoIconFocalPoint = React__default__default["default"].memo(IconFocalPoint);
  function IconFolder(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconFolder"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12.95 6.074h6.736c.633 0 1.177.225 1.632.674.455.449.682.996.682 1.64v9.983c0 .645-.227 1.192-.682 1.641-.455.45-1 .674-1.632.674H4.314a2.233 2.233 0 01-1.64-.674A2.233 2.233 0 012 18.372V8.275c0-.04.006-.077.017-.112a.789.789 0 010-.233c.012-.086.03-.17.052-.25l1.002-3.213c.126-.403.386-.748.777-1.036.391-.288.8-.432 1.226-.432h5.389c.426 0 .832.144 1.217.432.386.288.642.633.77 1.036l.5 1.606zm-1.727 0l-.19-.794a.998.998 0 00-.363-.527.938.938 0 00-.587-.216H5.454a.938.938 0 00-.587.216.998.998 0 00-.363.527l-.19.794h6.909zM3.537 9.15v8.462c0 .426.15.79.45 1.088.299.3.661.45 1.087.45h13.852c.426 0 .788-.15 1.088-.45.3-.299.449-.662.449-1.088V9.15c0-.426-.15-.79-.45-1.089-.299-.299-.661-.449-1.087-.449H5.074c-.426 0-.788.15-1.088.45-.3.299-.449.662-.449 1.088z"
    }));
  }
  var MemoIconFolder = React__default__default["default"].memo(IconFolder);
  function IconFolderUp(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconFolderUp"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12.95 6.074h6.736c.633 0 1.177.225 1.632.674.455.449.682.996.682 1.64v9.983c0 .645-.227 1.192-.682 1.641-.455.45-1 .674-1.632.674H4.314a2.233 2.233 0 01-1.64-.674A2.233 2.233 0 012 18.372V8.275c0-.04.006-.077.017-.112a.789.789 0 010-.233c.012-.086.03-.17.052-.25l1.002-3.213c.126-.403.386-.748.777-1.036.391-.288.8-.432 1.226-.432h5.389c.426 0 .832.144 1.217.432.386.288.642.633.77 1.036l.5 1.606zm-1.727 0l-.19-.794a.998.998 0 00-.363-.527.938.938 0 00-.587-.216H5.454a.938.938 0 00-.587.216.998.998 0 00-.363.527l-.19.794h6.909zM3.537 9.15v8.462c0 .426.15.79.45 1.088.299.3.661.45 1.087.45h13.852c.426 0 .788-.15 1.088-.45.3-.299.449-.662.449-1.088V9.15c0-.426-.15-.79-.45-1.089-.299-.299-.661-.449-1.087-.449H5.074c-.426 0-.788.15-1.088.45-.3.299-.449.662-.449 1.088zm9.122 2.77v4.713c0 .18-.065.335-.195.464a.634.634 0 01-.464.195.651.651 0 01-.479-.195.634.634 0 01-.195-.464v-4.727l-1.242 1.242a.642.642 0 01-.472.195.642.642 0 01-.471-.195.661.661 0 01-.202-.464.633.633 0 01.202-.479l2.35-2.35a.625.625 0 01.225-.165.693.693 0 01.59.015c.096.05.173.12.233.21l2.305 2.29c.13.13.195.287.195.472a.642.642 0 01-.195.471.67.67 0 01-.471.202.596.596 0 01-.472-.202L12.66 11.92z"
    }));
  }
  var MemoIconFolderUp = React__default__default["default"].memo(IconFolderUp);
  function IconFont(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconFont"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12.77 15.273h1.337v1.539H9.893v-1.539h1.338V9.788H9.273v1.004H7.734V8.25h8.532v2.542h-1.539V9.788H12.77v5.485zM4.307 3.3h15.384A2.308 2.308 0 0122 5.608v13.846a2.308 2.308 0 01-2.308 2.308H4.308A2.308 2.308 0 012 19.454V5.608A2.308 2.308 0 014.308 3.3zm0 1.538a.77.77 0 00-.77.77v13.846c0 .425.345.77.77.77h15.384a.77.77 0 00.77-.77V5.608a.77.77 0 00-.77-.77H4.308z"
    }));
  }
  var MemoIconFont = React__default__default["default"].memo(IconFont);
  function IconFontKit(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconFontKit"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12.714 15.942h1.243v1.417h-3.914v-1.417h1.243v-5.05H9.468v.923H8.039v-2.34H15.961v2.34h-1.429v-.924h-1.818v5.051zM8.43 6.333v-1.42c0-.78.64-1.413 1.428-1.413h4.286c.789 0 1.428.633 1.428 1.413v1.42h5c.79 0 1.429.635 1.429 1.417v11.333c0 .783-.64 1.417-1.429 1.417H3.43A1.423 1.423 0 012 19.083V7.75c0-.782.64-1.417 1.429-1.417h5zm-5 1.417v11.333H20.57V7.75H3.43zm6.428-2.833v1.416h4.286V4.917H9.857z"
    }));
  }
  var MemoIconFontKit = React__default__default["default"].memo(IconFontKit);
  function IconFoodDrink(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconFoodDrink"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M14.5 18.552v.948a2.5 2.5 0 11-5 0v-.948H8a3 3 0 01-3-3V9a7 7 0 1114 0v6.552a3 3 0 01-3 3h-1.5zm-1.5 0h-2v.948a1 1 0 002 0v-.948zM12 3.5A5.5 5.5 0 006.5 9v6.552a1.5 1.5 0 001.5 1.5h8a1.5 1.5 0 001.5-1.5V9A5.5 5.5 0 0012 3.5zM9.25 8a.75.75 0 011.5 0v7a.75.75 0 11-1.5 0V8zm4 0a.75.75 0 011.5 0v7a.75.75 0 11-1.5 0V8z"
    }));
  }
  var MemoIconFoodDrink = React__default__default["default"].memo(IconFoodDrink);
  function IconForward5Seconds(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconForward5Seconds"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M11.35 19.561a.85.85 0 000-1.7h-4.5a2.15 2.15 0 01-2.15-2.15v-4a2.15 2.15 0 012.15-2.15h3.428l-1.712 1.712a.711.711 0 00.002 1.008.716.716 0 001.009.002l3.033-3.034a.701.701 0 00.207-.505.71.71 0 00-.207-.502L9.577 5.21a.711.711 0 00-1.01.001.716.716 0 000 1.009l1.64 1.642H6.85a3.85 3.85 0 00-3.845 3.652L3 11.711v4a3.85 3.85 0 003.85 3.85zM18.289 16.165c-1.364 0-2.497-.737-2.706-1.815l1.353-.374c.198.572.748.913 1.375.913.836 0 1.375-.594 1.375-1.375 0-.836-.572-1.408-1.408-1.408-.55 0-1.012.253-1.21.693h-1.221V8.3h4.917v1.298h-3.597v1.859c.253-.33.77-.627 1.54-.627 1.463 0 2.475 1.056 2.475 2.563 0 1.617-1.199 2.772-2.893 2.772z"
    }));
  }
  var MemoIconForward5Seconds = React__default__default["default"].memo(IconForward5Seconds);
  function IconFrequentlyUsed(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconFrequentlyUsed"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12.85 11.65H16a.85.85 0 010 1.7h-4a.847.847 0 01-.85-.85V6.727a.85.85 0 111.7 0v4.923zM12 22c-1.38 0-2.679-.26-3.896-.781A10.035 10.035 0 014.92 19.08a10.035 10.035 0 01-2.139-3.184A9.801 9.801 0 012 12c0-1.38.26-2.679.781-3.896A10.035 10.035 0 014.92 4.92a10.035 10.035 0 013.184-2.14A9.801 9.801 0 0112 2c1.38 0 2.679.26 3.896.781A10.035 10.035 0 0119.08 4.92a10.035 10.035 0 012.139 3.184A9.801 9.801 0 0122 12c0 1.38-.26 2.679-.781 3.896a10.035 10.035 0 01-2.139 3.184 10.035 10.035 0 01-3.184 2.139A9.801 9.801 0 0112 22zm0-1.426a8.343 8.343 0 003.34-.674 8.663 8.663 0 002.724-1.836A8.663 8.663 0 0019.9 15.34a8.343 8.343 0 00.674-3.34 8.343 8.343 0 00-.674-3.34 8.663 8.663 0 00-1.836-2.724A8.663 8.663 0 0015.34 4.1 8.343 8.343 0 0012 3.426a8.343 8.343 0 00-3.34.674 8.663 8.663 0 00-2.724 1.836A8.663 8.663 0 004.1 8.66 8.343 8.343 0 003.426 12c0 1.185.224 2.298.674 3.34a8.663 8.663 0 001.836 2.724A8.663 8.663 0 008.66 19.9a8.343 8.343 0 003.34.674z"
    }));
  }
  var MemoIconFrequentlyUsed = React__default__default["default"].memo(IconFrequentlyUsed);
  function IconFullwidth(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconFullwidth"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M11.231 11.132h4.12l-1.094-1.095a.85.85 0 011.202-1.203l2.475 2.475a.848.848 0 01.246.672.848.848 0 01-.246.672l-2.475 2.475a.85.85 0 11-1.202-1.202l1.094-1.095H8.694l1.095 1.095a.85.85 0 11-1.202 1.202l-2.475-2.475a.848.848 0 01-.246-.671.848.848 0 01.246-.672l2.475-2.475a.85.85 0 111.202 1.202l-1.095 1.095h2.537zM6 3.15h12A2.85 2.85 0 0120.85 6v12A2.85 2.85 0 0118 20.85H6A2.85 2.85 0 013.15 18V6A2.85 2.85 0 016 3.15zm0 1.7A1.15 1.15 0 004.85 6v12c0 .635.515 1.15 1.15 1.15h12A1.15 1.15 0 0019.15 18V6A1.15 1.15 0 0018 4.85H6z"
    }));
  }
  var MemoIconFullwidth = React__default__default["default"].memo(IconFullwidth);
  function IconGeneral(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconGeneral"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5 5a1 1 0 00-1 1v12a1 1 0 001 1h14a1 1 0 001-1V6a1 1 0 00-1-1H5zm0-2h14a3 3 0 013 3v12a3 3 0 01-3 3H5a3 3 0 01-3-3V6a3 3 0 013-3z"
    }));
  }
  var MemoIconGeneral = React__default__default["default"].memo(IconGeneral);
  function IconGenericPost(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconGenericPost"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M11.09 14.618H9.274a.91.91 0 110-1.818h1.818v-1.818a.91.91 0 111.818 0V12.8h1.818a.91.91 0 110 1.818H12.91v1.818a.91.91 0 11-1.818 0v-1.818zm9.372-7.972V5.108a.77.77 0 00-.77-.77H4.308a.77.77 0 00-.77.77v1.538h16.924zm0 1.539H3.538v10.769c0 .425.345.77.77.77h15.384a.77.77 0 00.77-.77V8.184zM4.308 2.8h15.384A2.308 2.308 0 0122 5.108v13.846a2.308 2.308 0 01-2.308 2.308H4.308A2.308 2.308 0 012 18.954V5.108A2.308 2.308 0 014.308 2.8z"
    }));
  }
  var MemoIconGenericPost = React__default__default["default"].memo(IconGenericPost);
  function IconGuidelines(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconGuidelines"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M2.5 20.034V3.966c0-.408.142-.755.427-1.04.284-.284.63-.426 1.039-.426h4.379c.408 0 .754.142 1.039.427.284.284.427.63.427 1.039v.427l.222-.39c.198-.346.492-.572.882-.677.39-.105.757-.06 1.104.139l3.766 2.17c.347.211.572.511.677.9.106.39.06.758-.139 1.105l-.167.278.279-.167a1.406 1.406 0 011.104-.14c.39.106.683.332.88.678l2.172 3.767c.198.346.244.714.139 1.104-.105.39-.33.683-.677.881l-.241.148h.222c.408 0 .755.143 1.04.427.284.285.426.631.426 1.04v4.378c0 .408-.142.755-.427 1.04-.284.284-.63.426-1.039.426H3.966c-.21 0-.402-.037-.575-.111a1.47 1.47 0 01-.464-.316 1.47 1.47 0 01-.316-.464 1.445 1.445 0 01-.111-.575zm1.466-5.845h.185l4.194-7.273V4.689a.696.696 0 00-.214-.51.696.696 0 00-.51-.213H4.69a.696.696 0 00-.51.213.696.696 0 00-.213.51v9.5zm12.932 0l1.8-1.039a.68.68 0 00.334-.436.708.708 0 00-.074-.547l-1.447-2.523a.68.68 0 00-.436-.334.761.761 0 00-.566.074l-8.331 4.805h8.72zm-3.265-4.824l1.057-1.818a.727.727 0 00.075-.557.682.682 0 00-.334-.445l-2.524-1.447a.708.708 0 00-.547-.075.67.67 0 00-.436.353L6.1 13.726l7.533-4.36zm5.733 6.309H4.746a.696.696 0 00-.511.213.696.696 0 00-.214.51v2.895c0 .198.072.368.214.51a.696.696 0 00.51.214h14.621a.696.696 0 00.51-.214.696.696 0 00.214-.51v-2.895a.696.696 0 00-.214-.51.696.696 0 00-.51-.213z"
    }));
  }
  var MemoIconGuidelines = React__default__default["default"].memo(IconGuidelines);
  function IconHeader(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 28 28",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconHeader"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M26.281 26c-1.375 0-2.766-.109-4.156-.109-1.375 0-2.75.109-4.125.109-.531 0-.781-.578-.781-1.031 0-1.391 1.563-.797 2.375-1.328.516-.328.516-1.641.516-2.188l-.016-6.109c0-.172 0-.328-.016-.484-.25-.078-.531-.063-.781-.063H8.75c-.266 0-.547-.016-.797.063-.016.156-.016.313-.016.484l-.016 5.797c0 .594 0 2.219.578 2.562.812.5 2.656-.203 2.656 1.203 0 .469-.219 1.094-.766 1.094-1.453 0-2.906-.109-4.344-.109-1.328 0-2.656.109-3.984.109-.516 0-.75-.594-.75-1.031 0-1.359 1.437-.797 2.203-1.328.5-.344.516-1.687.516-2.234l-.016-.891V7.813c0-.75.109-3.156-.594-3.578-.781-.484-2.453.266-2.453-1.141 0-.453.203-1.094.75-1.094 1.437 0 2.891.109 4.328.109C7.358 2.109 8.686 2 9.998 2c.562 0 .781.625.781 1.094 0 1.344-1.547.688-2.312 1.172-.547.328-.547 1.937-.547 2.5l.016 5c0 .172 0 .328.016.5.203.047.406.047.609.047h10.922c.187 0 .391 0 .594-.047.016-.172.016-.328.016-.5l.016-5c0-.578 0-2.172-.547-2.5-.781-.469-2.344.156-2.344-1.172 0-.469.219-1.094.781-1.094 1.375 0 2.75.109 4.125.109 1.344 0 2.688-.109 4.031-.109.562 0 .781.625.781 1.094 0 1.359-1.609.672-2.391 1.156-.531.344-.547 1.953-.547 2.516l.016 14.734c0 .516.031 1.875.531 2.188.797.5 2.484-.141 2.484 1.219 0 .453-.203 1.094-.75 1.094z"
    }));
  }
  var MemoIconHeader = React__default__default["default"].memo(IconHeader);
  function IconHookBracketLeft(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 7 12",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconHookBracketLeft"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M6.073 0H.213v12h1.372V1.28h4.488V0z"
    }));
  }
  var MemoIconHookBracketLeft = React__default__default["default"].memo(IconHookBracketLeft);
  function IconHookBracketRight(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 7 12",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconHookBracketRight"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M.212 12h5.86V0H4.7v10.72H.212V12z"
    }));
  }
  var MemoIconHookBracketRight = React__default__default["default"].memo(IconHookBracketRight);
  function IconIconAndText(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconIconAndText"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M13 6H4a.5.5 0 00-.5.5v12a.5.5 0 00.5.5h9a.5.5 0 00.5-.5v-12A.5.5 0 0013 6zM4 4.5a2 2 0 00-2 2v12a2 2 0 002 2h9a2 2 0 002-2v-12a2 2 0 00-2-2H4z"
    }), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12.972 19.747L2.79 6.1l1.238-.847L14.21 18.9l-1.239.847z"
    }), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2.79 18.9L12.971 5.253l1.238.847L4.028 19.746 2.789 18.9zM22 6.25a.75.75 0 01-.75.75h-3.486a.75.75 0 010-1.5h3.486a.75.75 0 01.75.75zM22 12.25a.75.75 0 01-.75.75h-3.486a.75.75 0 010-1.5h3.486a.75.75 0 01.75.75zM20.575 9.25a.75.75 0 01-.75.75h-2.061a.75.75 0 010-1.5h2.061a.75.75 0 01.75.75zM20.575 15.25a.75.75 0 01-.75.75h-2.061a.75.75 0 010-1.5h2.061a.75.75 0 01.75.75z"
    }));
  }
  var MemoIconIconAndText = React__default__default["default"].memo(IconIconAndText);
  function IconIcons(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconIcons"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5.793 4.636L8.57 7.413A5.702 5.702 0 0112 6.273c1.286 0 2.474.424 3.43 1.14l2.777-2.777H5.793zM4.636 5.793v12.414l2.777-2.777A5.702 5.702 0 016.273 12c0-1.286.424-2.474 1.14-3.43L4.636 5.793zm14.728 12.414V5.793L16.587 8.57a5.702 5.702 0 011.14 3.43 5.702 5.702 0 01-1.14 3.43l2.777 2.777zm-1.157 1.157l-2.777-2.777a5.702 5.702 0 01-3.43 1.14 5.702 5.702 0 01-3.43-1.14l-2.777 2.777h12.414zm-3.951-3.95L12 13.156l-2.256 2.256a4.072 4.072 0 002.256.678c.834 0 1.61-.25 2.256-.678zm1.157-1.158A4.072 4.072 0 0016.091 12c0-.834-.25-1.61-.678-2.256L13.157 12l2.256 2.256zM8.587 9.744A4.072 4.072 0 007.909 12c0 .834.25 1.61.678 2.256L10.843 12 8.587 9.744zm1.157-1.157L12 10.843l2.256-2.256A4.072 4.072 0 0012 7.909c-.834 0-1.61.25-2.256.678zM5.454 3h13.091A2.455 2.455 0 0121 5.455v13.09A2.455 2.455 0 0118.545 21H5.455A2.455 2.455 0 013 18.545V5.455A2.455 2.455 0 015.455 3z"
    }));
  }
  var MemoIconIcons = React__default__default["default"].memo(IconIcons);
  function IconIframe(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconIframe"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M11.534 15.452a.77.77 0 01-1.376-.688l2.308-4.616a.77.77 0 011.376.688l-2.308 4.616zm3.483-.856a.678.678 0 00.889 1.023l3.077-2.672a.678.678 0 00.004-1.02L15.91 9.215a.678.678 0 00-.897 1.016l2.496 2.2-2.492 2.165zm-6.034 0a.678.678 0 11-.889 1.023l-3.077-2.672a.678.678 0 01-.004-1.02L8.09 9.215a.678.678 0 01.897 1.016l-2.496 2.2 2.492 2.165zM4.308 4.338a.77.77 0 00-.77.77v13.846c0 .425.345.77.77.77h15.384a.77.77 0 00.77-.77V5.108a.77.77 0 00-.77-.77H4.308zm0-1.538h15.384A2.308 2.308 0 0122 5.108v13.846a2.308 2.308 0 01-2.308 2.308H4.308A2.308 2.308 0 012 18.954V5.108A2.308 2.308 0 014.308 2.8z"
    }));
  }
  var MemoIconIframe = React__default__default["default"].memo(IconIframe);
  function IconImage(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconImage"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M20.467 13.16V5.988c0-.41-.15-.761-.45-1.054-.301-.293-.662-.44-1.083-.44H5.066c-.421 0-.782.147-1.082.44-.3.293-.451.644-.451 1.054v7.752L9.05 11.21l6.763 4.482 4.653-2.53zm0 1.547l-4.851 2.496-6.565-4.447-5.518 2.443v2.813c0 .41.15.761.45 1.054.301.293.662.44 1.083.44h13.868c.421 0 .782-.147 1.082-.44.3-.293.451-.644.451-1.054v-3.305zM2 5.25c0-.621.225-1.151.676-1.59.451-.44.995-.66 1.632-.66h15.384c.637 0 1.18.22 1.632.66.45.439.676.969.676 1.59v13.5a2.14 2.14 0 01-.676 1.59c-.451.44-.995.66-1.632.66H4.308c-.637 0-1.18-.22-1.632-.66A2.14 2.14 0 012 18.75V5.25zM15.85 12c-.853 0-1.58-.293-2.182-.879a2.86 2.86 0 01-.902-2.127c0-.82.301-1.523.902-2.11.601-.585 1.329-.878 2.182-.878.854 0 1.581.293 2.182.879.602.586.902 1.289.902 2.11 0 .831-.3 1.54-.902 2.126-.6.586-1.328.879-2.182.879zm0-1.494c.421 0 .782-.147 1.082-.44.3-.293.451-.65.451-1.072 0-.41-.15-.762-.45-1.055-.301-.293-.662-.439-1.083-.439-.42 0-.781.146-1.082.44-.3.292-.45.644-.45 1.054 0 .422.15.78.45 1.072.3.293.662.44 1.082.44z"
    }));
  }
  var MemoIconImage = React__default__default["default"].memo(IconImage);
  function IconImageAndText(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconImageAndText"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M22 6.354a.75.75 0 01-.75.75h-3.486a.75.75 0 010-1.5h3.486a.75.75 0 01.75.75zM22 12.354a.75.75 0 01-.75.75h-3.486a.75.75 0 010-1.5h3.486a.75.75 0 01.75.75zM20.575 9.354a.75.75 0 01-.75.75h-2.061a.75.75 0 010-1.5h2.061a.75.75 0 01.75.75zM20.575 15.354a.75.75 0 01-.75.75h-2.061a.75.75 0 010-1.5h2.061a.75.75 0 01.75.75zM13 6H4a.5.5 0 00-.5.5v12a.5.5 0 00.5.5h9a.5.5 0 00.5-.5v-12A.5.5 0 0013 6zM4 4.5a2 2 0 00-2 2v12a2 2 0 002 2h9a2 2 0 002-2v-12a2 2 0 00-2-2H4z"
    }), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M11.012 15.5a.25.25 0 00.287-.029l2.221-1.936a.75.75 0 01.986 1.13l-2.222 1.937a1.75 1.75 0 01-2.006.207l-4.216-2.367a.25.25 0 00-.254.006l-2.414 1.49a.75.75 0 01-.788-1.276l2.414-1.49a1.75 1.75 0 011.776-.038l4.216 2.367zM9.2 9.5a.8.8 0 101.6 0 .8.8 0 00-1.6 0zm.8-2a2 2 0 100 4 2 2 0 000-4z"
    }));
  }
  var MemoIconImageAndText = React__default__default["default"].memo(IconImageAndText);
  function IconImageFigure(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconImageFigure"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5.195 5.6c-.882 0-1.598.716-1.598 1.6v9.6c0 .884.716 1.6 1.598 1.6h6.39c.881 0 1.597-.716 1.597-1.6V7.2c0-.884-.716-1.6-1.598-1.6h-6.39zm0-1.6h6.39a3.197 3.197 0 013.194 3.2v9.6c0 1.767-1.43 3.2-3.195 3.2h-6.39A3.197 3.197 0 012 16.8V7.2C2 5.433 3.43 4 5.195 4zm11.58 4a.8.8 0 010-1.6h4.426a.8.8 0 010 1.6h-4.425zm0 3.2a.8.8 0 010-1.6h2.829a.8.8 0 010 1.6h-2.828z"
    }));
  }
  var MemoIconImageFigure = React__default__default["default"].memo(IconImageFigure);
  function IconImageGrid3(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconImageGrid3"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M4.143 10.429a.714.714 0 00-.714.714v2.143c0 .394.32.714.714.714H5.57c.395 0 .715-.32.715-.714v-2.143a.714.714 0 00-.715-.714H4.143zm0-1.429H5.57c1.184 0 2.143.96 2.143 2.143v2.143c0 1.183-.96 2.143-2.143 2.143H4.143A2.143 2.143 0 012 13.286v-2.143C2 9.959 2.96 9 4.143 9zm7.143 1.429a.714.714 0 00-.715.714v2.143c0 .394.32.714.715.714h1.428c.395 0 .715-.32.715-.714v-2.143a.714.714 0 00-.715-.714h-1.428zm0-1.429h1.428c1.184 0 2.143.96 2.143 2.143v2.143c0 1.183-.96 2.143-2.143 2.143h-1.428a2.143 2.143 0 01-2.143-2.143v-2.143c0-1.184.96-2.143 2.143-2.143zm7.143 1.429a.714.714 0 00-.715.714v2.143c0 .394.32.714.715.714h1.428c.395 0 .714-.32.714-.714v-2.143a.714.714 0 00-.714-.714H18.43zm0-1.429h1.428C21.041 9 22 9.96 22 11.143v2.143c0 1.183-.96 2.143-2.143 2.143H18.43a2.143 2.143 0 01-2.143-2.143v-2.143c0-1.184.96-2.143 2.143-2.143z"
    }));
  }
  var MemoIconImageGrid3 = React__default__default["default"].memo(IconImageGrid3);
  function IconImageGrid4(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconImageGrid4"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M4.472 11.231a.74.74 0 100 1.482.74.74 0 000-1.482zm0-1.481a2.222 2.222 0 110 4.444 2.222 2.222 0 010-4.444zm5.185 1.481a.74.74 0 100 1.482.74.74 0 000-1.482zm0-1.481a2.222 2.222 0 110 4.444 2.222 2.222 0 010-4.444zm5.186 1.481a.74.74 0 100 1.482.74.74 0 000-1.482zm0-1.481a2.222 2.222 0 110 4.444 2.222 2.222 0 010-4.444zm5.185 1.481a.74.74 0 100 1.482.74.74 0 000-1.482zm0-1.481a2.222 2.222 0 110 4.444 2.222 2.222 0 010-4.444z"
    }));
  }
  var MemoIconImageGrid4 = React__default__default["default"].memo(IconImageGrid4);
  function IconImageTextRatio25(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconImageTextRatio25"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M14 5.5H4a.5.5 0 00-.5.5v12a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V6a.5.5 0 00-.5-.5zM4 4a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V6a2 2 0 00-2-2H4zM22 5.75a.75.75 0 01-.75.75h-2.5a.75.75 0 010-1.5h2.5a.75.75 0 01.75.75zM22 11.75a.75.75 0 01-.75.75h-2.5a.75.75 0 010-1.5h2.5a.75.75 0 01.75.75zM21 8.75a.75.75 0 01-.75.75h-1.5a.75.75 0 010-1.5h1.5a.75.75 0 01.75.75zM21 14.75a.75.75 0 01-.75.75h-1.5a.75.75 0 010-1.5h1.5a.75.75 0 01.75.75z"
    }));
  }
  var MemoIconImageTextRatio25 = React__default__default["default"].memo(IconImageTextRatio25);
  function IconImageTextRatio33(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconImageTextRatio33"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 5.5H4a.5.5 0 00-.5.5v12a.5.5 0 00.5.5h8a.5.5 0 00.5-.5V6a.5.5 0 00-.5-.5zM4 4a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V6a2 2 0 00-2-2H4zM22 5.75a.75.75 0 01-.75.75h-4.5a.75.75 0 010-1.5h4.5a.75.75 0 01.75.75zM22 11.75a.75.75 0 01-.75.75h-4.5a.75.75 0 010-1.5h4.5a.75.75 0 01.75.75zM20 8.75a.75.75 0 01-.75.75h-2.5a.75.75 0 010-1.5h2.5a.75.75 0 01.75.75zM20 14.75a.75.75 0 01-.75.75h-2.5a.75.75 0 010-1.5h2.5a.75.75 0 01.75.75z"
    }));
  }
  var MemoIconImageTextRatio33 = React__default__default["default"].memo(IconImageTextRatio33);
  function IconImageTextRatio50(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconImageTextRatio50"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9 5.5H4a.5.5 0 00-.5.5v12a.5.5 0 00.5.5h5a.5.5 0 00.5-.5V6a.5.5 0 00-.5-.5zM4 4a2 2 0 00-2 2v12a2 2 0 002 2h5a2 2 0 002-2V6a2 2 0 00-2-2H4zM22 5.75a.75.75 0 01-.75.75h-7.5a.75.75 0 010-1.5h7.5a.75.75 0 01.75.75zM22 11.75a.75.75 0 01-.75.75h-7.5a.75.75 0 010-1.5h7.5a.75.75 0 01.75.75zM20 8.75a.75.75 0 01-.75.75h-5.5a.75.75 0 010-1.5h5.5a.75.75 0 01.75.75zM20 14.75a.75.75 0 01-.75.75h-5.5a.75.75 0 010-1.5h5.5a.75.75 0 01.75.75z"
    }));
  }
  var MemoIconImageTextRatio50 = React__default__default["default"].memo(IconImageTextRatio50);
  function IconImageTextRatio66(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconImageTextRatio66"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 5.5H4a.5.5 0 00-.5.5v12a.5.5 0 00.5.5h3a.5.5 0 00.5-.5V6a.5.5 0 00-.5-.5zM4 4a2 2 0 00-2 2v12a2 2 0 002 2h3a2 2 0 002-2V6a2 2 0 00-2-2H4zM22 5.75a.75.75 0 01-.75.75h-9.5a.75.75 0 010-1.5h9.5a.75.75 0 01.75.75zM22 11.75a.75.75 0 01-.75.75h-9.5a.75.75 0 010-1.5h9.5a.75.75 0 01.75.75zM19 8.75a.75.75 0 01-.75.75h-6.5a.75.75 0 010-1.5h6.5a.75.75 0 01.75.75zM19 14.75a.75.75 0 01-.75.75h-6.5a.75.75 0 010-1.5h6.5a.75.75 0 01.75.75z"
    }));
  }
  var MemoIconImageTextRatio66 = React__default__default["default"].memo(IconImageTextRatio66);
  function IconImageTextRatio75(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconImageTextRatio75"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M5.4 5.5H3.6a.1.1 0 00-.1.1v12.8a.1.1 0 00.1.1h1.8a.1.1 0 00.1-.1V5.6a.1.1 0 00-.1-.1zM3.6 4A1.6 1.6 0 002 5.6v12.8A1.6 1.6 0 003.6 20h1.8A1.6 1.6 0 007 18.4V5.6A1.6 1.6 0 005.4 4H3.6zM22 5.75a.75.75 0 01-.75.75H9.75a.75.75 0 010-1.5h11.5a.75.75 0 01.75.75zM22 11.75a.75.75 0 01-.75.75H9.75a.75.75 0 010-1.5h11.5a.75.75 0 01.75.75zM19 8.75a.75.75 0 01-.75.75h-8.5a.75.75 0 010-1.5h8.5a.75.75 0 01.75.75zM19 14.75a.75.75 0 01-.75.75h-8.5a.75.75 0 010-1.5h8.5a.75.75 0 01.75.75z"
    }));
  }
  var MemoIconImageTextRatio75 = React__default__default["default"].memo(IconImageTextRatio75);
  function IconIndesign(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconIndesign"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M18 3.25A2.75 2.75 0 0120.75 6v12A2.75 2.75 0 0118 20.75H6A2.75 2.75 0 013.25 18V6A2.75 2.75 0 016 3.25zm0 1.5H6c-.69 0-1.25.56-1.25 1.25v12c0 .69.56 1.25 1.25 1.25h12c.69 0 1.25-.56 1.25-1.25V6c0-.69-.56-1.25-1.25-1.25zM16.242 8v7.832h-1.298v-.76h-.033c-.347.67-1.052.928-1.69.928-1.42 0-2.484-1.141-2.484-2.83 0-1.701 1.108-2.843 2.518-2.843.772 0 1.331.37 1.577.828V8h1.41zM9.235 8v7.832H7.758V8h1.477zm4.288 3.57c-.85 0-1.365.682-1.365 1.6 0 .917.526 1.6 1.365 1.6.85 0 1.354-.672 1.354-1.6 0-.94-.503-1.6-1.354-1.6z"
    }));
  }
  var MemoIconIndesign = React__default__default["default"].memo(IconIndesign);
  function IconIntegration(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconIntegration"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M15.6 20.4v-4.04a.8.8 0 011.371-.56 2 2 0 100-2.8.8.8 0 01-1.371-.56V8.4h-4.04A.8.8 0 0111 7.029a2 2 0 10-2.8 0A.8.8 0 017.64 8.4H3.6v12h2.605a3.6 3.6 0 116.79 0H15.6zm2.8-9.6a3.6 3.6 0 11-1.2 6.995V20.4a1.6 1.6 0 01-1.6 1.6h-4.04a.8.8 0 01-.56-1.371 2 2 0 10-2.8 0A.8.8 0 017.64 22H3.6A1.6 1.6 0 012 20.4v-12a1.6 1.6 0 011.6-1.6h2.605a3.6 3.6 0 116.79 0H15.6a1.6 1.6 0 011.6 1.6v2.605c.38-.134.784-.205 1.2-.205z"
    }));
  }
  var MemoIconIntegration = React__default__default["default"].memo(IconIntegration);
  function IconIntegrations(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconIntegrations"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M2.77 6.881a.736.736 0 01-.547-.227A.743.743 0 012 6.116c0-.22.074-.407.223-.559a.736.736 0 01.547-.227h16.596L17.42 3.344a.767.767 0 01-.222-.558c0-.22.074-.407.222-.558A.736.736 0 0117.968 2c.216 0 .398.076.547.228l3.262 3.33c.068.082.122.172.162.268.04.097.061.193.061.29 0 .096-.02.193-.06.29-.041.096-.095.186-.163.268l-3.262 3.33a.736.736 0 01-.547.228.736.736 0 01-.548-.228.827.827 0 01-.222-.569c0-.213.074-.396.222-.548l1.966-2.006H2.77zM4.614 18.65l1.966 2.007a.755.755 0 01.222.548.755.755 0 01-.222.548.76.76 0 01-.558.248.725.725 0 01-.537-.228l-3.262-3.35a.784.784 0 01-.162-.248.743.743 0 01-.061-.29c0-.11.017-.214.05-.31a.568.568 0 01.173-.248l3.262-3.33a.725.725 0 01.537-.228c.21 0 .395.076.558.228a.755.755 0 01.222.548.827.827 0 01-.222.569l-1.946 1.985H21.23c.203 0 .382.076.537.228.155.151.233.33.233.537a.75.75 0 01-.233.559.746.746 0 01-.537.227H4.614z"
    }));
  }
  var MemoIconIntegrations = React__default__default["default"].memo(IconIntegrations);
  function IconInteractions(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconInteractions"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M13.774 17.801l-1.942 2.103c-.427.494-.945.624-1.552.39-.608-.233-.912-.677-.912-1.331v-4.226a6.206 6.206 0 01-2.483-.5 6.343 6.343 0 01-2.023-1.373 6.582 6.582 0 01-1.361-2.022A6.135 6.135 0 013 8.368c0-.88.167-1.708.5-2.483a6.427 6.427 0 011.362-2.023 6.427 6.427 0 012.023-1.361A6.206 6.206 0 019.368 2c.882 0 1.706.167 2.474.5a6.582 6.582 0 012.022 1.362 6.343 6.343 0 011.372 2.023c.334.775.501 1.602.501 2.483 0 .615-.083 1.205-.25 1.773a6.1 6.1 0 01-.711 1.572l3.925 2.944c.534.414.694.941.48 1.582-.213.64-.66.961-1.341.961h-2.784l2.163 3.745a.73.73 0 01.07.541.635.635 0 01-.33.42.73.73 0 01-.541.07.635.635 0 01-.42-.33l-2.224-3.845zm-.14-6.93a5.36 5.36 0 00.5-1.19c.121-.421.181-.859.181-1.313 0-.68-.13-1.321-.39-1.922a5.148 5.148 0 00-1.062-1.582 4.808 4.808 0 00-1.572-1.062 4.891 4.891 0 00-1.923-.38 4.922 4.922 0 00-4.947 4.947c0 .68.128 1.321.381 1.922.254.6.608 1.125 1.062 1.572.454.447.981.801 1.582 1.062.6.26 1.242.39 1.922.39v-2.824a2.046 2.046 0 01-1.502-.62 2.046 2.046 0 01-.62-1.503c0-.587.207-1.088.62-1.502.414-.413.915-.62 1.502-.62.588 0 1.089.207 1.502.62a2.046 2.046 0 01.571 1.923c-.033.134-.07.26-.11.38.04.027.087.054.14.08.054.027.107.06.16.1l2.003 1.523zm-2.864 8.092l2.844-3.165h4.226l-7.07-5.307v8.472z"
    }));
  }
  var MemoIconInteractions = React__default__default["default"].memo(IconInteractions);
  function IconLayoutGrid(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconLayoutGrid"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9.4 15H4.6a.1.1 0 00-.1.1v4.8a.1.1 0 00.1.1h4.8a.1.1 0 00.1-.1v-4.8a.1.1 0 00-.1-.1zm-4.8-1.5A1.6 1.6 0 003 15.1v4.8a1.6 1.6 0 001.6 1.6h4.8a1.6 1.6 0 001.6-1.6v-4.8a1.6 1.6 0 00-1.6-1.6H4.6zM19.4 15h-4.8a.1.1 0 00-.1.1v4.8a.1.1 0 00.1.1h4.8a.1.1 0 00.1-.1v-4.8a.1.1 0 00-.1-.1zm-4.8-1.5a1.6 1.6 0 00-1.6 1.6v4.8a1.6 1.6 0 001.6 1.6h4.8a1.6 1.6 0 001.6-1.6v-4.8a1.6 1.6 0 00-1.6-1.6h-4.8zM19.4 5h-4.8a.1.1 0 00-.1.1v4.8a.1.1 0 00.1.1h4.8a.1.1 0 00.1-.1V5.1a.1.1 0 00-.1-.1zm-4.8-1.5A1.6 1.6 0 0013 5.1v4.8a1.6 1.6 0 001.6 1.6h4.8A1.6 1.6 0 0021 9.9V5.1a1.6 1.6 0 00-1.6-1.6h-4.8zM9.4 5H4.6a.1.1 0 00-.1.1v4.8a.1.1 0 00.1.1h4.8a.1.1 0 00.1-.1V5.1a.1.1 0 00-.1-.1zM4.6 3.5A1.6 1.6 0 003 5.1v4.8a1.6 1.6 0 001.6 1.6h4.8A1.6 1.6 0 0011 9.9V5.1a1.6 1.6 0 00-1.6-1.6H4.6z"
    }));
  }
  var MemoIconLayoutGrid = React__default__default["default"].memo(IconLayoutGrid);
  function IconLayoutHorizontal(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconLayoutHorizontal"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M13.35 3.75c.635 0 1.15.515 1.15 1.15v15.2a1.15 1.15 0 01-1.15 1.15h-2.7A1.15 1.15 0 019.5 20.1V4.9c0-.635.515-1.15 1.15-1.15h2.7zM13 5.25h-2v14.5h2V5.25zM6.86 3.75c.635 0 1.15.515 1.15 1.15v15.2a1.15 1.15 0 01-1.15 1.15h-2.7a1.15 1.15 0 01-1.15-1.15V4.9c0-.635.515-1.15 1.15-1.15h2.7zm-.35 1.5h-2v14.5h2V5.25zM19.84 3.75c.635 0 1.15.515 1.15 1.15v15.2a1.15 1.15 0 01-1.15 1.15h-2.7a1.15 1.15 0 01-1.15-1.15V4.9c0-.635.515-1.15 1.15-1.15h2.7zm-.35 1.5h-2v14.5h2V5.25z"
    }));
  }
  var MemoIconLayoutHorizontal = React__default__default["default"].memo(IconLayoutHorizontal);
  function IconLayoutVertical(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 25",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconLayoutVertical"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M20.75 13.85A1.15 1.15 0 0119.6 15H4.4a1.15 1.15 0 01-1.15-1.15v-2.7c0-.635.515-1.15 1.15-1.15h15.2c.635 0 1.15.515 1.15 1.15v2.7zm-1.5-.35v-2H4.75v2h14.5zM20.75 7.36a1.15 1.15 0 01-1.15 1.15H4.4a1.15 1.15 0 01-1.15-1.15v-2.7c0-.635.515-1.15 1.15-1.15h15.2c.635 0 1.15.515 1.15 1.15v2.7zm-1.5-.35v-2H4.75v2h14.5zM20.75 20.34a1.15 1.15 0 01-1.15 1.15H4.4a1.15 1.15 0 01-1.15-1.15v-2.7c0-.635.515-1.15 1.15-1.15h15.2c.635 0 1.15.515 1.15 1.15v2.7zm-1.5-.35v-2H4.75v2h14.5z"
    }));
  }
  var MemoIconLayoutVertical = React__default__default["default"].memo(IconLayoutVertical);
  function IconLightning(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconLightning"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5.438 13.421h5.7l-2.88 7.121 10.702-9.961h-6.051l2.743-7.121L5.438 13.42zm9.553-4.26h3.969c.648 0 1.093.298 1.333.894.24.597.12 1.116-.36 1.557L9.232 21.574c-.558.518-1.148.564-1.77.136-.623-.428-.798-.999-.526-1.712l2.101-5.156h-3.6c-.635 0-1.073-.295-1.313-.886-.24-.59-.132-1.105.321-1.546L14.66 2.448c.545-.532 1.135-.59 1.77-.175.636.415.818.98.545 1.693L14.991 9.16z"
    }));
  }
  var MemoIconLightning = React__default__default["default"].memo(IconLightning);
  function IconLightningFilled(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconLightningFilled"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M4.583 13.908h6.353l-2.948 7.29a.583.583 0 00.938.646l11.608-10.806a.583.583 0 00-.398-1.01h-6.782l2.788-7.235a.583.583 0 00-.952-.627L4.176 12.906a.583.583 0 00.407 1.002z"
    }));
  }
  var MemoIconLightningFilled = React__default__default["default"].memo(IconLightningFilled);
  function IconLineDashes(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconLineDashes"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M18 20.75a.25.25 0 00.25-.25v-4a.75.75 0 011.5 0v4A1.75 1.75 0 0118 22.25H6a1.75 1.75 0 01-1.75-1.75v-4a.75.75 0 011.5 0v4c0 .138.112.25.25.25h12zM18 4.25a.25.25 0 01.25.25v4a.75.75 0 001.5 0v-4A1.75 1.75 0 0018 2.75H6A1.75 1.75 0 004.25 4.5v4a.75.75 0 001.5 0v-4A.25.25 0 016 4.25h12zM20 12.547a.75.75 0 01-.75.75h-1.813a.75.75 0 010-1.5h1.813a.75.75 0 01.75.75zm-5.438 0a.75.75 0 01-.75.75h-3.624a.75.75 0 010-1.5h3.624a.75.75 0 01.75.75zm-7.25 0a.75.75 0 01-.75.75H4.75a.75.75 0 010-1.5h1.813a.75.75 0 01.75.75z"
    }));
  }
  var MemoIconLineDashes = React__default__default["default"].memo(IconLineDashes);
  function IconLineDotted(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconLineDotted"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M18 20.75a.25.25 0 00.25-.25v-4a.75.75 0 011.5 0v4A1.75 1.75 0 0118 22.25H6a1.75 1.75 0 01-1.75-1.75v-4a.75.75 0 011.5 0v4c0 .138.112.25.25.25h12zM18 4.25a.25.25 0 01.25.25v4a.75.75 0 001.5 0v-4A1.75 1.75 0 0018 2.75H6A1.75 1.75 0 004.25 4.5v4a.75.75 0 001.5 0v-4A.25.25 0 016 4.25h12z"
    }), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5 12.5a1 1 0 112 0 1 1 0 01-2 0zM11 12.5a1 1 0 112 0 1 1 0 01-2 0zM14 12.5a1 1 0 112 0 1 1 0 01-2 0zM17 12.5a1 1 0 112 0 1 1 0 01-2 0zM8 12.5a1 1 0 112 0 1 1 0 01-2 0z"
    }));
  }
  var MemoIconLineDotted = React__default__default["default"].memo(IconLineDotted);
  function IconLineSolid(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconLineSolid"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M18 20.75a.25.25 0 00.25-.25v-4a.75.75 0 011.5 0v4A1.75 1.75 0 0118 22.25H6a1.75 1.75 0 01-1.75-1.75v-4a.75.75 0 011.5 0v4c0 .138.112.25.25.25h12zM18 4.25a.25.25 0 01.25.25v4a.75.75 0 001.5 0v-4A1.75 1.75 0 0018 2.75H6A1.75 1.75 0 004.25 4.5v4a.75.75 0 001.5 0v-4A.25.25 0 016 4.25h12zM20 12.483a.75.75 0 01-.75.75H4.75a.75.75 0 010-1.5h14.5a.75.75 0 01.75.75z"
    }));
  }
  var MemoIconLineSolid = React__default__default["default"].memo(IconLineSolid);
  function IconLineSpacer(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 25",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconLineSpacer"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M18 20.75a.25.25 0 00.25-.25v-4a.75.75 0 011.5 0v4A1.75 1.75 0 0118 22.25H6a1.75 1.75 0 01-1.75-1.75v-4a.75.75 0 011.5 0v4c0 .138.112.25.25.25h12zM18 4.25a.25.25 0 01.25.25v4a.75.75 0 001.5 0v-4A1.75 1.75 0 0018 2.75H6A1.75 1.75 0 004.25 4.5v4a.75.75 0 001.5 0v-4A.25.25 0 016 4.25h12z"
    }));
  }
  var MemoIconLineSpacer = React__default__default["default"].memo(IconLineSpacer);
  function IconLink(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconLink"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M9.368 6.7c.223 0 .443.014.658.04a6.348 6.348 0 00-1.918 2.065h-.845a3.158 3.158 0 000 6.316h2.105a3.158 3.158 0 003.158-3.158c0-.632-.202-1.152-.42-1.386.208-.481.888-.722 2.039-.722.38.54.487 1.5.487 2.108a5.263 5.263 0 01-5.264 5.263H7.263a5.263 5.263 0 010-10.526h2.105zm7.369 0a5.263 5.263 0 010 10.526h-2.105c-.223 0-.443-.014-.658-.04a6.348 6.348 0 001.918-2.065h.845a3.158 3.158 0 100-6.316h-2.105a3.158 3.158 0 00-3.158 3.158c0 .633.202 1.152.42 1.386-.208.482-.888.722-2.039.722-.38-.54-.487-1.5-.487-2.108A5.263 5.263 0 0114.632 6.7h2.105z"
    }));
  }
  var MemoIconLink = React__default__default["default"].memo(IconLink);
  function IconListChecklist(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconListChecklist"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M21 6a1 1 0 01-1 1h-8a1 1 0 110-2h8a1 1 0 011 1zM11 18a1 1 0 011-1h6a1 1 0 110 2h-6a1 1 0 01-1-1zM19 10a1 1 0 01-1 1h-6a1 1 0 110-2h6a1 1 0 011 1zM21 14a1 1 0 01-1 1h-8a1 1 0 110-2h8a1 1 0 011 1z"
    }), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M8.74 5.299c-.34-.408-.883-.397-1.213.023L5.13 8.382l-.63-.88c-.314-.438-.856-.479-1.21-.09-.355.387-.387 1.057-.074 1.495l1.244 1.736c.33.462.91.478 1.257.035l3.042-3.88c.33-.421.321-1.092-.019-1.5zM8.74 13.299c-.34-.408-.883-.397-1.213.023l-2.398 3.06-.63-.88c-.314-.438-.856-.479-1.21-.09-.355.387-.387 1.057-.074 1.495l1.244 1.736c.33.462.91.478 1.257.035l3.042-3.88c.33-.421.321-1.092-.019-1.5z"
    }));
  }
  var MemoIconListChecklist = React__default__default["default"].memo(IconListChecklist);
  function IconListIndented(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconListIndented"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M21 6a1 1 0 01-1 1H8a1 1 0 110-2h12a1 1 0 011 1zM7 18a1 1 0 011-1h10a1 1 0 110 2H8a1 1 0 01-1-1zM19 10a1 1 0 01-1 1H8a1 1 0 110-2h10a1 1 0 011 1zM21 14a1 1 0 01-1 1H8a1 1 0 110-2h12a1 1 0 011 1z"
    }), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M3 6a1 1 0 012 0v12a1 1 0 11-2 0V6z"
    }));
  }
  var MemoIconListIndented = React__default__default["default"].memo(IconListIndented);
  function IconLock(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconLock"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12.867 17a.833.833 0 01-1.667 0v-1.056a1.666 1.666 0 111.667 0V17zM7.033 8.667V7a5 5 0 1110 0v1.667h.834a2.5 2.5 0 012.5 2.5V19.5a2.5 2.5 0 01-2.5 2.5H6.2a2.5 2.5 0 01-2.5-2.5v-8.333a2.5 2.5 0 012.5-2.5h.833zm0 1.666H6.2a.833.833 0 00-.833.834V19.5c0 .46.373.833.833.833h11.667c.46 0 .833-.373.833-.833v-8.333a.833.833 0 00-.833-.834H7.033zM8.7 8.667h6.667V7A3.333 3.333 0 008.7 7v1.667z"
    }));
  }
  var MemoIconLock = React__default__default["default"].memo(IconLock);
  function IconLogo(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconLogo"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M16.037 12.517c.824-1.811.812-3.499-.06-4.1-1.029-.711-2.09-.333-3.408 1.402a.714.714 0 01-1.138 0c-1.318-1.735-2.38-2.113-3.408-1.403-.872.602-.884 2.29-.06 4.1.8 1.76 3.093 4.095 4.019 4.127.96-.031 3.254-2.367 4.055-4.126zm.752-5.276c1.607 1.11 1.624 3.502.548 5.867-1.002 2.203-3.66 4.91-5.305 4.963h-.073c-1.637-.054-4.294-2.76-5.296-4.963-1.076-2.365-1.06-4.757.548-5.867C8.788 6.15 10.437 6.558 12 8.269c1.563-1.71 3.212-2.117 4.789-1.028zM12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-1.429A8.571 8.571 0 1012 3.43a8.571 8.571 0 000 17.142z"
    }));
  }
  var MemoIconLogo = React__default__default["default"].memo(IconLogo);
  function IconLogoGrid(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconLogoGrid"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M8.343 4.462l-.013-.017a8.519 8.519 0 117.396 14.997 8.519 8.519 0 11-7.383-14.98zm3.736-.138a8.521 8.521 0 016.063 12.182 7.037 7.037 0 00-6.063-12.182zm-1.56 15.413a7.037 7.037 0 100-14.074 7.037 7.037 0 000 14.074zm3.746-10.636c1.333.897 1.347 2.783.489 4.62-.791 1.694-2.865 3.75-4.208 3.793h-.065c-1.334-.042-3.407-2.1-4.198-3.793-.858-1.837-.844-3.723.49-4.62 1.24-.834 2.535-.562 3.746.648 1.21-1.21 2.506-1.482 3.746-.648zm-.853 3.993c.587-1.256.578-2.392.026-2.764-.686-.46-1.39-.217-2.335.996a.74.74 0 01-1.169 0c-.945-1.213-1.65-1.457-2.335-.996-.552.372-.56 1.508.026 2.764.58 1.24 2.27 2.918 2.88 2.94.635-.02 2.327-1.699 2.907-2.94z"
    }));
  }
  var MemoIconLogoGrid = React__default__default["default"].memo(IconLogoGrid);
  function IconLogout(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconLogout"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M16.287 11.28l-1.808-1.808a.711.711 0 01.002-1.009.716.716 0 011.008-.001l3.034 3.033c.139.14.208.32.207.506a.71.71 0 01-.207.502l-3.034 3.033a.711.711 0 01-1.008-.001.716.716 0 01-.002-1.01l1.818-1.817h-6.182a.711.711 0 01-.71-.714c0-.394.317-.714.71-.714h6.172zM14.62 3.668a.85.85 0 110 1.7h-5.5a2.15 2.15 0 00-2.15 2.15v9a2.15 2.15 0 002.15 2.15h5.5a.85.85 0 010 1.7h-5.5a3.85 3.85 0 01-3.85-3.85v-9a3.85 3.85 0 013.85-3.85h5.5z"
    }));
  }
  var MemoIconLogout = React__default__default["default"].memo(IconLogout);
  function IconMarkArea(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconMarkArea"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5 5a1 1 0 00-1 1v12a1 1 0 001 1h14a1 1 0 001-1V6a1 1 0 00-1-1H5zm0-2h14a3 3 0 013 3v12a3 3 0 01-3 3H5a3 3 0 01-3-3V6a3 3 0 013-3zm4 6a1 1 0 00-1 1v1a1 1 0 001 1h6a1 1 0 001-1v-1a1 1 0 00-1-1H9zm0-2h6a3 3 0 013 3v1a3 3 0 01-3 3H9a3 3 0 01-3-3v-1a3 3 0 013-3z"
    }));
  }
  var MemoIconMarkArea = React__default__default["default"].memo(IconMarkArea);
  function IconMeasurements(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconMeasurements"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M17.39 13.543h-1.542v1.523a.756.756 0 01-.225.557.733.733 0 01-.537.225.756.756 0 01-.557-.225.756.756 0 01-.224-.557v-1.523h-1.543v1.523a.756.756 0 01-.225.557.733.733 0 01-.537.225.733.733 0 01-.537-.225.756.756 0 01-.225-.557v-1.523H9.695v1.523a.756.756 0 01-.224.557.756.756 0 01-.557.225.733.733 0 01-.537-.225.756.756 0 01-.225-.557v-1.523H6.61v1.523a.756.756 0 01-.224.557.733.733 0 01-.537.225.733.733 0 01-.537-.225.756.756 0 01-.225-.557v-1.523h-.781a.733.733 0 00-.537.225.733.733 0 00-.225.537v2.304c0 .222.075.407.225.557.15.15.328.225.537.225h15.39a.733.733 0 00.537-.225.756.756 0 00.225-.557v-2.304a.733.733 0 00-.225-.537.733.733 0 00-.537-.225h-.78v1.523a.774.774 0 01-.216.557.724.724 0 01-.547.225.733.733 0 01-.537-.225.756.756 0 01-.224-.557v-1.523zm-6.933-5.39V6.608H8.914a.733.733 0 01-.537-.224.733.733 0 01-.225-.537c0-.209.075-.388.225-.537a.733.733 0 01.537-.225h1.543v-.781a.733.733 0 00-.225-.537.733.733 0 00-.537-.225H7.391a.756.756 0 00-.557.225.733.733 0 00-.225.537V12h3.848V9.695H8.914a.733.733 0 01-.537-.224.756.756 0 01-.225-.557c0-.208.075-.387.225-.537a.733.733 0 01.537-.225h1.543zM12 12h8.457c.43 0 .794.15 1.094.45.3.299.449.663.449 1.093v3.848c0 .416-.15.774-.45 1.074-.299.3-.663.45-1.093.45H12v1.542c0 .43-.15.794-.45 1.094-.299.3-.663.449-1.093.449H6.609c-.416 0-.774-.15-1.074-.45-.3-.299-.45-.663-.45-1.093v-1.543H3.544c-.43 0-.794-.15-1.094-.45-.3-.299-.449-.657-.449-1.073v-3.848c0-.43.15-.794.45-1.094.299-.3.663-.449 1.093-.449h1.543V3.543c0-.43.15-.794.45-1.094.299-.3.657-.449 1.073-.449h3.848c.43 0 .794.15 1.094.45.3.299.449.663.449 1.093V12zm-1.543 6.914H6.609v.781c0 .209.075.388.225.537.15.15.335.225.557.225h2.304a.733.733 0 00.537-.225.733.733 0 00.225-.537v-.78z"
    }));
  }
  var MemoIconMeasurements = React__default__default["default"].memo(IconMeasurements);
  function IconMedia(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconMedia"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M20.462 6.546V5.008a.77.77 0 00-.77-.77H4.308a.77.77 0 00-.77.77v1.538h16.924zm0 1.539H3.538v10.769c0 .425.345.77.77.77h15.384a.77.77 0 00.77-.77V8.084zM4.308 2.7h15.384A2.308 2.308 0 0122 5.008v13.846a2.308 2.308 0 01-2.308 2.308H4.308A2.308 2.308 0 012 18.854V5.008A2.308 2.308 0 014.308 2.7zm4.615 13.683v-5.269c0-.547.3-1.03.834-1.337.495-.229 1.048-.208 1.503.096l3.9 2.587c.432.275.686.75.686 1.25 0 .484-.239.951-.645 1.235l-3.854 2.63a1.4 1.4 0 01-.9.313 1.52 1.52 0 01-.681-.153c-.51-.24-.804-.737-.843-1.352zm5.349-2.666l-3.81-2.528-.002 5.132 3.812-2.604z"
    }));
  }
  var MemoIconMedia = React__default__default["default"].memo(IconMedia);
  function IconMegamenu(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconMegamenu"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5.25 6.75a.75.75 0 00-.75.75v9.75c0 .414.336.75.75.75h13.5a.75.75 0 00.75-.75V7.5a.75.75 0 00-.75-.75H5.25zm0-1.5h13.5A2.25 2.25 0 0121 7.5v9.75a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 17.25V7.5a2.25 2.25 0 012.25-2.25zm1.5 4.875a.75.75 0 010-1.5h3.75a.75.75 0 110 1.5H6.75zm6.75 0a.75.75 0 110-1.5h3.493a.75.75 0 110 1.5H13.5zm-6.75 3a.75.75 0 110-1.5h1.5a.75.75 0 110 1.5h-1.5zm6.75 0a.75.75 0 110-1.5H15a.75.75 0 110 1.5h-1.5zm-6.75 3a.75.75 0 110-1.5h1.5a.75.75 0 110 1.5h-1.5zm6.75 0a.75.75 0 110-1.5H15a.75.75 0 110 1.5h-1.5z"
    }));
  }
  var MemoIconMegamenu = React__default__default["default"].memo(IconMegamenu);
  function IconMetadata(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconMetadata"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M14.127 2c.472 0 .821.156 1.048.467.227.312.283.733.17 1.261a2.13 2.13 0 01-.652 1.204c-.34.312-.746.467-1.218.467-.453 0-.789-.155-1.005-.467-.217-.312-.28-.712-.185-1.204.114-.528.34-.949.68-1.26A1.67 1.67 0 0114.127 2zm-3.655 11.841c.209-.718.355-1.279.44-1.685.085-.407.089-.713.014-.92-.075-.21-.241-.34-.496-.397-.255-.057-.619-.085-1.09-.085a2.386 2.386 0 01.176-1.092l-.007.015c.227-.018.492-.07.793-.156.708-.2 1.306-.422 1.88-.685l-.08.034c.273-.124.495-.241.665-.354.585.245.94.655 1.062 1.232.124.576.025 1.449-.297 2.62l-1.558 5.468c-.132.453-.227.825-.283 1.119-.057.293-.075.514-.057.665.018.152.07.255.156.312a.577.577 0 00.325.085c.189 0 .411-.067.666-.198.255-.132.524-.34.808-.624.283.189.453.492.51.907-.549.605-1.091 1.072-1.63 1.402-.538.33-1.072.496-1.6.496-.945 0-1.525-.373-1.742-1.119-.217-.746-.156-1.732.184-2.96l1.161-4.08z"
    }));
  }
  var MemoIconMetadata = React__default__default["default"].memo(IconMetadata);
  function IconModules(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconModules"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M16.996 19.215h-.72V12.79H7.707v6.426h-.711 10zm-10 0h-.711V12.79H3.423v5.004c0 .39.14.725.418 1.004.279.279.62.418 1.02.418h2.135zm10 0h2.142c.39 0 .725-.139 1.004-.418a1.37 1.37 0 00.419-1.004v-5.004h-2.846v6.426h-.72zM12 4.923h.711v6.426h7.85V6.345c0-.39-.14-.725-.419-1.004a1.37 1.37 0 00-1.004-.418H12zm0 0H4.862c-.402 0-.742.14-1.021.418a1.37 1.37 0 00-.418 1.004v5.004h7.866V4.923H12zm-10 .72c0-.592.21-1.097.628-1.515A2.064 2.064 0 014.142 3.5h15.716c.591 0 1.096.21 1.514.628.419.418.628.923.628 1.514v12.854a2.05 2.05 0 01-.636 1.514 2.072 2.072 0 01-1.506.628H4.142c-.591 0-1.096-.21-1.514-.628A2.064 2.064 0 012 18.496V5.642z"
    }));
  }
  var MemoIconModules = React__default__default["default"].memo(IconModules);
  function IconMore(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconMore"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12 8.5a1.5 1.5 0 110-3 1.5 1.5 0 010 3zm0 5a1.5 1.5 0 110-3 1.5 1.5 0 010 3zm0 5a1.5 1.5 0 110-3 1.5 1.5 0 010 3z"
    }));
  }
  var MemoIconMore = React__default__default["default"].memo(IconMore);
  function IconMove(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconMove"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M3 8a1 1 0 110-2h18a1 1 0 010 2H3zm0 5a1 1 0 010-2h18a1 1 0 010 2H3zm0 5a1 1 0 010-2h18a1 1 0 010 2H3z"
    }));
  }
  var MemoIconMove = React__default__default["default"].memo(IconMove);
  function IconMovePage(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconMovePage"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M18.955 10.462h-6.186a.767.767 0 01-.769-.77V3.538H6.877c-1.016 0-1.832.811-1.832 1.812v13.3c0 .995.815 1.812 1.819 1.812h10.272c1 0 1.819-.814 1.819-1.818v-8.182zm0-1.539v-.177l-5.41-5.063v5.24h5.41zM3.5 5.645A3.65 3.65 0 017.157 2h6.062c.5 0 1.196.273 1.564.62l5.059 4.76c.363.343.658 1.024.658 1.528v9.45A3.643 3.643 0 0116.853 22H7.147A3.649 3.649 0 013.5 18.355V5.645zm8.933 8.272a.753.753 0 01.023-1.065.762.762 0 011.066.014l2.074 2.182c.145.15.214.346.209.54a.79.79 0 01-.24.533l-2.252 2.14a.754.754 0 01-1.066 0c-.276-.285-.268-.77.037-1.065l.94-.873-4.182-.048a.725.725 0 01-.733-.753.78.78 0 01.775-.744l4.192.048-.843-.909z"
    }));
  }
  var MemoIconMovePage = React__default__default["default"].memo(IconMovePage);
  function IconNone(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 21 18",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconNone"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M19.94.488a.833.833 0 00-1.175-.086l-1.576 1.36c-.36-.199-.773-.313-1.213-.313H4.309a2.5 2.5 0 00-2.5 2.5v10c0 .332.065.649.182.939l-1.56 1.347a.833.833 0 001.09 1.262l1.575-1.361c.36.2.773.313 1.213.313h11.667a2.5 2.5 0 002.5-2.5v-10c0-.332-.065-.649-.182-.938l1.56-1.348A.833.833 0 0019.94.488zm-4.318 2.628H4.309a.833.833 0 00-.833.833v9.657l12.146-10.49zM4.663 14.783L16.81 4.293v9.656c0 .46-.373.834-.833.834H4.663z"
    }));
  }
  var MemoIconNone = React__default__default["default"].memo(IconNone);
  function IconNotifications(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconNotifications"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M9.818 5.23V4.143c0-1.184.969-2.143 2.144-2.143h.076c1.184 0 2.144.951 2.144 2.143v1.086a6.539 6.539 0 014.363 6.165v6.32h.747a.71.71 0 01.708.715c0 .394-.32.714-.708.714h-5.11v.714A2.149 2.149 0 0112.038 22h-.076a2.138 2.138 0 01-2.144-2.143v-.714h-5.11A.71.71 0 014 18.429c0-.395.32-.715.708-.715h.747v-6.32A6.545 6.545 0 019.818 5.23zm0 12.484h7.273v-6.332c0-2.811-2.28-5.096-5.091-5.096a5.097 5.097 0 00-5.09 5.096v6.332h2.908z"
    }));
  }
  var MemoIconNotifications = React__default__default["default"].memo(IconNotifications);
  function IconObjects(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconObjects"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5.65 8.5a6.35 6.35 0 1110.2 5.05V15A2.85 2.85 0 0113 17.85h-2A2.85 2.85 0 018.15 15v-1.45a6.341 6.341 0 01-2.5-5.05zm4.2 6.5c0 .635.515 1.15 1.15 1.15h2A1.15 1.15 0 0014.15 15v-2.35l.386-.251a4.65 4.65 0 10-5.072 0l.386.251V15zm.15 5.85a.85.85 0 010-1.7h4a.85.85 0 010 1.7h-4z"
    }));
  }
  var MemoIconObjects = React__default__default["default"].memo(IconObjects);
  function IconOpenLock(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconOpenLock"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M11.2 15.944a1.666 1.666 0 111.667 0V17a.833.833 0 01-1.667 0v-1.056zm4.167-7.277v-2.5a2.5 2.5 0 00-2.5-2.5H11.2a2.5 2.5 0 00-2.5 2.5.833.833 0 11-1.667 0A4.167 4.167 0 0111.2 2h1.667a4.167 4.167 0 014.166 4.167v2.5h.834a2.5 2.5 0 012.5 2.5V19.5a2.5 2.5 0 01-2.5 2.5H6.2a2.5 2.5 0 01-2.5-2.5v-8.333a2.5 2.5 0 012.5-2.5h9.167zM6.2 10.333a.833.833 0 00-.833.834V19.5c0 .46.373.833.833.833h11.667c.46 0 .833-.373.833-.833v-8.333a.833.833 0 00-.833-.834H6.2z"
    }));
  }
  var MemoIconOpenLock = React__default__default["default"].memo(IconOpenLock);
  function IconOpenLockFilled(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconOpenLockFilled"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M15.367 8.667v-2.5a2.5 2.5 0 00-2.5-2.5H11.2a2.5 2.5 0 00-2.5 2.5.833.833 0 01-1.667 0A4.167 4.167 0 0111.2 2h1.667a4.167 4.167 0 014.166 4.167v2.5h.834a2.5 2.5 0 012.5 2.5V19.5a2.5 2.5 0 01-2.5 2.5H6.2a2.5 2.5 0 01-2.5-2.5v-8.333a2.5 2.5 0 012.5-2.5h9.167zM11.2 15.944a1.666 1.666 0 111.667 0V17a.833.833 0 01-1.667 0v-1.056z"
    }));
  }
  var MemoIconOpenLockFilled = React__default__default["default"].memo(IconOpenLockFilled);
  function IconOrientation(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconOrientation"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5.333 18.667A3.333 3.333 0 012 15.333v-10A3.333 3.333 0 015.333 2h5.834A3.333 3.333 0 0114.5 5.333V9.5h4.167A3.333 3.333 0 0122 12.833v5.834A3.333 3.333 0 0118.667 22h-10a3.333 3.333 0 01-3.334-3.333zm1.667 0c0 .92.746 1.666 1.667 1.666h10c.92 0 1.666-.746 1.666-1.666v-5.834c0-.92-.746-1.666-1.666-1.666H14.5v4.166a3.333 3.333 0 01-3.333 3.334H7zm-1.667-15c-.92 0-1.666.746-1.666 1.666v10c0 .92.746 1.667 1.666 1.667h5.834c.92 0 1.666-.746 1.666-1.667v-10c0-.92-.746-1.666-1.666-1.666H5.333z"
    }));
  }
  var MemoIconOrientation = React__default__default["default"].memo(IconOrientation);
  function IconPatternLibrary(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconPatternLibrary"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M10.463 6.074h2.297V4.537c0-.426.15-.789.449-1.088.3-.3.662-.449 1.088-.449h3.092c.414 0 .771.15 1.07.45.3.298.45.661.45 1.087v1.537h.777c.633 0 1.177.225 1.632.674.455.449.682.996.682 1.64v9.983c0 .645-.227 1.192-.682 1.641-.455.45-1 .674-1.632.674H4.314a2.233 2.233 0 01-1.64-.674A2.233 2.233 0 012 18.372V8.388c0-.645.225-1.192.674-1.641.449-.45.996-.674 1.64-.674V4.537c0-.426.147-.789.44-1.088.294-.3.66-.449 1.097-.449h3.075c.426 0 .788.15 1.088.45.3.298.449.661.449 1.087v1.537zm-1.537 0v-.76a.737.737 0 00-.233-.552.76.76 0 00-.544-.225h-1.52a.751.751 0 00-.553.225.751.751 0 00-.225.552v.76h3.075zm8.445 0v-.76a.751.751 0 00-.224-.552.751.751 0 00-.553-.225h-1.52a.751.751 0 00-.552.225.751.751 0 00-.225.552v.76h3.074zM3.537 9.15v8.462c0 .426.15.79.45 1.088.299.3.661.45 1.087.45h13.852c.426 0 .788-.15 1.088-.45.3-.299.449-.662.449-1.088V9.15c0-.426-.15-.79-.45-1.089-.299-.299-.661-.449-1.087-.449H5.074c-.426 0-.788.15-1.088.45-.3.299-.449.662-.449 1.088z"
    }));
  }
  var MemoIconPatternLibrary = React__default__default["default"].memo(IconPatternLibrary);
  function IconPause(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconPause"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("g", {
      transform: "translate(5 4)"
    }, /* @__PURE__ */ React__default__default["default"].createElement("rect", {
      width: 6,
      height: 16,
      rx: 1
    }), /* @__PURE__ */ React__default__default["default"].createElement("rect", {
      x: 8,
      width: 6,
      height: 16,
      rx: 1
    })));
  }
  var MemoIconPause = React__default__default["default"].memo(IconPause);
  function IconPen(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconPen"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M6.95 19.875l8.425-8.431-2.825-2.819-8.425 8.431v1.283h1.539v1.536H6.95zm5.793-13.5l4.882 4.882L7.882 21H3v-4.882l9.743-9.743zm8.257.81c0 .402-.14.744-.42 1.025l-1.578 1.54-4.752-4.788 1.579-1.52A1.31 1.31 0 0116.847 3c.413 0 .759.148 1.038.443l2.696 2.695c.28.295.419.644.419 1.046z"
    }));
  }
  var MemoIconPen = React__default__default["default"].memo(IconPen);
  function IconPills(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconPills"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M3 10.5V12h3v-1.5H3zM3 9h3a1.5 1.5 0 011.5 1.5V12A1.5 1.5 0 016 13.5H3A1.5 1.5 0 011.5 12v-1.5A1.5 1.5 0 013 9zm7.5 1.5V12h3v-1.5h-3zm0-1.5h3a1.5 1.5 0 011.5 1.5V12a1.5 1.5 0 01-1.5 1.5h-3A1.5 1.5 0 019 12v-1.5A1.5 1.5 0 0110.5 9zm7.5 1.5V12h3v-1.5h-3zM18 9h3a1.5 1.5 0 011.5 1.5V12a1.5 1.5 0 01-1.5 1.5h-3a1.5 1.5 0 01-1.5-1.5v-1.5A1.5 1.5 0 0118 9z"
    }));
  }
  var MemoIconPills = React__default__default["default"].memo(IconPills);
  function IconPlanning(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconPlanning"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M17.705 11.413v2.348c.979.17 1.798.64 2.456 1.41.66.769.989 1.663.989 2.68 0 .574-.108 1.112-.323 1.615a4.259 4.259 0 01-.88 1.32 4.033 4.033 0 01-1.322.891 4.077 4.077 0 01-1.604.323 4.125 4.125 0 01-2.946-1.213 4.259 4.259 0 01-.88-1.321 4.055 4.055 0 01-.323-1.615c0-1.017.33-1.911.988-2.68.659-.77 1.478-1.24 2.456-1.41v-2.348a1.093 1.093 0 01-.147-.088.587.587 0 01-.127-.127l-3.425-3.425a.587.587 0 01-.127-.127 1.093 1.093 0 01-.088-.147H10.74a4.02 4.02 0 01-1.155 2.23 4.032 4.032 0 01-2.25 1.156v2.837h2.074c.378 0 .705.134.978.401.274.268.411.59.411.969v5.519c0 .391-.137.72-.41.988-.274.267-.6.401-.979.401H3.889c-.378 0-.704-.134-.978-.401a1.327 1.327 0 01-.411-.988v-5.519c0-.378.137-.701.411-.969.274-.267.6-.4.978-.4h2.075v-2.838a3.982 3.982 0 01-2.476-1.39c-.659-.77-.988-1.67-.988-2.7 0-.561.108-1.096.323-1.605.215-.509.512-.95.89-1.321a4.259 4.259 0 011.321-.88 4.055 4.055 0 011.615-.324c1.03 0 1.927.33 2.69.989a4.078 4.078 0 011.4 2.456h1.663c.026-.053.056-.102.088-.147a.587.587 0 01.127-.127l3.425-3.425c.261-.274.584-.411.969-.411s.708.137.968.411l3.425 3.425c.274.26.411.583.411.968s-.137.708-.41.969l-3.426 3.425a.587.587 0 01-.127.127 1.093 1.093 0 01-.147.088zM3.89 15.777v4.149c0 .195.066.362.196.499s.294.205.49.205h4.148a.657.657 0 00.48-.205.68.68 0 00.205-.5v-4.148a.657.657 0 00-.205-.48.657.657 0 00-.48-.205H4.574a.648.648 0 00-.489.205.673.673 0 00-.196.48zM16.512 3.879l-2.427 2.426a.685.685 0 00-.215.5c0 .188.072.348.215.479l2.427 2.446a.685.685 0 00.998 0l2.426-2.446a.623.623 0 00.216-.48.685.685 0 00-.216-.499L17.51 3.88a.685.685 0 00-.998 0zm.509 16.751c.756 0 1.405-.27 1.947-.812a2.679 2.679 0 00.812-1.967c0-.756-.27-1.405-.812-1.947a2.656 2.656 0 00-1.947-.812c-.77 0-1.426.27-1.967.812a2.656 2.656 0 00-.812 1.947c0 .77.27 1.426.812 1.967a2.679 2.679 0 001.967.812zM6.649 9.573c.756 0 1.405-.27 1.947-.812a2.679 2.679 0 00.812-1.966c0-.757-.27-1.406-.812-1.948a2.656 2.656 0 00-1.947-.812c-.77 0-1.422.27-1.957.812a2.672 2.672 0 00-.803 1.948c0 .77.268 1.425.803 1.966a2.647 2.647 0 001.957.812z"
    }));
  }
  var MemoIconPlanning = React__default__default["default"].memo(IconPlanning);
  function IconPlay(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconPlay"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M19.356 12.743L6.62 20.02a1 1 0 01-1.496-.868V4.598a1 1 0 011.496-.868l12.735 7.277a1 1 0 010 1.736z"
    }));
  }
  var MemoIconPlay = React__default__default["default"].memo(IconPlay);
  function IconPlus(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconPlus"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12 22c-1.38 0-2.679-.26-3.896-.781A10.035 10.035 0 014.92 19.08a10.035 10.035 0 01-2.139-3.184A9.801 9.801 0 012 12c0-1.38.26-2.679.781-3.896A10.035 10.035 0 014.92 4.92 10.035 10.035 0 018.104 2.78 9.801 9.801 0 0112 2c1.38 0 2.679.26 3.896.781A10.035 10.035 0 0119.08 4.92a10.035 10.035 0 012.139 3.184A9.801 9.801 0 0122 12c0 1.38-.26 2.679-.781 3.896a10.035 10.035 0 01-2.139 3.184 10.035 10.035 0 01-3.184 2.139A9.801 9.801 0 0112 22zm0-1.426a8.343 8.343 0 003.34-.674 8.663 8.663 0 002.724-1.836A8.663 8.663 0 0019.9 15.34a8.343 8.343 0 00.674-3.34 8.343 8.343 0 00-.674-3.34 8.663 8.663 0 00-1.836-2.724A8.663 8.663 0 0015.34 4.1 8.343 8.343 0 0012 3.426a8.343 8.343 0 00-3.34.674 8.663 8.663 0 00-2.724 1.836A8.663 8.663 0 004.1 8.66 8.343 8.343 0 003.426 12c0 1.185.224 2.298.674 3.34a8.663 8.663 0 001.836 2.724A8.663 8.663 0 008.66 19.9a8.343 8.343 0 003.34.674zM12 17a.718.718 0 01-.718-.718v-3.563H7.719a.718.718 0 010-1.436h3.563V7.719a.718.718 0 011.436 0v3.563h3.563a.718.718 0 010 1.436h-3.563v3.563A.718.718 0 0112 17z"
    }));
  }
  var MemoIconPlus = React__default__default["default"].memo(IconPlus);
  function IconPointOut(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconPointOut"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5 5a1 1 0 00-1 1v12a1 1 0 001 1h14a1 1 0 001-1V6a1 1 0 00-1-1H5zm0-2h14a3 3 0 013 3v12a3 3 0 01-3 3H5a3 3 0 01-3-3V6a3 3 0 013-3zm9.5 11a3.5 3.5 0 110-7 3.5 3.5 0 010 7zm0-2a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"
    }));
  }
  var MemoIconPointOut = React__default__default["default"].memo(IconPointOut);
  function IconPolygon(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconPolygon"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M0 0h24v24H0z"
    }));
  }
  var MemoIconPolygon = React__default__default["default"].memo(IconPolygon);
  function IconProcessing(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconProcessing"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5.414 15.775C6.524 17.956 9.137 19.7 12 19.7c3.796 0 7.15-3.065 7.15-6.15a.85.85 0 011.7 0c0 4.06-4.148 7.85-8.85 7.85-3.406 0-6.521-1.989-7.98-4.628l-.333 1.888a.85.85 0 11-1.674-.296l.695-3.939a.85.85 0 011.108-.658l3.92.691a.85.85 0 01-.296 1.674l-2.026-.357zM20.067 7.49l.364-2.065a.85.85 0 011.674.295l-.694 3.94a.85.85 0 01-1.109.658l-3.92-.691a.85.85 0 01.296-1.675l1.888.333C17.444 6.123 14.846 4.4 12 4.4c-3.796 0-7.15 3.065-7.15 6.15a.85.85 0 01-1.7 0C3.15 6.49 7.298 2.7 12 2.7c3.475 0 6.648 2.07 8.067 4.79z"
    }));
  }
  var MemoIconProcessing = React__default__default["default"].memo(IconProcessing);
  function IconProjects(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconProjects"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M18.15 15.364v4.826h-1.54v-4.826a1.49 1.49 0 01-.554-.545 1.494 1.494 0 01-.216-.788c0-.276.072-.533.216-.77.144-.238.329-.426.554-.564V7.89h1.54v4.807c.238.138.426.326.564.564.137.237.206.494.206.77 0 .287-.069.55-.206.788-.138.238-.326.42-.564.545zm-10.76 0v4.826H5.85v-4.826a1.387 1.387 0 01-.564-.545 1.546 1.546 0 01-.206-.788c0-.276.069-.533.206-.77a1.52 1.52 0 01.564-.564V7.89h1.54v4.807c.225.138.41.326.554.564.144.237.216.494.216.77 0 .287-.072.55-.216.788a1.49 1.49 0 01-.554.545zm9.22-9.014h3.08c.639 0 1.183.225 1.634.676.45.45.676.989.676 1.615v10.78c0 .638-.225 1.182-.676 1.633-.45.45-.995.676-1.634.676H4.31a2.226 2.226 0 01-1.634-.676A2.226 2.226 0 012 19.42V8.64c0-.625.225-1.163.676-1.614.45-.45.995-.676 1.634-.676h3.08V4.04c0-.426.15-.789.45-1.09.3-.3.664-.45 1.09-.45h6.14c.426 0 .79.15 1.09.45.3.301.45.664.45 1.09v2.31zm-1.54 0V4.81a.742.742 0 00-.225-.545.742.742 0 00-.545-.225H9.68a.72.72 0 00-.525.225.742.742 0 00-.225.545v1.54h6.14zM3.54 9.41v9.24c0 .426.15.789.45 1.09.301.3.658.45 1.071.45h13.86c.425 0 .788-.15 1.088-.45.3-.301.451-.664.451-1.09V9.41c0-.412-.15-.77-.45-1.07-.301-.3-.664-.45-1.09-.45H5.061c-.413 0-.77.15-1.07.45-.3.3-.451.658-.451 1.07z"
    }));
  }
  var MemoIconProjects = React__default__default["default"].memo(IconProjects);
  function IconPublication(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconPublication"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M15.483 5.957L4.508 12.369l3.58 1.93 7.395-8.342zm2.887.807l-4.095 10.831 4.095 2.193V6.764zM12.65 17.27l3.716-9.828-7.278 8.21.024 3.98 3.538-2.362zm-5.19-1.426l-5.025-2.708a.842.842 0 01-.024-1.461l16.37-9.564c.543-.317 1.219.084 1.219.723v18.331c0 .627-.65 1.03-1.193.739l-5.613-3.006-4.443 2.965c-.54.36-1.257-.033-1.26-.693l-.031-5.326z"
    }));
  }
  var MemoIconPublication = React__default__default["default"].memo(IconPublication);
  function IconQuote(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconQuote"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12.372 16.346h5.37a2.725 2.725 0 002.72-2.731V6.77a2.727 2.727 0 00-2.72-2.732H6.258A2.725 2.725 0 003.538 6.77v6.845a2.727 2.727 0 002.72 2.731h1.896v2.707c0 .502.305.647.693.315l3.525-3.022zm.825 1.539l-4.392 3.592c-1.21.991-2.19.523-2.19-1.044v-2.548h-.077C4.032 17.885 2 15.842 2 13.33V7.053A4.543 4.543 0 016.538 2.5h10.924C19.968 2.5 22 4.543 22 7.053v6.278a4.543 4.543 0 01-4.538 4.554h-4.265zM11.294 7.383c-.702.462-1.228.95-1.579 1.468-.35.517-.526 1.172-.526 1.966a.84.84 0 01.25-.028c.369 0 .706.12 1.01.36.305.24.457.591.457 1.053 0 .48-.138.853-.415 1.121-.277.268-.628.402-1.053.402-.553 0-.983-.213-1.287-.637-.305-.425-.457-1.043-.457-1.856 0-1.107.25-2.067.748-2.88.498-.812 1.227-1.495 2.187-2.049l.665 1.08zm4.874 0c-.702.462-1.228.95-1.579 1.468-.35.517-.526 1.172-.526 1.966a.84.84 0 01.25-.028c.369 0 .705.12 1.01.36.305.24.457.591.457 1.053 0 .48-.138.853-.415 1.121-.277.268-.628.402-1.053.402-.554 0-.983-.213-1.287-.637-.305-.425-.457-1.043-.457-1.856 0-1.107.249-2.067.747-2.88.499-.812 1.228-1.495 2.188-2.049l.665 1.08z"
    }));
  }
  var MemoIconQuote = React__default__default["default"].memo(IconQuote);
  function IconRectangle(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconRectangle"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M3.662 5.108v13.85c0 .197.05.318.19.458.139.139.26.189.456.189h15.384a.57.57 0 00.456-.19.57.57 0 00.19-.456V5.109a.57.57 0 00-.19-.457.57.57 0 00-.456-.19H4.308a.57.57 0 00-.456.19.57.57 0 00-.19.456zM2 5.108c0-.637.225-1.18.676-1.632.451-.45.995-.676 1.632-.676h15.384c.637 0 1.18.225 1.632.676.45.451.676.995.676 1.632v13.85c0 .638-.225 1.182-.676 1.633-.451.45-.995.676-1.632.676H4.308a2.224 2.224 0 01-1.632-.676A2.224 2.224 0 012 18.959V5.109z"
    }));
  }
  var MemoIconRectangle = React__default__default["default"].memo(IconRectangle);
  function IconRefresh(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconRefresh"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M19.379 6.833l-.015-4.095a.887.887 0 01.895-.888c.48.021.865.414.868.895l.025 6.369a.82.82 0 010 .027.885.885 0 01-.861.86l-6.396-.024A.908.908 0 0113 9.109L13 9.075a.885.885 0 01.888-.861l4.259.015C16.829 5.332 14.346 3.85 11.5 3.85a7.65 7.65 0 100 15.3c4.057 0 7.376-3.158 7.634-6.15-.004-.47.383-1 .853-1s.85.53.85 1a.859.859 0 01-.006.1c-.31 3.884-4.369 7.75-9.331 7.75a9.35 9.35 0 010-18.7c3.31 0 6.217 1.66 7.879 4.683z"
    }));
  }
  var MemoIconRefresh = React__default__default["default"].memo(IconRefresh);
  function IconRejectCircle(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconRejectCircle"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12 22c-1.38 0-2.679-.26-3.896-.781A10.035 10.035 0 014.92 19.08a10.035 10.035 0 01-2.139-3.184A9.801 9.801 0 012 12c0-1.38.26-2.679.781-3.896A10.035 10.035 0 014.92 4.92 10.035 10.035 0 018.104 2.78 9.801 9.801 0 0112 2c1.38 0 2.679.26 3.896.781A10.035 10.035 0 0119.08 4.92a10.035 10.035 0 012.139 3.184A9.801 9.801 0 0122 12c0 1.38-.26 2.679-.781 3.896a10.035 10.035 0 01-2.139 3.184 10.035 10.035 0 01-3.184 2.139A9.801 9.801 0 0112 22zm0-1.426a8.343 8.343 0 003.34-.674 8.663 8.663 0 002.724-1.836A8.663 8.663 0 0019.9 15.34a8.343 8.343 0 00.674-3.34 8.343 8.343 0 00-.674-3.34 8.663 8.663 0 00-1.836-2.724A8.663 8.663 0 0015.34 4.1 8.343 8.343 0 0012 3.426a8.343 8.343 0 00-3.34.674 8.663 8.663 0 00-2.724 1.836A8.663 8.663 0 004.1 8.66 8.343 8.343 0 003.426 12c0 1.185.224 2.298.674 3.34a8.663 8.663 0 001.836 2.724A8.663 8.663 0 008.66 19.9a8.343 8.343 0 003.34.674zm3.535-5.039a.718.718 0 01-1.015 0L12 13.015l-2.52 2.52a.718.718 0 11-1.016-1.016L10.985 12l-2.52-2.52A.718.718 0 119.48 8.464l2.52 2.52 2.52-2.52a.718.718 0 111.016 1.016L13.015 12l2.52 2.52c.28.28.28.735 0 1.015z"
    }));
  }
  var MemoIconRejectCircle = React__default__default["default"].memo(IconRejectCircle);
  function IconRejectFilled(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconRejectFilled"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12 22c-1.38 0-2.679-.26-3.896-.781A10.035 10.035 0 014.92 19.08a10.035 10.035 0 01-2.139-3.184A9.801 9.801 0 012 12c0-1.38.26-2.679.781-3.896A10.035 10.035 0 014.92 4.92 10.035 10.035 0 018.104 2.78 9.801 9.801 0 0112 2c1.38 0 2.679.26 3.896.781A10.035 10.035 0 0119.08 4.92a10.035 10.035 0 012.139 3.184A9.801 9.801 0 0122 12c0 1.38-.26 2.679-.781 3.896a10.035 10.035 0 01-2.139 3.184 10.035 10.035 0 01-3.184 2.139A9.801 9.801 0 0112 22zm3.535-6.465a.718.718 0 000-1.015L13.015 12l2.52-2.52a.718.718 0 10-1.015-1.015L12 10.985l-2.52-2.52A.718.718 0 108.465 9.48l2.52 2.52-2.52 2.52a.718.718 0 101.015 1.015l2.52-2.52 2.52 2.52c.28.28.735.28 1.015 0z"
    }));
  }
  var MemoIconRejectFilled = React__default__default["default"].memo(IconRejectFilled);
  function IconRevert(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconRevert"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3.36 10.651a.885.885 0 01-.861-.86v-.027l.025-6.37a.906.906 0 01.868-.894h.034a.887.887 0 01.861.888l-.015 4.095C5.934 4.46 8.842 2.8 12.151 2.8a9.35 9.35 0 010 18.7c-4.963 0-9.022-3.866-9.331-7.75a.862.862 0 01-.006-.1c0-.47.38-1 .85-1s.857.53.853 1c.257 2.992 3.577 6.15 7.634 6.15a7.65 7.65 0 000-15.3c-2.846 0-5.329 1.482-6.647 4.38l4.259-.016a.885.885 0 01.888.86l-.001.035a.908.908 0 01-.894.867l-6.396.025z"
    }));
  }
  var MemoIconRevert = React__default__default["default"].memo(IconRevert);
  function IconRevisions(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconRevisions"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M13.992 11.2a2.088 2.088 0 01.156.8c0 .586-.211 1.09-.634 1.514a2.066 2.066 0 01-1.514.634c-.586 0-1.09-.211-1.514-.634A2.066 2.066 0 019.9 11.58a2.86 2.86 0 01.127-.4L8.23 9.383a.694.694 0 01-.214-.508c0-.195.071-.365.214-.508a.73.73 0 01.508-.195c.196 0 .365.071.508.215l1.738 1.718c.144-.078.303-.14.479-.185.176-.046.355-.068.537-.068.195 0 .38.026.557.078.175.052.341.117.498.195l3.183-3.184a.694.694 0 01.508-.214c.195 0 .365.071.508.214a.73.73 0 01.195.508.73.73 0 01-.195.508l-3.262 3.242zM12 22c-1.38 0-2.679-.26-3.896-.781A10.035 10.035 0 014.92 19.08a10.035 10.035 0 01-2.139-3.184A9.801 9.801 0 012 12c0-1.38.26-2.679.781-3.896A10.035 10.035 0 014.92 4.92 10.035 10.035 0 018.104 2.78 9.801 9.801 0 0112 2c1.38 0 2.679.26 3.896.781A10.035 10.035 0 0119.08 4.92a10.035 10.035 0 012.139 3.184A9.801 9.801 0 0122 12c0 1.38-.26 2.679-.781 3.896a10.035 10.035 0 01-2.139 3.184 10.035 10.035 0 01-3.184 2.139A9.801 9.801 0 0112 22zm0-1.426a8.343 8.343 0 003.34-.674 8.663 8.663 0 002.724-1.836A8.663 8.663 0 0019.9 15.34a8.343 8.343 0 00.674-3.34 8.343 8.343 0 00-.674-3.34 8.663 8.663 0 00-1.836-2.724A8.663 8.663 0 0015.34 4.1 8.343 8.343 0 0012 3.426a8.343 8.343 0 00-3.34.674 8.663 8.663 0 00-2.724 1.836A8.663 8.663 0 004.1 8.66 8.343 8.343 0 003.426 12c0 1.185.224 2.298.674 3.34a8.663 8.663 0 001.836 2.724A8.663 8.663 0 008.66 19.9a8.343 8.343 0 003.34.674zm0-7.851a.694.694 0 00.508-.215.694.694 0 00.215-.508.694.694 0 00-.215-.508.694.694 0 00-.508-.215.694.694 0 00-.508.215.694.694 0 00-.215.508c0 .195.072.365.215.508a.694.694 0 00.508.215z"
    }));
  }
  var MemoIconRevisions = React__default__default["default"].memo(IconRevisions);
  function IconRocket(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconRocket"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M9.903 20.269c1.294.554 3.235.37 4.806-.646 1.572-1.016 2.311-2.678 1.941-3.878l-6.747 4.524zm7.672-6.001c1.386 2.03.37 4.893-2.034 6.555-2.403 1.57-5.638 1.57-7.394 0l-.647-.646 9.613-6.463.462.554zM9.81 6.512l.555.37-6.47 9.602-.647-.647c-1.664-1.754-1.664-4.985 0-7.386C4.912 6.143 7.777 5.128 9.81 6.512zM4.45 9.375c-1.017 1.477-1.202 3.508-.648 4.8l4.53-6.74c-1.202-.369-2.866.37-3.883 1.94zm11.646 4.616c3.235-3.232 5.453-8.863 4.16-10.156-1.295-1.292-7.026.923-10.168 4.155-1.387 1.385-2.496 3.046-3.143 4.8l4.53 4.525c1.57-.831 3.234-1.94 4.62-3.324zm-10.907-.923l.185-.462c.74-2.031 2.033-4.062 3.697-5.724C12.768 3.189 19.238.696 21.272 2.727c2.033 2.031-.462 8.494-4.16 12.187-1.663 1.662-3.604 2.954-5.73 3.693l-.37.277-5.823-5.816zm8.504-2.678c-1.017-1.015-1.017-2.585 0-3.508 1.016-.923 2.588-1.016 3.512 0 .924 1.015 1.017 2.585 0 3.508s-2.588 1.016-3.512 0zm1.016-1.015c.463.461 1.11.461 1.48 0 .461-.462.461-1.108 0-1.478-.463-.369-1.11-.461-1.48 0-.37.462-.462 1.016 0 1.478z"
    }));
  }
  var MemoIconRocket = React__default__default["default"].memo(IconRocket);
  function IconSection(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconSection"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M2.833 17.665a.833.833 0 010-1.667h18.334a.833.833 0 110 1.667H2.833zM10 14.33H8.204v-3.485H4.796v3.485H3V6h1.796v3.333h3.408V6H10v8.331zm5.7 0h-1.74V7.727h-.086L12 9.052V7.398L13.96 6h1.74v8.331z"
    }));
  }
  var MemoIconSection = React__default__default["default"].memo(IconSection);
  function IconSettings(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconSettings"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5.156 13.631a.478.478 0 01.408.334 6.7 6.7 0 00.5 1.188.478.478 0 01-.055.537c-.26.297-.482.557-.686.798a.751.751 0 00.055 1.039l1.095 1.095c.278.278.742.315 1.039.055.241-.204.52-.427.798-.686a.475.475 0 01.537-.056c.371.204.78.371 1.188.482a.478.478 0 01.334.409c.018.37.055.723.074 1.038a.77.77 0 00.779.705h1.558a.77.77 0 00.78-.705c.036-.315.055-.667.074-1.038a.478.478 0 01.333-.409 5.498 5.498 0 001.188-.482.478.478 0 01.538.056c.278.24.556.482.797.686.316.26.761.241 1.04-.055l1.094-1.095c.278-.278.315-.742.055-1.039-.204-.241-.426-.5-.686-.798a.481.481 0 01-.056-.537c.204-.371.371-.78.483-1.188a.478.478 0 01.408-.334c.37-.018.723-.055 1.039-.074a.77.77 0 00.705-.779V11.22a.77.77 0 00-.705-.78 16.072 16.072 0 00-1.04-.074.478.478 0 01-.407-.333 5.498 5.498 0 00-.483-1.188.478.478 0 01.056-.538c.26-.297.482-.556.686-.797a.751.751 0 00-.055-1.04l-1.095-1.094c-.278-.278-.742-.315-1.039-.055-.24.204-.5.426-.797.686a.481.481 0 01-.538.056 5.498 5.498 0 00-1.188-.483.478.478 0 01-.333-.408c-.019-.37-.056-.723-.075-1.039a.77.77 0 00-.779-.705h-1.558a.77.77 0 00-.78.705c-.036.316-.055.668-.073 1.04a.478.478 0 01-.334.407 5.498 5.498 0 00-1.188.483.478.478 0 01-.537-.056c-.297-.26-.557-.482-.798-.686a.751.751 0 00-1.039.055L5.378 6.471c-.278.278-.315.742-.055 1.039.204.24.427.5.686.797.13.149.149.353.056.538-.204.371-.371.78-.482 1.188a.478.478 0 01-.409.333c-.37.019-.723.056-1.038.075a.77.77 0 00-.705.779v1.558a.742.742 0 00.686.78c.315.036.668.055 1.039.073zm-3.154-.853V11.22c0-1.145.858-2.098 2.05-2.205.111-.007.142-.01.468-.035.248-.02.407-.031.512-.035-.38.038-.704.3-.828.712.14-.515.35-1.028.583-1.45a.954.954 0 00.147 1.041 61.005 61.005 0 01-.686-.798c-.763-.872-.682-2.187.12-2.99L5.431 4.4c.798-.852 2.097-.917 3.004-.17.27.23.533.455.815.702a.948.948 0 00-1.09-.121c.471-.26.984-.468 1.464-.599-.378.113-.639.437-.682.889.028-.552.046-.825.078-1.097A2.199 2.199 0 0111.222 2h1.558c1.145 0 2.098.858 2.205 2.05.007.111.01.141.035.468.02.247.031.407.035.512-.038-.38-.3-.705-.712-.828.515.14 1.028.35 1.505.612a.948.948 0 00-1.032.065l.877 1.128-.941-1.075c.282-.247.545-.472.798-.686.872-.763 2.187-.682 2.99.12L19.6 5.43c.852.798.917 2.097.17 3.003-.23.271-.455.534-.702.816a.948.948 0 00.121-1.091c.26.472.468.985.599 1.465-.113-.378-.437-.639-.889-.682.552.027.825.046 1.097.078A2.199 2.199 0 0122 11.22v1.558c0 1.145-.858 2.098-2.05 2.205-.111.007-.141.01-.468.035-.247.02-.407.031-.512.035.38-.038.705-.3.828-.712a6.938 6.938 0 01-.612 1.505.948.948 0 00-.065-1.033l-1.128.877 1.075-.94c.247.282.472.544.686.798.763.872.682 2.187-.12 2.99l-1.063 1.06c-.798.852-2.097.917-3.003.17a85.246 85.246 0 01-.805-.693c.3.263.732.305 1.08.112-.472.26-.985.468-1.465.599.378-.114.639-.437.682-.89-.027.552-.046.826-.078 1.098a2.199 2.199 0 01-2.202 2.004h-1.558c-1.145 0-2.098-.858-2.205-2.05a18.612 18.612 0 00-.035-.468c-.02-.248-.031-.407-.035-.512.038.38.3.704.712.828a6.754 6.754 0 01-1.45-.583c.318.159.74.117 1.1-.2-.169.157-.315.285-.49.433l-.367.306c-.872.763-2.187.682-2.99-.12l-1.06-1.063c-.852-.798-.917-2.097-.17-3.004.23-.27.456-.533.702-.815a.948.948 0 00-.12 1.09 8.162 8.162 0 01-.618-1.464c.113.378.437.639.889.682a15.99 15.99 0 01-1.135-.082c-1.128-.102-2-1.089-1.948-2.198zm9.999 3.507a4.285 4.285 0 110-8.571 4.285 4.285 0 010 8.57zm0-1.429a2.857 2.857 0 100-5.714 2.857 2.857 0 000 5.714z"
    }));
  }
  var MemoIconSettings = React__default__default["default"].memo(IconSettings);
  function IconShare(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconShare"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M11.273 4.518L9.44 6.37a.737.737 0 01-1.047-.005l.024.024a.755.755 0 01-.005-1.06l3.072-3.106a.739.739 0 01.019-.02l-.024.025a.735.735 0 011.028-.025l.022.022 3.069 3.105a.758.758 0 01-.005 1.06l.024-.025a.734.734 0 01-1.048.005l-1.842-1.863v9.4a.73.73 0 01-.727.736.73.73 0 01-.727-.737v-9.39zm4.363 5.712a.731.731 0 01-.727-.736c0-.406.326-.735.727-.735h2.37c1.101 0 1.994.889 1.994 1.996v9.248A1.997 1.997 0 0118.006 22H5.994A1.992 1.992 0 014 20.003v-9.248c0-1.102.895-1.996 1.994-1.996h2.37c.401 0 .727.329.727.735a.731.731 0 01-.727.736H6.46c-.555 0-1.005.45-1.005 1.006v8.286A1 1 0 006.46 20.53h11.08c.555 0 1.005-.45 1.005-1.007v-8.286a1 1 0 00-1.005-1.006h-1.904z"
    }));
  }
  var MemoIconShare = React__default__default["default"].memo(IconShare);
  function IconSide(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconSide"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M9.65 4.85H6A1.15 1.15 0 004.85 6v12c0 .635.515 1.15 1.15 1.15h3.65V4.85zm1.7 0v14.3H18A1.15 1.15 0 0019.15 18V6A1.15 1.15 0 0018 4.85h-6.65zM6 3.15h12A2.85 2.85 0 0120.85 6v12A2.85 2.85 0 0118 20.85H6A2.85 2.85 0 013.15 18V6A2.85 2.85 0 016 3.15z"
    }));
  }
  var MemoIconSide = React__default__default["default"].memo(IconSide);
  function IconSingleChevronLeft(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 10 12",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconSingleChevronLeft"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M9.506 12L.62 7.264V4.763L9.506 0h.16v2.235L2.695 5.854v.319l6.97 3.619V12h-.159z"
    }));
  }
  var MemoIconSingleChevronLeft = React__default__default["default"].memo(IconSingleChevronLeft);
  function IconSingleChevronRight(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 10 12",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconSingleChevronRight"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M.78 0l8.886 4.736v2.501L.779 12H.62V9.765l6.972-3.619v-.319L.619 2.208V0h.16z"
    }));
  }
  var MemoIconSingleChevronRight = React__default__default["default"].memo(IconSingleChevronRight);
  function IconSingleQuoteDown(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 8 12",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconSingleQuoteDown"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M1.68 12V9.561h1.414c1.17 0 1.756-.585 1.756-1.756V6.244h-.683c-.943 0-1.723-.293-2.341-.878C1.176 4.78.85 4.049.85 3.17c0-.943.325-1.708.976-2.293C2.444.293 3.224 0 4.167 0 5.11 0 5.891.309 6.51.927c.618.618.927 1.398.927 2.341v4.537C7.436 10.602 6.037 12 3.24 12H1.68z"
    }));
  }
  var MemoIconSingleQuoteDown = React__default__default["default"].memo(IconSingleQuoteDown);
  function IconSingleQuoteUp(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 8 12",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconSingleQuoteUp"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M6.606 0v2.439H5.19c-1.17 0-1.756.585-1.756 1.756v1.561h.683c.943 0 1.723.293 2.341.878.65.586.976 1.317.976 2.195 0 .943-.325 1.708-.976 2.293-.618.585-1.398.878-2.341.878-.943 0-1.724-.309-2.342-.927C1.16 10.455.85 9.675.85 8.732V4.195C.85 1.398 2.248 0 5.045 0h1.56z"
    }));
  }
  var MemoIconSingleQuoteUp = React__default__default["default"].memo(IconSingleQuoteUp);
  function IconSketch(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconSketch"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M15.02 2l.032.002L15 2a.755.755 0 01.507.197l-.073-.059a.753.753 0 01.061.049l.012.01 6 5.5a.68.68 0 01.012.012l.011.01.057.064a.743.743 0 01.068.101l.036.074a.745.745 0 01.008.02l.002.006.006.015c.01.026.017.054.024.082l.003.015.004.02a.749.749 0 01.011.096v.016l.001.022v.017a.75.75 0 01-.002.04l-.001.01.003-.067a.756.756 0 01-.01.127l-.007.033a.744.744 0 01-.02.07l-.007.023a.745.745 0 01-.09.174l.045-.073a.75.75 0 01-.108.153l.067-.088-.003.008-9 13-.006.008a.745.745 0 01-.052.065l-.012.013-.008.009a.75.75 0 01-.072.065l-.011.009a.754.754 0 01-.03.02l-.016.012a.746.746 0 01-.042.026l-.023.012.082-.05a.754.754 0 01-.221.105l-.02.006a.728.728 0 01-.085.016l-.019.002h-.012l-.012.003A.642.642 0 0112 22h-.033a.744.744 0 01-.094-.01l-.017-.004a.746.746 0 01-.023-.005l-.01-.002a.734.734 0 01-.054-.015l-.012-.004a.75.75 0 01-.184-.093l.083.05a.754.754 0 01-.066-.039l-.017-.011a.377.377 0 01-.013-.01l-.016-.011a.634.634 0 01-.09-.083l-.013-.013a.753.753 0 01-.021-.025l-.01-.011a.746.746 0 01-.02-.029l-.007-.008-9-13-.004-.008-.007-.01a.747.747 0 01-.033-.055l.044.073a.755.755 0 01-.122-.3l-.002-.01a.75.75 0 01-.009-.095V8.237a.755.755 0 01.005-.07V8.16l.002-.012a.748.748 0 01.009-.052l.003-.015a.744.744 0 01.024-.082l.006-.015a.769.769 0 01.01-.026l.036-.074a.744.744 0 01.068-.101l.057-.063a.755.755 0 01.017-.017l.006-.006 6-5.5.012-.01a.753.753 0 01.06-.049l-.072.06a.755.755 0 01.405-.191l.05-.005L8.98 2zm-.963 7H9.942l2.057 8.915L14.057 9zm5.511 0h-3.972l-1.987 8.608L19.568 9zM8.403 9H4.431l5.959 8.607L8.403 9zm5.847-5.5h-4.5v4h4.5v-4zm-6 .953L4.926 7.5H8.25V4.453zm7.5.001V7.5h3.323L15.75 4.454z"
    }));
  }
  var MemoIconSketch = React__default__default["default"].memo(IconSketch);
  function IconSmileysPeople(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconSmileysPeople"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12 22c-1.38 0-2.679-.26-3.896-.781A10.035 10.035 0 014.92 19.08a10.035 10.035 0 01-2.139-3.184A9.801 9.801 0 012 12c0-1.38.26-2.679.781-3.896A10.035 10.035 0 014.92 4.92a10.035 10.035 0 013.184-2.14A9.801 9.801 0 0112 2c1.38 0 2.679.26 3.896.781A10.035 10.035 0 0119.08 4.92a10.035 10.035 0 012.139 3.184A9.801 9.801 0 0122 12c0 1.38-.26 2.679-.781 3.896a10.035 10.035 0 01-2.139 3.184 10.035 10.035 0 01-3.184 2.139A9.801 9.801 0 0112 22zm0-1.426a8.343 8.343 0 003.34-.674 8.663 8.663 0 002.724-1.836A8.663 8.663 0 0019.9 15.34a8.343 8.343 0 00.674-3.34 8.343 8.343 0 00-.674-3.34 8.663 8.663 0 00-1.836-2.724A8.663 8.663 0 0015.34 4.1 8.343 8.343 0 0012 3.426a8.343 8.343 0 00-3.34.674 8.663 8.663 0 00-2.724 1.836A8.663 8.663 0 004.1 8.66 8.343 8.343 0 003.426 12c0 1.185.224 2.298.674 3.34a8.663 8.663 0 001.836 2.724A8.663 8.663 0 008.66 19.9a8.343 8.343 0 003.34.674zm-3.182-9.483a1.364 1.364 0 110-2.727 1.364 1.364 0 010 2.727zm6.364 0a1.364 1.364 0 110-2.727 1.364 1.364 0 010 2.727zm-7.69 2.795h8.977a1 1 0 01.86 1.51c-1.26 2.127-3.053 3.191-5.377 3.191-2.33 0-4.105-1.068-5.327-3.205a1 1 0 01.868-1.496zm4.46 3.201c1.491 0 2.65-.542 3.57-1.701h-7.1c.896 1.16 2.038 1.701 3.53 1.701z"
    }));
  }
  var MemoIconSmileysPeople = React__default__default["default"].memo(IconSmileysPeople);
  function IconSpinner(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconSpinner"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M6.861 19.36q0 .737-.52 1.258-.521.52-1.257.52-.722 0-1.25-.527-.528-.528-.528-1.25 0-.736.52-1.257.522-.52 1.258-.52t1.256.52q.521.52.521 1.257zm6.917 2.862q0 .736-.521 1.257Q12.736 24 12 24q-.736 0-1.257-.52-.52-.522-.52-1.258t.52-1.257q.521-.52 1.257-.52.736 0 1.257.52.52.521.52 1.257zM4 12.444q0 .736-.52 1.257-.522.521-1.258.521t-1.257-.52q-.52-.522-.52-1.258t.52-1.256q.521-.521 1.257-.521.736 0 1.257.52.521.521.521 1.257zm16.694 6.917q0 .722-.528 1.25t-1.25.528q-.736 0-1.256-.521-.521-.521-.521-1.257 0-.736.52-1.257.521-.52 1.257-.52.736 0 1.257.52.521.52.521 1.257zM7.306 5.528q0 .916-.653 1.57-.652.653-1.57.652-.917 0-1.57-.652-.652-.652-.652-1.57t.653-1.57q.652-.651 1.57-.652.917-.001 1.57.652.652.654.652 1.57zm16.25 6.916q0 .736-.521 1.257-.521.521-1.257.521-.736 0-1.257-.52Q20 13.18 20 12.443t.52-1.256q.522-.521 1.258-.521t1.257.52q.52.521.52 1.257zm-8.89-9.777q0 1.11-.777 1.889-.778.777-1.889.777t-1.889-.777q-.778-.778-.778-1.89 0-1.11.778-1.888Q10.89 0 12 0t1.889.778q.778.778.778 1.889zm7.362 2.861q0 1.292-.917 2.202-.916.91-2.195.91-1.291 0-2.201-.91-.91-.91-.91-2.202 0-1.277.91-2.195.909-.917 2.201-.916 1.278 0 2.195.916.917.917.917 2.195z"
    }));
  }
  var MemoIconSpinner = React__default__default["default"].memo(IconSpinner);
  function IconStar(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconStar"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12 16.066l4.175 2.195-.798-4.649 3.378-3.292-4.668-.678L12 5.412l-2.087 4.23-4.668.678 3.378 3.292-.798 4.649L12 16.066zM5.82 21.02L7 14.14 2 9.265l6.91-1.004L12 2l3.09 6.261L22 9.265l-5 4.874 1.18 6.882-6.18-3.25-6.18 3.25z"
    }));
  }
  var MemoIconStar = React__default__default["default"].memo(IconStar);
  function IconStarFilled(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconStarFilled"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5.82 21.021L7 14.14 2 9.265l6.91-1.004L12 2l3.09 6.261L22 9.265l-5 4.874 1.18 6.882-6.18-3.25z"
    }));
  }
  var MemoIconStarFilled = React__default__default["default"].memo(IconStarFilled);
  function IconStorybook(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconStorybook"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M15.072 2.432L14.976 4.6a.144.144 0 00.232.12l.848-.64.72.56A.144.144 0 0017 4.528l-.08-2.208 1.064-.08a.96.96 0 011.024.96v17.28a.96.96 0 01-1.008.96l-12.88-.576a.96.96 0 01-.92-.928l-.6-15.84a.96.96 0 01.904-1.016l10.56-.664.008.016zM12.616 9.68c0 .376 2.528.192 2.872-.064 0-2.56-1.376-3.912-3.888-3.912-2.52 0-3.92 1.376-3.92 3.432 0 3.56 4.8 3.624 4.8 5.568 0 .56-.256.88-.84.88-.768 0-1.08-.392-1.04-1.728 0-.288-2.92-.384-3.016 0-.216 3.224 1.784 4.16 4.08 4.16 2.232 0 3.976-1.192 3.976-3.344 0-3.816-4.88-3.712-4.88-5.6 0-.776.576-.88.904-.88.36 0 1 .056.952 1.496z"
    }));
  }
  var MemoIconStorybook = React__default__default["default"].memo(IconStorybook);
  function IconSubmit(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconSubmit"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M18.955 10.462h-6.186a.767.767 0 01-.769-.77V3.538H6.877A1.82 1.82 0 005.045 5.35v13.3a1.82 1.82 0 001.819 1.812h10.272c1 0 1.819-.814 1.819-1.818v-8.182zm0-1.539v-.177l-5.41-5.063v5.24h5.41zM3.5 5.645A3.65 3.65 0 017.157 2h6.062c.5 0 1.196.273 1.564.62l5.059 4.76c.363.343.658 1.024.658 1.528v9.45A3.643 3.643 0 0116.853 22H7.147A3.649 3.649 0 013.5 18.355V5.645zm6.624 9.321l.863 1.052 2.95-2.95a.916.916 0 111.295 1.296l-3.664 3.663a.916.916 0 01-1.355-.066l-1.505-1.832a.916.916 0 111.416-1.163z"
    }));
  }
  var MemoIconSubmit = React__default__default["default"].memo(IconSubmit);
  function IconSymbols(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconSymbols"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M6.027 3h12.145a3 3 0 013 3v12.145a3 3 0 01-3 3H6.027a3 3 0 01-3-3V6a3 3 0 013-3zm0 1.5a1.5 1.5 0 00-1.5 1.5v12.145a1.5 1.5 0 001.5 1.5h12.145a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H6.027zm2.003 7.97L10 14.44l5.97-5.97a.75.75 0 011.06 1.06L10 16.56l-3.03-3.03a.75.75 0 011.06-1.06z"
    }));
  }
  var MemoIconSymbols = React__default__default["default"].memo(IconSymbols);
  function IconTable(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTable"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M9.692 8.625v2.625h4.616V8.625H9.692zm-1.538 0H3.538v2.625h4.616V8.625zm-4.616-1.5h16.924V5.25a.76.76 0 00-.77-.75H4.308a.76.76 0 00-.77.75v1.875zm16.924 1.5h-4.616v2.625h4.616V8.625zM9.692 12.75v2.625h4.616V12.75H9.692zm-1.538 0H3.538v2.625h4.616V12.75zm12.308 0h-4.616v2.625h4.616V12.75zm-10.77 4.125V19.5h4.616v-2.625H9.692zm-1.538 0H3.538v1.875c0 .414.345.75.77.75h3.846v-2.625zm12.308 0h-4.616V19.5h3.846a.76.76 0 00.77-.75v-1.875zM4.308 3h15.384C20.967 3 22 4.007 22 5.25v13.5c0 1.243-1.033 2.25-2.308 2.25H4.308C3.033 21 2 19.993 2 18.75V5.25C2 4.007 3.033 3 4.308 3z"
    }));
  }
  var MemoIconTable = React__default__default["default"].memo(IconTable);
  function IconTag(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTag"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M22 13.824c0 .478-.162.878-.485 1.201l-6.49 6.49a1.681 1.681 0 01-1.2.485c-.462 0-.855-.162-1.178-.485L3.2 12.069c-.339-.323-.624-.77-.855-1.34C2.116 10.177 2 9.66 2 9.183V3.71c0-.462.17-.862.508-1.2A1.568 1.568 0 013.686 2h5.496c.462 0 .978.123 1.548.37.554.23 1 .508 1.34.83l9.445 9.424c.323.354.485.754.485 1.2zm-1.663.023c-.003-.03-3.142-3.177-9.419-9.44-.18-.173-.454-.343-.85-.508-.374-.161-.67-.232-.886-.232H3.686c-.02.032-.026 1.871-.02 5.515 0 .243.068.545.225.922.147.363.306.612.488.787l9.446 9.446c.013-.003 2.184-2.166 6.512-6.49zM10.333 7.833c0 .673-.251 1.296-.755 1.8a2.52 2.52 0 01-3.517-.027 2.471 2.471 0 01-.728-1.773c0-.669.255-1.287.728-1.76a2.477 2.477 0 011.772-.74c.675 0 1.296.263 1.772.74.474.473.728 1.091.728 1.76zm-1.666 0a.793.793 0 00-.24-.582A.812.812 0 007.833 7a.812.812 0 00-.593.251.793.793 0 00-.24.582c0 .236.08.434.24.594.167.16.365.24.593.24.229 0 .427-.08.594-.24.16-.16.24-.358.24-.594z"
    }));
  }
  var MemoIconTag = React__default__default["default"].memo(IconTag);
  function IconTarget(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTarget"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M15.137 6.442l-.19-1.769L18.632 1l.62 3.884 3.748.47-3.713 3.702-1.7-.183a8.409 8.409 0 011.4 4.66c0 4.676-3.802 8.467-8.493 8.467C5.803 22 2 18.21 2 13.533c0-4.676 3.803-8.467 8.494-8.467 1.713 0 3.308.506 4.643 1.376zm-.314 1.672a6.934 6.934 0 00-4.33-1.509c-3.837 0-6.949 3.102-6.949 6.928s3.112 6.928 6.95 6.928 6.949-3.102 6.949-6.928c0-1.64-.571-3.146-1.526-4.332l-1.098 1.1c.678.9 1.08 2.02 1.08 3.232 0 2.976-2.42 5.388-5.405 5.388-2.985 0-5.405-2.412-5.405-5.388s2.42-5.388 5.405-5.388c1.211 0 2.33.397 3.231 1.069l1.098-1.1zM12.62 10.32a3.851 3.851 0 00-2.126-.636 3.855 3.855 0 00-3.861 3.849 3.855 3.855 0 003.86 3.849 3.855 3.855 0 003.861-3.85c0-.785-.236-1.515-.641-2.124l-1.128 1.13a2.313 2.313 0 01-2.09 3.304 2.313 2.313 0 01-2.318-2.31 2.313 2.313 0 012.317-2.308c.357 0 .696.08.999.225l1.127-1.129zm-2.126 3.983a.77.77 0 10-.773-.77c0 .425.346.77.773.77zm7.085-10.076l-1.023 1.02.222 1.974 1.941.23 1.048-1.044-1.94-.232-.248-1.948z"
    }));
  }
  var MemoIconTarget = React__default__default["default"].memo(IconTarget);
  function IconTeam(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTeam"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M13.168 15.237A6.895 6.895 0 0116.759 22H3.034a6.896 6.896 0 013.64-6.788 4.817 4.817 0 01-1.563-3.557 4.825 4.825 0 014.823-4.827 4.825 4.825 0 014.824 4.827 4.817 4.817 0 01-1.59 3.582zm-1.396.883a4.805 4.805 0 01-1.838.363 4.804 4.804 0 01-1.872-.378 5.523 5.523 0 00-3.64 4.516h10.95a5.523 5.523 0 00-3.6-4.501zm5.293 1.052a8.302 8.302 0 00-1-1.379H20.2a5.523 5.523 0 00-3.6-4.5c-.167.069-.34.129-.515.179a6.85 6.85 0 00-.244-1.368 3.45 3.45 0 00-1.078-6.725 3.447 3.447 0 00-3.247 2.294 5.9 5.9 0 00-1.378-.22A4.826 4.826 0 0114.762 2a4.825 4.825 0 014.823 4.828 4.817 4.817 0 01-1.59 3.582 6.895 6.895 0 013.592 6.762h-4.522zm-7.13-2.069a3.447 3.447 0 003.445-3.448 3.447 3.447 0 00-3.446-3.448 3.447 3.447 0 00-3.445 3.448 3.447 3.447 0 003.445 3.448z"
    }));
  }
  var MemoIconTeam = React__default__default["default"].memo(IconTeam);
  function IconTeamO(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTeamO"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M13.168 15.237A6.895 6.895 0 0116.759 22H3.034a6.896 6.896 0 013.64-6.788 4.817 4.817 0 01-1.563-3.557 4.825 4.825 0 014.823-4.827 4.825 4.825 0 014.824 4.827 4.817 4.817 0 01-1.59 3.582zm-1.396.883a4.805 4.805 0 01-1.838.363 4.804 4.804 0 01-1.872-.378 5.523 5.523 0 00-3.64 4.516h10.95a5.523 5.523 0 00-3.6-4.501zm5.293 1.052a8.302 8.302 0 00-1-1.379H20.2a5.523 5.523 0 00-3.6-4.5c-.167.069-.34.129-.515.179a6.85 6.85 0 00-.244-1.368 3.45 3.45 0 00-1.078-6.725 3.447 3.447 0 00-3.247 2.294 5.9 5.9 0 00-1.378-.22A4.826 4.826 0 0114.762 2a4.825 4.825 0 014.823 4.828 4.817 4.817 0 01-1.59 3.582 6.895 6.895 0 013.592 6.762h-4.522zm-7.13-2.069a3.447 3.447 0 003.445-3.448 3.447 3.447 0 00-3.446-3.448 3.447 3.447 0 00-3.445 3.448 3.447 3.447 0 003.445 3.448z"
    }));
  }
  var MemoIconTeamO = React__default__default["default"].memo(IconTeamO);
  function IconTemplate(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTemplate"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12.4 6.76l8.515 4.52a.905.905 0 01-.01 1.592l-8.498 4.372a.85.85 0 01-.777.001l-8.534-4.374a.904.904 0 01-.01-1.592l8.517-4.519a.85.85 0 01.798 0zm-.398 1.8l-6.597 3.499 6.612 3.388 6.581-3.386-6.596-3.502z"
    }));
  }
  var MemoIconTemplate = React__default__default["default"].memo(IconTemplate);
  function IconTemplates(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTemplates"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5.407 8.398l6.612 3.389L18.6 8.4l-6.597-3.502-6.596 3.5zM12 19.108l8.74-4.515a.859.859 0 011.167.397.905.905 0 01-.386 1.2L12.4 20.9a.848.848 0 01-.8 0l-9.12-4.71a.905.905 0 01-.387-1.2.859.859 0 011.167-.397L12 19.107zm0-3.573l8.74-4.514a.859.859 0 011.167.397.905.905 0 01-.386 1.199l-9.121 4.71a.848.848 0 01-.8 0l-9.12-4.71a.905.905 0 01-.387-1.2.859.859 0 011.167-.396L12 15.535zM12.403 3.1l8.514 4.52a.905.905 0 01-.01 1.591l-8.498 4.373a.85.85 0 01-.778 0L3.098 9.21a.904.904 0 01-.01-1.592L11.603 3.1a.85.85 0 01.799 0z"
    }));
  }
  var MemoIconTemplates = React__default__default["default"].memo(IconTemplates);
  function IconText(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconText"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M3 7a1 1 0 110-2h14a1 1 0 010 2H3zm-.09 4c-.503 0-.91-.448-.91-1s.407-1 .91-1h18.18c.503 0 .91.448.91 1s-.407 1-.91 1H2.91zM3 15a1 1 0 010-2h14a1 1 0 010 2H3zm-.09 4c-.503 0-.91-.448-.91-1s.407-1 .91-1h18.18c.503 0 .91.448.91 1s-.407 1-.91 1H2.91z"
    }));
  }
  var MemoIconText = React__default__default["default"].memo(IconText);
  function IconTextAlignCenter(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTextAlignCenter"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M20.662 6a1 1 0 01-1 1h-16a1 1 0 010-2h16a1 1 0 011 1zM4.662 18a1 1 0 011-1h12a1 1 0 110 2h-12a1 1 0 01-1-1zM18.662 10a1 1 0 01-1 1h-12a1 1 0 110-2h12a1 1 0 011 1zM20.662 14a1 1 0 01-1 1h-16a1 1 0 110-2h16a1 1 0 011 1z"
    }));
  }
  var MemoIconTextAlignCenter = React__default__default["default"].memo(IconTextAlignCenter);
  function IconTextAlignJustify(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTextAlignJustify"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M20.662 6a1 1 0 01-1 1h-16a1 1 0 010-2h16a1 1 0 011 1zM2.662 18a1 1 0 011-1h16a1 1 0 110 2h-16a1 1 0 01-1-1zM20.662 10a1 1 0 01-1 1h-16a1 1 0 110-2h16a1 1 0 011 1zM20.662 14a1 1 0 01-1 1h-16a1 1 0 110-2h16a1 1 0 011 1z"
    }));
  }
  var MemoIconTextAlignJustify = React__default__default["default"].memo(IconTextAlignJustify);
  function IconTextAlignLeft(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTextAlignLeft"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M20.662 6a1 1 0 01-1 1h-16a1 1 0 010-2h16a1 1 0 011 1zM2.662 18a1 1 0 011-1h13a1 1 0 110 2h-13a1 1 0 01-1-1zM17.662 10a1 1 0 01-1 1h-13a1 1 0 110-2h13a1 1 0 011 1zM20.662 14a1 1 0 01-1 1h-16a1 1 0 110-2h16a1 1 0 011 1z"
    }));
  }
  var MemoIconTextAlignLeft = React__default__default["default"].memo(IconTextAlignLeft);
  function IconTextAlignRight(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTextAlignRight"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M20.662 6a1 1 0 01-1 1h-16a1 1 0 010-2h16a1 1 0 011 1zM5.662 18a1 1 0 011-1h13a1 1 0 110 2h-13a1 1 0 01-1-1zM20.662 10a1 1 0 01-1 1h-13a1 1 0 110-2h13a1 1 0 011 1zM20.662 14a1 1 0 01-1 1h-16a1 1 0 110-2h16a1 1 0 011 1z"
    }));
  }
  var MemoIconTextAlignRight = React__default__default["default"].memo(IconTextAlignRight);
  function IconTextLibrary(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTextLibrary"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M18.97 17.856a4.541 4.541 0 01-4.508 4.029H5.538C3.032 21.885 1 19.842 1 17.33v-6.278a4.546 4.546 0 014.03-4.525A4.541 4.541 0 019.538 2.5h8.924C20.968 2.5 23 4.543 23 7.053v6.278a4.546 4.546 0 01-4.03 4.525zm.03-1.522a2.727 2.727 0 002.462-2.72V6.77a2.727 2.727 0 00-2.72-2.732H9.258A2.724 2.724 0 006.552 6.5h7.91C16.968 6.5 19 8.543 19 11.053v5.281zm-4.257 4.012a2.725 2.725 0 002.719-2.731V10.77a2.727 2.727 0 00-2.72-2.732H5.258a2.725 2.725 0 00-2.719 2.732v6.845a2.727 2.727 0 002.72 2.731h9.485zM5.758 12A.754.754 0 015 11.25c0-.414.34-.75.758-.75h8.484c.419 0 .758.336.758.75s-.34.75-.758.75H5.758zm.075 3c-.46 0-.833-.336-.833-.75s.373-.75.833-.75h8.334c.46 0 .833.336.833.75s-.373.75-.833.75H5.833zm-.075 3A.754.754 0 015 17.25c0-.414.34-.75.758-.75h5.151c.418 0 .758.336.758.75s-.34.75-.758.75H5.758z"
    }));
  }
  var MemoIconTextLibrary = React__default__default["default"].memo(IconTextLibrary);
  function IconTextMultiColumn(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTextMultiColumn"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M15 8.25a.75.75 0 110-1.5h5a.75.75 0 110 1.5h-5zm0 3a.75.75 0 110-1.5h4a.75.75 0 110 1.5h-4zm-11-3a.75.75 0 010-1.5h5a.75.75 0 010 1.5H4zm11 6a.75.75 0 110-1.5h5a.75.75 0 110 1.5h-5zm-11 0a.75.75 0 110-1.5h5a.75.75 0 110 1.5H4zm0-3a.75.75 0 110-1.5h4a.75.75 0 110 1.5H4zm0 6a.75.75 0 110-1.5h4a.75.75 0 110 1.5H4zm11 0a.75.75 0 110-1.5h4a.75.75 0 110 1.5h-4z"
    }));
  }
  var MemoIconTextMultiColumn = React__default__default["default"].memo(IconTextMultiColumn);
  function IconTextOnImage(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 25",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTextOnImage"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M11 8.25a.75.75 0 01-.75.75h-4.5a.75.75 0 010-1.5h4.5a.75.75 0 01.75.75zM9 14.25a.75.75 0 01-.75.75h-2.5a.75.75 0 010-1.5h2.5a.75.75 0 01.75.75zM11 11.25a.75.75 0 01-.75.75h-4.5a.75.75 0 010-1.5h4.5a.75.75 0 01.75.75zM14.5 10.5a1.5 1.5 0 103 0 1.5 1.5 0 00-3 0zm1.5-3a3 3 0 100 6 3 3 0 000-6z"
    }), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M20 6H4a.5.5 0 00-.5.5v12a.5.5 0 00.5.5h16a.5.5 0 00.5-.5v-12A.5.5 0 0020 6zM4 4.5a2 2 0 00-2 2v12a2 2 0 002 2h16a2 2 0 002-2v-12a2 2 0 00-2-2H4z"
    }), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M5.968 19.254l6.815-4.193a1.75 1.75 0 011.222-.233l6.864 1.215-.261 1.477-6.864-1.215a.25.25 0 00-.175.033l-6.815 4.194-.786-1.278z"
    }));
  }
  var MemoIconTextOnImage = React__default__default["default"].memo(IconTextOnImage);
  function IconTextSnippet(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTextSnippet"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M7.758 9.75A.754.754 0 017 9c0-.414.34-.75.758-.75h8.484c.419 0 .758.336.758.75s-.34.75-.758.75H7.758zm.075 3c-.46 0-.833-.336-.833-.75s.373-.75.833-.75h8.334c.46 0 .833.336.833.75s-.373.75-.833.75H7.833zm-.075 3A.754.754 0 017 15c0-.414.34-.75.758-.75h5.151c.418 0 .758.336.758.75s-.34.75-.758.75H7.758zM7.5 6.25h-2c-.69 0-1.25.56-1.25 1.25v9c0 .69.56 1.25 1.25 1.25h2a.75.75 0 110 1.5h-2a2.75 2.75 0 01-2.75-2.75v-9A2.75 2.75 0 015.5 4.75h2a.75.75 0 010 1.5zm9 0a.75.75 0 110-1.5h2a2.75 2.75 0 012.75 2.75v9a2.75 2.75 0 01-2.75 2.75h-2a.75.75 0 110-1.5h2c.69 0 1.25-.56 1.25-1.25v-9c0-.69-.56-1.25-1.25-1.25h-2z"
    }));
  }
  var MemoIconTextSnippet = React__default__default["default"].memo(IconTextSnippet);
  function IconTimeline(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTimeline"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5.476 11.333a2.501 2.501 0 012.357-1.666h7.5c1.089 0 2.015.695 2.358 1.666h3.476a.833.833 0 010 1.667H17.69a2.501 2.501 0 01-2.358 1.667h-7.5A2.501 2.501 0 015.476 13H2.833a.833.833 0 110-1.667h2.643zM14.642 18A2.501 2.501 0 0117 16.333h2.5a2.5 2.5 0 010 5H17a2.501 2.501 0 01-2.358-1.666H2.833a.833.833 0 010-1.667h11.81zm-4.45-13.333h10.975a.833.833 0 110 1.666H10.19A2.501 2.501 0 017.833 8H4.5a2.5 2.5 0 010-5h3.333c1.089 0 2.015.696 2.358 1.667zm-5.692 0a.833.833 0 100 1.666h3.333a.833.833 0 100-1.666H4.5zM17 18a.833.833 0 100 1.667h2.5a.833.833 0 000-1.667H17zm-9.167-6.667a.833.833 0 000 1.667h7.5a.833.833 0 100-1.667h-7.5z"
    }));
  }
  var MemoIconTimeline = React__default__default["default"].memo(IconTimeline);
  function IconTransfer(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTransfer"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M2.77 6.881a.736.736 0 01-.547-.227A.743.743 0 012 6.116c0-.22.074-.407.223-.559a.736.736 0 01.547-.227h16.596L17.42 3.344a.767.767 0 01-.222-.558c0-.22.074-.407.222-.558A.736.736 0 0117.968 2c.216 0 .398.076.547.228l3.262 3.33c.068.082.122.172.162.268.04.097.061.193.061.29 0 .096-.02.193-.06.29-.041.096-.095.186-.163.268l-3.262 3.33a.736.736 0 01-.547.228.736.736 0 01-.548-.228.827.827 0 01-.222-.569c0-.213.074-.396.222-.548l1.966-2.006H2.77zM4.614 18.65l1.966 2.007a.755.755 0 01.222.548.755.755 0 01-.222.548.76.76 0 01-.558.248.725.725 0 01-.537-.228l-3.262-3.35a.784.784 0 01-.162-.248.743.743 0 01-.061-.29c0-.11.017-.214.05-.31a.568.568 0 01.173-.248l3.262-3.33a.725.725 0 01.537-.228c.21 0 .395.076.558.228a.755.755 0 01.222.548.827.827 0 01-.222.569l-1.946 1.985H21.23c.203 0 .382.076.537.228.155.151.233.33.233.537a.75.75 0 01-.233.559.746.746 0 01-.537.227H4.614z",
      fillRule: "nonzero"
    }));
  }
  var MemoIconTransfer = React__default__default["default"].memo(IconTransfer);
  function IconTrash(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTrash"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M17.39 7.455H6.483v11.818c0 .502.407.909.909.909h9.09a.91.91 0 00.91-.91V7.456zM4.665 5.636H8.3V3.818C8.3 2.814 9.114 2 10.118 2h3.637c1.004 0 1.818.814 1.818 1.818v1.818h4.269a.91.91 0 010 1.819h-.633v11.818A2.727 2.727 0 0116.482 22H7.39a2.727 2.727 0 01-2.727-2.727V7.455h-.455a.91.91 0 110-1.819h.455zm5.454 0h3.637V3.818h-3.637v1.818zm-1.363 4.546a.91.91 0 111.818 0v7.273a.91.91 0 01-1.818 0v-7.273zm4.545 0a.91.91 0 011.818 0v7.273a.91.91 0 11-1.818 0v-7.273z"
    }));
  }
  var MemoIconTrash = React__default__default["default"].memo(IconTrash);
  function IconTrashOpen(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTrashOpen"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M16.833 6.42l3.023 1.1a.724.724 0 11-.495 1.361l-11.7-4.258a.724.724 0 11.496-1.36l3.245 1.18c.012-.043.025-.086.041-.13l.495-1.36a1.448 1.448 0 011.856-.865l2.722.99a1.448 1.448 0 01.865 1.856l-.495 1.36a1.466 1.466 0 01-.053.126zM6.448 10.416v9.412c0 .4.324.724.724.724h7.24c.4 0 .724-.324.724-.724v-9.412H6.448zM5 8.968h11.584v10.86c0 1.2-.972 2.172-2.172 2.172h-7.24C5.972 22 5 21.028 5 19.828V8.968zm8.299-5.52l-.495 1.361 2.721.99.495-1.36-2.721-.99zm-5.041 9.14a.724.724 0 011.448 0v5.792a.724.724 0 01-1.448 0v-5.792zm3.62 0a.724.724 0 011.448 0v5.792a.724.724 0 01-1.448 0v-5.792z"
    }));
  }
  var MemoIconTrashOpen = React__default__default["default"].memo(IconTrashOpen);
  function IconTravelPlaces(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTravelPlaces"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M8.75 10h.75a2.5 2.5 0 010 5h-.75v5.19h6.5V7.89h-6.5V10zm-1.5.012V7.89H5.061c-.413 0-.77.15-1.07.45-.3.3-.451.658-.451 1.07v9.24c0 .426.15.789.45 1.09.301.3.658.45 1.071.45H7.25v-5.202a2.5 2.5 0 010-4.976zm9.5-2.122v12.3h2.17c.426 0 .789-.15 1.09-.45.3-.301.45-.664.45-1.09V9.41c0-.412-.15-.77-.45-1.07-.301-.3-.664-.45-1.09-.45h-2.17zm-.14-1.54h3.08c.639 0 1.183.225 1.634.676.45.45.676.989.676 1.615v10.78c0 .638-.225 1.182-.676 1.633-.45.45-.995.676-1.634.676H4.31a2.226 2.226 0 01-1.634-.676A2.226 2.226 0 012 19.42V8.64c0-.625.225-1.163.676-1.614.45-.45.995-.676 1.634-.676h3.08V4.04c0-.426.15-.789.45-1.09.3-.3.664-.45 1.09-.45h6.14c.426 0 .79.15 1.09.45.3.301.45.664.45 1.09v2.31zm-1.54 0V4.81a.742.742 0 00-.225-.545.742.742 0 00-.545-.225H9.68a.72.72 0 00-.525.225.742.742 0 00-.225.545v1.54h6.14zM7.5 11.5a1 1 0 100 2h2a1 1 0 000-2h-2z"
    }));
  }
  var MemoIconTravelPlaces = React__default__default["default"].memo(IconTravelPlaces);
  function IconTriangle(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTriangle"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M5.772 19.287h12.456L12 6.83 5.772 19.287zM21 21H3l9-18 9 18z"
    }));
  }
  var MemoIconTriangle = React__default__default["default"].memo(IconTriangle);
  function IconTruck(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      className: customClassName,
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "100%",
      height: "100%",
      name: "IconTruck"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M.875 7A.879.879 0 000 7.875v12.25c0 .48.395.875.875.875H3a3 3 0 006 0h3.125c.48 0 .875-.395.875-.875V7.875A.879.879 0 0012.125 7zm13.781 2a.658.658 0 00-.656.656v10.688c0 .27.172.496.406.593.078.032.16.063.25.063H16a3 3 0 006 0h1.344c.09 0 .172-.027.25-.063a.644.644 0 00.343-.343.606.606 0 00.063-.25v-5.157c0-.128-.055-.234-.125-.343L20.187 9.28a.627.627 0 00-.53-.281zM17 11h2.531l2.657 4H17zM6 19.5a1.5 1.5 0 110 3 1.5 1.5 0 010-3zm13 0a1.5 1.5 0 110 3 1.5 1.5 0 010-3z"
    }));
  }
  var MemoIconTruck = React__default__default["default"].memo(IconTruck);
  function IconTypography(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTypography"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12.818 19.436h3.273V21H7.909v-1.564h3.273V4.564H4.636V6.92H3V3h18v3.92h-1.636V4.564h-6.546z"
    }));
  }
  var MemoIconTypography = React__default__default["default"].memo(IconTypography);
  function IconTypostyles(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconTypostyles"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M8.923 17.308h2.308v1.538H5.077v-1.538h2.308V6.538H3.538v1.539H2V5h12.308v3.077h-1.539V6.538H8.923v10.77zm9.23 0v1.538h-1.538v-7.692H12.77V9.615H22v1.539h-3.846v6.154z"
    }));
  }
  var MemoIconTypostyles = React__default__default["default"].memo(IconTypostyles);
  function IconUiPattern(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconUiPattern"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M20.462 6.546V5.008a.77.77 0 00-.77-.77H4.308a.77.77 0 00-.77.77v1.538h16.924zm0 1.539H3.538v10.769c0 .425.345.77.77.77h15.384a.77.77 0 00.77-.77V8.084zM4.308 2.7h15.384A2.308 2.308 0 0122 5.008v13.846a2.308 2.308 0 01-2.308 2.308H4.308A2.308 2.308 0 012 18.854V5.008A2.308 2.308 0 014.308 2.7zm7.226 14.19a.77.77 0 01-1.376-.688l2.308-4.615a.77.77 0 011.376.688l-2.308 4.615zm3.483-.856l2.492-2.164-2.496-2.2a.678.678 0 11.897-1.017l3.077 2.712a.678.678 0 01-.004 1.02l-3.077 2.673a.678.678 0 01-.889-1.024zm-6.034 0a.678.678 0 01-.889 1.024l-3.077-2.673a.678.678 0 01-.004-1.02l3.077-2.712a.678.678 0 01.897 1.017l-2.496 2.2 2.492 2.164z"
    }));
  }
  var MemoIconUiPattern = React__default__default["default"].memo(IconUiPattern);
  function IconUnknown(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconUnknown"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12 22c-1.38 0-2.679-.26-3.896-.781A10.035 10.035 0 014.92 19.08a10.035 10.035 0 01-2.139-3.184A9.801 9.801 0 012 12c0-1.38.26-2.679.781-3.896A10.035 10.035 0 014.92 4.92 10.035 10.035 0 018.104 2.78 9.801 9.801 0 0112 2c1.38 0 2.679.26 3.896.781A10.035 10.035 0 0119.08 4.92a10.035 10.035 0 012.139 3.184A9.801 9.801 0 0122 12c0 1.38-.26 2.679-.781 3.896a10.035 10.035 0 01-2.139 3.184 10.035 10.035 0 01-3.184 2.139A9.801 9.801 0 0112 22zm0-1.426a8.343 8.343 0 003.34-.674 8.663 8.663 0 002.724-1.836A8.663 8.663 0 0019.9 15.34a8.343 8.343 0 00.674-3.34 8.343 8.343 0 00-.674-3.34 8.663 8.663 0 00-1.836-2.724A8.663 8.663 0 0015.34 4.1 8.343 8.343 0 0012 3.426a8.343 8.343 0 00-3.34.674 8.663 8.663 0 00-2.724 1.836A8.663 8.663 0 004.1 8.66 8.343 8.343 0 003.426 12c0 1.185.224 2.298.674 3.34a8.663 8.663 0 001.836 2.724A8.663 8.663 0 008.66 19.9a8.343 8.343 0 003.34.674zm-.918-5.176c0-.273.094-.504.283-.693a.943.943 0 01.694-.283.92.92 0 01.673.283c.19.189.284.42.284.693a.976.976 0 01-.284.704.905.905 0 01-.673.293.927.927 0 01-.694-.293.976.976 0 01-.283-.704zm3.79-5.488c0 .534-.16.996-.48 1.387-.318.39-.647.755-.986 1.094-.247.26-.41.478-.488.654a1.193 1.193 0 00-.117.478h-1.387c.013-.39.081-.71.205-.957.124-.247.342-.54.654-.879.248-.273.498-.54.752-.8s.381-.58.381-.957c0-.365-.117-.664-.351-.899-.235-.234-.56-.351-.977-.351-.443 0-.778.14-1.006.42-.228.28-.361.628-.4 1.045H9.129c.091-.82.4-1.488.928-2.002.527-.515 1.2-.772 2.021-.772.873 0 1.556.228 2.05.684.496.455.743 1.074.743 1.855z"
    }));
  }
  var MemoIconUnknown = React__default__default["default"].memo(IconUnknown);
  function IconUnknownSimple(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 16 16",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconUnknownSimple"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M8 11.739a.95.95 0 110 1.899.95.95 0 010-1.9zm.04-9.377c1.925 0 3.305 1.453 3.305 3.301 0 .917-.395 1.587-1.108 2.21l-.109.093c.018-.015-.678.527-.743.603l-.123.146c-.387.465-.51.76-.51 1.446a.712.712 0 01-1.424 0c0-.99.226-1.586.75-2.247l.19-.229.032-.038c.1-.12.214-.223.377-.353l.438-.34.103-.084c.487-.405.703-.747.703-1.207 0-1.077-.76-1.876-1.88-1.876-.935 0-1.703.61-1.983 1.716a.712.712 0 01-1.381-.35c.438-1.732 1.77-2.79 3.363-2.79z"
    }));
  }
  var MemoIconUnknownSimple = React__default__default["default"].memo(IconUnknownSimple);
  function IconUpload(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconUpload"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M17.42 18.297c.448 0 .87-.085 1.264-.254a3.255 3.255 0 001.984-3.009c0-.62-.158-1.183-.472-1.692a3.3 3.3 0 00-1.235-1.183 5.082 5.082 0 00.18-1.347c0-.719-.135-1.392-.404-2.021a5.265 5.265 0 00-1.1-1.647 5.113 5.113 0 00-3.646-1.512c-.788 0-1.524.167-2.208.502a5.134 5.134 0 00-1.73 1.355 3.897 3.897 0 00-.583-.165c-.2-.04-.404-.06-.614-.06a3.165 3.165 0 00-2.29.958c-.29.3-.52.646-.689 1.04-.17.395-.254.816-.254 1.266 0 .24.022.466.067.68.045.215.112.427.202.637a3.124 3.124 0 00-1.826 1.115 3.164 3.164 0 00-.734 2.074c0 .439.083.855.247 1.25.165.394.39.736.674 1.025.284.29.616.524.996.704.379.18.788.274 1.227.284h10.943zm3.008-6.737c.48.43.86.944 1.145 1.542.285.6.427 1.243.427 1.932 0 .628-.117 1.217-.352 1.766a4.68 4.68 0 01-.958 1.445 4.712 4.712 0 01-1.422.995c-.544.25-1.125.38-1.744.39H6.566c-.629 0-1.22-.12-1.774-.36a4.57 4.57 0 01-1.452-.988 4.699 4.699 0 01-.98-1.467A4.474 4.474 0 012 15.034a4.582 4.582 0 01.636-2.343c.205-.345.45-.659.734-.943.284-.285.596-.522.935-.711 0-.09-.002-.175-.007-.255a4.474 4.474 0 01.352-2.036c.24-.559.564-1.048.973-1.467.409-.42.893-.748 1.452-.988a4.474 4.474 0 011.781-.36c.13 0 .26.006.39.016s.259.03.389.06c.29-.27.601-.51.935-.719a6.459 6.459 0 013.421-.988 6.406 6.406 0 014.588 1.909 6.712 6.712 0 011.385 2.073 6.331 6.331 0 01.494 2.912l-.03.366zm-7.77.36v3.712c0 .18-.064.335-.194.464a.634.634 0 01-.464.195.651.651 0 01-.479-.195.634.634 0 01-.195-.464v-3.727l-1.242 1.242a.642.642 0 01-.472.195.642.642 0 01-.471-.195.661.661 0 01-.202-.464.633.633 0 01.202-.479l2.35-2.35a.625.625 0 01.225-.165.693.693 0 01.59.015c.096.05.173.12.233.21l2.305 2.29c.13.13.195.287.195.472a.642.642 0 01-.195.471.67.67 0 01-.471.202.596.596 0 01-.472-.202L12.66 11.92z"
    }));
  }
  var MemoIconUpload = React__default__default["default"].memo(IconUpload);
  function IconUploadDoImages(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconUploadDoImages"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M12 17.333a5 5 0 110-10 5 5 0 010 10zm0-1.334a3.667 3.667 0 100-7.333 3.667 3.667 0 000 7.333zm1.322-5.13a.666.666 0 11.957.928l-2.367 2.441a.666.666 0 01-.977-.022l-.967-1.092a.667.667 0 01.997-.884l.49.553 1.866-1.924zm7.02-5.52H3.66a.3.3 0 00-.22.09.294.294 0 00-.108.237v12.665a.33.33 0 00.109.237c.06.062.134.091.219.091H20.34c.085 0 .164-.03.237-.09a.362.362 0 00.091-.238V5.677a.32.32 0 00-.09-.237.362.362 0 00-.238-.09zM22 5.675v12.665c0 .45-.164.839-.492 1.167A1.595 1.595 0 0120.34 20H3.659c-.45 0-.838-.164-1.167-.492A1.594 1.594 0 012 18.342V5.677c0-.462.164-.857.492-1.185A1.595 1.595 0 013.66 4h16.682c.45 0 .838.164 1.167.492.328.328.492.723.492 1.184z"
    }));
  }
  var MemoIconUploadDoImages = React__default__default["default"].memo(IconUploadDoImages);
  function IconUploadDontImages(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconUploadDontImages"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M20.34 5.348H3.66a.299.299 0 00-.22.091.293.293 0 00-.109.237V18.34c0 .085.037.164.11.237.06.06.133.09.218.09h16.682c.085 0 .164-.03.237-.09a.363.363 0 00.09-.237V5.676a.32.32 0 00-.09-.237.363.363 0 00-.237-.09zm1.66.328v12.666c0 .45-.164.838-.492 1.166A1.593 1.593 0 0120.34 20H3.659c-.45 0-.838-.164-1.167-.492A1.592 1.592 0 012 18.342V5.676c0-.461.164-.856.492-1.184A1.595 1.595 0 013.66 4h16.682c.45 0 .838.164 1.167.492.328.328.492.723.492 1.184zm-10.024 5.582l.65-.65a.656.656 0 11.927.928l-.65.65.65.65a.656.656 0 11-.928.928l-.65-.65-.65.65a.656.656 0 11-.928-.928l.65-.65-.65-.65a.656.656 0 11.929-.928l.65.65zm-.13 5.721a4.923 4.923 0 110-9.846 4.923 4.923 0 010 9.846zm0-1.312a3.61 3.61 0 100-7.221 3.61 3.61 0 000 7.22z"
    }));
  }
  var MemoIconUploadDontImages = React__default__default["default"].memo(IconUploadDontImages);
  function IconUser(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconUser"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M16.312 13.184a8.35 8.35 0 014.349 8.188H4.041a8.35 8.35 0 014.407-8.22 5.833 5.833 0 01-1.891-4.306A5.843 5.843 0 0112.397 3a5.843 5.843 0 015.84 5.846c0 1.72-.743 3.268-1.925 4.338zm-1.69 1.068a5.818 5.818 0 01-2.225.44c-.804 0-1.57-.163-2.267-.457a6.688 6.688 0 00-4.408 5.467H18.98a6.688 6.688 0 00-4.358-5.45zm-2.225-1.23a4.174 4.174 0 004.172-4.176 4.174 4.174 0 00-4.172-4.176 4.174 4.174 0 00-4.172 4.176 4.174 4.174 0 004.172 4.175z"
    }));
  }
  var MemoIconUser = React__default__default["default"].memo(IconUser);
  function IconUserO(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconUserO"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M16.312 13.184a8.35 8.35 0 014.349 8.188H4.041a8.35 8.35 0 014.407-8.22 5.833 5.833 0 01-1.891-4.306A5.843 5.843 0 0112.397 3a5.843 5.843 0 015.84 5.846c0 1.72-.743 3.268-1.925 4.338zm-1.69 1.068a5.818 5.818 0 01-2.225.44c-.804 0-1.57-.163-2.267-.457a6.688 6.688 0 00-4.408 5.467H18.98a6.688 6.688 0 00-4.358-5.45zm-2.225-1.23a4.174 4.174 0 004.172-4.176 4.174 4.174 0 00-4.172-4.176 4.174 4.174 0 00-4.172 4.176 4.174 4.174 0 004.172 4.175z"
    }));
  }
  var MemoIconUserO = React__default__default["default"].memo(IconUserO);
  function IconVideo(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconVideo"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M9.143 14.705V9.813c0-.508.279-.956.775-1.242.46-.212.972-.193 1.395.09l3.622 2.402c.4.255.636.696.636 1.16 0 .45-.222.884-.599 1.148l-3.578 2.44a1.3 1.3 0 01-.835.292c-.22 0-.431-.043-.634-.142-.473-.224-.746-.684-.782-1.256zm4.967-2.475L10.57 9.883l-.001 4.765 3.54-2.418zM12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-1.429A8.571 8.571 0 1012 3.43a8.571 8.571 0 000 17.142z"
    }));
  }
  var MemoIconVideo = React__default__default["default"].memo(IconVideo);
  function IconVideoAndText(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconVideoAndText"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M5.861 9.872a.95.95 0 011.475-.791l3.897 2.585a.95.95 0 01.01 1.576l-3.898 2.663a.95.95 0 01-1.486-.784l.002-5.249zm1.5 1.025L7.36 14.08l2.363-1.615-2.362-1.567zM22 6.25a.75.75 0 01-.75.75h-3.486a.75.75 0 010-1.5h3.486a.75.75 0 01.75.75zM22 12.25a.75.75 0 01-.75.75h-3.486a.75.75 0 010-1.5h3.486a.75.75 0 01.75.75zM20.575 9.25a.75.75 0 01-.75.75h-2.061a.75.75 0 010-1.5h2.061a.75.75 0 01.75.75zM20.575 15.25a.75.75 0 01-.75.75h-2.061a.75.75 0 010-1.5h2.061a.75.75 0 01.75.75z"
    }), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M13 6H4a.5.5 0 00-.5.5v12a.5.5 0 00.5.5h9a.5.5 0 00.5-.5v-12A.5.5 0 0013 6zM4 4.5a2 2 0 00-2 2v12a2 2 0 002 2h9a2 2 0 002-2v-12a2 2 0 00-2-2H4z"
    }));
  }
  var MemoIconVideoAndText = React__default__default["default"].memo(IconVideoAndText);
  function IconVideoFullscreen(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconVideoFullscreen"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M8.444 8.444H4.667a.667.667 0 000 1.334H9.11a.667.667 0 00.667-.667V4.667a.667.667 0 00-1.334 0v3.777zM15.333 8.444h3.778a.667.667 0 110 1.334h-4.444A.667.667 0 0114 9.11V4.667a.667.667 0 011.333 0v3.777zM8.444 15.333H4.667a.667.667 0 010-1.333H9.11c.368 0 .667.298.667.667v4.444a.667.667 0 11-1.334 0v-3.778zM15.333 15.333h3.778a.667.667 0 000-1.333h-4.444a.667.667 0 00-.667.667v4.444a.667.667 0 001.333 0v-3.778z"
    }));
  }
  var MemoIconVideoFullscreen = React__default__default["default"].memo(IconVideoFullscreen);
  function IconVimeo(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconVimeo"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M21.99 8.01c-.089 1.95-1.448 4.622-4.078 8.012-2.72 3.54-5.02 5.311-6.902 5.311-1.166 0-2.153-1.078-2.958-3.234l-1.615-5.931c-.598-2.156-1.24-3.235-1.926-3.235-.15 0-.674.315-1.57.944L2 8.662c.987-.869 1.96-1.738 2.919-2.608 1.316-1.14 2.304-1.739 2.963-1.8 1.557-.15 2.515.917 2.874 3.199.389 2.462.658 3.993.809 4.592.448 2.043.942 3.063 1.481 3.063.42 0 1.048-.662 1.886-1.987.838-1.325 1.286-2.334 1.347-3.026.12-1.144-.33-1.717-1.347-1.717-.479 0-.972.11-1.48.329.983-3.226 2.86-4.793 5.633-4.703 2.055.06 3.024 1.395 2.905 4.006"
    }));
  }
  var MemoIconVimeo = React__default__default["default"].memo(IconVimeo);
  function IconVolumeOff(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconVolumeOff"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M13.747 3.562a1 1 0 01.253.665v15.546a1 1 0 01-1.664.748L7.25 16H5a2 2 0 01-2-2v-4a2 2 0 012-2h2.249l5.087-4.52a1 1 0 011.411.082zM12.5 5.34L7.82 9.5H5a.5.5 0 00-.5.5v4a.5.5 0 00.5.5h2.82l4.68 4.16V5.34zm6.854 3.88a.75.75 0 111.149.964L18.979 12l1.524 1.816a.75.75 0 01-.013.98l-.08.077a.75.75 0 01-1.056-.093l-1.355-1.613-1.353 1.613a.75.75 0 01-.966.158l-.09-.065a.75.75 0 01-.093-1.057L17.02 12l-1.523-1.816a.75.75 0 01.013-.98l.08-.077a.75.75 0 011.056.093L18 10.833z"
    }));
  }
  var MemoIconVolumeOff = React__default__default["default"].memo(IconVolumeOff);
  function IconVolumeOn(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconVolumeOn"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M13.747 3.562a1 1 0 01.253.665v15.546a1 1 0 01-1.664.748L7.25 16H5a2 2 0 01-2-2v-4a2 2 0 012-2h2.249l5.087-4.52a1 1 0 011.411.082zm2.662 1.976a.75.75 0 011.053-.129C19.642 7.113 20.75 9.33 20.75 12c0 2.67-1.108 4.887-3.288 6.59a.75.75 0 11-.924-1.18c1.82-1.424 2.712-3.207 2.712-5.41 0-2.203-.892-3.986-2.712-5.41a.75.75 0 01-.129-1.052zM12.5 5.34L7.82 9.5H5a.5.5 0 00-.5.5v4a.5.5 0 00.5.5h2.82l4.68 4.16V5.34zm3.02 3.083a.75.75 0 011.057.098c.783.942 1.173 2.112 1.173 3.479s-.39 2.537-1.173 3.48a.75.75 0 11-1.154-.96c.55-.661.827-1.49.827-2.52s-.277-1.859-.827-2.52a.75.75 0 01.098-1.057z"
    }));
  }
  var MemoIconVolumeOn = React__default__default["default"].memo(IconVolumeOn);
  function IconWorkflow(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconWorkflow"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M2 3.918C2 2.858 2.858 2 3.92 2h4.621c1.06 0 1.92.86 1.92 1.918v16.164c0 1.06-.857 1.918-1.92 1.918h-4.62A1.92 1.92 0 012 20.082V3.918zm1.538.577V5.66a.96.96 0 00.963.956h3.46c.54 0 .962-.428.962-.956V4.495a.96.96 0 00-.963-.957H4.501a.954.954 0 00-.963.957zm0 4.616v1.163a.96.96 0 00.963.957h3.46c.54 0 .962-.429.962-.957V9.111a.96.96 0 00-.963-.957H4.501a.954.954 0 00-.963.957zm0 4.615v1.163a.96.96 0 00.963.957h3.46c.54 0 .962-.428.962-.957v-1.163a.96.96 0 00-.963-.957H4.501a.954.954 0 00-.963.957zm0 4.615v1.164a.96.96 0 00.963.957h3.46c.54 0 .962-.429.962-.957V18.34a.96.96 0 00-.963-.956H4.501a.954.954 0 00-.963.956zm10-14.424c0-1.059.858-1.917 1.92-1.917h4.622C21.14 2 22 2.86 22 3.917v11.55a1.918 1.918 0 01-1.92 1.918h-4.621a1.92 1.92 0 01-1.92-1.918V3.917zm1.539.578V5.66a.96.96 0 00.963.956h3.459c.54 0 .963-.428.963-.956V4.495a.96.96 0 00-.963-.957h-3.46a.954.954 0 00-.962.957zm0 4.616v1.163a.96.96 0 00.963.957h3.459c.54 0 .963-.429.963-.957V9.111a.96.96 0 00-.963-.957h-3.46a.954.954 0 00-.962.957zm0 4.615v1.163a.96.96 0 00.963.957h3.459c.54 0 .963-.428.963-.957v-1.163a.96.96 0 00-.963-.957h-3.46a.954.954 0 00-.962.957z"
    }));
  }
  var MemoIconWorkflow = React__default__default["default"].memo(IconWorkflow);
  function IconZoom(props) {
    const customClassName = [
      "tw-flex tw-items-center tw-justify-center tw-fill-current",
      IconSizeMap[props.size || IconSize.Size16]
    ].join(" ");
    return /* @__PURE__ */ React__default__default["default"].createElement("svg", __spreadValues({
      fill: "currentColor",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      width: "100%",
      height: "100%",
      className: customClassName,
      name: "IconZoom"
    }, props), /* @__PURE__ */ React__default__default["default"].createElement("path", {
      d: "M18.246 17.017c.06.036.118.08.172.13l3.26 3.078c.41.386.431 1.035.049 1.45a1.007 1.007 0 01-1.434.049l-3.26-3.077a1.024 1.024 0 01-.179-.223 9.032 9.032 0 01-5.723 2.038C6.088 20.462 2 16.329 2 11.23S6.088 2 11.13 2c5.044 0 9.132 4.133 9.132 9.23 0 2.191-.755 4.204-2.016 5.787zM11.13 18.41c3.922 0 7.102-3.214 7.102-7.18 0-3.964-3.18-7.179-7.102-7.179s-7.102 3.215-7.102 7.18 3.18 7.18 7.102 7.18zm1-8.18h1.705a1 1 0 110 2h-1.705v1.75a1 1 0 11-2 0v-1.75H8.426a1 1 0 010-2h1.705V8.48a1 1 0 012 0v1.75z"
    }));
  }
  var MemoIconZoom = React__default__default["default"].memo(IconZoom);
  var IconEnum;
  (function(IconEnum2) {
    IconEnum2["Academy"] = "Academy";
    IconEnum2["Actions"] = "Actions";
    IconEnum2["Activities"] = "Activities";
    IconEnum2["Activity"] = "Activity";
    IconEnum2["Add"] = "Add";
    IconEnum2["AddSimple"] = "AddSimple";
    IconEnum2["AddToCollection"] = "AddToCollection";
    IconEnum2["AdobeCreativeCloud"] = "AdobeCreativeCloud";
    IconEnum2["AlignBottom"] = "AlignBottom";
    IconEnum2["AlignCenter"] = "AlignCenter";
    IconEnum2["AlignLeft"] = "AlignLeft";
    IconEnum2["AlignMiddle"] = "AlignMiddle";
    IconEnum2["AlignRight"] = "AlignRight";
    IconEnum2["AlignTop"] = "AlignTop";
    IconEnum2["Analytics"] = "Analytics";
    IconEnum2["AngleDown"] = "AngleDown";
    IconEnum2["AnimalsNature"] = "AnimalsNature";
    IconEnum2["Annotations"] = "Annotations";
    IconEnum2["Appearance"] = "Appearance";
    IconEnum2["Approve"] = "Approve";
    IconEnum2["Arrow"] = "Arrow";
    IconEnum2["ArrowDown"] = "ArrowDown";
    IconEnum2["ArrowLeft"] = "ArrowLeft";
    IconEnum2["ArrowRight"] = "ArrowRight";
    IconEnum2["ArrowUp"] = "ArrowUp";
    IconEnum2["ArrowUpAndDown"] = "ArrowUpAndDown";
    IconEnum2["Assets"] = "Assets";
    IconEnum2["Attachment"] = "Attachment";
    IconEnum2["AttentionFilled"] = "AttentionFilled";
    IconEnum2["Attributes"] = "Attributes";
    IconEnum2["Audio"] = "Audio";
    IconEnum2["Backward5Seconds"] = "Backward5Seconds";
    IconEnum2["Bold"] = "Bold";
    IconEnum2["Bookmark"] = "Bookmark";
    IconEnum2["Brand"] = "Brand";
    IconEnum2["Briefing"] = "Briefing";
    IconEnum2["Builder"] = "Builder";
    IconEnum2["Button"] = "Button";
    IconEnum2["Calendar"] = "Calendar";
    IconEnum2["Callout"] = "Callout";
    IconEnum2["Campaign"] = "Campaign";
    IconEnum2["CampaignActivity"] = "CampaignActivity";
    IconEnum2["Cards"] = "Cards";
    IconEnum2["CaretDown"] = "CaretDown";
    IconEnum2["CaretLeft"] = "CaretLeft";
    IconEnum2["CaretRight"] = "CaretRight";
    IconEnum2["CaretUp"] = "CaretUp";
    IconEnum2["Center"] = "Center";
    IconEnum2["Check"] = "Check";
    IconEnum2["CheckFilled"] = "CheckFilled";
    IconEnum2["Circle"] = "Circle";
    IconEnum2["Collapse"] = "Collapse";
    IconEnum2["CollectionLarge"] = "CollectionLarge";
    IconEnum2["CollectionMedium"] = "CollectionMedium";
    IconEnum2["CollectionSmall"] = "CollectionSmall";
    IconEnum2["ColorScale"] = "ColorScale";
    IconEnum2["ColorScaleSmall"] = "ColorScaleSmall";
    IconEnum2["ColorScaleTall"] = "ColorScaleTall";
    IconEnum2["ColorSwatch"] = "ColorSwatch";
    IconEnum2["Colors"] = "Colors";
    IconEnum2["ColumnBreak"] = "ColumnBreak";
    IconEnum2["CopyToClipboard"] = "CopyToClipboard";
    IconEnum2["Crop"] = "Crop";
    IconEnum2["CursorClick"] = "CursorClick";
    IconEnum2["Cut"] = "Cut";
    IconEnum2["Divider"] = "Divider";
    IconEnum2["DoDontsStrikethrough"] = "DoDontsStrikethrough";
    IconEnum2["DoDontsUnderline"] = "DoDontsUnderline";
    IconEnum2["Document"] = "Document";
    IconEnum2["DocumentLibrary"] = "DocumentLibrary";
    IconEnum2["DosImages"] = "DosImages";
    IconEnum2["DosText"] = "DosText";
    IconEnum2["DoubleChevronLeft"] = "DoubleChevronLeft";
    IconEnum2["DoubleChevronRight"] = "DoubleChevronRight";
    IconEnum2["DoubleQuotesDown"] = "DoubleQuotesDown";
    IconEnum2["DoubleQuotesUp"] = "DoubleQuotesUp";
    IconEnum2["Download"] = "Download";
    IconEnum2["DownloadAlternative"] = "DownloadAlternative";
    IconEnum2["Drops"] = "Drops";
    IconEnum2["Duplicate"] = "Duplicate";
    IconEnum2["EmojiHappy"] = "EmojiHappy";
    IconEnum2["EmojiHappyFilled"] = "EmojiHappyFilled";
    IconEnum2["EmojiNeutral"] = "EmojiNeutral";
    IconEnum2["EmojiNeutralFilled"] = "EmojiNeutralFilled";
    IconEnum2["EmojiUnhappy"] = "EmojiUnhappy";
    IconEnum2["EmojiUnhappyFilled"] = "EmojiUnhappyFilled";
    IconEnum2["Expand"] = "Expand";
    IconEnum2["ExternalAsset"] = "ExternalAsset";
    IconEnum2["ExternalLink"] = "ExternalLink";
    IconEnum2["Feedback"] = "Feedback";
    IconEnum2["FigureTextBottom"] = "FigureTextBottom";
    IconEnum2["FigureTextLeft"] = "FigureTextLeft";
    IconEnum2["FigureTextRight"] = "FigureTextRight";
    IconEnum2["FigureTextTop"] = "FigureTextTop";
    IconEnum2["File"] = "File";
    IconEnum2["Filetype"] = "Filetype";
    IconEnum2["Filter"] = "Filter";
    IconEnum2["FitToScreen"] = "FitToScreen";
    IconEnum2["Flags"] = "Flags";
    IconEnum2["FocalPoint"] = "FocalPoint";
    IconEnum2["Folder"] = "Folder";
    IconEnum2["FolderUp"] = "FolderUp";
    IconEnum2["Font"] = "Font";
    IconEnum2["FontKit"] = "FontKit";
    IconEnum2["FoodDrink"] = "FoodDrink";
    IconEnum2["Forward5Seconds"] = "Forward5Seconds";
    IconEnum2["FrequentlyUsed"] = "FrequentlyUsed";
    IconEnum2["Fullwidth"] = "Fullwidth";
    IconEnum2["General"] = "General";
    IconEnum2["GenericPost"] = "GenericPost";
    IconEnum2["Guidelines"] = "Guidelines";
    IconEnum2["Header"] = "Header";
    IconEnum2["HookBracketLeft"] = "HookBracketLeft";
    IconEnum2["HookBracketRight"] = "HookBracketRight";
    IconEnum2["IconAndText"] = "IconAndText";
    IconEnum2["Icons"] = "Icons";
    IconEnum2["Iframe"] = "Iframe";
    IconEnum2["Image"] = "Image";
    IconEnum2["ImageAndText"] = "ImageAndText";
    IconEnum2["ImageFigure"] = "ImageFigure";
    IconEnum2["ImageGrid2"] = "ImageGrid2";
    IconEnum2["ImageGrid3"] = "ImageGrid3";
    IconEnum2["ImageGrid4"] = "ImageGrid4";
    IconEnum2["ImageLibrary"] = "ImageLibrary";
    IconEnum2["ImageTextRatio25"] = "ImageTextRatio25";
    IconEnum2["ImageTextRatio33"] = "ImageTextRatio33";
    IconEnum2["ImageTextRatio50"] = "ImageTextRatio50";
    IconEnum2["ImageTextRatio66"] = "ImageTextRatio66";
    IconEnum2["ImageTextRatio75"] = "ImageTextRatio75";
    IconEnum2["Indesign"] = "Indesign";
    IconEnum2["Info"] = "Info";
    IconEnum2["Integration"] = "Integration";
    IconEnum2["Integrations"] = "Integrations";
    IconEnum2["Interactions"] = "Interactions";
    IconEnum2["Italic"] = "Italic";
    IconEnum2["LayoutGrid"] = "LayoutGrid";
    IconEnum2["LayoutHorizontal"] = "LayoutHorizontal";
    IconEnum2["LayoutVertical"] = "LayoutVertical";
    IconEnum2["Lightning"] = "Lightning";
    IconEnum2["LightningFilled"] = "LightningFilled";
    IconEnum2["LineDashes"] = "LineDashes";
    IconEnum2["LineDotted"] = "LineDotted";
    IconEnum2["LineSolid"] = "LineSolid";
    IconEnum2["LineSpacer"] = "LineSpacer";
    IconEnum2["Link"] = "Link";
    IconEnum2["ListBullets"] = "ListBullets";
    IconEnum2["ListChecklist"] = "ListChecklist";
    IconEnum2["ListIndented"] = "ListIndented";
    IconEnum2["ListNumbers"] = "ListNumbers";
    IconEnum2["Lock"] = "Lock";
    IconEnum2["Logo"] = "Logo";
    IconEnum2["LogoGrid"] = "LogoGrid";
    IconEnum2["Logout"] = "Logout";
    IconEnum2["MarkArea"] = "MarkArea";
    IconEnum2["Measurements"] = "Measurements";
    IconEnum2["Media"] = "Media";
    IconEnum2["Megamenu"] = "Megamenu";
    IconEnum2["Metadata"] = "Metadata";
    IconEnum2["Minus"] = "Minus";
    IconEnum2["Modules"] = "Modules";
    IconEnum2["More"] = "More";
    IconEnum2["Move"] = "Move";
    IconEnum2["MovePage"] = "MovePage";
    IconEnum2["None"] = "None";
    IconEnum2["Notifications"] = "Notifications";
    IconEnum2["Objects"] = "Objects";
    IconEnum2["OpenLock"] = "OpenLock";
    IconEnum2["OpenLockFilled"] = "OpenLockFilled";
    IconEnum2["Orientation"] = "Orientation";
    IconEnum2["PatternLibrary"] = "PatternLibrary";
    IconEnum2["Pause"] = "Pause";
    IconEnum2["Pen"] = "Pen";
    IconEnum2["Pills"] = "Pills";
    IconEnum2["Planning"] = "Planning";
    IconEnum2["Play"] = "Play";
    IconEnum2["Plus"] = "Plus";
    IconEnum2["PointOut"] = "PointOut";
    IconEnum2["Polygon"] = "Polygon";
    IconEnum2["Processing"] = "Processing";
    IconEnum2["Projects"] = "Projects";
    IconEnum2["Publication"] = "Publication";
    IconEnum2["Question"] = "Question";
    IconEnum2["Quote"] = "Quote";
    IconEnum2["Rectangle"] = "Rectangle";
    IconEnum2["Refresh"] = "Refresh";
    IconEnum2["Reject"] = "Reject";
    IconEnum2["RejectCircle"] = "RejectCircle";
    IconEnum2["RejectFilled"] = "RejectFilled";
    IconEnum2["Revert"] = "Revert";
    IconEnum2["Revisions"] = "Revisions";
    IconEnum2["Rocket"] = "Rocket";
    IconEnum2["Search"] = "Search";
    IconEnum2["Section"] = "Section";
    IconEnum2["Settings"] = "Settings";
    IconEnum2["Share"] = "Share";
    IconEnum2["Side"] = "Side";
    IconEnum2["SingleChevronLeft"] = "SingleChevronLeft";
    IconEnum2["SingleChevronRight"] = "SingleChevronRight";
    IconEnum2["SingleQuoteDown"] = "SingleQuoteDown";
    IconEnum2["SingleQuoteUp"] = "SingleQuoteUp";
    IconEnum2["Sketch"] = "Sketch";
    IconEnum2["SmileysPeople"] = "SmileysPeople";
    IconEnum2["Snippet"] = "Snippet";
    IconEnum2["Spinner"] = "Spinner";
    IconEnum2["Star"] = "Star";
    IconEnum2["StarFilled"] = "StarFilled";
    IconEnum2["Storybook"] = "Storybook";
    IconEnum2["Submit"] = "Submit";
    IconEnum2["Symbols"] = "Symbols";
    IconEnum2["Table"] = "Table";
    IconEnum2["Tag"] = "Tag";
    IconEnum2["Target"] = "Target";
    IconEnum2["Team"] = "Team";
    IconEnum2["TeamO"] = "TeamO";
    IconEnum2["Template"] = "Template";
    IconEnum2["Templates"] = "Templates";
    IconEnum2["Text"] = "Text";
    IconEnum2["TextAlignCenter"] = "TextAlignCenter";
    IconEnum2["TextAlignJustify"] = "TextAlignJustify";
    IconEnum2["TextAlignLeft"] = "TextAlignLeft";
    IconEnum2["TextAlignRight"] = "TextAlignRight";
    IconEnum2["TextLibrary"] = "TextLibrary";
    IconEnum2["TextMultiColumn"] = "TextMultiColumn";
    IconEnum2["TextOnImage"] = "TextOnImage";
    IconEnum2["TextSnippet"] = "TextSnippet";
    IconEnum2["Timeline"] = "Timeline";
    IconEnum2["Transfer"] = "Transfer";
    IconEnum2["Trash"] = "Trash";
    IconEnum2["TrashOpen"] = "TrashOpen";
    IconEnum2["TravelPlaces"] = "TravelPlaces";
    IconEnum2["Triangle"] = "Triangle";
    IconEnum2["Truck"] = "Truck";
    IconEnum2["Typography"] = "Typography";
    IconEnum2["Typostyles"] = "Typostyles";
    IconEnum2["UiPattern"] = "UiPattern";
    IconEnum2["Underline"] = "Underline";
    IconEnum2["Unknown"] = "Unknown";
    IconEnum2["UnknownSimple"] = "UnknownSimple";
    IconEnum2["Upload"] = "Upload";
    IconEnum2["UploadAlternative"] = "UploadAlternative";
    IconEnum2["UploadDoImages"] = "UploadDoImages";
    IconEnum2["UploadDontImages"] = "UploadDontImages";
    IconEnum2["User"] = "User";
    IconEnum2["UserO"] = "UserO";
    IconEnum2["Video"] = "Video";
    IconEnum2["VideoAndText"] = "VideoAndText";
    IconEnum2["VideoFullscreen"] = "VideoFullscreen";
    IconEnum2["View"] = "View";
    IconEnum2["ViewSlash"] = "ViewSlash";
    IconEnum2["Vimeo"] = "Vimeo";
    IconEnum2["VolumeOff"] = "VolumeOff";
    IconEnum2["VolumeOn"] = "VolumeOn";
    IconEnum2["Workflow"] = "Workflow";
    IconEnum2["Zoom"] = "Zoom";
  })(IconEnum || (IconEnum = {}));
  ({
    [IconEnum.Academy]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconAcademy, null),
    [IconEnum.Actions]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconActions, null),
    [IconEnum.Activities]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconActivities, null),
    [IconEnum.Activity]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconActivity, null),
    [IconEnum.Add]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconAdd, null),
    [IconEnum.AddSimple]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconAddSimple, null),
    [IconEnum.AddToCollection]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconAddToCollection, null),
    [IconEnum.AdobeCreativeCloud]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconAdobeCreativeCloud, null),
    [IconEnum.AlignBottom]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconAlignBottom, null),
    [IconEnum.AlignCenter]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconAlignCenter, null),
    [IconEnum.AlignLeft]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconAlignLeft, null),
    [IconEnum.AlignMiddle]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconAlignMiddle, null),
    [IconEnum.AlignRight]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconAlignRight, null),
    [IconEnum.AlignTop]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconAlignTop, null),
    [IconEnum.Analytics]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconAnalytics, null),
    [IconEnum.AngleDown]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconAngleDown, null),
    [IconEnum.AnimalsNature]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconAnimalsNature, null),
    [IconEnum.Annotations]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconAnnotations, null),
    [IconEnum.Appearance]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconAppearance, null),
    [IconEnum.Approve]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconApprove, null),
    [IconEnum.Arrow]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconArrow, null),
    [IconEnum.ArrowDown]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconArrowDown, null),
    [IconEnum.ArrowLeft]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconArrowLeft, null),
    [IconEnum.ArrowRight]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconArrowRight, null),
    [IconEnum.ArrowUp]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconArrowUp, null),
    [IconEnum.ArrowUpAndDown]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconArrowUpAndDown, null),
    [IconEnum.Assets]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconAssets, null),
    [IconEnum.Attachment]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconAttachment, null),
    [IconEnum.AttentionFilled]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconAttentionFilled, null),
    [IconEnum.Attributes]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconAttributes, null),
    [IconEnum.Audio]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconAudio, null),
    [IconEnum.Backward5Seconds]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconBackward5Seconds, null),
    [IconEnum.Bold]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconBold, null),
    [IconEnum.Bookmark]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconBookmark, null),
    [IconEnum.Brand]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconBrand, null),
    [IconEnum.Briefing]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconBriefing, null),
    [IconEnum.Builder]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconBuilder, null),
    [IconEnum.Button]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconButton, null),
    [IconEnum.Calendar]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCalendar, null),
    [IconEnum.Callout]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCallout, null),
    [IconEnum.Campaign]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCampaign, null),
    [IconEnum.CampaignActivity]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCampaignActivity, null),
    [IconEnum.Cards]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCards, null),
    [IconEnum.CaretDown]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCaretDown, null),
    [IconEnum.CaretLeft]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCaretLeft, null),
    [IconEnum.CaretRight]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCaretRight, null),
    [IconEnum.CaretUp]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCaretUp, null),
    [IconEnum.Center]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCenter, null),
    [IconEnum.Check]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCheck, null),
    [IconEnum.CheckFilled]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCheckFilled, null),
    [IconEnum.Circle]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCircle, null),
    [IconEnum.Collapse]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCollapse, null),
    [IconEnum.CollectionLarge]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCollectionLarge, null),
    [IconEnum.CollectionMedium]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCollectionMedium, null),
    [IconEnum.CollectionSmall]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCollectionSmall, null),
    [IconEnum.ColorScale]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconColorScale, null),
    [IconEnum.ColorScaleSmall]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconColorScaleSmall, null),
    [IconEnum.ColorScaleTall]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconColorScaleTall, null),
    [IconEnum.ColorSwatch]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconColorSwatch, null),
    [IconEnum.Colors]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconColors, null),
    [IconEnum.ColumnBreak]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconColumnBreak, null),
    [IconEnum.CopyToClipboard]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCopyToClipboard, null),
    [IconEnum.Crop]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCrop, null),
    [IconEnum.CursorClick]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCursorClick, null),
    [IconEnum.Cut]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconCut, null),
    [IconEnum.Divider]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconDivider, null),
    [IconEnum.DoDontsStrikethrough]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconDoDontsStrikethrough, null),
    [IconEnum.DoDontsUnderline]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconDoDontsUnderline, null),
    [IconEnum.Document]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconDocument, null),
    [IconEnum.DocumentLibrary]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconDocumentLibrary, null),
    [IconEnum.DosImages]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconDosImages, null),
    [IconEnum.DosText]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconDosText, null),
    [IconEnum.DoubleChevronLeft]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconDoubleChevronLeft, null),
    [IconEnum.DoubleChevronRight]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconDoubleChevronRight, null),
    [IconEnum.DoubleQuotesDown]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconDoubleQuotesDown, null),
    [IconEnum.DoubleQuotesUp]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconDoubleQuotesUp, null),
    [IconEnum.Download]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconDownload, null),
    [IconEnum.DownloadAlternative]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconDownloadAlternative, null),
    [IconEnum.Drops]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconDrops, null),
    [IconEnum.Duplicate]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconDuplicate, null),
    [IconEnum.EmojiHappy]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconEmojiHappy, null),
    [IconEnum.EmojiHappyFilled]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconEmojiHappyFilled, null),
    [IconEnum.EmojiNeutral]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconEmojiNeutral, null),
    [IconEnum.EmojiNeutralFilled]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconEmojiNeutralFilled, null),
    [IconEnum.EmojiUnhappy]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconEmojiUnhappy, null),
    [IconEnum.EmojiUnhappyFilled]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconEmojiUnhappyFilled, null),
    [IconEnum.Expand]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconExpand, null),
    [IconEnum.ExternalAsset]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconExternalAsset, null),
    [IconEnum.ExternalLink]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconExternalLink, null),
    [IconEnum.Feedback]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconFeedback, null),
    [IconEnum.FigureTextBottom]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconFigureTextBottom, null),
    [IconEnum.FigureTextLeft]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconFigureTextLeft, null),
    [IconEnum.FigureTextRight]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconFigureTextRight, null),
    [IconEnum.FigureTextTop]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconFigureTextTop, null),
    [IconEnum.File]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconFile, null),
    [IconEnum.Filetype]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconFiletype, null),
    [IconEnum.Filter]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconFilter, null),
    [IconEnum.FitToScreen]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconFitToScreen, null),
    [IconEnum.Flags]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconFlags, null),
    [IconEnum.FocalPoint]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconFocalPoint, null),
    [IconEnum.Folder]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconFolder, null),
    [IconEnum.FolderUp]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconFolderUp, null),
    [IconEnum.Font]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconFont, null),
    [IconEnum.FontKit]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconFontKit, null),
    [IconEnum.FoodDrink]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconFoodDrink, null),
    [IconEnum.Forward5Seconds]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconForward5Seconds, null),
    [IconEnum.FrequentlyUsed]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconFrequentlyUsed, null),
    [IconEnum.Fullwidth]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconFullwidth, null),
    [IconEnum.General]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconGeneral, null),
    [IconEnum.GenericPost]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconGenericPost, null),
    [IconEnum.Guidelines]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconGuidelines, null),
    [IconEnum.Header]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconHeader, null),
    [IconEnum.HookBracketLeft]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconHookBracketLeft, null),
    [IconEnum.HookBracketRight]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconHookBracketRight, null),
    [IconEnum.IconAndText]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconIconAndText, null),
    [IconEnum.Icons]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconIcons, null),
    [IconEnum.Iframe]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconIframe, null),
    [IconEnum.Image]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconImage, null),
    [IconEnum.ImageAndText]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconImageAndText, null),
    [IconEnum.ImageFigure]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconImageFigure, null),
    [IconEnum.ImageGrid2]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconImageGrid2, null),
    [IconEnum.ImageGrid3]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconImageGrid3, null),
    [IconEnum.ImageGrid4]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconImageGrid4, null),
    [IconEnum.ImageLibrary]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconImageLibrary, null),
    [IconEnum.ImageTextRatio25]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconImageTextRatio25, null),
    [IconEnum.ImageTextRatio33]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconImageTextRatio33, null),
    [IconEnum.ImageTextRatio50]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconImageTextRatio50, null),
    [IconEnum.ImageTextRatio66]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconImageTextRatio66, null),
    [IconEnum.ImageTextRatio75]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconImageTextRatio75, null),
    [IconEnum.Indesign]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconIndesign, null),
    [IconEnum.Info]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconInfo, null),
    [IconEnum.Integration]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconIntegration, null),
    [IconEnum.Integrations]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconIntegrations, null),
    [IconEnum.Interactions]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconInteractions, null),
    [IconEnum.Italic]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconItalic, null),
    [IconEnum.LayoutGrid]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconLayoutGrid, null),
    [IconEnum.LayoutHorizontal]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconLayoutHorizontal, null),
    [IconEnum.LayoutVertical]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconLayoutVertical, null),
    [IconEnum.Lightning]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconLightning, null),
    [IconEnum.LightningFilled]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconLightningFilled, null),
    [IconEnum.LineDashes]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconLineDashes, null),
    [IconEnum.LineDotted]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconLineDotted, null),
    [IconEnum.LineSolid]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconLineSolid, null),
    [IconEnum.LineSpacer]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconLineSpacer, null),
    [IconEnum.Link]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconLink, null),
    [IconEnum.ListBullets]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconListBullets, null),
    [IconEnum.ListChecklist]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconListChecklist, null),
    [IconEnum.ListIndented]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconListIndented, null),
    [IconEnum.ListNumbers]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconListNumbers, null),
    [IconEnum.Lock]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconLock, null),
    [IconEnum.Logo]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconLogo, null),
    [IconEnum.LogoGrid]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconLogoGrid, null),
    [IconEnum.Logout]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconLogout, null),
    [IconEnum.MarkArea]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconMarkArea, null),
    [IconEnum.Measurements]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconMeasurements, null),
    [IconEnum.Media]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconMedia, null),
    [IconEnum.Megamenu]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconMegamenu, null),
    [IconEnum.Metadata]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconMetadata, null),
    [IconEnum.Minus]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconMinus, null),
    [IconEnum.Modules]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconModules, null),
    [IconEnum.More]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconMore, null),
    [IconEnum.Move]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconMove, null),
    [IconEnum.MovePage]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconMovePage, null),
    [IconEnum.None]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconNone, null),
    [IconEnum.Notifications]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconNotifications, null),
    [IconEnum.Objects]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconObjects, null),
    [IconEnum.OpenLock]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconOpenLock, null),
    [IconEnum.OpenLockFilled]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconOpenLockFilled, null),
    [IconEnum.Orientation]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconOrientation, null),
    [IconEnum.PatternLibrary]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconPatternLibrary, null),
    [IconEnum.Pause]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconPause, null),
    [IconEnum.Pen]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconPen, null),
    [IconEnum.Pills]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconPills, null),
    [IconEnum.Planning]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconPlanning, null),
    [IconEnum.Play]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconPlay, null),
    [IconEnum.Plus]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconPlus, null),
    [IconEnum.PointOut]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconPointOut, null),
    [IconEnum.Polygon]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconPolygon, null),
    [IconEnum.Processing]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconProcessing, null),
    [IconEnum.Projects]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconProjects, null),
    [IconEnum.Publication]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconPublication, null),
    [IconEnum.Question]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconQuestion, null),
    [IconEnum.Quote]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconQuote, null),
    [IconEnum.Rectangle]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconRectangle, null),
    [IconEnum.Refresh]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconRefresh, null),
    [IconEnum.Reject]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconReject, null),
    [IconEnum.RejectCircle]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconRejectCircle, null),
    [IconEnum.RejectFilled]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconRejectFilled, null),
    [IconEnum.Revert]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconRevert, null),
    [IconEnum.Revisions]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconRevisions, null),
    [IconEnum.Rocket]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconRocket, null),
    [IconEnum.Search]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconSearch, null),
    [IconEnum.Section]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconSection, null),
    [IconEnum.Settings]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconSettings, null),
    [IconEnum.Share]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconShare, null),
    [IconEnum.Side]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconSide, null),
    [IconEnum.SingleChevronLeft]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconSingleChevronLeft, null),
    [IconEnum.SingleChevronRight]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconSingleChevronRight, null),
    [IconEnum.SingleQuoteDown]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconSingleQuoteDown, null),
    [IconEnum.SingleQuoteUp]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconSingleQuoteUp, null),
    [IconEnum.Sketch]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconSketch, null),
    [IconEnum.SmileysPeople]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconSmileysPeople, null),
    [IconEnum.Snippet]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconSnippet, null),
    [IconEnum.Spinner]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconSpinner, null),
    [IconEnum.Star]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconStar, null),
    [IconEnum.StarFilled]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconStarFilled, null),
    [IconEnum.Storybook]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconStorybook, null),
    [IconEnum.Submit]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconSubmit, null),
    [IconEnum.Symbols]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconSymbols, null),
    [IconEnum.Table]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTable, null),
    [IconEnum.Tag]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTag, null),
    [IconEnum.Target]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTarget, null),
    [IconEnum.Team]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTeam, null),
    [IconEnum.TeamO]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTeamO, null),
    [IconEnum.Template]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTemplate, null),
    [IconEnum.Templates]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTemplates, null),
    [IconEnum.Text]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconText, null),
    [IconEnum.TextAlignCenter]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTextAlignCenter, null),
    [IconEnum.TextAlignJustify]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTextAlignJustify, null),
    [IconEnum.TextAlignLeft]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTextAlignLeft, null),
    [IconEnum.TextAlignRight]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTextAlignRight, null),
    [IconEnum.TextLibrary]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTextLibrary, null),
    [IconEnum.TextMultiColumn]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTextMultiColumn, null),
    [IconEnum.TextOnImage]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTextOnImage, null),
    [IconEnum.TextSnippet]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTextSnippet, null),
    [IconEnum.Timeline]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTimeline, null),
    [IconEnum.Transfer]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTransfer, null),
    [IconEnum.Trash]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTrash, null),
    [IconEnum.TrashOpen]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTrashOpen, null),
    [IconEnum.TravelPlaces]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTravelPlaces, null),
    [IconEnum.Triangle]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTriangle, null),
    [IconEnum.Truck]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTruck, null),
    [IconEnum.Typography]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTypography, null),
    [IconEnum.Typostyles]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconTypostyles, null),
    [IconEnum.UiPattern]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconUiPattern, null),
    [IconEnum.Underline]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconUnderline, null),
    [IconEnum.Unknown]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconUnknown, null),
    [IconEnum.UnknownSimple]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconUnknownSimple, null),
    [IconEnum.Upload]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconUpload, null),
    [IconEnum.UploadAlternative]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconUploadAlternative, null),
    [IconEnum.UploadDoImages]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconUploadDoImages, null),
    [IconEnum.UploadDontImages]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconUploadDontImages, null),
    [IconEnum.User]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconUser, null),
    [IconEnum.UserO]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconUserO, null),
    [IconEnum.Video]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconVideo, null),
    [IconEnum.VideoAndText]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconVideoAndText, null),
    [IconEnum.VideoFullscreen]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconVideoFullscreen, null),
    [IconEnum.View]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconView, null),
    [IconEnum.ViewSlash]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconViewSlash, null),
    [IconEnum.Vimeo]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconVimeo, null),
    [IconEnum.VolumeOff]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconVolumeOff, null),
    [IconEnum.VolumeOn]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconVolumeOn, null),
    [IconEnum.Workflow]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconWorkflow, null),
    [IconEnum.Zoom]: /* @__PURE__ */ React__default__default["default"].createElement(MemoIconZoom, null)
  });

  // custom_block/src/settings.ts
  var HEIGHT_DEFAULT_VALUE = "36px" /* Small */;
  var settings = {
    main: [
      {
        id: "embed-style",
        type: "dropdown",
        defaultValue: "standard",
        size: "Large",
        choices: [
          {
            value: "standard",
            icon: IconEnum.FigureTextBottom,
            label: "Standard"
          },
          {
            value: "popupButton",
            icon: IconEnum.Button,
            label: "Popup Button"
          },
          {
            value: "sliderButton",
            icon: IconEnum.Button,
            label: "Slider Button"
          }
        ]
      }
    ],
    content: [
      {
        id: "form-id",
        type: "input",
        label: "Typeform Form ID",
        info: "You can find <form-id> from the public URL of your form: https://form.typeform.com/to/<form-id>"
      },
      {
        id: "buttonText",
        label: "Button Label",
        type: "input",
        placeholder: "Open",
        defaultValue: "Open",
        show: (bundle) => ["popupButton", "sliderButton"].includes(bundle.getBlock("embed-style")?.value)
      }
    ],
    layout: [
      {
        id: "hideHeader",
        type: "switch",
        label: "Hide header",
        defaultValue: false
      },
      {
        id: "hideProgressBar",
        type: "switch",
        label: "Hide progress bar",
        defaultValue: false
      },
      {
        id: "isHeightCustom",
        type: "switch",
        label: "Block Height",
        switchLabel: "Custom",
        defaultValue: false,
        show: (bundle) => bundle.getBlock("embed-style")?.value === "standard",
        info: "Determines the block height.",
        on: [
          {
            id: "heightCustom",
            type: "input",
            placeholder: "100px",
            rules: [
              {
                errorMessage: "Please use a numerical value with or without 'px'",
                validate: (value) => value.match(/^(?:-?\d+)(?:px)?$/g) !== null
              }
            ],
            onChange: (bundle) => {
              const blockHeight = Number(bundle.getBlock("heightCustom")?.value);
              if (!Number.isNaN(blockHeight)) {
                bundle.setBlockValue("heightCustom", `${blockHeight}px`);
              }
            }
          }
        ],
        off: [
          {
            id: "heightSimple",
            type: "slider",
            defaultValue: HEIGHT_DEFAULT_VALUE,
            choices: [
              {
                value: "36px" /* Small */,
                label: "S"
              },
              {
                value: "60px" /* Medium */,
                label: "M"
              },
              {
                value: "96px" /* Large */,
                label: "L"
              }
            ]
          }
        ]
      }
    ],
    style: [
      {
        id: "opacity",
        label: "Background transparency",
        type: "input",
        placeholder: "0%",
        show: (bundle) => bundle.getBlock("embed-style")?.value === "standard",
        rules: [
          {
            errorMessage: "Please use a numerical value with or without '%'",
            validate: (value) => value.match(/^(?:-?\d+)(?:%)?$/g) !== null
          }
        ],
        onChange: (bundle) => {
          const blockOpacity = Number(bundle.getBlock("opacity")?.value);
          if (!Number.isNaN(blockOpacity)) {
            bundle.setBlockValue("heightCustom", `${blockOpacity}%`);
          }
        }
      }
    ]
  };
  var settings_default = settings;
  /*!
   * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   */
  /*! *****************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */

  exports.index = TypeformBlock;
  exports.settings = settings_default;

  Object.defineProperty(exports, '__esModule', { value: true });

  return exports;

})({}, React);
